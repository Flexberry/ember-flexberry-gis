{"version":3,"sources":["dummy/tests/adapters/application-offline.jscs-test.js","dummy/tests/adapters/application-offline.jshint.js","dummy/tests/adapters/application.jscs-test.js","dummy/tests/adapters/application.jshint.js","dummy/tests/app.jscs-test.js","dummy/tests/app.jshint.js","dummy/tests/controllers/api-test-map.jscs-test.js","dummy/tests/controllers/api-test-map.jshint.js","dummy/tests/controllers/application.jscs-test.js","dummy/tests/controllers/application.jshint.js","dummy/tests/controllers/components-examples/flexberry-boundingbox/settings-example.jscs-test.js","dummy/tests/controllers/components-examples/flexberry-boundingbox/settings-example.jshint.js","dummy/tests/controllers/map.jscs-test.js","dummy/tests/controllers/map.jshint.js","dummy/tests/controllers/map/new.jscs-test.js","dummy/tests/controllers/map/new.jshint.js","dummy/tests/controllers/maps.jscs-test.js","dummy/tests/controllers/maps.jshint.js","dummy/tests/controllers/new-platform-flexberry-g-i-s-map-object-setting-e.jscs-test.js","dummy/tests/controllers/new-platform-flexberry-g-i-s-map-object-setting-e.jshint.js","dummy/tests/controllers/new-platform-flexberry-g-i-s-map-object-setting-e/new.jscs-test.js","dummy/tests/controllers/new-platform-flexberry-g-i-s-map-object-setting-e/new.jshint.js","dummy/tests/controllers/new-platform-flexberry-g-i-s-map-object-setting-l.jscs-test.js","dummy/tests/controllers/new-platform-flexberry-g-i-s-map-object-setting-l.jshint.js","dummy/tests/controllers/sitemap-node.jscs-test.js","dummy/tests/controllers/sitemap-node.jshint.js","dummy/tests/helpers/destroy-app.js","dummy/tests/helpers/destroy-app.jscs-test.js","dummy/tests/helpers/destroy-app.jshint.js","dummy/tests/helpers/ember-i18n/test-helpers.js","dummy/tests/helpers/module-for-acceptance.js","dummy/tests/helpers/module-for-acceptance.jscs-test.js","dummy/tests/helpers/module-for-acceptance.jshint.js","dummy/tests/helpers/resolver.js","dummy/tests/helpers/resolver.jscs-test.js","dummy/tests/helpers/resolver.jshint.js","dummy/tests/helpers/start-app.js","dummy/tests/helpers/start-app.jscs-test.js","dummy/tests/helpers/start-app.jshint.js","dummy/tests/helpers/to-safe-string.jscs-test.js","dummy/tests/helpers/to-safe-string.jshint.js","dummy/tests/helpers/to-string.jscs-test.js","dummy/tests/helpers/to-string.jshint.js","dummy/tests/helpers/validate-properties.js","dummy/tests/integration/components/flexberry-boundingbox-test.js","dummy/tests/integration/components/flexberry-boundingbox-test.jscs-test.js","dummy/tests/integration/components/flexberry-boundingbox-test.jshint.js","dummy/tests/integration/components/flexberry-dropdown-input-test.js","dummy/tests/integration/components/flexberry-dropdown-input-test.jscs-test.js","dummy/tests/integration/components/flexberry-dropdown-input-test.jshint.js","dummy/tests/integration/components/flexberry-edit-crs-test.js","dummy/tests/integration/components/flexberry-edit-crs-test.jscs-test.js","dummy/tests/integration/components/flexberry-edit-crs-test.jshint.js","dummy/tests/integration/components/flexberry-layers-attributes-panel-test.js","dummy/tests/integration/components/flexberry-layers-attributes-panel-test.jscs-test.js","dummy/tests/integration/components/flexberry-layers-attributes-panel-test.jshint.js","dummy/tests/integration/components/flexberry-layers-intersections-panel-test.js","dummy/tests/integration/components/flexberry-layers-intersections-panel-test.jscs-test.js","dummy/tests/integration/components/flexberry-layers-intersections-panel-test.jshint.js","dummy/tests/integration/components/flexberry-layers-test.js","dummy/tests/integration/components/flexberry-layers-test.jscs-test.js","dummy/tests/integration/components/flexberry-layers-test.jshint.js","dummy/tests/integration/components/flexberry-map-test.js","dummy/tests/integration/components/flexberry-map-test.jscs-test.js","dummy/tests/integration/components/flexberry-map-test.jshint.js","dummy/tests/integration/components/flexberry-maptoolbar-test.js","dummy/tests/integration/components/flexberry-maptoolbar-test.jscs-test.js","dummy/tests/integration/components/flexberry-maptoolbar-test.jshint.js","dummy/tests/integration/components/flexberry-multiple-select-test.js","dummy/tests/integration/components/flexberry-multiple-select-test.jscs-test.js","dummy/tests/integration/components/flexberry-multiple-select-test.jshint.js","dummy/tests/integration/components/flexberry-table-test.js","dummy/tests/integration/components/flexberry-table-test.jscs-test.js","dummy/tests/integration/components/flexberry-table-test.jshint.js","dummy/tests/integration/components/flexberry-wfs-filter-test.js","dummy/tests/integration/components/flexberry-wfs-filter-test.jscs-test.js","dummy/tests/integration/components/flexberry-wfs-filter-test.jshint.js","dummy/tests/integration/components/geometry-add-modes/draw-test.js","dummy/tests/integration/components/geometry-add-modes/draw-test.jscs-test.js","dummy/tests/integration/components/geometry-add-modes/draw-test.jshint.js","dummy/tests/integration/components/geometry-add-modes/geoprovider-test.js","dummy/tests/integration/components/geometry-add-modes/geoprovider-test.jscs-test.js","dummy/tests/integration/components/geometry-add-modes/geoprovider-test.jshint.js","dummy/tests/integration/components/geometry-add-modes/manual-test.js","dummy/tests/integration/components/geometry-add-modes/manual-test.jscs-test.js","dummy/tests/integration/components/geometry-add-modes/manual-test.jshint.js","dummy/tests/integration/components/layers-dialogs/attributes/edit-test.js","dummy/tests/integration/components/layers-dialogs/attributes/edit-test.jscs-test.js","dummy/tests/integration/components/layers-dialogs/attributes/edit-test.jshint.js","dummy/tests/integration/components/layers-dialogs/tabs/identification-settings-test.js","dummy/tests/integration/components/layers-dialogs/tabs/identification-settings-test.jscs-test.js","dummy/tests/integration/components/layers-dialogs/tabs/identification-settings-test.jshint.js","dummy/tests/integration/components/layers-dialogs/tabs/legend-settings-test.js","dummy/tests/integration/components/layers-dialogs/tabs/legend-settings-test.jscs-test.js","dummy/tests/integration/components/layers-dialogs/tabs/legend-settings-test.jshint.js","dummy/tests/integration/components/layers/group-layer-test.js","dummy/tests/integration/components/layers/group-layer-test.jscs-test.js","dummy/tests/integration/components/layers/group-layer-test.jshint.js","dummy/tests/integration/components/layers/osm-layer-test.js","dummy/tests/integration/components/layers/osm-layer-test.jscs-test.js","dummy/tests/integration/components/layers/osm-layer-test.jshint.js","dummy/tests/integration/components/legends/wms-legend-test.js","dummy/tests/integration/components/legends/wms-legend-test.jscs-test.js","dummy/tests/integration/components/legends/wms-legend-test.jshint.js","dummy/tests/integration/components/minimap-control-test.js","dummy/tests/integration/components/minimap-control-test.jscs-test.js","dummy/tests/integration/components/minimap-control-test.jshint.js","dummy/tests/integration/components/spatial-bookmark-test.js","dummy/tests/integration/components/spatial-bookmark-test.jscs-test.js","dummy/tests/integration/components/spatial-bookmark-test.jshint.js","dummy/tests/locales/en/forms.jscs-test.js","dummy/tests/locales/en/forms.jshint.js","dummy/tests/locales/en/forms/application.jscs-test.js","dummy/tests/locales/en/forms/application.jshint.js","dummy/tests/locales/en/forms/application/footer.jscs-test.js","dummy/tests/locales/en/forms/application/footer.jshint.js","dummy/tests/locales/en/forms/application/header.jscs-test.js","dummy/tests/locales/en/forms/application/header.jshint.js","dummy/tests/locales/en/forms/application/sitemap.jscs-test.js","dummy/tests/locales/en/forms/application/sitemap.jshint.js","dummy/tests/locales/en/forms/components-examples.jscs-test.js","dummy/tests/locales/en/forms/components-examples.jshint.js","dummy/tests/locales/en/forms/edit-form.jscs-test.js","dummy/tests/locales/en/forms/edit-form.jshint.js","dummy/tests/locales/en/forms/index.jscs-test.js","dummy/tests/locales/en/forms/index.jshint.js","dummy/tests/locales/en/forms/loading.jscs-test.js","dummy/tests/locales/en/forms/loading.jshint.js","dummy/tests/locales/en/forms/map.jscs-test.js","dummy/tests/locales/en/forms/map.jshint.js","dummy/tests/locales/en/forms/maps.jscs-test.js","dummy/tests/locales/en/forms/maps.jshint.js","dummy/tests/locales/en/forms/new-platform-flexberry-g-i-s-map-object-setting-e.jscs-test.js","dummy/tests/locales/en/forms/new-platform-flexberry-g-i-s-map-object-setting-e.jshint.js","dummy/tests/locales/en/forms/new-platform-flexberry-g-i-s-map-object-setting-l.jscs-test.js","dummy/tests/locales/en/forms/new-platform-flexberry-g-i-s-map-object-setting-l.jshint.js","dummy/tests/locales/en/translations.jscs-test.js","dummy/tests/locales/en/translations.jshint.js","dummy/tests/locales/ru/forms.jscs-test.js","dummy/tests/locales/ru/forms.jshint.js","dummy/tests/locales/ru/forms/application.jscs-test.js","dummy/tests/locales/ru/forms/application.jshint.js","dummy/tests/locales/ru/forms/application/footer.jscs-test.js","dummy/tests/locales/ru/forms/application/footer.jshint.js","dummy/tests/locales/ru/forms/application/header.jscs-test.js","dummy/tests/locales/ru/forms/application/header.jshint.js","dummy/tests/locales/ru/forms/application/sitemap.jscs-test.js","dummy/tests/locales/ru/forms/application/sitemap.jshint.js","dummy/tests/locales/ru/forms/components-examples.jscs-test.js","dummy/tests/locales/ru/forms/components-examples.jshint.js","dummy/tests/locales/ru/forms/edit-form.jscs-test.js","dummy/tests/locales/ru/forms/edit-form.jshint.js","dummy/tests/locales/ru/forms/index.jscs-test.js","dummy/tests/locales/ru/forms/index.jshint.js","dummy/tests/locales/ru/forms/loading.jscs-test.js","dummy/tests/locales/ru/forms/loading.jshint.js","dummy/tests/locales/ru/forms/map.jscs-test.js","dummy/tests/locales/ru/forms/map.jshint.js","dummy/tests/locales/ru/forms/maps.jscs-test.js","dummy/tests/locales/ru/forms/maps.jshint.js","dummy/tests/locales/ru/forms/new-platform-flexberry-g-i-s-map-object-setting-e.jscs-test.js","dummy/tests/locales/ru/forms/new-platform-flexberry-g-i-s-map-object-setting-e.jshint.js","dummy/tests/locales/ru/forms/new-platform-flexberry-g-i-s-map-object-setting-l.jscs-test.js","dummy/tests/locales/ru/forms/new-platform-flexberry-g-i-s-map-object-setting-l.jshint.js","dummy/tests/locales/ru/translations.jscs-test.js","dummy/tests/locales/ru/translations.jshint.js","dummy/tests/models/components-examples/flexberry-ddau-checkbox/settings-example/base.jscs-test.js","dummy/tests/models/components-examples/flexberry-ddau-checkbox/settings-example/base.jshint.js","dummy/tests/models/custom-inflector-rules.jscs-test.js","dummy/tests/models/custom-inflector-rules.jshint.js","dummy/tests/resolver.jscs-test.js","dummy/tests/resolver.jshint.js","dummy/tests/router.jscs-test.js","dummy/tests/router.jshint.js","dummy/tests/routes/api-test-map.jscs-test.js","dummy/tests/routes/api-test-map.jshint.js","dummy/tests/routes/application.jscs-test.js","dummy/tests/routes/application.jshint.js","dummy/tests/routes/components-examples/flexberry-boundingbox/settings-example.jscs-test.js","dummy/tests/routes/components-examples/flexberry-boundingbox/settings-example.jshint.js","dummy/tests/routes/index.jscs-test.js","dummy/tests/routes/index.jshint.js","dummy/tests/routes/map.jscs-test.js","dummy/tests/routes/map.jshint.js","dummy/tests/routes/map/new.jscs-test.js","dummy/tests/routes/map/new.jshint.js","dummy/tests/routes/maps.jscs-test.js","dummy/tests/routes/maps.jshint.js","dummy/tests/routes/new-platform-flexberry-g-i-s-map-object-setting-e.jscs-test.js","dummy/tests/routes/new-platform-flexberry-g-i-s-map-object-setting-e.jshint.js","dummy/tests/routes/new-platform-flexberry-g-i-s-map-object-setting-e/new.jscs-test.js","dummy/tests/routes/new-platform-flexberry-g-i-s-map-object-setting-e/new.jshint.js","dummy/tests/routes/new-platform-flexberry-g-i-s-map-object-setting-l.jscs-test.js","dummy/tests/routes/new-platform-flexberry-g-i-s-map-object-setting-l.jshint.js","dummy/tests/serializers/application-offline.jscs-test.js","dummy/tests/serializers/application-offline.jshint.js","dummy/tests/serializers/application.jscs-test.js","dummy/tests/serializers/application.jshint.js","dummy/tests/services/store.jscs-test.js","dummy/tests/services/store.jshint.js","dummy/tests/services/user-settings.jscs-test.js","dummy/tests/services/user-settings.jshint.js","dummy/tests/test-helper.js","dummy/tests/test-helper.jscs-test.js","dummy/tests/test-helper.jshint.js","dummy/tests/unit/components/base-control-test.js","dummy/tests/unit/components/base-control-test.jscs-test.js","dummy/tests/unit/components/base-control-test.jshint.js","dummy/tests/unit/components/base-layer-test.js","dummy/tests/unit/components/base-layer-test.jscs-test.js","dummy/tests/unit/components/base-layer-test.jshint.js","dummy/tests/unit/components/base-vector-layer-test.js","dummy/tests/unit/components/base-vector-layer-test.jscs-test.js","dummy/tests/unit/components/base-vector-layer-test.jshint.js","dummy/tests/unit/components/flexberry-map-test.js","dummy/tests/unit/components/flexberry-map-test.jscs-test.js","dummy/tests/unit/components/flexberry-map-test.jshint.js","dummy/tests/unit/components/layers/group-layer-test.js","dummy/tests/unit/components/layers/group-layer-test.jscs-test.js","dummy/tests/unit/components/layers/group-layer-test.jshint.js","dummy/tests/unit/components/layers/tile-layer-test.js","dummy/tests/unit/components/layers/tile-layer-test.jscs-test.js","dummy/tests/unit/components/layers/tile-layer-test.jshint.js","dummy/tests/unit/components/layers/wfs-layer-test.js","dummy/tests/unit/components/layers/wfs-layer-test.jscs-test.js","dummy/tests/unit/components/layers/wfs-layer-test.jshint.js","dummy/tests/unit/components/layers/wms-layer-test.js","dummy/tests/unit/components/layers/wms-layer-test.jscs-test.js","dummy/tests/unit/components/layers/wms-layer-test.jshint.js","dummy/tests/unit/components/minimap-control-test.js","dummy/tests/unit/components/minimap-control-test.jscs-test.js","dummy/tests/unit/components/minimap-control-test.jshint.js","dummy/tests/unit/components/scale-control-test.js","dummy/tests/unit/components/scale-control-test.jscs-test.js","dummy/tests/unit/components/scale-control-test.jshint.js","dummy/tests/unit/components/switch-scale-control-test.js","dummy/tests/unit/components/switch-scale-control-test.jscs-test.js","dummy/tests/unit/components/switch-scale-control-test.jshint.js","dummy/tests/unit/components/zoomslider-control-test.js","dummy/tests/unit/components/zoomslider-control-test.jscs-test.js","dummy/tests/unit/components/zoomslider-control-test.jshint.js","dummy/tests/unit/controllers/edit-map-test.js","dummy/tests/unit/controllers/edit-map-test.jscs-test.js","dummy/tests/unit/controllers/edit-map-test.jshint.js","dummy/tests/unit/controllers/gis-search-form-test.js","dummy/tests/unit/controllers/gis-search-form-test.jscs-test.js","dummy/tests/unit/controllers/gis-search-form-test.jshint.js","dummy/tests/unit/controllers/list-map-test.js","dummy/tests/unit/controllers/list-map-test.jscs-test.js","dummy/tests/unit/controllers/list-map-test.jshint.js","dummy/tests/unit/helpers/flexberry-search-properties-osm-ru-test.js","dummy/tests/unit/helpers/flexberry-search-properties-osm-ru-test.jscs-test.js","dummy/tests/unit/helpers/flexberry-search-properties-osm-ru-test.jshint.js","dummy/tests/unit/helpers/instance-of-test.js","dummy/tests/unit/helpers/instance-of-test.jscs-test.js","dummy/tests/unit/helpers/instance-of-test.jshint.js","dummy/tests/unit/initializers/flexberry-map-commands-test.js","dummy/tests/unit/initializers/flexberry-map-commands-test.jscs-test.js","dummy/tests/unit/initializers/flexberry-map-commands-test.jshint.js","dummy/tests/unit/initializers/flexberry-map-tools-test.js","dummy/tests/unit/initializers/flexberry-map-tools-test.jscs-test.js","dummy/tests/unit/initializers/flexberry-map-tools-test.jshint.js","dummy/tests/unit/initializers/local-storage-test.js","dummy/tests/unit/initializers/local-storage-test.jscs-test.js","dummy/tests/unit/initializers/local-storage-test.jshint.js","dummy/tests/unit/mixins/dynamic-properties-test.js","dummy/tests/unit/mixins/dynamic-properties-test.jscs-test.js","dummy/tests/unit/mixins/dynamic-properties-test.jshint.js","dummy/tests/unit/mixins/flexberry-map-model-api-savelayer-test.js","dummy/tests/unit/mixins/flexberry-map-model-api-savelayer-test.jscs-test.js","dummy/tests/unit/mixins/flexberry-map-model-api-savelayer-test.jshint.js","dummy/tests/unit/mixins/flexberry-map-model-api-test.js","dummy/tests/unit/mixins/flexberry-map-model-api-test.jscs-test.js","dummy/tests/unit/mixins/flexberry-map-model-api-test.jshint.js","dummy/tests/unit/mixins/flexberry-map-model-api-visualedit-test.js","dummy/tests/unit/mixins/flexberry-map-model-api-visualedit-test.jscs-test.js","dummy/tests/unit/mixins/flexberry-map-model-api-visualedit-test.jshint.js","dummy/tests/unit/mixins/leaflet-events-test.js","dummy/tests/unit/mixins/leaflet-events-test.jscs-test.js","dummy/tests/unit/mixins/leaflet-events-test.jshint.js","dummy/tests/unit/mixins/leaflet-options-test.js","dummy/tests/unit/mixins/leaflet-options-test.jscs-test.js","dummy/tests/unit/mixins/leaflet-options-test.jshint.js","dummy/tests/unit/mixins/leaflet-properties-test.js","dummy/tests/unit/mixins/leaflet-properties-test.jscs-test.js","dummy/tests/unit/mixins/leaflet-properties-test.jshint.js","dummy/tests/unit/models/new-platform-flexberry-g-i-s-layer-link-test.js","dummy/tests/unit/models/new-platform-flexberry-g-i-s-layer-link-test.jscs-test.js","dummy/tests/unit/models/new-platform-flexberry-g-i-s-layer-link-test.jshint.js","dummy/tests/unit/models/new-platform-flexberry-g-i-s-layer-metadata-test.js","dummy/tests/unit/models/new-platform-flexberry-g-i-s-layer-metadata-test.jscs-test.js","dummy/tests/unit/models/new-platform-flexberry-g-i-s-layer-metadata-test.jshint.js","dummy/tests/unit/models/new-platform-flexberry-g-i-s-link-metadata-test.js","dummy/tests/unit/models/new-platform-flexberry-g-i-s-link-metadata-test.jscs-test.js","dummy/tests/unit/models/new-platform-flexberry-g-i-s-link-metadata-test.jshint.js","dummy/tests/unit/models/new-platform-flexberry-g-i-s-link-parameter-test.js","dummy/tests/unit/models/new-platform-flexberry-g-i-s-link-parameter-test.jscs-test.js","dummy/tests/unit/models/new-platform-flexberry-g-i-s-link-parameter-test.jshint.js","dummy/tests/unit/models/new-platform-flexberry-g-i-s-map-layer-test.js","dummy/tests/unit/models/new-platform-flexberry-g-i-s-map-layer-test.jscs-test.js","dummy/tests/unit/models/new-platform-flexberry-g-i-s-map-layer-test.jshint.js","dummy/tests/unit/models/new-platform-flexberry-g-i-s-map-object-setting-test.js","dummy/tests/unit/models/new-platform-flexberry-g-i-s-map-object-setting-test.jscs-test.js","dummy/tests/unit/models/new-platform-flexberry-g-i-s-map-object-setting-test.jshint.js","dummy/tests/unit/models/new-platform-flexberry-g-i-s-map-test.js","dummy/tests/unit/models/new-platform-flexberry-g-i-s-map-test.jscs-test.js","dummy/tests/unit/models/new-platform-flexberry-g-i-s-map-test.jshint.js","dummy/tests/unit/models/new-platform-flexberry-g-i-s-parameter-metadata-test.js","dummy/tests/unit/models/new-platform-flexberry-g-i-s-parameter-metadata-test.jscs-test.js","dummy/tests/unit/models/new-platform-flexberry-g-i-s-parameter-metadata-test.jshint.js","dummy/tests/unit/routes/edit-map-new-test.js","dummy/tests/unit/routes/edit-map-new-test.jscs-test.js","dummy/tests/unit/routes/edit-map-new-test.jshint.js","dummy/tests/unit/routes/edit-map-test.js","dummy/tests/unit/routes/edit-map-test.jscs-test.js","dummy/tests/unit/routes/edit-map-test.jshint.js","dummy/tests/unit/routes/gis-search-form-test.js","dummy/tests/unit/routes/gis-search-form-test.jscs-test.js","dummy/tests/unit/routes/gis-search-form-test.jshint.js","dummy/tests/unit/routes/list-map-test.js","dummy/tests/unit/routes/list-map-test.jscs-test.js","dummy/tests/unit/routes/list-map-test.jshint.js","dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-layer-link-test.js","dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-layer-link-test.jscs-test.js","dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-layer-link-test.jshint.js","dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-layer-metadata-test.js","dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-layer-metadata-test.jscs-test.js","dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-layer-metadata-test.jshint.js","dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-link-metadata-test.js","dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-link-metadata-test.jscs-test.js","dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-link-metadata-test.jshint.js","dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-link-parameter-test.js","dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-link-parameter-test.jscs-test.js","dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-link-parameter-test.jshint.js","dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-map-layer-test.js","dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-map-layer-test.jscs-test.js","dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-map-layer-test.jshint.js","dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-map-object-setting-test.js","dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-map-object-setting-test.jscs-test.js","dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-map-object-setting-test.jshint.js","dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-map-test.js","dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-map-test.jscs-test.js","dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-map-test.jshint.js","dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-parameter-metadata-test.js","dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-parameter-metadata-test.jscs-test.js","dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-parameter-metadata-test.jshint.js","dummy/tests/unit/services/local-storage-test.js","dummy/tests/unit/services/local-storage-test.jscs-test.js","dummy/tests/unit/services/local-storage-test.jshint.js","dummy/tests/unit/services/map-store-test.js","dummy/tests/unit/services/map-store-test.jscs-test.js","dummy/tests/unit/services/map-store-test.jshint.js","dummy/tests/unit/utils/leaflet-opacity-test.js","dummy/tests/unit/utils/leaflet-opacity-test.jscs-test.js","dummy/tests/unit/utils/leaflet-opacity-test.jshint.js","dummy/tests/unit/utils/polygon-intersect-check-test.js","dummy/tests/unit/utils/polygon-intersect-check-test.jscs-test.js","dummy/tests/unit/utils/polygon-intersect-check-test.jshint.js","dummy/tests/views/components-examples/flexberry-maplayers/settings-example.jscs-test.js","dummy/tests/views/components-examples/flexberry-maplayers/settings-example.jshint.js","dummy/tests/views/components-examples/flexberry-tree/settings-example.jscs-test.js","dummy/tests/views/components-examples/flexberry-tree/settings-example.jshint.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["define('dummy/tests/adapters/application-offline.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - adapters');\n  test('adapters/application-offline.js should pass jscs', function () {\n    ok(true, 'adapters/application-offline.js should pass jscs.');\n  });\n});","define('dummy/tests/adapters/application-offline.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - adapters/application-offline.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'adapters/application-offline.js should pass jshint.');\n  });\n});","define('dummy/tests/adapters/application.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - adapters');\n  test('adapters/application.js should pass jscs', function () {\n    ok(true, 'adapters/application.js should pass jscs.');\n  });\n});","define('dummy/tests/adapters/application.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - adapters/application.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'adapters/application.js should pass jshint.');\n  });\n});","define('dummy/tests/app.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - .');\n  test('app.js should pass jscs', function () {\n    ok(true, 'app.js should pass jscs.');\n  });\n});","define('dummy/tests/app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass jshint.');\n  });\n});","define('dummy/tests/controllers/api-test-map.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - controllers');\n  test('controllers/api-test-map.js should pass jscs', function () {\n    ok(true, 'controllers/api-test-map.js should pass jscs.');\n  });\n});","define('dummy/tests/controllers/api-test-map.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/api-test-map.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/api-test-map.js should pass jshint.');\n  });\n});","define('dummy/tests/controllers/application.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - controllers');\n  test('controllers/application.js should pass jscs', function () {\n    ok(true, 'controllers/application.js should pass jscs.');\n  });\n});","define('dummy/tests/controllers/application.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/application.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/application.js should pass jshint.');\n  });\n});","define('dummy/tests/controllers/components-examples/flexberry-boundingbox/settings-example.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - controllers/components-examples/flexberry-boundingbox');\n  test('controllers/components-examples/flexberry-boundingbox/settings-example.js should pass jscs', function () {\n    ok(true, 'controllers/components-examples/flexberry-boundingbox/settings-example.js should pass jscs.');\n  });\n});","define('dummy/tests/controllers/components-examples/flexberry-boundingbox/settings-example.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/components-examples/flexberry-boundingbox/settings-example.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/components-examples/flexberry-boundingbox/settings-example.js should pass jshint.');\n  });\n});","define('dummy/tests/controllers/map.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - controllers');\n  test('controllers/map.js should pass jscs', function () {\n    ok(true, 'controllers/map.js should pass jscs.');\n  });\n});","define('dummy/tests/controllers/map.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/map.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/map.js should pass jshint.');\n  });\n});","define('dummy/tests/controllers/map/new.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - controllers/map');\n  test('controllers/map/new.js should pass jscs', function () {\n    ok(true, 'controllers/map/new.js should pass jscs.');\n  });\n});","define('dummy/tests/controllers/map/new.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/map/new.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/map/new.js should pass jshint.');\n  });\n});","define('dummy/tests/controllers/maps.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - controllers');\n  test('controllers/maps.js should pass jscs', function () {\n    ok(true, 'controllers/maps.js should pass jscs.');\n  });\n});","define('dummy/tests/controllers/maps.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/maps.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/maps.js should pass jshint.');\n  });\n});","define('dummy/tests/controllers/new-platform-flexberry-g-i-s-map-object-setting-e.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - controllers');\n  test('controllers/new-platform-flexberry-g-i-s-map-object-setting-e.js should pass jscs', function () {\n    ok(true, 'controllers/new-platform-flexberry-g-i-s-map-object-setting-e.js should pass jscs.');\n  });\n});","define('dummy/tests/controllers/new-platform-flexberry-g-i-s-map-object-setting-e.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/new-platform-flexberry-g-i-s-map-object-setting-e.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/new-platform-flexberry-g-i-s-map-object-setting-e.js should pass jshint.');\n  });\n});","define('dummy/tests/controllers/new-platform-flexberry-g-i-s-map-object-setting-e/new.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - controllers/new-platform-flexberry-g-i-s-map-object-setting-e');\n  test('controllers/new-platform-flexberry-g-i-s-map-object-setting-e/new.js should pass jscs', function () {\n    ok(true, 'controllers/new-platform-flexberry-g-i-s-map-object-setting-e/new.js should pass jscs.');\n  });\n});","define('dummy/tests/controllers/new-platform-flexberry-g-i-s-map-object-setting-e/new.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/new-platform-flexberry-g-i-s-map-object-setting-e/new.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/new-platform-flexberry-g-i-s-map-object-setting-e/new.js should pass jshint.');\n  });\n});","define('dummy/tests/controllers/new-platform-flexberry-g-i-s-map-object-setting-l.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - controllers');\n  test('controllers/new-platform-flexberry-g-i-s-map-object-setting-l.js should pass jscs', function () {\n    ok(true, 'controllers/new-platform-flexberry-g-i-s-map-object-setting-l.js should pass jscs.');\n  });\n});","define('dummy/tests/controllers/new-platform-flexberry-g-i-s-map-object-setting-l.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/new-platform-flexberry-g-i-s-map-object-setting-l.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/new-platform-flexberry-g-i-s-map-object-setting-l.js should pass jshint.');\n  });\n});","define('dummy/tests/controllers/sitemap-node.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - controllers');\n  test('controllers/sitemap-node.js should pass jscs', function () {\n    ok(true, 'controllers/sitemap-node.js should pass jscs.');\n  });\n});","define('dummy/tests/controllers/sitemap-node.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/sitemap-node.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/sitemap-node.js should pass jshint.');\n  });\n});","define('dummy/tests/helpers/destroy-app', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = destroyApp;\n\n  function destroyApp(application) {\n    _ember['default'].run(application, 'destroy');\n  }\n});","define('dummy/tests/helpers/destroy-app.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - helpers');\n  test('helpers/destroy-app.js should pass jscs', function () {\n    ok(true, 'helpers/destroy-app.js should pass jscs.');\n  });\n});","define('dummy/tests/helpers/destroy-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/destroy-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/destroy-app.js should pass jshint.');\n  });\n});","define('dummy/tests/helpers/ember-i18n/test-helpers', ['exports', 'ember'], function (exports, _ember) {\n\n  // example usage: find(`.header:contains(${t('welcome_message')})`)\n  _ember['default'].Test.registerHelper('t', function (app, key, interpolations) {\n    var i18n = app.__container__.lookup('service:i18n');\n    return i18n.t(key, interpolations);\n  });\n\n  // example usage: expectTranslation('.header', 'welcome_message');\n  _ember['default'].Test.registerHelper('expectTranslation', function (app, element, key, interpolations) {\n    var text = app.testHelpers.t(key, interpolations);\n\n    assertTranslation(element, key, text);\n  });\n\n  var assertTranslation = (function () {\n    if (typeof QUnit !== 'undefined' && typeof ok === 'function') {\n      return function (element, key, text) {\n        ok(find(element + ':contains(' + text + ')').length, 'Found translation key ' + key + ' in ' + element);\n      };\n    } else if (typeof expect === 'function') {\n      return function (element, key, text) {\n        var found = !!find(element + ':contains(' + text + ')').length;\n        expect(found).to.equal(true);\n      };\n    } else {\n      return function () {\n        throw new Error(\"ember-i18n could not find a compatible test framework\");\n      };\n    }\n  })();\n});","define('dummy/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'dummy/tests/helpers/start-app', 'dummy/tests/helpers/destroy-app'], function (exports, _qunit, _dummyTestsHelpersStartApp, _dummyTestsHelpersDestroyApp) {\n  exports['default'] = function (name) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _dummyTestsHelpersStartApp['default'])();\n\n        if (options.beforeEach) {\n          options.beforeEach.apply(this, arguments);\n        }\n      },\n\n      afterEach: function afterEach() {\n        if (options.afterEach) {\n          options.afterEach.apply(this, arguments);\n        }\n\n        (0, _dummyTestsHelpersDestroyApp['default'])(this.application);\n      }\n    });\n  };\n});","define('dummy/tests/helpers/module-for-acceptance.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - helpers');\n  test('helpers/module-for-acceptance.js should pass jscs', function () {\n    ok(true, 'helpers/module-for-acceptance.js should pass jscs.');\n  });\n});","define('dummy/tests/helpers/module-for-acceptance.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/module-for-acceptance.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/module-for-acceptance.js should pass jshint.');\n  });\n});","define('dummy/tests/helpers/resolver', ['exports', 'dummy/resolver', 'dummy/config/environment'], function (exports, _dummyResolver, _dummyConfigEnvironment) {\n\n  var resolver = _dummyResolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: _dummyConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _dummyConfigEnvironment['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n});","define('dummy/tests/helpers/resolver.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - helpers');\n  test('helpers/resolver.js should pass jscs', function () {\n    ok(true, 'helpers/resolver.js should pass jscs.');\n  });\n});","define('dummy/tests/helpers/resolver.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/resolver.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/resolver.js should pass jshint.');\n  });\n});","define('dummy/tests/helpers/start-app', ['exports', 'ember', 'dummy/app', 'dummy/config/environment'], function (exports, _ember, _dummyApp, _dummyConfigEnvironment) {\n  exports['default'] = startApp;\n\n  function startApp(attrs) {\n    var application = undefined;\n\n    var attributes = _ember['default'].merge({}, _dummyConfigEnvironment['default'].APP);\n    attributes = _ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    _ember['default'].run(function () {\n      application = _dummyApp['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n});","define('dummy/tests/helpers/start-app.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - helpers');\n  test('helpers/start-app.js should pass jscs', function () {\n    ok(true, 'helpers/start-app.js should pass jscs.');\n  });\n});","define('dummy/tests/helpers/start-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/start-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass jshint.');\n  });\n});","define('dummy/tests/helpers/to-safe-string.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - helpers');\n  test('helpers/to-safe-string.js should pass jscs', function () {\n    ok(true, 'helpers/to-safe-string.js should pass jscs.');\n  });\n});","define('dummy/tests/helpers/to-safe-string.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/to-safe-string.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/to-safe-string.js should pass jshint.');\n  });\n});","define('dummy/tests/helpers/to-string.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - helpers');\n  test('helpers/to-string.js should pass jscs', function () {\n    ok(true, 'helpers/to-string.js should pass jscs.');\n  });\n});","define('dummy/tests/helpers/to-string.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/to-string.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/to-string.js should pass jshint.');\n  });\n});","define('dummy/tests/helpers/validate-properties', ['exports', 'ember', 'ember-qunit'], function (exports, _ember, _emberQunit) {\n  exports.testValidPropertyValues = testValidPropertyValues;\n  exports.testInvalidPropertyValues = testInvalidPropertyValues;\n\n  var run = _ember['default'].run;\n\n  function validateValues(object, propertyName, values, isTestForValid) {\n    var promise = null;\n    var validatedValues = [];\n\n    values.forEach(function (value) {\n      function handleValidation(errors) {\n        var hasErrors = object.get('errors.' + propertyName + '.firstObject');\n        if (hasErrors && !isTestForValid || !hasErrors && isTestForValid) {\n          validatedValues.push(value);\n        }\n      }\n\n      run(object, 'set', propertyName, value);\n\n      var objectPromise = null;\n      run(function () {\n        objectPromise = object.validate().then(handleValidation, handleValidation);\n      });\n\n      // Since we are setting the values in a different run loop as we are validating them,\n      // we need to chain the promises so that they run sequentially. The wrong value will\n      // be validated if the promises execute concurrently\n      promise = promise ? promise.then(objectPromise) : objectPromise;\n    });\n\n    return promise.then(function () {\n      return validatedValues;\n    });\n  }\n\n  function testPropertyValues(propertyName, values, isTestForValid, context) {\n    var validOrInvalid = isTestForValid ? 'Valid' : 'Invalid';\n    var testName = validOrInvalid + ' ' + propertyName;\n\n    (0, _emberQunit.test)(testName, function (assert) {\n      var object = this.subject();\n\n      if (context && typeof context === 'function') {\n        context(object);\n      }\n\n      // Use QUnit.dump.parse so null and undefined can be printed as literal 'null' and\n      // 'undefined' strings in the assert message.\n      var valuesString = QUnit.dump.parse(values).replace(/\\n(\\s+)?/g, '').replace(/,/g, ', ');\n      var assertMessage = 'Expected ' + propertyName + ' to have ' + validOrInvalid.toLowerCase() + ' values: ' + valuesString;\n\n      return validateValues(object, propertyName, values, isTestForValid).then(function (validatedValues) {\n        assert.deepEqual(validatedValues, values, assertMessage);\n      });\n    });\n  }\n\n  function testValidPropertyValues(propertyName, values, context) {\n    testPropertyValues(propertyName, values, true, context);\n  }\n\n  function testInvalidPropertyValues(propertyName, values, context) {\n    testPropertyValues(propertyName, values, false, context);\n  }\n});","define('dummy/tests/integration/components/flexberry-boundingbox-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('flexberry-boundingbox', 'Integration | Component | flexberry boundingbox', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('temporary test', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n    assert.equal('', '');\n  });\n});","define('dummy/tests/integration/components/flexberry-boundingbox-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - integration/components');\n  test('integration/components/flexberry-boundingbox-test.js should pass jscs', function () {\n    ok(true, 'integration/components/flexberry-boundingbox-test.js should pass jscs.');\n  });\n});","define('dummy/tests/integration/components/flexberry-boundingbox-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/flexberry-boundingbox-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/flexberry-boundingbox-test.js should pass jshint.');\n  });\n});","define('dummy/tests/integration/components/flexberry-dropdown-input-test', ['exports', 'ember', 'ember-qunit', 'ember-i18n/services/i18n', 'ember-flexberry/locales/ru/translations', 'ember-flexberry/locales/en/translations'], function (exports, _ember, _emberQunit, _emberI18nServicesI18n, _emberFlexberryLocalesRuTranslations, _emberFlexberryLocalesEnTranslations) {\n\n  (0, _emberQunit.moduleForComponent)('flexberry-dropdown-input', 'Integration | Component | flexberry dropdown input', {\n    beforeEach: function beforeEach(assert) {\n      this.register('locale:ru/translations', _emberFlexberryLocalesRuTranslations['default']);\n      this.register('locale:en/translations', _emberFlexberryLocalesEnTranslations['default']);\n      this.register('service:i18n', _emberI18nServicesI18n['default']);\n\n      this.inject.service('i18n', { as: 'i18n' });\n      _ember['default'].Component.reopen({\n        i18n: _ember['default'].inject.service('i18n')\n      });\n\n      this.set('i18n.locale', 'ru');\n    },\n\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(_ember['default'].HTMLBars.template((function () {\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.4.6',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 28\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['content', 'flexberry-dropdown-input', ['loc', [null, [1, 0], [1, 28]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), '(нет значения)');\n  });\n});","define('dummy/tests/integration/components/flexberry-dropdown-input-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - integration/components');\n  test('integration/components/flexberry-dropdown-input-test.js should pass jscs', function () {\n    ok(true, 'integration/components/flexberry-dropdown-input-test.js should pass jscs.');\n  });\n});","define('dummy/tests/integration/components/flexberry-dropdown-input-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/flexberry-dropdown-input-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/flexberry-dropdown-input-test.js should pass jshint.');\n  });\n});","define('dummy/tests/integration/components/flexberry-edit-crs-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('flexberry-edit-crs', 'Integration | Component | flexberry edit crs', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('temp test', function (assert) {\n    assert.equal('', '');\n  });\n});","define('dummy/tests/integration/components/flexberry-edit-crs-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - integration/components');\n  test('integration/components/flexberry-edit-crs-test.js should pass jscs', function () {\n    ok(true, 'integration/components/flexberry-edit-crs-test.js should pass jscs.');\n  });\n});","define('dummy/tests/integration/components/flexberry-edit-crs-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/flexberry-edit-crs-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/flexberry-edit-crs-test.js should pass jshint.');\n  });\n});","define('dummy/tests/integration/components/flexberry-layers-attributes-panel-test', ['exports', 'ember', 'ember-qunit', 'ember-i18n/services/i18n', 'ember-flexberry-gis/locales/ru/translations', 'ember-flexberry-gis/locales/en/translations'], function (exports, _ember, _emberQunit, _emberI18nServicesI18n, _emberFlexberryGisLocalesRuTranslations, _emberFlexberryGisLocalesEnTranslations) {\n\n  (0, _emberQunit.moduleForComponent)('flexberry-layers-attributes-panel', 'Integration | Component | flexberry layers attributes panel', {\n    beforeEach: function beforeEach(assert) {\n      this.register('locale:ru/translations', _emberFlexberryGisLocalesRuTranslations['default']);\n      this.register('locale:en/translations', _emberFlexberryGisLocalesEnTranslations['default']);\n      this.register('service:i18n', _emberI18nServicesI18n['default']);\n\n      this.inject.service('i18n', { as: 'i18n' });\n      _ember['default'].Component.reopen({\n        i18n: _ember['default'].inject.service('i18n')\n      });\n\n      this.set('i18n.locale', 'en');\n    },\n\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n    var geoJsonData = '\\n    {\\n      \"type\": \"FeatureCollection\",\\n      \"features\": [{\\n        \"type\": \"Feature\",\\n        \"geometry\": {\\n          \"type\": \"Point\",\\n          \"coordinates\": [102.0, 0.5]\\n        },\\n        \"properties\": {\\n          \"prop0\": \"value0\"\\n        }\\n      }\\n    ]\\n  }';\n    var geoJson = L.geoJSON(JSON.parse(geoJsonData));\n    _ember['default'].set(geoJson, 'readFormat', {\n      featureType: {\n        fieldTypes: { prop0: 'string' },\n        fields: { prop0: function prop0(val) {\n            return val;\n          } }\n      }\n    });\n    this.set('items', _ember['default'].A([{\n      name: 'test layer',\n      leafletObject: geoJson\n    }]));\n    _ember['default'].getOwner(this).knownNamesForType = function () {\n      return [];\n    };\n\n    this.render(_ember['default'].HTMLBars.template((function () {\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.4.6',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 3,\n              'column': 2\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n    ');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode('\\n  ');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [['inline', 'flexberry-layers-attributes-panel', [], ['items', ['subexpr', '@mut', [['get', 'items', ['loc', [null, [2, 46], [2, 51]]]]], [], []], 'folded', false], ['loc', [null, [2, 4], [2, 66]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    var $tab = this.$().find('div[data-tab=\"test layer\"]');\n\n    assert.equal($tab.length, 1, 'Layer tab was rendered');\n    assert.equal($tab.find('tbody td:last-child').text().trim(), 'value0', 'Property cell was rendered');\n  });\n});","define('dummy/tests/integration/components/flexberry-layers-attributes-panel-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - integration/components');\n  test('integration/components/flexberry-layers-attributes-panel-test.js should pass jscs', function () {\n    ok(true, 'integration/components/flexberry-layers-attributes-panel-test.js should pass jscs.');\n  });\n});","define('dummy/tests/integration/components/flexberry-layers-attributes-panel-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/flexberry-layers-attributes-panel-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/flexberry-layers-attributes-panel-test.js should pass jshint.');\n  });\n});","define('dummy/tests/integration/components/flexberry-layers-intersections-panel-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  // import hbs from 'htmlbars-inline-precompile';\n\n  (0, _emberQunit.moduleForComponent)('flexberry-layers-intersections-panel', 'Integration | Component | flexberry layers intersections panel', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    // this.render(hbs`{{flexberry-layers-intersections-panel}}`);\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    // this.render(hbs`\n    //   {{#flexberry-layers-intersections-panel}}\n    //     template block text\n    //   {{/flexberry-layers-intersections-panel}}\n    // `);\n\n    // assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('dummy/tests/integration/components/flexberry-layers-intersections-panel-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - integration/components');\n  test('integration/components/flexberry-layers-intersections-panel-test.js should pass jscs', function () {\n    ok(true, 'integration/components/flexberry-layers-intersections-panel-test.js should pass jscs.');\n  });\n});","define('dummy/tests/integration/components/flexberry-layers-intersections-panel-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/flexberry-layers-intersections-panel-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/flexberry-layers-intersections-panel-test.js should pass jshint.');\n  });\n});","define('dummy/tests/integration/components/flexberry-layers-test', ['exports', 'ember', 'ember-qunit'], function (exports, _ember, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('flexberry-layers', 'Integration | Component | flexberry layers', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(_ember['default'].HTMLBars.template((function () {\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.4.6',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 20\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['content', 'flexberry-layers', ['loc', [null, [1, 0], [1, 20]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), '');\n  });\n\n  (0, _emberQunit.test)('layer component sends actions', function (assert) {\n    var geoJsonData = '\\n    {\\n      \"type\": \"FeatureCollection\",\\n      \"features\": [{\\n        \"type\": \"Feature\",\\n        \"geometry\": {\\n          \"type\": \"Point\",\\n          \"coordinates\": [102.0, 0.5]\\n        },\\n        \"properties\": {\\n          \"prop0\": \"value0\"\\n        }\\n      }\\n    ]\\n  }';\n    var geoJson = L.geoJSON(JSON.parse(geoJsonData));\n    this.set('items', _ember['default'].A([{\n      name: 'test layer',\n      type: 'geojson',\n      leafletObject: geoJson\n    }]));\n    this.set('leafletContainer', L.layerGroup());\n\n    this.on('onLayerInit', function (_ref) {\n      var leafletObject = _ref.leafletObject;\n      var layerModel = _ref.layerModel;\n\n      assert.ok(!_ember['default'].isNone(leafletObject), 'leafletObject should not be null');\n      assert.equal(_ember['default'].get(layerModel, 'name'), 'test layer');\n    });\n\n    this.on('onLayerDestroy', function (_ref2) {\n      var leafletObject = _ref2.leafletObject;\n      var layerModel = _ref2.layerModel;\n\n      assert.ok(!_ember['default'].isNone(leafletObject), 'leafletObject should not be null');\n      assert.equal(_ember['default'].get(layerModel, 'name'), 'test layer');\n    });\n\n    this.render(_ember['default'].HTMLBars.template((function () {\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.4.6',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 15,\n              'column': 9\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n    ');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['inline', 'flexberry-layers', [], ['leafletContainer', ['subexpr', '@mut', [['get', 'leafletContainer', ['loc', [null, [3, 23], [3, 39]]]]], [], []], 'layers', ['subexpr', 'get-with-dynamic-actions', [['get', 'this', ['loc', [null, [4, 39], [4, 43]]]], 'items'], ['dynamicActions', ['subexpr', 'array', [['subexpr', 'hash', [], ['on', 'layerInit', 'actionName', 'onLayerInit'], ['loc', [null, [6, 10], [9, 11]]]], ['subexpr', 'hash', [], ['on', 'layerDestroy', 'actionName', 'onLayerDestroy'], ['loc', [null, [10, 10], [13, 11]]]]], [], ['loc', [null, [5, 23], [14, 9]]]]], ['loc', [null, [4, 13], [15, 7]]]]], ['loc', [null, [2, 4], [15, 9]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n  });\n});","define('dummy/tests/integration/components/flexberry-layers-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - integration/components');\n  test('integration/components/flexberry-layers-test.js should pass jscs', function () {\n    ok(true, 'integration/components/flexberry-layers-test.js should pass jscs.');\n  });\n});","define('dummy/tests/integration/components/flexberry-layers-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/flexberry-layers-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/flexberry-layers-test.js should pass jshint.');\n  });\n});","define('dummy/tests/integration/components/flexberry-map-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('flexberry-map', 'Integration | Component | flexberry map', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n    assert.expect(0);\n\n    this.render(Ember.HTMLBars.template((function () {\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.4.6',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 17\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['content', 'flexberry-map', ['loc', [null, [1, 0], [1, 17]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template((function () {\n      var child0 = (function () {\n        return {\n          meta: {\n            'fragmentReason': false,\n            'revision': 'Ember@2.4.6',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 2,\n                'column': 4\n              },\n              'end': {\n                'line': 4,\n                'column': 4\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      template block text\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() {\n            return [];\n          },\n          statements: [],\n          locals: [],\n          templates: []\n        };\n      })();\n\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.4.6',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 5,\n              'column': 2\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode('  ');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [['block', 'flexberry-map', [], ['model', ['subexpr', '@mut', [['get', 'model', ['loc', [null, [2, 27], [2, 32]]]]], [], []]], 0, null, ['loc', [null, [2, 4], [4, 22]]]]],\n        locals: [],\n        templates: [child0]\n      };\n    })()));\n  });\n});","define('dummy/tests/integration/components/flexberry-map-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - integration/components');\n  test('integration/components/flexberry-map-test.js should pass jscs', function () {\n    ok(true, 'integration/components/flexberry-map-test.js should pass jscs.');\n  });\n});","define('dummy/tests/integration/components/flexberry-map-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/flexberry-map-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/flexberry-map-test.js should pass jshint.');\n  });\n});","define('dummy/tests/integration/components/flexberry-maptoolbar-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('flexberry-maptoolbar', 'Integration | Component | flexberry maptoolbar', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template((function () {\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.4.6',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 24\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['content', 'flexberry-maptoolbar', ['loc', [null, [1, 0], [1, 24]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template((function () {\n      var child0 = (function () {\n        return {\n          meta: {\n            'fragmentReason': false,\n            'revision': 'Ember@2.4.6',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 2,\n                'column': 4\n              },\n              'end': {\n                'line': 4,\n                'column': 4\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      template block text\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() {\n            return [];\n          },\n          statements: [],\n          locals: [],\n          templates: []\n        };\n      })();\n\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.4.6',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 5,\n              'column': 2\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode('  ');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [['block', 'flexberry-maptoolbar', [], [], 0, null, ['loc', [null, [2, 4], [4, 29]]]]],\n        locals: [],\n        templates: [child0]\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('dummy/tests/integration/components/flexberry-maptoolbar-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - integration/components');\n  test('integration/components/flexberry-maptoolbar-test.js should pass jscs', function () {\n    ok(true, 'integration/components/flexberry-maptoolbar-test.js should pass jscs.');\n  });\n});","define('dummy/tests/integration/components/flexberry-maptoolbar-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/flexberry-maptoolbar-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/flexberry-maptoolbar-test.js should pass jshint.');\n  });\n});","define('dummy/tests/integration/components/flexberry-multiple-select-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('flexberry-multiple-select', 'Integration | Component | flexberry multiple select', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template((function () {\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.4.6',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 46\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['inline', 'flexberry-multiple-select', [], ['title', 'testHead'], ['loc', [null, [1, 0], [1, 46]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    assert.equal(this.$('.default.text').text().trim(), 'testHead');\n  });\n});","define('dummy/tests/integration/components/flexberry-multiple-select-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - integration/components');\n  test('integration/components/flexberry-multiple-select-test.js should pass jscs', function () {\n    ok(true, 'integration/components/flexberry-multiple-select-test.js should pass jscs.');\n  });\n});","define('dummy/tests/integration/components/flexberry-multiple-select-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/flexberry-multiple-select-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/flexberry-multiple-select-test.js should pass jshint.');\n  });\n});","define('dummy/tests/integration/components/flexberry-table-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('flexberry-table', 'Integration | Component | flexberry table', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n    this.set('header', { name: 'gis-search-form.layer-metadata.header.name' });\n\n    this.render(Ember.HTMLBars.template((function () {\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.4.6',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 33\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['inline', 'flexberry-table', [], ['header', ['subexpr', '@mut', [['get', 'header', ['loc', [null, [1, 25], [1, 31]]]]], [], []]], ['loc', [null, [1, 0], [1, 33]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    assert.notEqual(this.$().text().indexOf('No data'), -1, 'Should contain \"No data\"');\n\n    // Template block usage:\n    // this.render(hbs`\n    //   {{#flexberry-table}}\n    //     template block text\n    //   {{/flexberry-table}}\n    // `);\n\n    // assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('dummy/tests/integration/components/flexberry-table-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - integration/components');\n  test('integration/components/flexberry-table-test.js should pass jscs', function () {\n    ok(true, 'integration/components/flexberry-table-test.js should pass jscs.');\n  });\n});","define('dummy/tests/integration/components/flexberry-table-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/flexberry-table-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/flexberry-table-test.js should pass jshint.');\n  });\n});","define('dummy/tests/integration/components/flexberry-wfs-filter-test', ['exports', 'ember', 'ember-qunit', 'ember-i18n/services/i18n', 'ember-flexberry-gis/locales/ru/translations', 'ember-flexberry-gis/locales/en/translations'], function (exports, _ember, _emberQunit, _emberI18nServicesI18n, _emberFlexberryGisLocalesRuTranslations, _emberFlexberryGisLocalesEnTranslations) {\n\n  (0, _emberQunit.moduleForComponent)('flexberry-wfs-filter', 'Integration | Component | flexberry wfs filter', {\n    beforeEach: function beforeEach(assert) {\n      this.register('locale:ru/translations', _emberFlexberryGisLocalesRuTranslations['default']);\n      this.register('locale:en/translations', _emberFlexberryGisLocalesEnTranslations['default']);\n      this.register('service:i18n', _emberI18nServicesI18n['default']);\n\n      this.inject.service('i18n', { as: 'i18n' });\n      _ember['default'].Component.reopen({\n        i18n: _ember['default'].inject.service('i18n')\n      });\n\n      this.set('i18n.locale', 'en');\n    },\n\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(_ember['default'].HTMLBars.template((function () {\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.4.6',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 24\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['content', 'flexberry-wfs-filter', ['loc', [null, [1, 0], [1, 24]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    assert.notEqual(this.$().text().indexOf('Fields isn\\'t loaded'), -1, 'Should contain \"Fields isn\\'t loaded\"');\n  });\n});","define('dummy/tests/integration/components/flexberry-wfs-filter-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - integration/components');\n  test('integration/components/flexberry-wfs-filter-test.js should pass jscs', function () {\n    ok(true, 'integration/components/flexberry-wfs-filter-test.js should pass jscs.');\n  });\n});","define('dummy/tests/integration/components/flexberry-wfs-filter-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/flexberry-wfs-filter-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/flexberry-wfs-filter-test.js should pass jshint.');\n  });\n});","define('dummy/tests/integration/components/geometry-add-modes/draw-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  // import hbs from 'htmlbars-inline-precompile';\n\n  (0, _emberQunit.moduleForComponent)('geometry-add-modes/draw', 'Integration | Component | geometry add modes/draw', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('empty test', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    assert.equal('', '');\n\n    // this.render(hbs`{{geometry-add-modes/draw}}`);\n\n    // assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    // this.render(hbs`\n    //   {{#geometry-add-modes/draw}}\n    //     template block text\n    //   {{/geometry-add-modes/draw}}\n    // `);\n\n    // assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('dummy/tests/integration/components/geometry-add-modes/draw-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - integration/components/geometry-add-modes');\n  test('integration/components/geometry-add-modes/draw-test.js should pass jscs', function () {\n    ok(true, 'integration/components/geometry-add-modes/draw-test.js should pass jscs.');\n  });\n});","define('dummy/tests/integration/components/geometry-add-modes/draw-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/geometry-add-modes/draw-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/geometry-add-modes/draw-test.js should pass jshint.');\n  });\n});","define('dummy/tests/integration/components/geometry-add-modes/geoprovider-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  // import hbs from 'htmlbars-inline-precompile';\n\n  (0, _emberQunit.moduleForComponent)('geometry-add-modes/geoprovider', 'Integration | Component | geometry add modes/geoprovider', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('empty test', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    // this.render(hbs`{{geometry-add-modes/geoprovider}}`);\n\n    // assert.equal(this.$().text().trim(), '');\n\n    assert.equal('', '');\n\n    // Template block usage:\n    // this.render(hbs`\n    //   {{#geometry-add-modes/geoprovider}}\n    //     template block text\n    //   {{/geometry-add-modes/geoprovider}}\n    // `);\n\n    // assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('dummy/tests/integration/components/geometry-add-modes/geoprovider-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - integration/components/geometry-add-modes');\n  test('integration/components/geometry-add-modes/geoprovider-test.js should pass jscs', function () {\n    ok(true, 'integration/components/geometry-add-modes/geoprovider-test.js should pass jscs.');\n  });\n});","define('dummy/tests/integration/components/geometry-add-modes/geoprovider-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/geometry-add-modes/geoprovider-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/geometry-add-modes/geoprovider-test.js should pass jshint.');\n  });\n});","define('dummy/tests/integration/components/geometry-add-modes/manual-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  // import hbs from 'htmlbars-inline-precompile';\n\n  (0, _emberQunit.moduleForComponent)('geometry-add-modes/manual', 'Integration | Component | geometry add modes/manual', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('empty test', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    // this.render(hbs`{{geometry-add-modes/manual}}`);\n\n    // assert.equal(this.$().text().trim(), '');\n\n    assert.equal('', '');\n\n    // Template block usage:\n    // this.render(hbs`\n    //   {{#geometry-add-modes/manual}}\n    //     template block text\n    //   {{/geometry-add-modes/manual}}\n    // `);\n\n    // assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('dummy/tests/integration/components/geometry-add-modes/manual-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - integration/components/geometry-add-modes');\n  test('integration/components/geometry-add-modes/manual-test.js should pass jscs', function () {\n    ok(true, 'integration/components/geometry-add-modes/manual-test.js should pass jscs.');\n  });\n});","define('dummy/tests/integration/components/geometry-add-modes/manual-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/geometry-add-modes/manual-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/geometry-add-modes/manual-test.js should pass jshint.');\n  });\n});","define('dummy/tests/integration/components/layers-dialogs/attributes/edit-test', ['exports', 'ember', 'ember-qunit', 'ember-i18n/services/i18n', 'ember-flexberry-gis/locales/ru/translations', 'ember-flexberry-gis/locales/en/translations'], function (exports, _ember, _emberQunit, _emberI18nServicesI18n, _emberFlexberryGisLocalesRuTranslations, _emberFlexberryGisLocalesEnTranslations) {\n\n  (0, _emberQunit.moduleForComponent)('layers-dialogs/attributes/edit', 'Integration | Component | layers dialogs/attributes/edit', {\n    integration: true,\n\n    beforeEach: function beforeEach() {\n      this.register('locale:ru/translations', _emberFlexberryGisLocalesRuTranslations['default']);\n      this.register('locale:en/translations', _emberFlexberryGisLocalesEnTranslations['default']);\n      this.register('service:i18n', _emberI18nServicesI18n['default']);\n\n      this.inject.service('i18n', { as: 'i18n' });\n      _ember['default'].Component.reopen({\n        i18n: _ember['default'].inject.service('i18n')\n      });\n\n      // Set 'ru' as initial locale.\n      this.set('i18n.locale', 'ru');\n    }\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n    assert.expect(1);\n\n    this.set('fieldNames', {\n      field: 'field'\n    });\n    this.set('fieldTypes', {\n      field: 'string'\n    });\n    this.set('fieldParsers', {\n      field: function field(text) {\n        return text;\n      }\n    });\n    this.set('fieldValidators', {\n      field: function field(value) {\n        return true;\n      }\n    });\n    this.set('data', {\n      field: 'test field'\n    });\n\n    this.set('visible', true);\n\n    this.render(_ember['default'].HTMLBars.template((function () {\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.4.6',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 9,\n              'column': 6\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n    ');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['inline', 'layers-dialogs/attributes/edit', [], ['visible', ['subexpr', '@mut', [['get', 'visible', ['loc', [null, [3, 14], [3, 21]]]]], [], []], 'fieldNames', ['subexpr', '@mut', [['get', 'fieldNames', ['loc', [null, [4, 17], [4, 27]]]]], [], []], 'fieldTypes', ['subexpr', '@mut', [['get', 'fieldTypes', ['loc', [null, [5, 17], [5, 27]]]]], [], []], 'fieldParsers', ['subexpr', '@mut', [['get', 'fieldParsers', ['loc', [null, [6, 19], [6, 31]]]]], [], []], 'fieldValidators', ['subexpr', '@mut', [['get', 'fieldValidators', ['loc', [null, [7, 22], [7, 37]]]]], [], []], 'data', ['subexpr', '@mut', [['get', 'data', ['loc', [null, [8, 11], [8, 15]]]]], [], []]], ['loc', [null, [2, 4], [9, 6]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    // Component is rendered outside of the testing container.\n    var $dialog = this.$().closest('#ember-testing-container').siblings('.ui.modals').find('.flexberry-edit-layer-attributes-dialog');\n\n    assert.ok($dialog.find('.flexberry-dialog-content .field input').length === 1, 'It renders one input');\n  });\n});","define('dummy/tests/integration/components/layers-dialogs/attributes/edit-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - integration/components/layers-dialogs/attributes');\n  test('integration/components/layers-dialogs/attributes/edit-test.js should pass jscs', function () {\n    ok(true, 'integration/components/layers-dialogs/attributes/edit-test.js should pass jscs.');\n  });\n});","define('dummy/tests/integration/components/layers-dialogs/attributes/edit-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/layers-dialogs/attributes/edit-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/layers-dialogs/attributes/edit-test.js should pass jshint.');\n  });\n});","define('dummy/tests/integration/components/layers-dialogs/tabs/identification-settings-test', ['exports', 'ember', 'ember-qunit', 'ember-i18n/services/i18n', 'ember-flexberry-gis/locales/ru/translations', 'ember-flexberry-gis/locales/en/translations'], function (exports, _ember, _emberQunit, _emberI18nServicesI18n, _emberFlexberryGisLocalesRuTranslations, _emberFlexberryGisLocalesEnTranslations) {\n\n  (0, _emberQunit.moduleForComponent)('identification-settings', 'Integration | Component | identification settings', {\n    beforeEach: function beforeEach(assert) {\n      this.register('locale:ru/translations', _emberFlexberryGisLocalesRuTranslations['default']);\n      this.register('locale:en/translations', _emberFlexberryGisLocalesEnTranslations['default']);\n      this.register('service:i18n', _emberI18nServicesI18n['default']);\n\n      this.inject.service('i18n', { as: 'i18n' });\n      _ember['default'].Component.reopen({\n        i18n: _ember['default'].inject.service('i18n')\n      });\n\n      this.set('i18n.locale', 'ru');\n\n      var obj = {\n        settings: {\n          displaySettings: {\n            canBeIdentified: true\n          }\n        }\n      };\n\n      this.set('_layer', obj);\n    },\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    this.render(_ember['default'].HTMLBars.template((function () {\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.4.6',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 85\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['inline', 'layers-dialogs/tabs/identification-settings', [], ['value', ['subexpr', '@mut', [['get', '_layer.settings.displaySettings', ['loc', [null, [1, 52], [1, 83]]]]], [], []]], ['loc', [null, [1, 0], [1, 85]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), 'Может быть идентифицирован');\n  });\n});","define('dummy/tests/integration/components/layers-dialogs/tabs/identification-settings-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - integration/components/layers-dialogs/tabs');\n  test('integration/components/layers-dialogs/tabs/identification-settings-test.js should pass jscs', function () {\n    ok(true, 'integration/components/layers-dialogs/tabs/identification-settings-test.js should pass jscs.');\n  });\n});","define('dummy/tests/integration/components/layers-dialogs/tabs/identification-settings-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/layers-dialogs/tabs/identification-settings-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/layers-dialogs/tabs/identification-settings-test.js should pass jshint.');\n  });\n});","define('dummy/tests/integration/components/layers-dialogs/tabs/legend-settings-test', ['exports', 'ember', 'ember-qunit', 'ember-i18n/services/i18n', 'ember-flexberry-gis/locales/ru/translations', 'ember-flexberry-gis/locales/en/translations'], function (exports, _ember, _emberQunit, _emberI18nServicesI18n, _emberFlexberryGisLocalesRuTranslations, _emberFlexberryGisLocalesEnTranslations) {\n\n  (0, _emberQunit.moduleForComponent)('layers-dialogs/tabs/legend-settings', 'Integration | Component | layers dialogs/tabs/legend settings', {\n    beforeEach: function beforeEach(assert) {\n      this.register('locale:ru/translations', _emberFlexberryGisLocalesRuTranslations['default']);\n      this.register('locale:en/translations', _emberFlexberryGisLocalesEnTranslations['default']);\n      this.register('service:i18n', _emberI18nServicesI18n['default']);\n\n      this.inject.service('i18n', { as: 'i18n' });\n      _ember['default'].Component.reopen({\n        i18n: _ember['default'].inject.service('i18n')\n      });\n\n      this.set('i18n.locale', 'ru');\n\n      var obj = {\n        settings: {\n          legendSettings: {\n            legendCanBeDisplayed: true\n          }\n        }\n      };\n      this.set('_layer', obj);\n    },\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(_ember['default'].HTMLBars.template((function () {\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.4.6',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 4,\n              'column': 20\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['inline', 'layers-dialogs/tabs/legend-settings', [], ['value', ['subexpr', '@mut', [['get', '_layer.settings.legendSettings', ['loc', [null, [2, 26], [2, 56]]]]], [], []], 'type', ['subexpr', '@mut', [['get', '_layer.type', ['loc', [null, [3, 25], [3, 36]]]]], [], []]], ['loc', [null, [1, 0], [4, 20]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), 'Отображать легенду');\n  });\n});","define('dummy/tests/integration/components/layers-dialogs/tabs/legend-settings-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - integration/components/layers-dialogs/tabs');\n  test('integration/components/layers-dialogs/tabs/legend-settings-test.js should pass jscs', function () {\n    ok(true, 'integration/components/layers-dialogs/tabs/legend-settings-test.js should pass jscs.');\n  });\n});","define('dummy/tests/integration/components/layers-dialogs/tabs/legend-settings-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/layers-dialogs/tabs/legend-settings-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/layers-dialogs/tabs/legend-settings-test.js should pass jshint.');\n  });\n});","define('dummy/tests/integration/components/layers/group-layer-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('layers/group-layer', 'Integration | Component | layers/group layer', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n    this.set('leafletContainer', L.layerGroup());\n\n    this.render(Ember.HTMLBars.template((function () {\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.4.6',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 56\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['inline', 'layers/group-layer', [], ['leafletContainer', ['subexpr', '@mut', [['get', 'leafletContainer', ['loc', [null, [1, 38], [1, 54]]]]], [], []]], ['loc', [null, [1, 0], [1, 56]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), '');\n  });\n});","define('dummy/tests/integration/components/layers/group-layer-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - integration/components/layers');\n  test('integration/components/layers/group-layer-test.js should pass jscs', function () {\n    ok(true, 'integration/components/layers/group-layer-test.js should pass jscs.');\n  });\n});","define('dummy/tests/integration/components/layers/group-layer-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/layers/group-layer-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/layers/group-layer-test.js should pass jshint.');\n  });\n});","define('dummy/tests/integration/components/layers/osm-layer-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('layers/osm-layer', 'Integration | Component | layers/osm layer', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template((function () {\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.4.6',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 20\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['content', 'layers/osm-layer', ['loc', [null, [1, 0], [1, 20]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template((function () {\n      var child0 = (function () {\n        return {\n          meta: {\n            'fragmentReason': false,\n            'revision': 'Ember@2.4.6',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 2,\n                'column': 4\n              },\n              'end': {\n                'line': 4,\n                'column': 4\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      template block text\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() {\n            return [];\n          },\n          statements: [],\n          locals: [],\n          templates: []\n        };\n      })();\n\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.4.6',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 5,\n              'column': 2\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode('  ');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [['block', 'layers/osm-layer', [], [], 0, null, ['loc', [null, [2, 4], [4, 25]]]]],\n        locals: [],\n        templates: [child0]\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('dummy/tests/integration/components/layers/osm-layer-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - integration/components/layers');\n  test('integration/components/layers/osm-layer-test.js should pass jscs', function () {\n    ok(true, 'integration/components/layers/osm-layer-test.js should pass jscs.');\n  });\n});","define('dummy/tests/integration/components/layers/osm-layer-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/layers/osm-layer-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/layers/osm-layer-test.js should pass jshint.');\n  });\n});","define('dummy/tests/integration/components/legends/wms-legend-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('legends/wms-legend', 'Integration | Component | legends/wms legend', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n    assert.expect(2);\n\n    this.set('testLayer', {\n      settingsAsObject: {\n        url: 'http://212.192.76.235:8080/geoserver/wms',\n        layers: 'lesonas1969:goszem,lesonas1969:river,lesonas1969:kvartal'\n      }\n    });\n\n    this.render(Ember.HTMLBars.template((function () {\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.4.6',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 38\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['inline', 'legends/wms-legend', [], ['layer', ['subexpr', '@mut', [['get', 'testLayer', ['loc', [null, [1, 27], [1, 36]]]]], [], []]], ['loc', [null, [1, 0], [1, 38]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    var $images = this.$('img');\n    var expectedSrc = 'http://212.192.76.235:8080/geoserver/wms?service=WMS&request=GetLegendGraphic&version=1.1.0&format=image%2Fpng&layer=lesonas1969%3Agoszem';\n\n    assert.equal($images.size(), 3, 'Images for all defined layers are rendered');\n    assert.equal($images.first().attr('src'), expectedSrc, 'Image\\'s \\'src\\' attribute computed as expected');\n  });\n});","define('dummy/tests/integration/components/legends/wms-legend-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - integration/components/legends');\n  test('integration/components/legends/wms-legend-test.js should pass jscs', function () {\n    ok(true, 'integration/components/legends/wms-legend-test.js should pass jscs.');\n  });\n});","define('dummy/tests/integration/components/legends/wms-legend-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/legends/wms-legend-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/legends/wms-legend-test.js should pass jshint.');\n  });\n});","define('dummy/tests/integration/components/minimap-control-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('minimap-control', 'Integration | Component | minimap control', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('template return L.layerGroup', function (assert) {\n\n    assert.expect(1);\n\n    this.set('layerGroupClass', L.LayerGroup);\n\n    this.render(Ember.HTMLBars.template((function () {\n      var child0 = (function () {\n        return {\n          meta: {\n            'fragmentReason': false,\n            'revision': 'Ember@2.4.6',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 2,\n                'column': 4\n              },\n              'end': {\n                'line': 4,\n                'column': 4\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 1,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('       ');\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement('div');\n            dom.setAttribute(el1, 'class', 'layerG-body');\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode('\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n            var element0 = dom.childAt(fragment, [1]);\n            var morphs = new Array(1);\n            morphs[0] = dom.createAttrMorph(element0, 'is-layergroup');\n            return morphs;\n          },\n          statements: [['attribute', 'is-layergroup', ['concat', [['subexpr', 'instance-of', [['get', 'layerG', ['loc', [null, [3, 61], [3, 67]]]], ['get', 'layerGroupClass', ['loc', [null, [3, 68], [3, 83]]]]], [], ['loc', [null, [3, 47], [3, 85]]]]]]]],\n          locals: ['layerG'],\n          templates: []\n        };\n      })();\n\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.4.6',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 5,\n              'column': 2\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode('  ');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [['block', 'minimap-control', [], [], 0, null, ['loc', [null, [2, 4], [4, 24]]]]],\n        locals: [],\n        templates: [child0]\n      };\n    })()));\n\n    assert.ok(this.$('div.layerG-body').attr('is-layergroup'));\n  });\n});","define('dummy/tests/integration/components/minimap-control-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - integration/components');\n  test('integration/components/minimap-control-test.js should pass jscs', function () {\n    ok(true, 'integration/components/minimap-control-test.js should pass jscs.');\n  });\n});","define('dummy/tests/integration/components/minimap-control-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/minimap-control-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/minimap-control-test.js should pass jshint.');\n  });\n});","define('dummy/tests/integration/components/spatial-bookmark-test', ['exports', 'ember', 'ember-qunit', 'ember-flexberry-gis/services/local-storage', 'ember-i18n/services/i18n', 'ember-flexberry-gis/locales/ru/translations', 'ember-flexberry-gis/locales/en/translations'], function (exports, _ember, _emberQunit, _emberFlexberryGisServicesLocalStorage, _emberI18nServicesI18n, _emberFlexberryGisLocalesRuTranslations, _emberFlexberryGisLocalesEnTranslations) {\n\n  (0, _emberQunit.moduleForComponent)('spatial-bookmark', 'Integration | Component | spatial bookmark', {\n    beforeEach: function beforeEach(assert) {\n      this.register('locale:ru/translations', _emberFlexberryGisLocalesRuTranslations['default']);\n      this.register('locale:en/translations', _emberFlexberryGisLocalesEnTranslations['default']);\n      this.register('service:i18n', _emberI18nServicesI18n['default']);\n\n      this.inject.service('i18n', { as: 'i18n' });\n      _ember['default'].Component.reopen({\n        i18n: _ember['default'].inject.service('i18n')\n      });\n\n      this.set('i18n.locale', 'ru');\n\n      this.register('service:local-storage', _emberFlexberryGisServicesLocalStorage['default']);\n\n      this.inject.service('local-storage', { as: 'local-storage-service' });\n      _ember['default'].Component.reopen({\n        'local-storage-service': _ember['default'].inject.service('local-storage')\n      });\n    },\n\n    afterEach: function afterEach() {\n      _ember['default'].Component.reopen({\n        'local-storage-service': undefined\n      });\n    },\n\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n    this.render(_ember['default'].HTMLBars.template((function () {\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.4.6',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 20\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['content', 'spatial-bookmark', ['loc', [null, [1, 0], [1, 20]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n    assert.equal(this.$().text().trim(), 'Добавить в закладки');\n  });\n});","define('dummy/tests/integration/components/spatial-bookmark-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - integration/components');\n  test('integration/components/spatial-bookmark-test.js should pass jscs', function () {\n    ok(true, 'integration/components/spatial-bookmark-test.js should pass jscs.');\n  });\n});","define('dummy/tests/integration/components/spatial-bookmark-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/spatial-bookmark-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/spatial-bookmark-test.js should pass jshint.');\n  });\n});","define('dummy/tests/locales/en/forms.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/en');\n  test('locales/en/forms.js should pass jscs', function () {\n    ok(true, 'locales/en/forms.js should pass jscs.');\n  });\n});","define('dummy/tests/locales/en/forms.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/en/forms.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/forms.js should pass jshint.');\n  });\n});","define('dummy/tests/locales/en/forms/application.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/en/forms');\n  test('locales/en/forms/application.js should pass jscs', function () {\n    ok(true, 'locales/en/forms/application.js should pass jscs.');\n  });\n});","define('dummy/tests/locales/en/forms/application.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/en/forms/application.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/forms/application.js should pass jshint.');\n  });\n});","define('dummy/tests/locales/en/forms/application/footer.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/en/forms/application');\n  test('locales/en/forms/application/footer.js should pass jscs', function () {\n    ok(true, 'locales/en/forms/application/footer.js should pass jscs.');\n  });\n});","define('dummy/tests/locales/en/forms/application/footer.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/en/forms/application/footer.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/forms/application/footer.js should pass jshint.');\n  });\n});","define('dummy/tests/locales/en/forms/application/header.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/en/forms/application');\n  test('locales/en/forms/application/header.js should pass jscs', function () {\n    ok(true, 'locales/en/forms/application/header.js should pass jscs.');\n  });\n});","define('dummy/tests/locales/en/forms/application/header.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/en/forms/application/header.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/forms/application/header.js should pass jshint.');\n  });\n});","define('dummy/tests/locales/en/forms/application/sitemap.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/en/forms/application');\n  test('locales/en/forms/application/sitemap.js should pass jscs', function () {\n    ok(true, 'locales/en/forms/application/sitemap.js should pass jscs.');\n  });\n});","define('dummy/tests/locales/en/forms/application/sitemap.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/en/forms/application/sitemap.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/forms/application/sitemap.js should pass jshint.');\n  });\n});","define('dummy/tests/locales/en/forms/components-examples.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/en/forms');\n  test('locales/en/forms/components-examples.js should pass jscs', function () {\n    ok(true, 'locales/en/forms/components-examples.js should pass jscs.');\n  });\n});","define('dummy/tests/locales/en/forms/components-examples.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/en/forms/components-examples.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/forms/components-examples.js should pass jshint.');\n  });\n});","define('dummy/tests/locales/en/forms/edit-form.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/en/forms');\n  test('locales/en/forms/edit-form.js should pass jscs', function () {\n    ok(true, 'locales/en/forms/edit-form.js should pass jscs.');\n  });\n});","define('dummy/tests/locales/en/forms/edit-form.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/en/forms/edit-form.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/forms/edit-form.js should pass jshint.');\n  });\n});","define('dummy/tests/locales/en/forms/index.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/en/forms');\n  test('locales/en/forms/index.js should pass jscs', function () {\n    ok(true, 'locales/en/forms/index.js should pass jscs.');\n  });\n});","define('dummy/tests/locales/en/forms/index.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/en/forms/index.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/forms/index.js should pass jshint.');\n  });\n});","define('dummy/tests/locales/en/forms/loading.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/en/forms');\n  test('locales/en/forms/loading.js should pass jscs', function () {\n    ok(true, 'locales/en/forms/loading.js should pass jscs.');\n  });\n});","define('dummy/tests/locales/en/forms/loading.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/en/forms/loading.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/forms/loading.js should pass jshint.');\n  });\n});","define('dummy/tests/locales/en/forms/map.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/en/forms');\n  test('locales/en/forms/map.js should pass jscs', function () {\n    ok(true, 'locales/en/forms/map.js should pass jscs.');\n  });\n});","define('dummy/tests/locales/en/forms/map.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/en/forms/map.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/forms/map.js should pass jshint.');\n  });\n});","define('dummy/tests/locales/en/forms/maps.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/en/forms');\n  test('locales/en/forms/maps.js should pass jscs', function () {\n    ok(true, 'locales/en/forms/maps.js should pass jscs.');\n  });\n});","define('dummy/tests/locales/en/forms/maps.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/en/forms/maps.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/forms/maps.js should pass jshint.');\n  });\n});","define('dummy/tests/locales/en/forms/new-platform-flexberry-g-i-s-map-object-setting-e.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/en/forms');\n  test('locales/en/forms/new-platform-flexberry-g-i-s-map-object-setting-e.js should pass jscs', function () {\n    ok(true, 'locales/en/forms/new-platform-flexberry-g-i-s-map-object-setting-e.js should pass jscs.');\n  });\n});","define('dummy/tests/locales/en/forms/new-platform-flexberry-g-i-s-map-object-setting-e.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/en/forms/new-platform-flexberry-g-i-s-map-object-setting-e.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/forms/new-platform-flexberry-g-i-s-map-object-setting-e.js should pass jshint.');\n  });\n});","define('dummy/tests/locales/en/forms/new-platform-flexberry-g-i-s-map-object-setting-l.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/en/forms');\n  test('locales/en/forms/new-platform-flexberry-g-i-s-map-object-setting-l.js should pass jscs', function () {\n    ok(true, 'locales/en/forms/new-platform-flexberry-g-i-s-map-object-setting-l.js should pass jscs.');\n  });\n});","define('dummy/tests/locales/en/forms/new-platform-flexberry-g-i-s-map-object-setting-l.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/en/forms/new-platform-flexberry-g-i-s-map-object-setting-l.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/forms/new-platform-flexberry-g-i-s-map-object-setting-l.js should pass jshint.');\n  });\n});","define('dummy/tests/locales/en/translations.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/en');\n  test('locales/en/translations.js should pass jscs', function () {\n    ok(true, 'locales/en/translations.js should pass jscs.');\n  });\n});","define('dummy/tests/locales/en/translations.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/en/translations.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/translations.js should pass jshint.');\n  });\n});","define('dummy/tests/locales/ru/forms.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/ru');\n  test('locales/ru/forms.js should pass jscs', function () {\n    ok(true, 'locales/ru/forms.js should pass jscs.');\n  });\n});","define('dummy/tests/locales/ru/forms.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/ru/forms.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/ru/forms.js should pass jshint.');\n  });\n});","define('dummy/tests/locales/ru/forms/application.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/ru/forms');\n  test('locales/ru/forms/application.js should pass jscs', function () {\n    ok(true, 'locales/ru/forms/application.js should pass jscs.');\n  });\n});","define('dummy/tests/locales/ru/forms/application.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/ru/forms/application.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/ru/forms/application.js should pass jshint.');\n  });\n});","define('dummy/tests/locales/ru/forms/application/footer.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/ru/forms/application');\n  test('locales/ru/forms/application/footer.js should pass jscs', function () {\n    ok(true, 'locales/ru/forms/application/footer.js should pass jscs.');\n  });\n});","define('dummy/tests/locales/ru/forms/application/footer.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/ru/forms/application/footer.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/ru/forms/application/footer.js should pass jshint.');\n  });\n});","define('dummy/tests/locales/ru/forms/application/header.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/ru/forms/application');\n  test('locales/ru/forms/application/header.js should pass jscs', function () {\n    ok(true, 'locales/ru/forms/application/header.js should pass jscs.');\n  });\n});","define('dummy/tests/locales/ru/forms/application/header.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/ru/forms/application/header.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/ru/forms/application/header.js should pass jshint.');\n  });\n});","define('dummy/tests/locales/ru/forms/application/sitemap.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/ru/forms/application');\n  test('locales/ru/forms/application/sitemap.js should pass jscs', function () {\n    ok(true, 'locales/ru/forms/application/sitemap.js should pass jscs.');\n  });\n});","define('dummy/tests/locales/ru/forms/application/sitemap.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/ru/forms/application/sitemap.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/ru/forms/application/sitemap.js should pass jshint.');\n  });\n});","define('dummy/tests/locales/ru/forms/components-examples.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/ru/forms');\n  test('locales/ru/forms/components-examples.js should pass jscs', function () {\n    ok(true, 'locales/ru/forms/components-examples.js should pass jscs.');\n  });\n});","define('dummy/tests/locales/ru/forms/components-examples.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/ru/forms/components-examples.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/ru/forms/components-examples.js should pass jshint.');\n  });\n});","define('dummy/tests/locales/ru/forms/edit-form.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/ru/forms');\n  test('locales/ru/forms/edit-form.js should pass jscs', function () {\n    ok(true, 'locales/ru/forms/edit-form.js should pass jscs.');\n  });\n});","define('dummy/tests/locales/ru/forms/edit-form.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/ru/forms/edit-form.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/ru/forms/edit-form.js should pass jshint.');\n  });\n});","define('dummy/tests/locales/ru/forms/index.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/ru/forms');\n  test('locales/ru/forms/index.js should pass jscs', function () {\n    ok(true, 'locales/ru/forms/index.js should pass jscs.');\n  });\n});","define('dummy/tests/locales/ru/forms/index.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/ru/forms/index.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/ru/forms/index.js should pass jshint.');\n  });\n});","define('dummy/tests/locales/ru/forms/loading.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/ru/forms');\n  test('locales/ru/forms/loading.js should pass jscs', function () {\n    ok(true, 'locales/ru/forms/loading.js should pass jscs.');\n  });\n});","define('dummy/tests/locales/ru/forms/loading.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/ru/forms/loading.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/ru/forms/loading.js should pass jshint.');\n  });\n});","define('dummy/tests/locales/ru/forms/map.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/ru/forms');\n  test('locales/ru/forms/map.js should pass jscs', function () {\n    ok(true, 'locales/ru/forms/map.js should pass jscs.');\n  });\n});","define('dummy/tests/locales/ru/forms/map.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/ru/forms/map.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/ru/forms/map.js should pass jshint.');\n  });\n});","define('dummy/tests/locales/ru/forms/maps.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/ru/forms');\n  test('locales/ru/forms/maps.js should pass jscs', function () {\n    ok(true, 'locales/ru/forms/maps.js should pass jscs.');\n  });\n});","define('dummy/tests/locales/ru/forms/maps.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/ru/forms/maps.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/ru/forms/maps.js should pass jshint.');\n  });\n});","define('dummy/tests/locales/ru/forms/new-platform-flexberry-g-i-s-map-object-setting-e.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/ru/forms');\n  test('locales/ru/forms/new-platform-flexberry-g-i-s-map-object-setting-e.js should pass jscs', function () {\n    ok(true, 'locales/ru/forms/new-platform-flexberry-g-i-s-map-object-setting-e.js should pass jscs.');\n  });\n});","define('dummy/tests/locales/ru/forms/new-platform-flexberry-g-i-s-map-object-setting-e.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/ru/forms/new-platform-flexberry-g-i-s-map-object-setting-e.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/ru/forms/new-platform-flexberry-g-i-s-map-object-setting-e.js should pass jshint.');\n  });\n});","define('dummy/tests/locales/ru/forms/new-platform-flexberry-g-i-s-map-object-setting-l.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/ru/forms');\n  test('locales/ru/forms/new-platform-flexberry-g-i-s-map-object-setting-l.js should pass jscs', function () {\n    ok(true, 'locales/ru/forms/new-platform-flexberry-g-i-s-map-object-setting-l.js should pass jscs.');\n  });\n});","define('dummy/tests/locales/ru/forms/new-platform-flexberry-g-i-s-map-object-setting-l.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/ru/forms/new-platform-flexberry-g-i-s-map-object-setting-l.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/ru/forms/new-platform-flexberry-g-i-s-map-object-setting-l.js should pass jshint.');\n  });\n});","define('dummy/tests/locales/ru/translations.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/ru');\n  test('locales/ru/translations.js should pass jscs', function () {\n    ok(true, 'locales/ru/translations.js should pass jscs.');\n  });\n});","define('dummy/tests/locales/ru/translations.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/ru/translations.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/ru/translations.js should pass jshint.');\n  });\n});","define('dummy/tests/models/components-examples/flexberry-ddau-checkbox/settings-example/base.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - models/components-examples/flexberry-ddau-checkbox/settings-example');\n  test('models/components-examples/flexberry-ddau-checkbox/settings-example/base.js should pass jscs', function () {\n    ok(true, 'models/components-examples/flexberry-ddau-checkbox/settings-example/base.js should pass jscs.');\n  });\n});","define('dummy/tests/models/components-examples/flexberry-ddau-checkbox/settings-example/base.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - models/components-examples/flexberry-ddau-checkbox/settings-example/base.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/components-examples/flexberry-ddau-checkbox/settings-example/base.js should pass jshint.');\n  });\n});","define('dummy/tests/models/custom-inflector-rules.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - models');\n  test('models/custom-inflector-rules.js should pass jscs', function () {\n    ok(true, 'models/custom-inflector-rules.js should pass jscs.');\n  });\n});","define('dummy/tests/models/custom-inflector-rules.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - models/custom-inflector-rules.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/custom-inflector-rules.js should pass jshint.');\n  });\n});","define('dummy/tests/resolver.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - .');\n  test('resolver.js should pass jscs', function () {\n    ok(true, 'resolver.js should pass jscs.');\n  });\n});","define('dummy/tests/resolver.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - resolver.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass jshint.');\n  });\n});","define('dummy/tests/router.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - .');\n  test('router.js should pass jscs', function () {\n    ok(true, 'router.js should pass jscs.');\n  });\n});","define('dummy/tests/router.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - router.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass jshint.');\n  });\n});","define('dummy/tests/routes/api-test-map.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - routes');\n  test('routes/api-test-map.js should pass jscs', function () {\n    ok(true, 'routes/api-test-map.js should pass jscs.');\n  });\n});","define('dummy/tests/routes/api-test-map.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/api-test-map.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/api-test-map.js should pass jshint.');\n  });\n});","define('dummy/tests/routes/application.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - routes');\n  test('routes/application.js should pass jscs', function () {\n    ok(true, 'routes/application.js should pass jscs.');\n  });\n});","define('dummy/tests/routes/application.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/application.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/application.js should pass jshint.');\n  });\n});","define('dummy/tests/routes/components-examples/flexberry-boundingbox/settings-example.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - routes/components-examples/flexberry-boundingbox');\n  test('routes/components-examples/flexberry-boundingbox/settings-example.js should pass jscs', function () {\n    ok(true, 'routes/components-examples/flexberry-boundingbox/settings-example.js should pass jscs.');\n  });\n});","define('dummy/tests/routes/components-examples/flexberry-boundingbox/settings-example.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/components-examples/flexberry-boundingbox/settings-example.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/components-examples/flexberry-boundingbox/settings-example.js should pass jshint.');\n  });\n});","define('dummy/tests/routes/index.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - routes');\n  test('routes/index.js should pass jscs', function () {\n    ok(true, 'routes/index.js should pass jscs.');\n  });\n});","define('dummy/tests/routes/index.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/index.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/index.js should pass jshint.');\n  });\n});","define('dummy/tests/routes/map.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - routes');\n  test('routes/map.js should pass jscs', function () {\n    ok(true, 'routes/map.js should pass jscs.');\n  });\n});","define('dummy/tests/routes/map.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/map.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/map.js should pass jshint.');\n  });\n});","define('dummy/tests/routes/map/new.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - routes/map');\n  test('routes/map/new.js should pass jscs', function () {\n    ok(true, 'routes/map/new.js should pass jscs.');\n  });\n});","define('dummy/tests/routes/map/new.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/map/new.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/map/new.js should pass jshint.');\n  });\n});","define('dummy/tests/routes/maps.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - routes');\n  test('routes/maps.js should pass jscs', function () {\n    ok(true, 'routes/maps.js should pass jscs.');\n  });\n});","define('dummy/tests/routes/maps.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/maps.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/maps.js should pass jshint.');\n  });\n});","define('dummy/tests/routes/new-platform-flexberry-g-i-s-map-object-setting-e.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - routes');\n  test('routes/new-platform-flexberry-g-i-s-map-object-setting-e.js should pass jscs', function () {\n    ok(true, 'routes/new-platform-flexberry-g-i-s-map-object-setting-e.js should pass jscs.');\n  });\n});","define('dummy/tests/routes/new-platform-flexberry-g-i-s-map-object-setting-e.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/new-platform-flexberry-g-i-s-map-object-setting-e.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/new-platform-flexberry-g-i-s-map-object-setting-e.js should pass jshint.');\n  });\n});","define('dummy/tests/routes/new-platform-flexberry-g-i-s-map-object-setting-e/new.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - routes/new-platform-flexberry-g-i-s-map-object-setting-e');\n  test('routes/new-platform-flexberry-g-i-s-map-object-setting-e/new.js should pass jscs', function () {\n    ok(true, 'routes/new-platform-flexberry-g-i-s-map-object-setting-e/new.js should pass jscs.');\n  });\n});","define('dummy/tests/routes/new-platform-flexberry-g-i-s-map-object-setting-e/new.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/new-platform-flexberry-g-i-s-map-object-setting-e/new.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/new-platform-flexberry-g-i-s-map-object-setting-e/new.js should pass jshint.');\n  });\n});","define('dummy/tests/routes/new-platform-flexberry-g-i-s-map-object-setting-l.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - routes');\n  test('routes/new-platform-flexberry-g-i-s-map-object-setting-l.js should pass jscs', function () {\n    ok(true, 'routes/new-platform-flexberry-g-i-s-map-object-setting-l.js should pass jscs.');\n  });\n});","define('dummy/tests/routes/new-platform-flexberry-g-i-s-map-object-setting-l.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/new-platform-flexberry-g-i-s-map-object-setting-l.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/new-platform-flexberry-g-i-s-map-object-setting-l.js should pass jshint.');\n  });\n});","define('dummy/tests/serializers/application-offline.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - serializers');\n  test('serializers/application-offline.js should pass jscs', function () {\n    ok(true, 'serializers/application-offline.js should pass jscs.');\n  });\n});","define('dummy/tests/serializers/application-offline.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - serializers/application-offline.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'serializers/application-offline.js should pass jshint.');\n  });\n});","define('dummy/tests/serializers/application.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - serializers');\n  test('serializers/application.js should pass jscs', function () {\n    ok(true, 'serializers/application.js should pass jscs.');\n  });\n});","define('dummy/tests/serializers/application.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - serializers/application.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'serializers/application.js should pass jshint.');\n  });\n});","define('dummy/tests/services/store.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - services');\n  test('services/store.js should pass jscs', function () {\n    ok(true, 'services/store.js should pass jscs.');\n  });\n});","define('dummy/tests/services/store.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - services/store.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'services/store.js should pass jshint.');\n  });\n});","define('dummy/tests/services/user-settings.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - services');\n  test('services/user-settings.js should pass jscs', function () {\n    ok(true, 'services/user-settings.js should pass jscs.');\n  });\n});","define('dummy/tests/services/user-settings.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - services/user-settings.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'services/user-settings.js should pass jshint.');\n  });\n});","define('dummy/tests/test-helper', ['exports', 'dummy/tests/helpers/resolver', 'ember-qunit'], function (exports, _dummyTestsHelpersResolver, _emberQunit) {\n\n  (0, _emberQunit.setResolver)(_dummyTestsHelpersResolver['default']);\n});","define('dummy/tests/test-helper.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - .');\n  test('test-helper.js should pass jscs', function () {\n    ok(true, 'test-helper.js should pass jscs.');\n  });\n});","define('dummy/tests/test-helper.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - test-helper.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/components/base-control-test', ['exports', 'ember-qunit', 'sinon'], function (exports, _emberQunit, _sinon) {\n\n  (0, _emberQunit.moduleForComponent)('base-control', 'Unit | Component | base control', {\n    unit: true\n  });\n\n  (0, _emberQunit.test)('it should call leafletMap.addControl method on initControl', function (assert) {\n    var addControl = _sinon['default'].spy();\n    var component = this.subject({ leafletMap: { addControl: addControl } });\n\n    component.initControl();\n\n    assert.ok(addControl.calledOnce);\n  });\n});","define('dummy/tests/unit/components/base-control-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/components');\n  test('unit/components/base-control-test.js should pass jscs', function () {\n    ok(true, 'unit/components/base-control-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/components/base-control-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/components/base-control-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/components/base-control-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/components/base-layer-test', ['exports', 'ember-qunit', 'sinon'], function (exports, _emberQunit, _sinon) {\n\n  (0, _emberQunit.moduleForComponent)('base-layer', 'Unit | Component | base layer', {\n    unit: true,\n    needs: ['service:map-api', 'config:environment']\n  });\n\n  // stubs for createLayer method\n  var layer = {};\n  var createLayer = function createLayer() {\n    return layer;\n  };\n\n  (0, _emberQunit.test)('it should throw at init', function (assert) {\n    var _this = this;\n\n    assert.throws(function () {\n      _this.subject();\n    });\n  });\n\n  (0, _emberQunit.test)('it should call layer.setZIndex on _setLayerZIndex', function (assert) {\n    assert.expect(1);\n\n    var setZIndex = _sinon['default'].spy();\n    var component = this.subject({\n      createLayer: function createLayer() {\n        return {\n          setZIndex: setZIndex\n        };\n      }\n    });\n\n    var leafletLayerPromiseResolved = assert.async();\n    component.get('_leafletLayerPromise').then(function (leafletLayer) {\n      component._setLayerZIndex();\n      assert.ok(setZIndex.called);\n    })['finally'](function () {\n      leafletLayerPromiseResolved();\n    });\n  });\n\n  (0, _emberQunit.test)('should call _setLayerVisibility and _setLayerZIndex on render', function (assert) {\n    assert.expect(1);\n\n    var setLayerVisibility = _sinon['default'].spy();\n\n    var component = this.subject({\n      createLayer: createLayer,\n      _setLayerVisibility: setLayerVisibility\n    });\n\n    this.render();\n\n    var leafletLayerPromiseResolved = assert.async();\n    component.get('_leafletLayerPromise').then(function (leafletLayer) {\n      assert.ok(setLayerVisibility.called, 'should call visibilityDidChange');\n    })['finally'](function () {\n      leafletLayerPromiseResolved();\n    });\n  });\n\n  (0, _emberQunit.test)('should call container addLayer/removeLayer based on visibility property', function (assert) {\n    assert.expect(4);\n\n    var addLayer = _sinon['default'].spy();\n    var removeLayer = _sinon['default'].spy();\n\n    var leafletContainerHasLayer = false;\n    var hasLayer = function hasLayer() {\n      return leafletContainerHasLayer;\n    };\n\n    var component = this.subject({\n      createLayer: createLayer,\n\n      leafletContainer: {\n        addLayer: addLayer,\n        removeLayer: removeLayer,\n        hasLayer: hasLayer\n      }\n    });\n\n    var leafletLayerPromiseResolved = assert.async();\n    component.get('_leafletLayerPromise').then(function (leafletLayer) {\n      component.set('visibility', true);\n\n      assert.ok(addLayer.calledOnce, 'addLayer should be called once');\n      assert.ok(addLayer.calledWith(layer), 'addLayer should be called with layer instance');\n\n      leafletContainerHasLayer = true;\n      component.set('visibility', false);\n\n      assert.ok(removeLayer.calledOnce, 'removeLayer should be called once');\n      assert.ok(removeLayer.calledWith(layer), 'removeLayer should be called with layer instance');\n    })['finally'](function () {\n      leafletLayerPromiseResolved();\n    });\n  });\n});","define('dummy/tests/unit/components/base-layer-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/components');\n  test('unit/components/base-layer-test.js should pass jscs', function () {\n    ok(true, 'unit/components/base-layer-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/components/base-layer-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/components/base-layer-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/components/base-layer-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/components/base-vector-layer-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('base-vector-layer', 'Unit | Component | base-vector-layer', {\n    unit: true\n  });\n\n  (0, _emberQunit.test)('it identify on \\'geojson\\' layer', function (assert) {\n    /*\n      9  . . . . . . . . .\n      8 MPMP . .CpCp .MLML\n      7 MP .MP . . . . . .\n      6  .MPMP . P P .MLML\n      5  . . . . P P . . .\n      4  .CPCP . . . . L .\n      3  . .CP . . . p . L\n      2 CLCL . . . . . L .\n      1 CL . .MpMp . . . .\n      0  1 2 3 4 5 6 7 8 9\n    */\n    var component = this.subject({\n      _createLayer: function _createLayer() {\n        this.set('_leafletObject', L.geoJson([{\n          type: 'Feature',\n          geometry: { type: 'Point', coordinates: [3, 7] }\n        }, {\n          type: 'Feature',\n          geometry: { type: 'MultiPoint', coordinates: [[1, 4], [1, 5]] }\n        }, {\n          type: 'Feature',\n          geometry: { type: 'LineString', coordinates: [[2, 8], [3, 9], [4, 8]] }\n        }, {\n          type: 'Feature',\n          geometry: { type: 'MultiLineString', coordinates: [[[6, 8], [6, 9]], [[8, 8], [8, 9]]] }\n        }, {\n          type: 'Feature',\n          geometry: { type: 'Polygon', coordinates: [[[5, 5], [5, 6], [6, 6], [6, 5]]] }\n        }, {\n          type: 'Feature',\n          geometry: { type: 'MultiPolygon', coordinates: [[[[7, 1], [8, 1], [8, 2]]], [[[6, 2], [6, 3], [7, 3]]]] }\n        }, {\n          type: 'GeometryCollection',\n          geometries: [{ type: 'Polygon', coordinates: [[[3, 3], [4, 3], [4, 2]]] }, { type: 'LineString', coordinates: [[1, 1], [2, 1], [2, 2]] }]\n        }, {\n          type: 'FeatureCollection',\n          features: [{ type: 'Feature', geometry: { type: 'Point', coordinates: [8, 5] } }, { type: 'Feature', geometry: { type: 'Point', coordinates: [8, 6] } }]\n        }]));\n      }\n    });\n\n    var select = function select() {\n      var _arguments = arguments;\n\n      return {\n        polygonLayer: {\n          toGeoJSON: function toGeoJSON() {\n            return {\n              type: 'Feature',\n              geometry: { type: 'Polygon', coordinates: _arguments }\n            };\n          }\n        }\n      };\n    };\n\n    assert.expect(3);\n    var done = assert.async(3);\n    component.identify(select([[4, 4], [2, 4], [2, 6], [4, 6]])).then(function (results) {\n      assert.equal(results.length, 0, 'Empty area is selected.');\n    })['finally'](done);\n\n    component.identify(select([[9, 5], [8, 8], [6, 6]])).then(function (results) {\n      assert.equal(results.length, 3, 'Point (from FeatureCollection), MultiLineString and Polygon.');\n    })['finally'](done);\n\n    component.identify(select([[9, 1], [1, 1], [1, 9], [9, 9]])).then(function (results) {\n      assert.equal(results.length, 9, 'All geometries is selected.');\n    })['finally'](done);\n  });\n});","define('dummy/tests/unit/components/base-vector-layer-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/components');\n  test('unit/components/base-vector-layer-test.js should pass jscs', function () {\n    ok(true, 'unit/components/base-vector-layer-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/components/base-vector-layer-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/components/base-vector-layer-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/components/base-vector-layer-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/components/flexberry-map-test', ['exports', 'ember', 'ember-qunit'], function (exports, _ember, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('flexberry-map', 'Unit | Component | flexberry map', {\n    unit: true,\n    needs: ['component:flexberry-layers', 'service:map-api', 'service:i18n', 'map-tool:drag', 'config:environment']\n  });\n\n  (0, _emberQunit.test)('it should create leaflet map on didInsertElement', function (assert) {\n    var component = this.subject();\n    this.render();\n    assert.ok(component.get('_leafletObject') instanceof L.Map);\n  });\n\n  (0, _emberQunit.test)('should compute center from lat/lng', function (assert) {\n    var lat = 10;\n    var lng = 10;\n\n    var component = this.subject({ lat: lat, lng: lng });\n\n    var center = component.get('center');\n    assert.ok(center instanceof L.LatLng);\n    assert.ok(center.equals([10, 10]));\n  });\n\n  (0, _emberQunit.test)('should pass center/zoom from properties to leaflet map', function (assert) {\n    assert.expect(4);\n\n    var component = this.subject({\n      lat: 10,\n      lng: 10,\n      zoom: 10\n    });\n\n    this.render();\n\n    var leafletMap = component.get('_leafletObject');\n\n    assert.equal(leafletMap.getZoom(), 10);\n    assert.ok(leafletMap.getCenter().equals([10, 10]));\n\n    _ember['default'].run(function () {\n      component.set('zoom', 0);\n    });\n\n    assert.equal(leafletMap.getZoom(), 0);\n\n    // After update to leaflet-1.0.0 panTo not directly change center,\n    // it will changed after animation will trigger 'moveend' event.\n    var promise = new _ember['default'].Test.promise(function (resolve) {\n      leafletMap.on('moveend', function () {\n        setTimeout(resolve, 500);\n      });\n    });\n\n    _ember['default'].run(function () {\n      component.setProperties({\n        'lat': 0,\n        'lng': 0\n      });\n    });\n\n    return promise.then(function () {\n      assert.ok(leafletMap.getCenter().equals([0, 0]));\n    });\n  });\n\n  (0, _emberQunit.test)('should pass zoomSnap/zoomDelta options to leaflet map', function (assert) {\n    var component = this.subject({\n      zoomSnap: 0.5,\n      zoomDelta: 0.1\n    });\n\n    this.render();\n\n    var leafletMap = component.get('_leafletObject');\n\n    assert.equal(leafletMap.options.zoomSnap, 0.5);\n    assert.equal(leafletMap.options.zoomDelta, 0.1);\n  });\n});","define('dummy/tests/unit/components/flexberry-map-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/components');\n  test('unit/components/flexberry-map-test.js should pass jscs', function () {\n    ok(true, 'unit/components/flexberry-map-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/components/flexberry-map-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/components/flexberry-map-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/components/flexberry-map-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/components/layers/group-layer-test', ['exports', 'ember-qunit', 'sinon'], function (exports, _emberQunit, _sinon) {\n\n  (0, _emberQunit.moduleForComponent)('layers/group-layer', 'Unit | Component | layers/group layer', {\n    unit: true\n  });\n\n  (0, _emberQunit.test)('it return L.LayerGroup on createLayer', function (assert) {\n    assert.expect(1);\n\n    var component = this.subject();\n    var layer = component.createLayer();\n    assert.ok(layer instanceof L.LayerGroup, 'Expected L.LayerGroup instance');\n  });\n\n  (0, _emberQunit.test)('it not call _leafletObject.setZIndex on setZIndex', function (assert) {\n    assert.expect(1);\n\n    var component = this.subject();\n    var leafletLayerPromiseResolved = assert.async();\n    component.get('_leafletLayerPromise').then(function (leafletLayer) {\n      var layer = component.get('_leafletObject');\n      var spy = _sinon['default'].spy(layer, 'setZIndex');\n\n      component.setZIndex(0);\n\n      assert.equal(spy.callCount, 0);\n    })['finally'](function () {\n      leafletLayerPromiseResolved();\n    });\n  });\n});","define('dummy/tests/unit/components/layers/group-layer-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/components/layers');\n  test('unit/components/layers/group-layer-test.js should pass jscs', function () {\n    ok(true, 'unit/components/layers/group-layer-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/components/layers/group-layer-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/components/layers/group-layer-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/components/layers/group-layer-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/components/layers/tile-layer-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('layers/tile-layer', 'Unit | Component | layers/tile layer', {\n    unit: true\n  });\n\n  (0, _emberQunit.test)('it return L.TileLayer on createLayer', function (assert) {\n    var component = this.subject({\n      requiredOptions: ['']\n    });\n    var layer = component.createLayer();\n    assert.ok(layer instanceof L.TileLayer, 'Expected L.TileLayer instance');\n  });\n});","define('dummy/tests/unit/components/layers/tile-layer-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/components/layers');\n  test('unit/components/layers/tile-layer-test.js should pass jscs', function () {\n    ok(true, 'unit/components/layers/tile-layer-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/components/layers/tile-layer-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/components/layers/tile-layer-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/components/layers/tile-layer-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/components/layers/wfs-layer-test', ['exports', 'ember', 'ember-qunit', 'sinon', 'dummy/tests/helpers/start-app'], function (exports, _ember, _emberQunit, _sinon, _dummyTestsHelpersStartApp) {\n\n  var app = undefined;\n  var geoserverFake = undefined;\n  var options = undefined;\n  var param = undefined;\n\n  (0, _emberQunit.moduleForComponent)('layers/wfs-layer', 'Unit | Component | layers/wfs layer', {\n    unit: true,\n    needs: ['service:map-api', 'config:environment', 'component:base-vector-layer', 'model:new-platform-flexberry-g-i-s-map'],\n    beforeEach: function beforeEach() {\n      app = (0, _dummyTestsHelpersStartApp['default'])();\n\n      options = {\n        url: 'http://geoserverFake/geoserver/ows',\n        geometryField: 'shape',\n        showExisting: false,\n        withCredentials: false,\n        crs: L.CRS.EPSG3857,\n        typeNSName: 'rgisperm',\n        filter: null,\n        version: '1.1.0',\n        continueLoading: true\n      };\n\n      var leafletOptions = ['url', 'version', 'namespaceUri', 'typeNS', 'typeName', 'typeNSName', 'geometryField', 'crs', 'maxFeatures', 'showExisting', 'style', 'filter', 'forceMulti', 'withCredentials', 'continueLoading'];\n\n      param = {\n        format: 'GeoJSON',\n        leafletOptions: leafletOptions\n      };\n      param = _ember['default'].$.extend(param, options);\n\n      geoserverFake = _sinon['default'].fakeServer.create();\n      geoserverFake.autoRespond = true;\n\n      geoserverFake.respondWith('POST', 'http://geoserverFake/geoserver/ows?', function (request) {\n        if (request.requestBody.indexOf('<wfs:GetFeature') !== -1) {\n          request.respond(200, { 'Content-Type': 'application/json' }, '{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"id\":\"vydel_utverzhdeno_polygon.06350c71-ec5c-431e-a5ab-e423cf662128\",' + '\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[6215353.89391635,8117916.10977998],[6215317.82640125,8117408.36954415],' + '[6215322.83577823,8116959.81224657],[6213934.34777038,8117228.98625252],[6213930.67422719,8117229.84351009],' + '[6214007.26203691,8117650.34021493],[6214045.44462228,8117860.38311881],[6214113.79478966,8118235.47443556],' + '[6214237.35942438,8118229.9015124],[6214247.82345653,8118288.63175866],[6215053.10865244,8118087.57903733],' + '[6215031.95794919,8118033.35145873],[6215042.3106618,8117957.47637766],[6215353.89391635,8117916.10977998]]]]},' + '\"geometry_name\":\"shape\",\"properties\":' + '{\"id\":\"000\",\"lesnichestvo\":\"-\",\"uchastkovoelesnichestvo\":\"-\",\"nomerkvartala\":\"141\",\"urochishe\":null,\"nomer\":10,\"ploshad\":200,\"kategoriyazemel\":' + '\"Эксплуатационные леса\",\"preobladayushayaporoda\":\"Сосна\",\"bonitet\":\"2\",\"gruppavozrasta\":\"Молодняки I гр.\",\"klassvozrasta\":\"1\",\"klasstovarnosti\":' + 'null,\"area\":373798.7024302,\"length\":null,\"primarykey\":\"06350c71-ec5c-431e-a5ab-e423cf662128\",\"createtime\":null,\"creator\":null,' + '\"edittime\":null,\"editor\":null}}],\"totalFeatures\":1,\"numberMatched\":1,\"numberReturned\":1,\"timeStamp\":\"2020-02-27T04:44:49.909Z\",' + '\"crs\":{\"type\":\"name\",\"properties\":{\"name\":\"urn:ogc:def:crs:EPSG::3857\"}}}');\n        }\n\n        if (request.requestBody.indexOf('<wfs:DescribeFeatureType') !== -1) {\n          request.respond(200, { 'Content-Type': 'text/plain;charset=utf-8' }, '<?xml version=\"1.0\" encoding=\"UTF-8\"?><xsd:schema xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:gml=\"http://www.opengis.net/gml\" ' + 'xmlns:rgisperm=\"http://rgis.permkrai.ru\" elementFormDefault=\"qualified\" targetNamespace=\"http://rgis.permkrai.ru\">' + '<xsd:import namespace=\"http://www.opengis.net/gml\" schemaLocation=\"http://rgispk.wdepo.ru:80/geoserver/schemas/gml/3.1.1/base/gml.xsd\"/>' + '<xsd:complexType name=\"vydel_utverzhdeno_polygonType\">' + '<xsd:complexContent>' + '<xsd:extension base=\"gml:AbstractFeatureType\">' + '<xsd:sequence>' + '<xsd:element maxOccurs=\"1\" minOccurs=\"1\" name=\"primarykey\" nillable=\"false\" type=\"xsd:string\"/>' + '<xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"shape\" nillable=\"true\" type=\"gml:MultiSurfacePropertyType\"/>' + '<xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"id\" nillable=\"true\" type=\"xsd:string\"/>' + '<xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"lesnichestvo\" nillable=\"true\" type=\"xsd:string\"/>' + '<xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"uchastkovoelesnichestvo\" nillable=\"true\" type=\"xsd:string\"/>' + '<xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"nomerkvartala\" nillable=\"true\" type=\"xsd:string\"/>' + '<xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"urochishe\" nillable=\"true\" type=\"xsd:string\"/>' + '<xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"nomer\" nillable=\"true\" type=\"xsd:int\"/>' + '<xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"ploshad\" nillable=\"true\" type=\"xsd:decimal\"/>' + '<xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"kategoriyazemel\" nillable=\"true\" type=\"xsd:string\"/>' + '<xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"preobladayushayaporoda\" nillable=\"true\" type=\"xsd:string\"/>' + '<xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"bonitet\" nillable=\"true\" type=\"xsd:string\"/>' + '<xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"gruppavozrasta\" nillable=\"true\" type=\"xsd:string\"/>' + '<xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"klassvozrasta\" nillable=\"true\" type=\"xsd:int\"/>' + '<xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"klasstovarnosti\" nillable=\"true\" type=\"xsd:int\"/>' + '<xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"area\" nillable=\"true\" type=\"xsd:decimal\"/>' + '<xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"length\" nillable=\"true\" type=\"xsd:decimal\"/>' + '<xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"createtime\" nillable=\"true\" type=\"xsd:dateTime\"/>' + '<xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"creator\" nillable=\"true\" type=\"xsd:string\"/>' + '<xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"edittime\" nillable=\"true\" type=\"xsd:dateTime\"/>' + '<xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"editor\" nillable=\"true\" type=\"xsd:string\"/>' + '<xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"kl\" nillable=\"true\" type=\"xsd:string\"/>' + '</xsd:sequence>' + '</xsd:extension>' + '</xsd:complexContent>' + '</xsd:complexType>' + '<xsd:element name=\"vydel_utverzhdeno_polygon\" substitutionGroup=\"gml:_Feature\" type=\"rgisperm:vydel_utverzhdeno_polygonType\"/>' + '</xsd:schema>');\n        }\n      });\n    },\n    afterEach: function afterEach() {\n      _ember['default'].run(app, 'destroy');\n      geoserverFake.restore();\n    }\n  });\n\n  (0, _emberQunit.test)('getLayerFeatures() with options showExisting = false and continueLoading = true', function (assert) {\n    var _this = this;\n\n    assert.expect(2);\n    var done = assert.async(2);\n    _ember['default'].run(function () {\n      var component = _this.subject(param);\n\n      var store = app.__container__.lookup('service:store');\n      var mapModel = store.createRecord('new-platform-flexberry-g-i-s-map');\n      var getmapApiStub = _sinon['default'].stub(component.get('mapApi'), 'getFromApi');\n      getmapApiStub.returns(mapModel);\n\n      var getPkFieldStub = _sinon['default'].stub(mapModel, '_getPkField');\n      getPkFieldStub.returns('primarykey');\n\n      L.wfst(options, component.getFeaturesReadFormat()).once('load', function (res) {\n        var e = {\n          featureIds: ['06350c71-ec5c-431e-a5ab-e423cf662128'],\n          layer: 'f34ea73d-9f00-4f02-b02d-675d459c972b',\n          results: _ember['default'].A()\n        };\n        component._leafletObject = res.target;\n\n        component.getLayerFeatures(e).then(function (layers) {\n          assert.ok(layers, 'Get feature of layers with showExisting = false and continueLoading = true');\n          done();\n        });\n      });\n\n      assert.ok(component, 'Create wfs-layer with showExisting = false');\n      done();\n    });\n  });\n\n  (0, _emberQunit.test)('getLayerFeatures() with options showExisting = true', function (assert) {\n    var _this2 = this;\n\n    assert.expect(2);\n    var done = assert.async(2);\n    _ember['default'].run(function () {\n      param.showExisting = true;\n\n      var component = _this2.subject(param);\n\n      var store = app.__container__.lookup('service:store');\n      var mapModel = store.createRecord('new-platform-flexberry-g-i-s-map');\n      var getmapApiStub = _sinon['default'].stub(component.get('mapApi'), 'getFromApi');\n      getmapApiStub.returns(mapModel);\n\n      var getPkFieldStub = _sinon['default'].stub(mapModel, '_getPkField');\n      getPkFieldStub.returns('primarykey');\n\n      options.showExisting = true;\n      L.wfst(options, component.getFeaturesReadFormat()).once('load', function (res) {\n        var e = {\n          featureIds: ['06350c71-ec5c-431e-a5ab-e423cf662128'],\n          layer: 'f34ea73d-9f00-4f02-b02d-675d459c972b',\n          results: _ember['default'].A()\n        };\n\n        component._leafletObject = res.target;\n\n        component.getLayerFeatures(e).then(function (layers) {\n          assert.ok(layers, 'Get feature of layers with showExisting = true');\n          done();\n        });\n      });\n\n      assert.ok(component, 'Create wfs-layer with showExisting = true');\n      done();\n    });\n  });\n\n  (0, _emberQunit.test)('loadLayerFeatures() with options showExisting = false', function (assert) {\n    var _this3 = this;\n\n    assert.expect(2);\n    var done = assert.async(2);\n    _ember['default'].run(function () {\n      var component = _this3.subject(param);\n\n      var store = app.__container__.lookup('service:store');\n      var mapModel = store.createRecord('new-platform-flexberry-g-i-s-map');\n      var getmapApiStub = _sinon['default'].stub(component.get('mapApi'), 'getFromApi');\n      getmapApiStub.returns(mapModel);\n\n      var getPkFieldStub = _sinon['default'].stub(mapModel, '_getPkField');\n      getPkFieldStub.returns('primarykey');\n\n      L.wfst(options, component.getFeaturesReadFormat()).once('load', function (res) {\n        var e = {\n          featureIds: ['06350c71-ec5c-431e-a5ab-e423cf662128'],\n          layer: 'f34ea73d-9f00-4f02-b02d-675d459c972b',\n          results: _ember['default'].A()\n        };\n        component._leafletObject = res.target;\n\n        component.loadLayerFeatures(e).then(function (layers) {\n          assert.ok(layers, 'Load feature of layers with showExisting = false');\n          done();\n        });\n      });\n\n      assert.ok(component, 'Create wfs-layer with showExisting = false');\n      done();\n    });\n  });\n\n  (0, _emberQunit.test)('loadLayerFeatures() with options showExisting = true', function (assert) {\n    var _this4 = this;\n\n    assert.expect(2);\n    var done = assert.async(2);\n    _ember['default'].run(function () {\n      param.showExisting = true;\n\n      var component = _this4.subject(param);\n\n      var store = app.__container__.lookup('service:store');\n      var mapModel = store.createRecord('new-platform-flexberry-g-i-s-map');\n      var getmapApiStub = _sinon['default'].stub(component.get('mapApi'), 'getFromApi');\n      getmapApiStub.returns(mapModel);\n\n      var getPkFieldStub = _sinon['default'].stub(mapModel, '_getPkField');\n      getPkFieldStub.returns('primarykey');\n\n      options.showExisting = true;\n      L.wfst(options, component.getFeaturesReadFormat()).once('load', function (res) {\n        var e = {\n          featureIds: ['06350c71-ec5c-431e-a5ab-e423cf662128'],\n          layer: 'f34ea73d-9f00-4f02-b02d-675d459c972b',\n          results: _ember['default'].A()\n        };\n\n        component._leafletObject = res.target;\n\n        component.loadLayerFeatures(e).then(function (layers) {\n          assert.ok(layers, 'Load feature of layers with showExisting = true');\n          done();\n        });\n      });\n\n      assert.ok(component, 'Create wfs-layer with showExisting = true');\n      done();\n    });\n  });\n});","define('dummy/tests/unit/components/layers/wfs-layer-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/components/layers');\n  test('unit/components/layers/wfs-layer-test.js should pass jscs', function () {\n    ok(true, 'unit/components/layers/wfs-layer-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/components/layers/wfs-layer-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/components/layers/wfs-layer-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/components/layers/wfs-layer-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/components/layers/wms-layer-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('layers/wms-layer', 'Unit | Component | layers/wms layer', {\n    unit: true\n  });\n\n  (0, _emberQunit.test)('it return L.TileLayer.wms on createLayer', function (assert) {\n    var component = this.subject({\n      requiredOptions: ['']\n    });\n    var layer = component.createLayer();\n    assert.ok(layer instanceof L.TileLayer.WMS, 'Expected L.TileLayer.wms instance');\n  });\n});","define('dummy/tests/unit/components/layers/wms-layer-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/components/layers');\n  test('unit/components/layers/wms-layer-test.js should pass jscs', function () {\n    ok(true, 'unit/components/layers/wms-layer-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/components/layers/wms-layer-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/components/layers/wms-layer-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/components/layers/wms-layer-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/components/minimap-control-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('minimap-control', 'Unit | Component | minimap control', {\n    unit: true\n  });\n\n  (0, _emberQunit.test)('it should return L.Control.MiniMap from createControl', function (assert) {\n    var component = this.subject();\n\n    // Renders the component to the page.\n    var control = component.createControl();\n\n    assert.ok(control instanceof L.Control.MiniMap);\n  });\n\n  (0, _emberQunit.test)('it should return L.LayerGroup from layerGroup', function (assert) {\n    var component = this.subject();\n\n    var lGroup = component.get('layerGroup');\n\n    assert.ok(lGroup instanceof L.LayerGroup);\n  });\n});","define('dummy/tests/unit/components/minimap-control-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/components');\n  test('unit/components/minimap-control-test.js should pass jscs', function () {\n    ok(true, 'unit/components/minimap-control-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/components/minimap-control-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/components/minimap-control-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/components/minimap-control-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/components/scale-control-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('scale-control', 'Unit | Component | scale control', {\n    // Specify the other units that are required for this test\n    // needs: ['component:foo', 'helper:bar'],\n    unit: true\n  });\n\n  (0, _emberQunit.test)('it should return L.Control.Scale from createControl', function (assert) {\n    var component = this.subject();\n\n    // Renders the component to the page.\n    var control = component.createControl();\n\n    assert.ok(control instanceof L.Control.Scale);\n  });\n});","define('dummy/tests/unit/components/scale-control-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/components');\n  test('unit/components/scale-control-test.js should pass jscs', function () {\n    ok(true, 'unit/components/scale-control-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/components/scale-control-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/components/scale-control-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/components/scale-control-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/components/switch-scale-control-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('switch-scale-control', 'Unit | Component | switch scale control', {\n    unit: true\n  });\n\n  (0, _emberQunit.test)('it should return L.Control.SwitchScaleControl from createControl', function (assert) {\n    var component = this.subject();\n\n    // Renders the component to the page.\n    var control = component.createControl();\n\n    assert.ok(control instanceof L.Control.SwitchScaleControl);\n  });\n});","define('dummy/tests/unit/components/switch-scale-control-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/components');\n  test('unit/components/switch-scale-control-test.js should pass jscs', function () {\n    ok(true, 'unit/components/switch-scale-control-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/components/switch-scale-control-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/components/switch-scale-control-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/components/switch-scale-control-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/components/zoomslider-control-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('zoomslider-control', 'Unit | Component | zoomslider control', {\n    unit: true\n  });\n\n  (0, _emberQunit.test)('it should return L.Control.Zoomslider from createControl', function (assert) {\n    var component = this.subject();\n\n    // Renders the component to the page.\n    var control = component.createControl();\n\n    assert.ok(control instanceof L.Control.Zoomslider);\n  });\n});","define('dummy/tests/unit/components/zoomslider-control-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/components');\n  test('unit/components/zoomslider-control-test.js should pass jscs', function () {\n    ok(true, 'unit/components/zoomslider-control-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/components/zoomslider-control-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/components/zoomslider-control-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/components/zoomslider-control-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/controllers/edit-map-test', ['exports', 'ember-flexberry-gis/controllers/edit-map', 'qunit'], function (exports, _emberFlexberryGisControllersEditMap, _qunit) {\n\n  (0, _qunit.module)('Unit | Controller | edit-map');\n\n  (0, _qunit.test)('it exists', function (assert) {\n    var route = _emberFlexberryGisControllersEditMap['default'].create({});\n    assert.ok(route);\n  });\n});","define('dummy/tests/unit/controllers/edit-map-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/controllers');\n  test('unit/controllers/edit-map-test.js should pass jscs', function () {\n    ok(true, 'unit/controllers/edit-map-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/controllers/edit-map-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/controllers/edit-map-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/edit-map-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/controllers/gis-search-form-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:gis-search-form', 'Unit | Controller | gis search form', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('dummy/tests/unit/controllers/gis-search-form-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/controllers');\n  test('unit/controllers/gis-search-form-test.js should pass jscs', function () {\n    ok(true, 'unit/controllers/gis-search-form-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/controllers/gis-search-form-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/controllers/gis-search-form-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/gis-search-form-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/controllers/list-map-test', ['exports', 'ember-flexberry-gis/controllers/list-map', 'qunit'], function (exports, _emberFlexberryGisControllersListMap, _qunit) {\n\n  (0, _qunit.module)('Unit | Controller | list-map');\n\n  (0, _qunit.test)('it exists', function (assert) {\n    var route = _emberFlexberryGisControllersListMap['default'].create({});\n    assert.ok(route);\n  });\n});","define('dummy/tests/unit/controllers/list-map-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/controllers');\n  test('unit/controllers/list-map-test.js should pass jscs', function () {\n    ok(true, 'unit/controllers/list-map-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/controllers/list-map-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/controllers/list-map-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/list-map-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/helpers/flexberry-search-properties-osm-ru-test', ['exports', 'dummy/helpers/flexberry-search-properties-osm-ru', 'qunit'], function (exports, _dummyHelpersFlexberrySearchPropertiesOsmRu, _qunit) {\n\n  (0, _qunit.module)('Unit | Helper | flexberry search properties osm ru');\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('it works', function (assert) {\n    var result = (0, _dummyHelpersFlexberrySearchPropertiesOsmRu.flexberrySearchPropertiesOsmRu)([42]);\n    assert.ok(result);\n  });\n});","define('dummy/tests/unit/helpers/flexberry-search-properties-osm-ru-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/helpers');\n  test('unit/helpers/flexberry-search-properties-osm-ru-test.js should pass jscs', function () {\n    ok(true, 'unit/helpers/flexberry-search-properties-osm-ru-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/helpers/flexberry-search-properties-osm-ru-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/helpers/flexberry-search-properties-osm-ru-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/helpers/flexberry-search-properties-osm-ru-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/helpers/instance-of-test', ['exports', 'dummy/helpers/instance-of', 'qunit'], function (exports, _dummyHelpersInstanceOf, _qunit) {\n\n  (0, _qunit.module)('Unit | Helper | instance of');\n\n  (0, _qunit.test)('it works', function (assert) {\n    assert.expect(2);\n    var obj = L.layerGroup();\n    var constructor = L.LayerGroup;\n    var result = (0, _dummyHelpersInstanceOf.instanceOf)([obj, constructor]);\n    assert.ok(result);\n\n    constructor = L.Control.MiniMap;\n    result = (0, _dummyHelpersInstanceOf.instanceOf)([obj, constructor]);\n    assert.notOk(result);\n  });\n});","define('dummy/tests/unit/helpers/instance-of-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/helpers');\n  test('unit/helpers/instance-of-test.js should pass jscs', function () {\n    ok(true, 'unit/helpers/instance-of-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/helpers/instance-of-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/helpers/instance-of-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/helpers/instance-of-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/initializers/flexberry-map-commands-test', ['exports', 'ember', 'dummy/initializers/map-commands', 'qunit'], function (exports, _ember, _dummyInitializersMapCommands, _qunit) {\n\n  var application = undefined;\n\n  (0, _qunit.module)('Unit | Initializer | map-commands', {\n    beforeEach: function beforeEach() {\n      _ember['default'].run(function () {\n        application = _ember['default'].Application.create();\n        application.deferReadiness();\n      });\n    }\n  });\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('it works', function (assert) {\n    _dummyInitializersMapCommands['default'].initialize(application);\n\n    // you would normally confirm the results of the initializer here\n    assert.ok(true);\n  });\n});","define('dummy/tests/unit/initializers/flexberry-map-commands-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/initializers');\n  test('unit/initializers/flexberry-map-commands-test.js should pass jscs', function () {\n    ok(true, 'unit/initializers/flexberry-map-commands-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/initializers/flexberry-map-commands-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/initializers/flexberry-map-commands-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/initializers/flexberry-map-commands-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/initializers/flexberry-map-tools-test', ['exports', 'ember', 'dummy/initializers/map-tools', 'qunit'], function (exports, _ember, _dummyInitializersMapTools, _qunit) {\n\n  var application = undefined;\n\n  (0, _qunit.module)('Unit | Initializer | map-tools', {\n    beforeEach: function beforeEach() {\n      _ember['default'].run(function () {\n        application = _ember['default'].Application.create();\n        application.deferReadiness();\n      });\n    }\n  });\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('it works', function (assert) {\n    _dummyInitializersMapTools['default'].initialize(application);\n\n    // you would normally confirm the results of the initializer here\n    assert.ok(true);\n  });\n});","define('dummy/tests/unit/initializers/flexberry-map-tools-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/initializers');\n  test('unit/initializers/flexberry-map-tools-test.js should pass jscs', function () {\n    ok(true, 'unit/initializers/flexberry-map-tools-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/initializers/flexberry-map-tools-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/initializers/flexberry-map-tools-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/initializers/flexberry-map-tools-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/initializers/local-storage-test', ['exports', 'ember', 'ember-flexberry-gis/initializers/local-storage', 'qunit'], function (exports, _ember, _emberFlexberryGisInitializersLocalStorage, _qunit) {\n\n  var application = undefined;\n\n  (0, _qunit.module)('Unit | Initializer | local storage', {\n    beforeEach: function beforeEach() {\n      _ember['default'].run(function () {\n        application = _ember['default'].Application.create();\n        application.deferReadiness();\n      });\n    }\n  });\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('it works', function (assert) {\n    _emberFlexberryGisInitializersLocalStorage['default'].initialize(application);\n\n    // you would normally confirm the results of the initializer here\n    assert.ok(true);\n  });\n});","define('dummy/tests/unit/initializers/local-storage-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/initializers');\n  test('unit/initializers/local-storage-test.js should pass jscs', function () {\n    ok(true, 'unit/initializers/local-storage-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/initializers/local-storage-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/initializers/local-storage-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/initializers/local-storage-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/mixins/dynamic-properties-test', ['exports', 'ember', 'ember-flexberry-gis/mixins/dynamic-properties', 'qunit'], function (exports, _ember, _emberFlexberryGisMixinsDynamicProperties, _qunit) {\n\n  var ClassWithDynamicPropertiesMixin = _ember['default'].Object.extend(_emberFlexberryGisMixinsDynamicProperties['default'], {});\n\n  (0, _qunit.module)('Unit | Mixin | dynamic-properties mixin');\n\n  (0, _qunit.test)('Mixin throws assertion failed exception if specified \\'dynamicProperties\\' property is not an \\'object\\' or an \\'instance\\'', function (assert) {\n    var wrongDynamicPropertiesArray = _ember['default'].A([1, true, false, 'some string', [], function () {}, new Date(), new RegExp()]);\n\n    assert.expect(wrongDynamicPropertiesArray.length);\n\n    wrongDynamicPropertiesArray.forEach(function (wrongDynamicProperties) {\n      try {\n        ClassWithDynamicPropertiesMixin.create({ dynamicProperties: wrongDynamicProperties });\n      } catch (ex) {\n        assert.strictEqual(/wrong\\s*type\\s*of\\s*.*dynamicProperties.*/gi.test(ex.message), true, 'Throws assertion failed exception if specified \\'dynamicProperties\\' property is \\'' + _ember['default'].typeOf(wrongDynamicProperties) + '\\'');\n      }\n    });\n  });\n\n  (0, _qunit.test)('Mixin assignes it\\'s owner\\'s properties form the specified \\'dynamicProperties\\'', function (assert) {\n    assert.expect(1);\n\n    var propertyValue = 'MyValue';\n    var dynamicProperties = { property: propertyValue };\n    var mixinOwner = ClassWithDynamicPropertiesMixin.create({ dynamicProperties: dynamicProperties });\n\n    assert.strictEqual(mixinOwner.get('property'), propertyValue, 'Owner\\'s properties are equals to related \\'dynamicProperties\\'');\n  });\n\n  (0, _qunit.test)('Mixin changes it\\'s owner\\'s properties (when something changes inside related \\'dynamicProperties\\')', function (assert) {\n    assert.expect(2);\n\n    var propertyValue = 'MyValue';\n    var dynamicProperties = { property: propertyValue };\n    var mixinOwner = ClassWithDynamicPropertiesMixin.create({ dynamicProperties: dynamicProperties });\n\n    assert.strictEqual(mixinOwner.get('property'), propertyValue, 'Owner\\'s properties are equals to related \\'dynamicProperties\\'');\n\n    var propertyChangedValue = 'MyChangedValue';\n    _ember['default'].set(dynamicProperties, 'property', propertyChangedValue);\n\n    assert.strictEqual(mixinOwner.get('property'), propertyChangedValue, 'Owner\\'s properties changes when values inside \\'dynamicProperties\\' changes');\n  });\n\n  (0, _qunit.test)('Mixin removes old & adds new owner\\'s properties (when reference to whole \\'dynamicProperties\\' object changes)', function (assert) {\n    assert.expect(22);\n\n    var propertyValue = 'MyProperty';\n    var anotherPropertyValue = 'MyAnotherProperty';\n    var dynamicProperties = { property: propertyValue, anotherProperty: anotherPropertyValue };\n\n    var usualPropertyValue = 'MyUsualProperty';\n\n    var mixinOwner = ClassWithDynamicPropertiesMixin.create({\n      usualProperty: usualPropertyValue,\n      dynamicProperties: dynamicProperties\n    });\n\n    assert.strictEqual(mixinOwner.get('usualProperty'), usualPropertyValue, 'Owner\\'s \\'usualProperty\\' is equals to it\\'s initially defined value');\n    assert.strictEqual(mixinOwner.get('property'), propertyValue, 'Owner\\'s \\'property\\' is equals to related dynamicProperty');\n    assert.strictEqual(mixinOwner.get('anotherProperty'), anotherPropertyValue, 'Owner\\'s \\'anotherProperty\\' is equals to related dynamicProperty');\n\n    var ownerPropertiesNames = _ember['default'].A(Object.keys(mixinOwner));\n    assert.strictEqual(ownerPropertiesNames.contains('usualProperty'), true, 'Owner\\'s properties keys contains \\'usualProperty\\'');\n    assert.strictEqual(ownerPropertiesNames.contains('property'), true, 'Owner\\'s properties keys contains \\'property\\'');\n    assert.strictEqual(ownerPropertiesNames.contains('anotherProperty'), true, 'Owner\\'s properties keys contains \\'anotherProperty\\'');\n\n    var newPropertyValue = 'MyNewProperty';\n    var newAnotherPropertyValue = 'MyNewAnotherProperty';\n    var newDynamicProperties = { newProperty: newPropertyValue, newAnotherProperty: newAnotherPropertyValue };\n    mixinOwner.set('dynamicProperties', newDynamicProperties);\n\n    assert.strictEqual(mixinOwner.get('usualProperty'), usualPropertyValue, 'Owner\\'s \\'usualProperty\\' is equals to it\\'s initially defined value (after change of whole \\'dynamicProperties\\' object)');\n    assert.strictEqual(_ember['default'].typeOf(mixinOwner.get('property')), 'undefined', 'Owner\\'s \\'property\\' is undefined (after change of whole \\'dynamicProperties\\' object)');\n    assert.strictEqual(_ember['default'].typeOf(mixinOwner.get('anotherProperty')), 'undefined', 'Owner\\'s \\'anotherProperty\\' is undefined (after change of whole \\'dynamicProperties\\' object)');\n    assert.strictEqual(mixinOwner.get('newProperty'), newPropertyValue, 'Owner\\'s \\'newProperty\\' is equals to related dynamicProperty (after change of whole \\'dynamicProperties\\' object)');\n    assert.strictEqual(mixinOwner.get('newAnotherProperty'), newAnotherPropertyValue, 'Owner\\'s \\'newAnotherProperty\\' is equals to related dynamicProperty (after change of whole \\'dynamicProperties\\' object)');\n\n    ownerPropertiesNames = _ember['default'].A(Object.keys(mixinOwner));\n    assert.strictEqual(ownerPropertiesNames.contains('usualProperty'), true, 'Owner\\'s properties keys contains \\'usualProperty\\' (after change of whole \\'dynamicProperties\\' object)');\n    assert.strictEqual(ownerPropertiesNames.contains('property'), false, 'Owner\\'s properties keys doesn\\'t contains \\'property\\' (after change of whole \\'dynamicProperties\\' object)');\n    assert.strictEqual(ownerPropertiesNames.contains('anotherProperty'), false, 'Owner\\'s properties keys doesn\\'t contains \\'anotherProperty\\' (after change of whole \\'dynamicProperties\\' object)');\n    assert.strictEqual(ownerPropertiesNames.contains('newProperty'), true, 'Owner\\'s properties keys contains \\'newProperty\\' (after change of whole \\'dynamicProperties\\' object)');\n    assert.strictEqual(ownerPropertiesNames.contains('newAnotherProperty'), true, 'Owner\\'s properties keys contains \\'newAnotherProperty\\' (after change of whole \\'dynamicProperties\\' object)');\n\n    mixinOwner.set('dynamicProperties', null);\n    assert.strictEqual(mixinOwner.get('usualProperty'), usualPropertyValue, 'Owner\\'s \\'usualProperty\\' is equals to it\\'s initially defined value (after change of whole \\'dynamicProperties\\' object to null)');\n    assert.strictEqual(_ember['default'].typeOf(mixinOwner.get('newProperty')), 'undefined', 'Owner\\'s \\'newProperty\\' is undefined (after change of whole \\'dynamicProperties\\' object to null)');\n    assert.strictEqual(_ember['default'].typeOf(mixinOwner.get('newAnotherProperty')), 'undefined', 'Owner\\'s \\'newAnotherProperty\\' is undefined (after change of whole \\'dynamicProperties\\' object to null)');\n\n    ownerPropertiesNames = _ember['default'].A(Object.keys(mixinOwner));\n    assert.strictEqual(ownerPropertiesNames.contains('usualProperty'), true, 'Owner\\'s properties keys contains \\'usualProperty\\' (after change of whole \\'dynamicProperties\\' object to null)');\n    assert.strictEqual(ownerPropertiesNames.contains('newProperty'), false, 'Owner\\'s properties keys doesn\\'t contains \\'newProperty\\' (after change of whole \\'dynamicProperties\\' object to null)');\n    assert.strictEqual(ownerPropertiesNames.contains('newAnotherProperty'), false, 'Owner\\'s properties keys doesn\\'t contains \\'newAnotherProperty\\' (after change of whole \\'dynamicProperties\\' object to null)');\n  });\n\n  (0, _qunit.test)('Mixin removes assigned \\'dynamicProperties\\' before owner will be destroyed', function (assert) {\n    assert.expect(12);\n\n    var propertyValue = 'MyProperty';\n    var anotherPropertyValue = 'MyAnotherProperty';\n    var dynamicProperties = { property: propertyValue, anotherProperty: anotherPropertyValue };\n\n    var usualPropertyValue = 'MyUsualProperty';\n\n    var mixinOwner = ClassWithDynamicPropertiesMixin.create({\n      usualProperty: usualPropertyValue,\n      dynamicProperties: dynamicProperties\n    });\n\n    assert.strictEqual(mixinOwner.get('usualProperty'), usualPropertyValue, 'Owner\\'s \\'usualProperty\\' is equals to it\\'s initially defined value');\n    assert.strictEqual(mixinOwner.get('property'), propertyValue, 'Owner\\'s \\'property\\' is equals to related dynamicProperty');\n    assert.strictEqual(mixinOwner.get('anotherProperty'), anotherPropertyValue, 'Owner\\'s \\'anotherProperty\\' is equals to related dynamicProperty');\n\n    var ownerPropertiesNames = _ember['default'].A(Object.keys(mixinOwner));\n    assert.strictEqual(ownerPropertiesNames.contains('usualProperty'), true, 'Owner\\'s properties keys contains \\'usualProperty\\'');\n    assert.strictEqual(ownerPropertiesNames.contains('property'), true, 'Owner\\'s properties keys contains \\'property\\'');\n    assert.strictEqual(ownerPropertiesNames.contains('anotherProperty'), true, 'Owner\\'s properties keys contains \\'anotherProperty\\'');\n\n    mixinOwner.willDestroy();\n\n    assert.strictEqual(mixinOwner.get('usualProperty'), usualPropertyValue, 'Owner\\'s \\'usualProperty\\' is equals to it\\'s initially defined value (after change of whole \\'dynamicProperties\\' object)');\n    assert.strictEqual(_ember['default'].typeOf(mixinOwner.get('property')), 'undefined', 'Owner\\'s \\'property\\' is undefined (after change of whole \\'dynamicProperties\\' object)');\n    assert.strictEqual(_ember['default'].typeOf(mixinOwner.get('anotherProperty')), 'undefined', 'Owner\\'s \\'anotherProperty\\' is undefined (after change of whole \\'dynamicProperties\\' object)');\n\n    ownerPropertiesNames = _ember['default'].A(Object.keys(mixinOwner));\n    assert.strictEqual(ownerPropertiesNames.contains('usualProperty'), true, 'Owner\\'s properties keys contains \\'usualProperty\\'');\n    assert.strictEqual(ownerPropertiesNames.contains('property'), false, 'Owner\\'s properties keys doesn\\'t contains \\'property\\'');\n    assert.strictEqual(ownerPropertiesNames.contains('anotherProperty'), false, 'Owner\\'s properties keys doesn\\'t contains \\'anotherProperty\\'');\n  });\n});","define('dummy/tests/unit/mixins/dynamic-properties-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/mixins');\n  test('unit/mixins/dynamic-properties-test.js should pass jscs', function () {\n    ok(true, 'unit/mixins/dynamic-properties-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/mixins/dynamic-properties-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/mixins/dynamic-properties-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/mixins/dynamic-properties-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/mixins/flexberry-map-model-api-savelayer-test', ['exports', 'ember', 'ember-flexberry-gis/mixins/flexberry-map-model-api-savelayer', 'qunit'], function (exports, _ember, _emberFlexberryGisMixinsFlexberryMapModelApiSavelayer, _qunit) {\n\n  (0, _qunit.module)('Unit | Mixin | flexberry map model api savelayer');\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('it works', function (assert) {\n    var FlexberryMapModelApiSavelayerObject = _ember['default'].Object.extend(_emberFlexberryGisMixinsFlexberryMapModelApiSavelayer['default']);\n    var subject = FlexberryMapModelApiSavelayerObject.create();\n    assert.ok(subject);\n  });\n});","define('dummy/tests/unit/mixins/flexberry-map-model-api-savelayer-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/mixins');\n  test('unit/mixins/flexberry-map-model-api-savelayer-test.js should pass jscs', function () {\n    ok(true, 'unit/mixins/flexberry-map-model-api-savelayer-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/mixins/flexberry-map-model-api-savelayer-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/mixins/flexberry-map-model-api-savelayer-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/mixins/flexberry-map-model-api-savelayer-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/mixins/flexberry-map-model-api-test', ['exports', 'ember', 'qunit', 'ember-flexberry-gis/mixins/flexberry-map-model-api'], function (exports, _ember, _qunit, _emberFlexberryGisMixinsFlexberryMapModelApi) {\n\n  (0, _qunit.module)('Unit | Mixin | flexberry map model api test');\n\n  var mapApiMixinObject = _ember['default'].Object.extend(_emberFlexberryGisMixinsFlexberryMapModelApi['default']);\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('it works FlexberryMapModelApiMixin', function (assert) {\n    var subject = mapApiMixinObject.create();\n    assert.ok(subject);\n  });\n});","define('dummy/tests/unit/mixins/flexberry-map-model-api-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/mixins');\n  test('unit/mixins/flexberry-map-model-api-test.js should pass jscs', function () {\n    ok(true, 'unit/mixins/flexberry-map-model-api-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/mixins/flexberry-map-model-api-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/mixins/flexberry-map-model-api-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/mixins/flexberry-map-model-api-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/mixins/flexberry-map-model-api-visualedit-test', ['exports', 'ember', 'ember-flexberry-gis/mixins/flexberry-map-model-api-visualedit', 'qunit'], function (exports, _ember, _emberFlexberryGisMixinsFlexberryMapModelApiVisualedit, _qunit) {\n\n  (0, _qunit.module)('Unit | Mixin | flexberry map model api visualedit');\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('it works', function (assert) {\n    var FlexberryMapModelApiVisualeditObject = _ember['default'].Object.extend(_emberFlexberryGisMixinsFlexberryMapModelApiVisualedit['default']);\n    var subject = FlexberryMapModelApiVisualeditObject.create();\n    assert.ok(subject);\n  });\n\n  (0, _qunit.test)('one', function (assert) {\n    assert.ok(true);\n  });\n});","define('dummy/tests/unit/mixins/flexberry-map-model-api-visualedit-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/mixins');\n  test('unit/mixins/flexberry-map-model-api-visualedit-test.js should pass jscs', function () {\n    ok(true, 'unit/mixins/flexberry-map-model-api-visualedit-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/mixins/flexberry-map-model-api-visualedit-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/mixins/flexberry-map-model-api-visualedit-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/mixins/flexberry-map-model-api-visualedit-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/mixins/leaflet-events-test', ['exports', 'ember', 'ember-flexberry-gis/mixins/leaflet-events', 'qunit', 'sinon'], function (exports, _ember, _emberFlexberryGisMixinsLeafletEvents, _qunit, _sinon) {\n\n  var MixinImplementation = _ember['default'].Object.extend(_emberFlexberryGisMixinsLeafletEvents['default']);\n\n  (0, _qunit.module)('Unit | Mixin | leaflet events');\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('it works', function (assert) {\n    var subject = MixinImplementation.create();\n    assert.ok(subject);\n  });\n\n  (0, _qunit.test)('usedLeafletEvents should return events with exists methods', function (assert) {\n    var subject = MixinImplementation.create({\n      leafletEvents: ['testEvent1', 'testEvent2'],\n      testEvent1: function testEvent1() {}\n    });\n\n    assert.deepEqual(subject.get('usedLeafletEvents'), ['testEvent1']);\n  });\n\n  (0, _qunit.test)('_addEventListeners should create eventHandles for used events', function (assert) {\n\n    var addEventListener = _sinon['default'].spy();\n\n    var subject = MixinImplementation.create({\n      usedLeafletEvents: ['testEvent1', 'testEvent2'],\n      _leafletObject: { addEventListener: addEventListener }\n    });\n\n    subject._addEventListeners();\n\n    assert.ok(addEventListener.calledTwice);\n    assert.ok(subject.get('_eventHandlers').hasOwnProperty('testEvent1'));\n    assert.ok(subject.get('_eventHandlers').hasOwnProperty('testEvent2'));\n  });\n\n  (0, _qunit.test)('_removeEventListener shoud remove all used eventHandles', function (assert) {\n    var removeEventListener = _sinon['default'].spy();\n\n    var subject = MixinImplementation.create({\n      usedLeafletEvents: ['testEvent1', 'testEvent2'],\n      _eventHandlers: {\n        testEvent1: '',\n        testEvent2: ''\n      },\n      _leafletObject: { removeEventListener: removeEventListener }\n    });\n\n    subject._removeEventListeners();\n\n    assert.ok(removeEventListener.calledTwice);\n    assert.notOk(subject.get('_eventHandlers').hasOwnProperty('testEvent1'));\n    assert.notOk(subject.get('_eventHandlers').hasOwnProperty('testEvent2'));\n    assert.deepEqual(subject.get('_eventHandlers'), {});\n  });\n});","define('dummy/tests/unit/mixins/leaflet-events-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/mixins');\n  test('unit/mixins/leaflet-events-test.js should pass jscs', function () {\n    ok(true, 'unit/mixins/leaflet-events-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/mixins/leaflet-events-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/mixins/leaflet-events-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/mixins/leaflet-events-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/mixins/leaflet-options-test', ['exports', 'ember', 'ember-flexberry-gis/mixins/leaflet-options', 'qunit'], function (exports, _ember, _emberFlexberryGisMixinsLeafletOptions, _qunit) {\n\n  var MixinImplementation = _ember['default'].Object.extend(_emberFlexberryGisMixinsLeafletOptions['default']);\n\n  (0, _qunit.module)('Unit | Mixin | leaflet options');\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('it works', function (assert) {\n    var subject = MixinImplementation.create();\n    assert.ok(subject);\n  });\n\n  (0, _qunit.test)('get(options) should return object with specified properties', function (assert) {\n    var subject = MixinImplementation.create({\n      leafletOptions: ['testOption1', 'testOption2'],\n      testOption1: '222',\n      testOption2: 333\n    });\n\n    var options = subject.get('options');\n\n    assert.deepEqual(options, {\n      testOption1: '222',\n      testOption2: 333\n    });\n  });\n});","define('dummy/tests/unit/mixins/leaflet-options-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/mixins');\n  test('unit/mixins/leaflet-options-test.js should pass jscs', function () {\n    ok(true, 'unit/mixins/leaflet-options-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/mixins/leaflet-options-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/mixins/leaflet-options-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/mixins/leaflet-options-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/mixins/leaflet-properties-test', ['exports', 'ember', 'ember-flexberry-gis/mixins/leaflet-properties', 'qunit', 'sinon'], function (exports, _ember, _emberFlexberryGisMixinsLeafletProperties, _qunit, _sinon) {\n\n  (0, _qunit.module)('Unit | Mixin | leaflet properties');\n\n  var MixinImplementation = _ember['default'].Object.extend(_emberFlexberryGisMixinsLeafletProperties['default']);\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('it works', function (assert) {\n    var subject = MixinImplementation.create();\n    assert.ok(subject);\n  });\n\n  (0, _qunit.test)('_addObservers should call this.addObserver for specified properties', function (assert) {\n    var property = 'testProperty';\n    var subject = MixinImplementation.create({\n      leafletProperties: [property]\n    });\n\n    var addObserver = _sinon['default'].spy(subject, 'addObserver');\n\n    subject._addObservers();\n\n    assert.ok(addObserver.calledWith(property));\n  });\n\n  (0, _qunit.test)('after addObserver property changed should fire specified layer function', function (assert) {\n    var callTestProperty = _sinon['default'].spy();\n\n    var subject = MixinImplementation.create({\n      leafletProperties: ['testProperty:callTestProperty'],\n      _leafletObject: { callTestProperty: callTestProperty }\n    });\n\n    subject._addObservers();\n    _ember['default'].run(function () {\n      subject.set('testProperty', 'property');\n    });\n\n    assert.ok(callTestProperty.called);\n  });\n\n  (0, _qunit.test)('after addObserver property changed should fire default setter for property of layer', function (assert) {\n    var setTestProperty = _sinon['default'].spy();\n\n    var subject = MixinImplementation.create({\n      leafletProperties: ['testProperty'],\n      _leafletObject: { setTestProperty: setTestProperty }\n    });\n\n    subject._addObservers();\n    _ember['default'].run(function () {\n      subject.set('testProperty', 'property');\n    });\n\n    assert.ok(setTestProperty.called);\n  });\n\n  (0, _qunit.test)('after addObserver property changed should throws if layer property setter is missing', function (assert) {\n    var subject = MixinImplementation.create({\n      leafletProperties: ['testProperty'],\n      _leafletObject: {}\n    });\n\n    subject._addObservers();\n\n    assert.throws(function () {\n      subject.set('testProperty', 'property');\n    });\n  });\n});","define('dummy/tests/unit/mixins/leaflet-properties-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/mixins');\n  test('unit/mixins/leaflet-properties-test.js should pass jscs', function () {\n    ok(true, 'unit/mixins/leaflet-properties-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/mixins/leaflet-properties-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/mixins/leaflet-properties-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/mixins/leaflet-properties-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/models/new-platform-flexberry-g-i-s-layer-link-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('new-platform-flexberry-g-i-s-layer-link', 'Unit | Model | new-platform-flexberry-g-i-s-layer-link', {\n    // Specify the other units that are required for this test.\n    needs: ['model:custom-inflector-rules', 'model:new-platform-flexberry-g-i-s-layer-link', 'model:new-platform-flexberry-g-i-s-layer-metadata', 'model:new-platform-flexberry-g-i-s-link-metadata', 'model:new-platform-flexberry-g-i-s-link-parameter', 'model:new-platform-flexberry-g-i-s-map-layer', 'model:new-platform-flexberry-g-i-s-map-object-setting', 'model:new-platform-flexberry-g-i-s-map', 'model:new-platform-flexberry-g-i-s-parameter-metadata']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('dummy/tests/unit/models/new-platform-flexberry-g-i-s-layer-link-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/models');\n  test('unit/models/new-platform-flexberry-g-i-s-layer-link-test.js should pass jscs', function () {\n    ok(true, 'unit/models/new-platform-flexberry-g-i-s-layer-link-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/models/new-platform-flexberry-g-i-s-layer-link-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/models/new-platform-flexberry-g-i-s-layer-link-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/new-platform-flexberry-g-i-s-layer-link-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/models/new-platform-flexberry-g-i-s-layer-metadata-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('new-platform-flexberry-g-i-s-layer-metadata', 'Unit | Model | new-platform-flexberry-g-i-s-layer-metadata', {\n    // Specify the other units that are required for this test.\n    needs: ['model:custom-inflector-rules', 'model:new-platform-flexberry-g-i-s-layer-link', 'model:new-platform-flexberry-g-i-s-layer-metadata', 'model:new-platform-flexberry-g-i-s-link-metadata', 'model:new-platform-flexberry-g-i-s-link-parameter', 'model:new-platform-flexberry-g-i-s-map-layer', 'model:new-platform-flexberry-g-i-s-map-object-setting', 'model:new-platform-flexberry-g-i-s-map', 'model:new-platform-flexberry-g-i-s-parameter-metadata']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('dummy/tests/unit/models/new-platform-flexberry-g-i-s-layer-metadata-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/models');\n  test('unit/models/new-platform-flexberry-g-i-s-layer-metadata-test.js should pass jscs', function () {\n    ok(true, 'unit/models/new-platform-flexberry-g-i-s-layer-metadata-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/models/new-platform-flexberry-g-i-s-layer-metadata-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/models/new-platform-flexberry-g-i-s-layer-metadata-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/new-platform-flexberry-g-i-s-layer-metadata-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/models/new-platform-flexberry-g-i-s-link-metadata-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('new-platform-flexberry-g-i-s-link-metadata', 'Unit | Model | new-platform-flexberry-g-i-s-link-metadata', {\n    // Specify the other units that are required for this test.\n    needs: ['model:custom-inflector-rules', 'model:new-platform-flexberry-g-i-s-layer-link', 'model:new-platform-flexberry-g-i-s-layer-metadata', 'model:new-platform-flexberry-g-i-s-link-metadata', 'model:new-platform-flexberry-g-i-s-link-parameter', 'model:new-platform-flexberry-g-i-s-map-layer', 'model:new-platform-flexberry-g-i-s-map-object-setting', 'model:new-platform-flexberry-g-i-s-map', 'model:new-platform-flexberry-g-i-s-parameter-metadata']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('dummy/tests/unit/models/new-platform-flexberry-g-i-s-link-metadata-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/models');\n  test('unit/models/new-platform-flexberry-g-i-s-link-metadata-test.js should pass jscs', function () {\n    ok(true, 'unit/models/new-platform-flexberry-g-i-s-link-metadata-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/models/new-platform-flexberry-g-i-s-link-metadata-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/models/new-platform-flexberry-g-i-s-link-metadata-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/new-platform-flexberry-g-i-s-link-metadata-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/models/new-platform-flexberry-g-i-s-link-parameter-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('new-platform-flexberry-g-i-s-link-parameter', 'Unit | Model | new-platform-flexberry-g-i-s-link-parameter', {\n    // Specify the other units that are required for this test.\n    needs: ['model:custom-inflector-rules', 'model:new-platform-flexberry-g-i-s-layer-link', 'model:new-platform-flexberry-g-i-s-layer-metadata', 'model:new-platform-flexberry-g-i-s-link-metadata', 'model:new-platform-flexberry-g-i-s-link-parameter', 'model:new-platform-flexberry-g-i-s-map-layer', 'model:new-platform-flexberry-g-i-s-map-object-setting', 'model:new-platform-flexberry-g-i-s-map', 'model:new-platform-flexberry-g-i-s-parameter-metadata']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('dummy/tests/unit/models/new-platform-flexberry-g-i-s-link-parameter-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/models');\n  test('unit/models/new-platform-flexberry-g-i-s-link-parameter-test.js should pass jscs', function () {\n    ok(true, 'unit/models/new-platform-flexberry-g-i-s-link-parameter-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/models/new-platform-flexberry-g-i-s-link-parameter-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/models/new-platform-flexberry-g-i-s-link-parameter-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/new-platform-flexberry-g-i-s-link-parameter-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/models/new-platform-flexberry-g-i-s-map-layer-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('new-platform-flexberry-g-i-s-map-layer', 'Unit | Model | new-platform-flexberry-g-i-s-map-layer', {\n    // Specify the other units that are required for this test.\n    needs: ['model:custom-inflector-rules', 'model:new-platform-flexberry-g-i-s-layer-link', 'model:new-platform-flexberry-g-i-s-layer-metadata', 'model:new-platform-flexberry-g-i-s-link-metadata', 'model:new-platform-flexberry-g-i-s-link-parameter', 'model:new-platform-flexberry-g-i-s-map-layer', 'model:new-platform-flexberry-g-i-s-map-object-setting', 'model:new-platform-flexberry-g-i-s-map', 'model:new-platform-flexberry-g-i-s-parameter-metadata']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('dummy/tests/unit/models/new-platform-flexberry-g-i-s-map-layer-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/models');\n  test('unit/models/new-platform-flexberry-g-i-s-map-layer-test.js should pass jscs', function () {\n    ok(true, 'unit/models/new-platform-flexberry-g-i-s-map-layer-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/models/new-platform-flexberry-g-i-s-map-layer-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/models/new-platform-flexberry-g-i-s-map-layer-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/new-platform-flexberry-g-i-s-map-layer-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/models/new-platform-flexberry-g-i-s-map-object-setting-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('new-platform-flexberry-g-i-s-map-object-setting', 'Unit | Model | new-platform-flexberry-g-i-s-map-object-setting', {\n    // Specify the other units that are required for this test.\n    needs: ['model:custom-inflector-rules', 'model:new-platform-flexberry-g-i-s-layer-link', 'model:new-platform-flexberry-g-i-s-layer-metadata', 'model:new-platform-flexberry-g-i-s-link-metadata', 'model:new-platform-flexberry-g-i-s-link-parameter', 'model:new-platform-flexberry-g-i-s-map-layer', 'model:new-platform-flexberry-g-i-s-map-object-setting', 'model:new-platform-flexberry-g-i-s-map', 'model:new-platform-flexberry-g-i-s-parameter-metadata']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('dummy/tests/unit/models/new-platform-flexberry-g-i-s-map-object-setting-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/models');\n  test('unit/models/new-platform-flexberry-g-i-s-map-object-setting-test.js should pass jscs', function () {\n    ok(true, 'unit/models/new-platform-flexberry-g-i-s-map-object-setting-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/models/new-platform-flexberry-g-i-s-map-object-setting-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/models/new-platform-flexberry-g-i-s-map-object-setting-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/new-platform-flexberry-g-i-s-map-object-setting-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/models/new-platform-flexberry-g-i-s-map-test', ['exports', 'ember-qunit', 'sinon', 'ember'], function (exports, _emberQunit, _sinon, _ember) {\n\n  (0, _emberQunit.moduleForModel)('new-platform-flexberry-g-i-s-map', 'Unit | Model | new-platform-flexberry-g-i-s-map', {\n    // Specify the other units that are required for this test.\n    needs: ['model:custom-inflector-rules', 'model:new-platform-flexberry-g-i-s-layer-link', 'model:new-platform-flexberry-g-i-s-layer-metadata', 'model:new-platform-flexberry-g-i-s-link-metadata', 'model:new-platform-flexberry-g-i-s-link-parameter', 'model:new-platform-flexberry-g-i-s-map-layer', 'model:new-platform-flexberry-g-i-s-map-object-setting', 'model:new-platform-flexberry-g-i-s-map', 'model:new-platform-flexberry-g-i-s-parameter-metadata', 'service:map-api', 'config:environment', 'component:flexberry-map']\n  });\n\n  var crsName = 'EPSG:4326';\n  var objA = [{\n    options: {\n      crs: {\n        code: crsName\n      }\n    },\n    feature: {\n      type: 'Feature',\n      id: 'vydel_utverzhdeno_polygon.0017782c-6f34-46b5-ac77-c0a65366c452',\n      geometry_name: 'shape',\n      properties: {\n        id: '141-17',\n        lesnichestvo: 'Закамское',\n        uchastkovoelesnichestvo: 'Чермозское(Чермозское)',\n        nomerkvartala: '141',\n        primarykey: '0017782c-6f34-46b5-ac77-c0a65366c452',\n        area: 10\n      },\n      geometry: {\n        type: 'MultiPolygon',\n        coordinates: [[[[55.78205, 58.73614], [55.85209, 58.73935], [55.85690, 58.71903], [55.78205, 58.71476], [55.78205, 58.73614]]]]\n      }\n    }\n  }];\n\n  var objB = [{\n    options: {\n      crs: {\n        code: crsName\n      }\n    },\n    feature: {\n      type: 'Feature',\n      id: 'kvartal_utverzhdeno_polygon.45df35c7-f292-44f8-b328-5fd4be739233',\n      geometry_name: 'shape',\n      properties: {\n        nomer: '41',\n        lesnichestvo: 'Закамское',\n        uchastkovoelesnichestvo: 'Чермозское(Чермозское)',\n        primarykey: '45df35c7-f292-44f8-b328-5fd4be739233',\n        area: 20\n      },\n      geometry: {\n        type: 'MultiPolygon',\n        coordinates: [[[[55.80677, 58.72884], [55.83286, 58.73846], [55.83836, 58.72991], [55.80677, 58.72884]]]]\n      }\n    },\n    _latlngs: [[[L.latLng(58.72884, 55.80677), L.latLng(58.73846, 55.83286), L.latLng(58.72991, 55.83836)]]]\n  }];\n\n  var objC = [{\n    options: {\n      crs: {\n        code: crsName\n      }\n    },\n    feature: {\n      type: 'Feature',\n      id: 'kvartal_utverzhdeno_polygon.d633ea1d-eb32-423f-8663-a38abc7ba094',\n      geometry_name: 'shape',\n      properties: {\n        nomer: '42',\n        lesnichestvo: 'Закамское',\n        uchastkovoelesnichestvo: 'Чермозское(Чермозское)',\n        primarykey: 'd633ea1d-eb32-423f-8663-a38abc7ba094',\n        area: 30\n      },\n      geometry: {\n        type: 'MultiPolygon',\n        coordinates: [[[[55.97843, 58.73810], [55.01448, 58.73329], [55.98461, 58.72420], [55.97843, 58.73810]]]]\n      }\n    }\n  }];\n\n  var objD = [{\n    options: {\n      crs: {\n        code: crsName\n      }\n    },\n    feature: {\n      type: 'Feature',\n      id: 'kvartal_utverzhdeno_polygon.79fd98d0-52ae-44ae-b616-971768196ad8',\n      geometry_name: 'shape',\n      properties: {\n        nomer: '43',\n        lesnichestvo: 'Закамское',\n        uchastkovoelesnichestvo: 'Чермозское(Чермозское)',\n        primarykey: '79fd98d0-52ae-44ae-b616-971768196ad8',\n        area: 30\n      },\n      geometry: {\n        type: 'MultiPolygon',\n        coordinates: [[[[55.85072, 58.68176], [55.88848, 58.67194], [55.84316, 58.65391], [55.85072, 58.68176]]]]\n      }\n    }\n  }];\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n\n    assert.ok(!!model);\n  });\n\n  (0, _emberQunit.test)('substitution _getModelLayerFeature', function (assert) {\n    var map = this.subject();\n    var _getModelLayerFeatureStub = _sinon['default'].stub(map, '_getModelLayerFeature');\n    _getModelLayerFeatureStub.withArgs(1).returns(objA);\n    assert.ok(_getModelLayerFeatureStub(1));\n  });\n\n  (0, _emberQunit.test)('isContainsObject', function (assert) {\n    var map = this.subject();\n    var _getModelLayerFeatureStub = _sinon['default'].stub(map, '_getModelLayerFeature');\n    _getModelLayerFeatureStub.withArgs('f34ea73d-9f00-4f02-b02d-675d459c972b', ['0017782c-6f34-46b5-ac77-c0a65366c452']).returns(new _ember['default'].RSVP.Promise(function (resolve, reject) {\n      resolve([null, null, objA]);\n    }));\n    _getModelLayerFeatureStub.withArgs('63b3f6fb-3d4c-4acc-ab93-1b4fa31f9b0e', ['45df35c7-f292-44f8-b328-5fd4be739233']).returns(new _ember['default'].RSVP.Promise(function (resolve, reject) {\n      resolve([null, null, objB]);\n    }));\n\n    map.isContainsObject('f34ea73d-9f00-4f02-b02d-675d459c972b', '0017782c-6f34-46b5-ac77-c0a65366c452', '63b3f6fb-3d4c-4acc-ab93-1b4fa31f9b0e', '45df35c7-f292-44f8-b328-5fd4be739233').then(function (e) {\n      assert.ok(e, 'Contains');\n    });\n\n    map.isContainsObject('63b3f6fb-3d4c-4acc-ab93-1b4fa31f9b0e', '45df35c7-f292-44f8-b328-5fd4be739233', 'f34ea73d-9f00-4f02-b02d-675d459c972b', '0017782c-6f34-46b5-ac77-c0a65366c452').then(function (e) {\n      assert.notOk(e, 'Not contains');\n    });\n  });\n\n  (0, _emberQunit.test)('getAreaExtends', function (assert) {\n    var map = this.subject();\n    var _getModelLayerFeatureStub = _sinon['default'].stub(map, '_getModelLayerFeature');\n    _getModelLayerFeatureStub.withArgs('f34ea73d-9f00-4f02-b02d-675d459c972b', ['0017782c-6f34-46b5-ac77-c0a65366c452']).returns(new _ember['default'].RSVP.Promise(function (resolve, reject) {\n      resolve([null, null, objA]);\n    }));\n    _getModelLayerFeatureStub.withArgs('63b3f6fb-3d4c-4acc-ab93-1b4fa31f9b0e', ['45df35c7-f292-44f8-b328-5fd4be739233']).returns(new _ember['default'].RSVP.Promise(function (resolve, reject) {\n      resolve([null, null, objB]);\n    }));\n    _getModelLayerFeatureStub.withArgs('63b3f6fb-3d4c-4acc-ab93-1b4fa31f9b0e', ['d633ea1d-eb32-423f-8663-a38abc7ba094']).returns(new _ember['default'].RSVP.Promise(function (resolve, reject) {\n      resolve([null, null, objC]);\n    }));\n    _getModelLayerFeatureStub.withArgs('63b3f6fb-3d4c-4acc-ab93-1b4fa31f9b0e', ['79fd98d0-52ae-44ae-b616-971768196ad8']).returns(new _ember['default'].RSVP.Promise(function (resolve, reject) {\n      resolve([null, null, objD]);\n    }));\n\n    map.getAreaExtends('f34ea73d-9f00-4f02-b02d-675d459c972b', '0017782c-6f34-46b5-ac77-c0a65366c452', '63b3f6fb-3d4c-4acc-ab93-1b4fa31f9b0e', '45df35c7-f292-44f8-b328-5fd4be739233').then(function (e) {\n      assert.equal(e, 0, 'B<A and intersect');\n    });\n\n    map.getAreaExtends('63b3f6fb-3d4c-4acc-ab93-1b4fa31f9b0e', '45df35c7-f292-44f8-b328-5fd4be739233', 'f34ea73d-9f00-4f02-b02d-675d459c972b', '0017782c-6f34-46b5-ac77-c0a65366c452').then(function (e) {\n      assert.equal(e, 8887057.32835752, 'B>A and intesect');\n    });\n\n    map.getAreaExtends('63b3f6fb-3d4c-4acc-ab93-1b4fa31f9b0e', '79fd98d0-52ae-44ae-b616-971768196ad8', '63b3f6fb-3d4c-4acc-ab93-1b4fa31f9b0e', 'd633ea1d-eb32-423f-8663-a38abc7ba094').then(function (e) {\n      assert.equal(e, 43187392.82526295, 'Not intersect');\n    });\n  });\n\n  (0, _emberQunit.test)('getIntersectionArea', function (assert) {\n    var map = this.subject();\n    var _getModelLayerFeatureStub = _sinon['default'].stub(map, '_getModelLayerFeature');\n    _getModelLayerFeatureStub.withArgs('f34ea73d-9f00-4f02-b02d-675d459c972b', ['0017782c-6f34-46b5-ac77-c0a65366c452']).returns(new _ember['default'].RSVP.Promise(function (resolve, reject) {\n      resolve([null, null, objA]);\n    }));\n    _getModelLayerFeatureStub.withArgs('63b3f6fb-3d4c-4acc-ab93-1b4fa31f9b0e', ['45df35c7-f292-44f8-b328-5fd4be739233']).returns(new _ember['default'].RSVP.Promise(function (resolve, reject) {\n      resolve([null, null, objB]);\n    }));\n    _getModelLayerFeatureStub.withArgs('63b3f6fb-3d4c-4acc-ab93-1b4fa31f9b0e', ['d633ea1d-eb32-423f-8663-a38abc7ba094']).returns(new _ember['default'].RSVP.Promise(function (resolve, reject) {\n      resolve([null, null, objC]);\n    }));\n\n    map.getIntersectionArea('63b3f6fb-3d4c-4acc-ab93-1b4fa31f9b0e', '45df35c7-f292-44f8-b328-5fd4be739233', 'f34ea73d-9f00-4f02-b02d-675d459c972b', '0017782c-6f34-46b5-ac77-c0a65366c452').then(function (e) {\n      assert.equal(e.area, 887494.3528438057, 'Intersect');\n    });\n\n    map.getIntersectionArea('63b3f6fb-3d4c-4acc-ab93-1b4fa31f9b0e', '79fd98d0-52ae-44ae-b616-971768196ad8', '63b3f6fb-3d4c-4acc-ab93-1b4fa31f9b0e', 'd633ea1d-eb32-423f-8663-a38abc7ba094').then(function (e) {\n      assert.equal(e.area, 0, 'Not area intersect');\n    })['catch'](function (e) {\n      assert.ok(e, 'Not intersect');\n    });\n\n    /* Надо как-то подмешать mapApi.getFromApi('serviceLayer')\n    map.getIntersectionArea('63b3f6fb-3d4c-4acc-ab93-1b4fa31f9b0e', '45df35c7-f292-44f8-b328-5fd4be739233',\n    'f34ea73d-9f00-4f02-b02d-675d459c972b', '0017782c-6f34-46b5-ac77-c0a65366c452', true).then((e) => {\n      assert.equal(e.area, 887494.3528438057, 'Intersect and show on map');\n    });*/\n  });\n\n  (0, _emberQunit.test)('getRhumb', function (assert) {\n    var map = this.subject();\n    var _getModelLayerFeatureStub = _sinon['default'].stub(map, '_getModelLayerFeature');\n    _getModelLayerFeatureStub.withArgs('63b3f6fb-3d4c-4acc-ab93-1b4fa31f9b0e', ['45df35c7-f292-44f8-b328-5fd4be739233']).returns(new _ember['default'].RSVP.Promise(function (resolve, reject) {\n      resolve([null, null, objB]);\n    }));\n\n    map.getRhumb('63b3f6fb-3d4c-4acc-ab93-1b4fa31f9b0e', '45df35c7-f292-44f8-b328-5fd4be739233').then(function (e) {\n      var rhumb = [{ rib: '1;2', rhumb: 'СВ;54.60899873173304', distance: 1847.0014093569546 }, { rib: '2;3', rhumb: 'ЮВ;18.46239009698718', distance: 1002.3048264780921 }, { rib: '3;1', rhumb: 'ЮЗ;86.26658375754084', distance: 1827.228836727564 }];\n      var result = {\n        startPoint: L.latLng(58.72884, 55.80677),\n        rhumbCoordinates: rhumb,\n        coordinates: objB[0]._latlngs\n      };\n\n      assert.deepEqual(e, result, 'Rhumb');\n    });\n  });\n});","define('dummy/tests/unit/models/new-platform-flexberry-g-i-s-map-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/models');\n  test('unit/models/new-platform-flexberry-g-i-s-map-test.js should pass jscs', function () {\n    ok(true, 'unit/models/new-platform-flexberry-g-i-s-map-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/models/new-platform-flexberry-g-i-s-map-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/models/new-platform-flexberry-g-i-s-map-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/new-platform-flexberry-g-i-s-map-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/models/new-platform-flexberry-g-i-s-parameter-metadata-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('new-platform-flexberry-g-i-s-parameter-metadata', 'Unit | Model | new-platform-flexberry-g-i-s-parameter-metadata', {\n    // Specify the other units that are required for this test.\n    needs: ['model:custom-inflector-rules', 'model:new-platform-flexberry-g-i-s-layer-link', 'model:new-platform-flexberry-g-i-s-layer-metadata', 'model:new-platform-flexberry-g-i-s-link-metadata', 'model:new-platform-flexberry-g-i-s-link-parameter', 'model:new-platform-flexberry-g-i-s-map-layer', 'model:new-platform-flexberry-g-i-s-map-object-setting', 'model:new-platform-flexberry-g-i-s-map', 'model:new-platform-flexberry-g-i-s-parameter-metadata']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('dummy/tests/unit/models/new-platform-flexberry-g-i-s-parameter-metadata-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/models');\n  test('unit/models/new-platform-flexberry-g-i-s-parameter-metadata-test.js should pass jscs', function () {\n    ok(true, 'unit/models/new-platform-flexberry-g-i-s-parameter-metadata-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/models/new-platform-flexberry-g-i-s-parameter-metadata-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/models/new-platform-flexberry-g-i-s-parameter-metadata-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/new-platform-flexberry-g-i-s-parameter-metadata-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/routes/edit-map-new-test', ['exports', 'ember-flexberry-gis/routes/edit-map-new', 'qunit'], function (exports, _emberFlexberryGisRoutesEditMapNew, _qunit) {\n\n  (0, _qunit.module)('Unit | Route | edit-map-new');\n\n  (0, _qunit.test)('it exists', function (assert) {\n    var route = _emberFlexberryGisRoutesEditMapNew['default'].create({});\n    assert.ok(route);\n  });\n});","define('dummy/tests/unit/routes/edit-map-new-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/routes');\n  test('unit/routes/edit-map-new-test.js should pass jscs', function () {\n    ok(true, 'unit/routes/edit-map-new-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/routes/edit-map-new-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/routes/edit-map-new-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/edit-map-new-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/routes/edit-map-test', ['exports', 'ember-flexberry-gis/routes/edit-map', 'qunit'], function (exports, _emberFlexberryGisRoutesEditMap, _qunit) {\n\n  (0, _qunit.module)('Unit | Route | edit-map');\n\n  (0, _qunit.test)('it exists', function (assert) {\n    var route = _emberFlexberryGisRoutesEditMap['default'].create({});\n    assert.ok(route);\n  });\n});","define('dummy/tests/unit/routes/edit-map-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/routes');\n  test('unit/routes/edit-map-test.js should pass jscs', function () {\n    ok(true, 'unit/routes/edit-map-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/routes/edit-map-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/routes/edit-map-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/edit-map-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/routes/gis-search-form-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:gis-search-form', 'Unit | Route | gis search form', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('dummy/tests/unit/routes/gis-search-form-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/routes');\n  test('unit/routes/gis-search-form-test.js should pass jscs', function () {\n    ok(true, 'unit/routes/gis-search-form-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/routes/gis-search-form-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/routes/gis-search-form-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/gis-search-form-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/routes/list-map-test', ['exports', 'ember-flexberry-gis/routes/list-map', 'qunit'], function (exports, _emberFlexberryGisRoutesListMap, _qunit) {\n\n  (0, _qunit.module)('Unit | Route | list-map');\n\n  (0, _qunit.test)('it exists', function (assert) {\n    var route = _emberFlexberryGisRoutesListMap['default'].create({});\n    assert.ok(route);\n  });\n});","define('dummy/tests/unit/routes/list-map-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/routes');\n  test('unit/routes/list-map-test.js should pass jscs', function () {\n    ok(true, 'unit/routes/list-map-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/routes/list-map-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/routes/list-map-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/list-map-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-layer-link-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('new-platform-flexberry-g-i-s-layer-link', 'Unit | Serializer | new-platform-flexberry-g-i-s-layer-link', {\n    // Specify the other units that are required for this test.\n    needs: ['serializer:new-platform-flexberry-g-i-s-layer-link', 'transform:file', 'transform:decimal', 'transform:json', 'model:custom-inflector-rules', 'model:new-platform-flexberry-g-i-s-layer-link', 'model:new-platform-flexberry-g-i-s-layer-metadata', 'model:new-platform-flexberry-g-i-s-link-metadata', 'model:new-platform-flexberry-g-i-s-link-parameter', 'model:new-platform-flexberry-g-i-s-map-layer', 'model:new-platform-flexberry-g-i-s-map-object-setting', 'model:new-platform-flexberry-g-i-s-map', 'model:new-platform-flexberry-g-i-s-parameter-metadata']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it serializes records', function (assert) {\n    var record = this.subject();\n\n    var serializedRecord = record.serialize();\n\n    assert.ok(serializedRecord);\n  });\n});","define('dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-layer-link-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/serializers');\n  test('unit/serializers/new-platform-flexberry-g-i-s-layer-link-test.js should pass jscs', function () {\n    ok(true, 'unit/serializers/new-platform-flexberry-g-i-s-layer-link-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-layer-link-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/serializers/new-platform-flexberry-g-i-s-layer-link-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/serializers/new-platform-flexberry-g-i-s-layer-link-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-layer-metadata-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('new-platform-flexberry-g-i-s-layer-metadata', 'Unit | Serializer | new-platform-flexberry-g-i-s-layer-metadata', {\n    // Specify the other units that are required for this test.\n    needs: ['serializer:new-platform-flexberry-g-i-s-layer-metadata', 'transform:file', 'transform:decimal', 'transform:json', 'model:custom-inflector-rules', 'model:new-platform-flexberry-g-i-s-layer-link', 'model:new-platform-flexberry-g-i-s-layer-metadata', 'model:new-platform-flexberry-g-i-s-link-metadata', 'model:new-platform-flexberry-g-i-s-link-parameter', 'model:new-platform-flexberry-g-i-s-map-layer', 'model:new-platform-flexberry-g-i-s-map-object-setting', 'model:new-platform-flexberry-g-i-s-map', 'model:new-platform-flexberry-g-i-s-parameter-metadata']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it serializes records', function (assert) {\n    var record = this.subject();\n\n    var serializedRecord = record.serialize();\n\n    assert.ok(serializedRecord);\n  });\n});","define('dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-layer-metadata-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/serializers');\n  test('unit/serializers/new-platform-flexberry-g-i-s-layer-metadata-test.js should pass jscs', function () {\n    ok(true, 'unit/serializers/new-platform-flexberry-g-i-s-layer-metadata-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-layer-metadata-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/serializers/new-platform-flexberry-g-i-s-layer-metadata-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/serializers/new-platform-flexberry-g-i-s-layer-metadata-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-link-metadata-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('new-platform-flexberry-g-i-s-link-metadata', 'Unit | Serializer | new-platform-flexberry-g-i-s-link-metadata', {\n    // Specify the other units that are required for this test.\n    needs: ['serializer:new-platform-flexberry-g-i-s-link-metadata', 'transform:file', 'transform:decimal', 'transform:json', 'model:custom-inflector-rules', 'model:new-platform-flexberry-g-i-s-layer-link', 'model:new-platform-flexberry-g-i-s-layer-metadata', 'model:new-platform-flexberry-g-i-s-link-metadata', 'model:new-platform-flexberry-g-i-s-link-parameter', 'model:new-platform-flexberry-g-i-s-map-layer', 'model:new-platform-flexberry-g-i-s-map-object-setting', 'model:new-platform-flexberry-g-i-s-map', 'model:new-platform-flexberry-g-i-s-parameter-metadata']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it serializes records', function (assert) {\n    var record = this.subject();\n\n    var serializedRecord = record.serialize();\n\n    assert.ok(serializedRecord);\n  });\n});","define('dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-link-metadata-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/serializers');\n  test('unit/serializers/new-platform-flexberry-g-i-s-link-metadata-test.js should pass jscs', function () {\n    ok(true, 'unit/serializers/new-platform-flexberry-g-i-s-link-metadata-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-link-metadata-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/serializers/new-platform-flexberry-g-i-s-link-metadata-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/serializers/new-platform-flexberry-g-i-s-link-metadata-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-link-parameter-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('new-platform-flexberry-g-i-s-link-parameter', 'Unit | Serializer | new-platform-flexberry-g-i-s-link-parameter', {\n    // Specify the other units that are required for this test.\n    needs: ['serializer:new-platform-flexberry-g-i-s-link-parameter', 'transform:file', 'transform:decimal', 'transform:json', 'model:custom-inflector-rules', 'model:new-platform-flexberry-g-i-s-layer-link', 'model:new-platform-flexberry-g-i-s-layer-metadata', 'model:new-platform-flexberry-g-i-s-link-metadata', 'model:new-platform-flexberry-g-i-s-link-parameter', 'model:new-platform-flexberry-g-i-s-map-layer', 'model:new-platform-flexberry-g-i-s-map-object-setting', 'model:new-platform-flexberry-g-i-s-map', 'model:new-platform-flexberry-g-i-s-parameter-metadata']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it serializes records', function (assert) {\n    var record = this.subject();\n\n    var serializedRecord = record.serialize();\n\n    assert.ok(serializedRecord);\n  });\n});","define('dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-link-parameter-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/serializers');\n  test('unit/serializers/new-platform-flexberry-g-i-s-link-parameter-test.js should pass jscs', function () {\n    ok(true, 'unit/serializers/new-platform-flexberry-g-i-s-link-parameter-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-link-parameter-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/serializers/new-platform-flexberry-g-i-s-link-parameter-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/serializers/new-platform-flexberry-g-i-s-link-parameter-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-map-layer-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('new-platform-flexberry-g-i-s-map-layer', 'Unit | Serializer | new-platform-flexberry-g-i-s-map-layer', {\n    // Specify the other units that are required for this test.\n    needs: ['serializer:new-platform-flexberry-g-i-s-map-layer', 'transform:file', 'transform:decimal', 'transform:json', 'model:custom-inflector-rules', 'model:new-platform-flexberry-g-i-s-layer-link', 'model:new-platform-flexberry-g-i-s-layer-metadata', 'model:new-platform-flexberry-g-i-s-link-metadata', 'model:new-platform-flexberry-g-i-s-link-parameter', 'model:new-platform-flexberry-g-i-s-map-layer', 'model:new-platform-flexberry-g-i-s-map-object-setting', 'model:new-platform-flexberry-g-i-s-map', 'model:new-platform-flexberry-g-i-s-parameter-metadata']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it serializes records', function (assert) {\n    var record = this.subject();\n\n    var serializedRecord = record.serialize();\n\n    assert.ok(serializedRecord);\n  });\n});","define('dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-map-layer-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/serializers');\n  test('unit/serializers/new-platform-flexberry-g-i-s-map-layer-test.js should pass jscs', function () {\n    ok(true, 'unit/serializers/new-platform-flexberry-g-i-s-map-layer-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-map-layer-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/serializers/new-platform-flexberry-g-i-s-map-layer-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/serializers/new-platform-flexberry-g-i-s-map-layer-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-map-object-setting-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('new-platform-flexberry-g-i-s-map-object-setting', 'Unit | Serializer | new-platform-flexberry-g-i-s-map-object-setting', {\n    // Specify the other units that are required for this test.\n    needs: ['serializer:new-platform-flexberry-g-i-s-map-object-setting', 'transform:file', 'transform:decimal', 'transform:json', 'model:custom-inflector-rules', 'model:new-platform-flexberry-g-i-s-layer-link', 'model:new-platform-flexberry-g-i-s-layer-metadata', 'model:new-platform-flexberry-g-i-s-link-metadata', 'model:new-platform-flexberry-g-i-s-link-parameter', 'model:new-platform-flexberry-g-i-s-map-layer', 'model:new-platform-flexberry-g-i-s-map-object-setting', 'model:new-platform-flexberry-g-i-s-map', 'model:new-platform-flexberry-g-i-s-parameter-metadata']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it serializes records', function (assert) {\n    var record = this.subject();\n\n    var serializedRecord = record.serialize();\n\n    assert.ok(serializedRecord);\n  });\n});","define('dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-map-object-setting-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/serializers');\n  test('unit/serializers/new-platform-flexberry-g-i-s-map-object-setting-test.js should pass jscs', function () {\n    ok(true, 'unit/serializers/new-platform-flexberry-g-i-s-map-object-setting-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-map-object-setting-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/serializers/new-platform-flexberry-g-i-s-map-object-setting-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/serializers/new-platform-flexberry-g-i-s-map-object-setting-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-map-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('new-platform-flexberry-g-i-s-map', 'Unit | Serializer | new-platform-flexberry-g-i-s-map', {\n    // Specify the other units that are required for this test.\n    needs: ['serializer:new-platform-flexberry-g-i-s-map', 'transform:file', 'transform:decimal', 'transform:json', 'model:custom-inflector-rules', 'model:new-platform-flexberry-g-i-s-layer-link', 'model:new-platform-flexberry-g-i-s-layer-metadata', 'model:new-platform-flexberry-g-i-s-link-metadata', 'model:new-platform-flexberry-g-i-s-link-parameter', 'model:new-platform-flexberry-g-i-s-map-layer', 'model:new-platform-flexberry-g-i-s-map-object-setting', 'model:new-platform-flexberry-g-i-s-map', 'model:new-platform-flexberry-g-i-s-parameter-metadata']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it serializes records', function (assert) {\n    var record = this.subject();\n\n    var serializedRecord = record.serialize();\n\n    assert.ok(serializedRecord);\n  });\n});","define('dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-map-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/serializers');\n  test('unit/serializers/new-platform-flexberry-g-i-s-map-test.js should pass jscs', function () {\n    ok(true, 'unit/serializers/new-platform-flexberry-g-i-s-map-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-map-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/serializers/new-platform-flexberry-g-i-s-map-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/serializers/new-platform-flexberry-g-i-s-map-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-parameter-metadata-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('new-platform-flexberry-g-i-s-parameter-metadata', 'Unit | Serializer | new-platform-flexberry-g-i-s-parameter-metadata', {\n    // Specify the other units that are required for this test.\n    needs: ['serializer:new-platform-flexberry-g-i-s-parameter-metadata', 'transform:file', 'transform:decimal', 'transform:json', 'model:custom-inflector-rules', 'model:new-platform-flexberry-g-i-s-layer-link', 'model:new-platform-flexberry-g-i-s-layer-metadata', 'model:new-platform-flexberry-g-i-s-link-metadata', 'model:new-platform-flexberry-g-i-s-link-parameter', 'model:new-platform-flexberry-g-i-s-map-layer', 'model:new-platform-flexberry-g-i-s-map-object-setting', 'model:new-platform-flexberry-g-i-s-map', 'model:new-platform-flexberry-g-i-s-parameter-metadata']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it serializes records', function (assert) {\n    var record = this.subject();\n\n    var serializedRecord = record.serialize();\n\n    assert.ok(serializedRecord);\n  });\n});","define('dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-parameter-metadata-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/serializers');\n  test('unit/serializers/new-platform-flexberry-g-i-s-parameter-metadata-test.js should pass jscs', function () {\n    ok(true, 'unit/serializers/new-platform-flexberry-g-i-s-parameter-metadata-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/serializers/new-platform-flexberry-g-i-s-parameter-metadata-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/serializers/new-platform-flexberry-g-i-s-parameter-metadata-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/serializers/new-platform-flexberry-g-i-s-parameter-metadata-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/services/local-storage-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('service:local-storage', 'Unit | Service | local storage', {\n    // Specify the other units that are required for this test.\n    // needs: ['service:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var service = this.subject();\n    assert.ok(service);\n  });\n});","define('dummy/tests/unit/services/local-storage-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/services');\n  test('unit/services/local-storage-test.js should pass jscs', function () {\n    ok(true, 'unit/services/local-storage-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/services/local-storage-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/services/local-storage-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/services/local-storage-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/services/map-store-test', ['exports', 'ember', 'ember-qunit', 'dummy/tests/helpers/start-app'], function (exports, _ember, _emberQunit, _dummyTestsHelpersStartApp) {\n\n  var App = undefined;\n\n  (0, _emberQunit.moduleFor)('service:map-store', 'Unit | Service | map store', {\n    // Specify the other units that are required for this test.\n    needs: ['model:custom-inflector-rules', 'model:new-platform-flexberry-g-i-s-layer-link', 'model:new-platform-flexberry-g-i-s-layer-metadata', 'model:new-platform-flexberry-g-i-s-link-metadata', 'model:new-platform-flexberry-g-i-s-link-parameter', 'model:new-platform-flexberry-g-i-s-map-layer', 'model:new-platform-flexberry-g-i-s-map-object-setting', 'model:new-platform-flexberry-g-i-s-map', 'model:new-platform-flexberry-g-i-s-parameter-metadata'],\n\n    beforeEach: function beforeEach() {\n      App = (0, _dummyTestsHelpersStartApp['default'])();\n    },\n\n    afterEach: function afterEach() {\n      _ember['default'].run(App, 'destroy');\n    }\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var _this = this;\n\n    _ember['default'].run(function () {\n      var service = _this.subject();\n      assert.ok(service);\n    });\n  });\n\n  (0, _emberQunit.test)('it should have property osmmap after init', function (assert) {\n    var _this2 = this;\n\n    _ember['default'].run(function () {\n      assert.expect(3);\n      var service = _this2.subject();\n      var defaultMap = service.get('osmmap');\n      assert.ok(defaultMap, 'Map created');\n      assert.equal(defaultMap.get('mapLayer').length, 1, 'it have one map layer');\n      assert.equal(defaultMap.get('mapLayer').objectAt(0).get('type'), 'osm', 'and this layer of type osm');\n    });\n  });\n});","define('dummy/tests/unit/services/map-store-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/services');\n  test('unit/services/map-store-test.js should pass jscs', function () {\n    ok(true, 'unit/services/map-store-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/services/map-store-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/services/map-store-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/services/map-store-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/utils/leaflet-opacity-test', ['exports', 'dummy/utils/leaflet-opacity', 'qunit'], function (exports, _dummyUtilsLeafletOpacity, _qunit) {\n\n  (0, _qunit.module)('Unit | Util | Leaflet-opacity');\n\n  (0, _qunit.test)('it works', function (assert) {\n\n    assert.expect(6);\n\n    var color = '#abcdef';\n    var opacity = 0.42;\n\n    var tileLayer = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png?{foo}', { foo: 'bar' });\n    tileLayer.options.color = color;\n    (0, _dummyUtilsLeafletOpacity.setLeafletLayerOpacity)({ leafletLayer: tileLayer, opacity: opacity });\n    assert.deepEqual([tileLayer.options.color, tileLayer.options.opacity], [color, opacity], 'Tile layer style kept and set');\n\n    var featureGroup = L.featureGroup([L.marker([50, 30]), L.polygon([[3, -10], [4, -10], [4, -11], [3, -11]])]);\n    featureGroup.eachLayer(function (l) {\n      l.options.color = color;\n    });\n    (0, _dummyUtilsLeafletOpacity.setLeafletLayerOpacity)({ leafletLayer: featureGroup, opacity: opacity });\n    var fgGeometries = featureGroup.getLayers();\n    assert.deepEqual([fgGeometries[0].options.color, fgGeometries[0].options.opacity], [color, opacity], 'Marker style in featureGroup kept and set');\n    assert.deepEqual([fgGeometries[1].options.color, fgGeometries[1].options.opacity], [color, opacity], 'Polygon style in featureGroup kept and set');\n\n    var markerGroup = L.markerClusterGroup();\n    markerGroup.addLayers([L.marker([0, 1]), L.marker([2, 3])]);\n    markerGroup.eachLayer(function (l) {\n      l.options.color = color;\n    });\n    (0, _dummyUtilsLeafletOpacity.setLeafletLayerOpacity)({ leafletLayer: markerGroup, opacity: opacity });\n    var markers = markerGroup.getLayers();\n    assert.deepEqual([markers[1].options.color, markers[1].options.opacity], [color, opacity], 'Marker style in markerCluster kept and set');\n\n    var data = { 'type': 'FeatureCollection',\n      'features': [{ 'type': 'Feature',\n        'geometry': {\n          'type': 'Point', 'coordinates': [2, 3] }\n      }, { 'type': 'Feature',\n        'geometry': {\n          'type': 'Polygon',\n          'coordinates': [[[10, 0], [11, 0], [11, 1], [10, 1], [10, 0]]]\n        } }]\n    };\n\n    var geojson = L.geoJSON(data, {\n      style: function style(feature) {\n        return { color: color };\n      } });\n\n    geojson.eachLayer(function (l) {\n      l.options.color = color;\n    });\n    (0, _dummyUtilsLeafletOpacity.setLeafletLayerOpacity)({ leafletLayer: geojson, opacity: opacity });\n    var geometries = geojson.getLayers();\n    assert.deepEqual([geometries[0].options.color, geometries[0].options.opacity], [color, opacity], 'feature Point style in geoJOSN kept and set');\n    assert.deepEqual([geometries[1].options.color, geometries[1].options.opacity], [color, opacity * _dummyUtilsLeafletOpacity.maxGeometryOpacity], 'feature Polygon style in geoJOSN kept and set');\n  });\n});","define('dummy/tests/unit/utils/leaflet-opacity-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/utils');\n  test('unit/utils/leaflet-opacity-test.js should pass jscs', function () {\n    ok(true, 'unit/utils/leaflet-opacity-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/utils/leaflet-opacity-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/utils/leaflet-opacity-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/utils/leaflet-opacity-test.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/utils/polygon-intersect-check-test', ['exports', 'ember-flexberry-gis/utils/polygon-intersect-check', 'qunit'], function (exports, _emberFlexberryGisUtilsPolygonIntersectCheck, _qunit) {\n\n  (0, _qunit.module)('Unit | Utility | polygon intersect check');\n\n  //Test intersecting polygon, type - L.Polygon\n  var intersectPolygonLeaflet = L.polygon([[56.09, 58.03], [56.02, 58.007], [56.07, 58.07], [56.08, 58.02]], { color: 'red' });\n\n  //Test intersecting polygon, type - array of latLngs\n  var intersectPolygonArray = [[[56.09, 58.03], [56.02, 58.007], [56.07, 58.07], [56.08, 58.02]]];\n\n  //Test intersecting polygon, type - GeoJson\n  var intersectPolygonGeoJson = {\n    type: 'Polygon',\n    coordinates: [[[56.09, 58.03], [56.02, 58.007], [56.07, 58.07], [56.08, 58.02]]]\n  };\n\n  //Test nonintersecting polygon, type - L.Polygon\n  var nonIntersectPolygonLeaflet = L.polygon([[56.09, 58.03], [56.02, 58.007], [56.07, 58.07], [56.1, 58.02]], { color: 'red' });\n\n  //Test nonintersecting polygon, type - array of latLngs\n  var nonIntersectPolygonArray = [[[56.09, 58.03], [56.02, 58.007], [56.07, 58.07], [56.1, 58.02]]];\n\n  //Test nonintersecting polygon, type - GeoJson\n  var nonIntersectPolygonGeoJson = {\n    type: 'Polygon',\n    coordinates: [[[56.09, 58.03], [56.02, 58.007], [56.07, 58.07], [56.1, 58.02]]]\n  };\n\n  //Test intersecting multi polygon, type - L.Polygon\n  var intersectMPolygonLeaflet = L.polygon([[[45.51, -122.68], [37.77, -122.43], [34.04, -118.2]], [[56.09, 58.03], [56.02, 58.007], [56.07, 58.07], [56.08, 58.02]]], { color: 'red' });\n\n  //Test intersecting multi polygon, type - array of latLngs\n  var intersectMPolygonArray = [[[45.51, -122.68], [37.77, -122.43], [34.04, -118.2]], [[56.09, 58.03], [56.02, 58.007], [56.07, 58.07], [56.08, 58.02]]];\n\n  //Test intersecting multi polygon, type - GeoJson\n  var intersectMPolygonGeoJson = {\n    type: 'MultiPolygon',\n    coordinates: [[[[45.51, -122.68], [37.77, -122.43], [34.04, -118.2]]], [[[56.09, 58.03], [56.02, 58.007], [56.07, 58.07], [56.08, 58.02]]]]\n  };\n\n  //Test nonintersecting multi polygon, type - L.Polygon\n  var nonIntersectMPolygonLeaflet = L.polygon([[[45.51, -122.68], [37.77, -122.43], [34.04, -118.2]], [[56.09, 58.03], [56.02, 58.007], [56.07, 58.07], [56.1, 58.02]]], { color: 'red' });\n\n  //Test nonintersecting multi polygon, type - array of latLngs\n  var nonIntersectMPolygonArray = [[[45.51, -122.68], [37.77, -122.43], [34.04, -118.2]], [[56.09, 58.03], [56.02, 58.007], [56.07, 58.07], [56.1, 58.02]]];\n\n  //Test nonintersecting multi polygon, type - GeoJson\n  var nonIntersectMPolygonGeoJson = {\n    type: 'MultiPolygon',\n    coordinates: [[[[45.51, -122.68], [37.77, -122.43], [34.04, -118.2]]], [[[56.09, 58.03], [56.02, 58.007], [56.07, 58.07], [56.1, 58.02]]]]\n  };\n\n  (0, _qunit.test)('should define is testing polygon intersecting or not', function (assert) {\n\n    assert.equal((0, _emberFlexberryGisUtilsPolygonIntersectCheck['default'])(intersectPolygonLeaflet), true);\n    assert.equal((0, _emberFlexberryGisUtilsPolygonIntersectCheck['default'])(nonIntersectPolygonLeaflet), false);\n\n    assert.equal((0, _emberFlexberryGisUtilsPolygonIntersectCheck['default'])(intersectPolygonArray), true);\n    assert.equal((0, _emberFlexberryGisUtilsPolygonIntersectCheck['default'])(nonIntersectPolygonArray), false);\n\n    assert.equal((0, _emberFlexberryGisUtilsPolygonIntersectCheck['default'])(intersectPolygonGeoJson), true);\n    assert.equal((0, _emberFlexberryGisUtilsPolygonIntersectCheck['default'])(nonIntersectPolygonGeoJson), false);\n\n    assert.equal((0, _emberFlexberryGisUtilsPolygonIntersectCheck['default'])(intersectMPolygonLeaflet), true);\n    assert.equal((0, _emberFlexberryGisUtilsPolygonIntersectCheck['default'])(nonIntersectMPolygonLeaflet), false);\n\n    assert.equal((0, _emberFlexberryGisUtilsPolygonIntersectCheck['default'])(intersectMPolygonArray), true);\n    assert.equal((0, _emberFlexberryGisUtilsPolygonIntersectCheck['default'])(nonIntersectMPolygonArray), false);\n\n    assert.equal((0, _emberFlexberryGisUtilsPolygonIntersectCheck['default'])(intersectMPolygonGeoJson), true);\n    assert.equal((0, _emberFlexberryGisUtilsPolygonIntersectCheck['default'])(nonIntersectMPolygonGeoJson), false);\n  });\n});","define('dummy/tests/unit/utils/polygon-intersect-check-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/utils');\n  test('unit/utils/polygon-intersect-check-test.js should pass jscs', function () {\n    ok(true, 'unit/utils/polygon-intersect-check-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/utils/polygon-intersect-check-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/utils/polygon-intersect-check-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/utils/polygon-intersect-check-test.js should pass jshint.');\n  });\n});","define('dummy/tests/views/components-examples/flexberry-maplayers/settings-example.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - views/components-examples/flexberry-maplayers');\n  test('views/components-examples/flexberry-maplayers/settings-example.js should pass jscs', function () {\n    ok(true, 'views/components-examples/flexberry-maplayers/settings-example.js should pass jscs.');\n  });\n});","define('dummy/tests/views/components-examples/flexberry-maplayers/settings-example.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - views/components-examples/flexberry-maplayers/settings-example.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'views/components-examples/flexberry-maplayers/settings-example.js should pass jshint.');\n  });\n});","define('dummy/tests/views/components-examples/flexberry-tree/settings-example.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - views/components-examples/flexberry-tree');\n  test('views/components-examples/flexberry-tree/settings-example.js should pass jscs', function () {\n    ok(true, 'views/components-examples/flexberry-tree/settings-example.js should pass jscs.');\n  });\n});","define('dummy/tests/views/components-examples/flexberry-tree/settings-example.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - views/components-examples/flexberry-tree/settings-example.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'views/components-examples/flexberry-tree/settings-example.js should pass jshint.');\n  });\n});","/* jshint ignore:start */\n\nrequire('dummy/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChhEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvFA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxrtDA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7FA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1EA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3EA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvhtGA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5EA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACblGA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7EA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9EA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtMA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnlIA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;","file":"tests.js"}