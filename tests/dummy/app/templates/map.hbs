<h3 class="ui header">{{t "forms.map.caption"}}</h3>
{{ui-message
  type="success"
  closeable=true
  visible=showFormSuccessMessage
  caption=formSuccessMessageCaption
  message=formSuccessMessage
  onShow=(action "onSuccessMessageShow")
  onHide=(action "onSuccessMessageHide")
}}
{{ui-message
  type="error"
  closeable=true
  visible=showFormErrorMessage
  caption=formErrorMessageCaption
  message=formErrorMessage
  onShow=(action "onErrorMessageShow")
  onHide=(action "onErrorMessageHide")
}}
<form class="ui {{formState}} form flexberry-vertical-form" role="form">
  <div class="field">
    <div class="flexberry-edit-panel">
      {{#unless readonly}}
        {{#unless (and hasParentRoute (not saveBeforeRouteLeave))}}
          <button type="submit" class="ui positive button" {{action "save"}}>
            {{t "forms.edit-form.save-button-text"}}
          </button>
        {{/unless}}
        {{#unless (and hasParentRoute (not saveBeforeRouteLeave))}}
          <button type="submit" class="ui positive button" {{action "saveAndClose"}}>
            {{t "forms.edit-form.saveAndClose-button-text"}}
          </button>
        {{/unless}}
        {{#unless (and model.isNew (or (not hasParentRoute) (and hasParentRoute saveBeforeRouteLeave)))}}
          <button type="submit" class="ui negative button" {{action "delete"}}>
            {{t "forms.edit-form.delete-button-text"}}
          </button>
        {{/unless}}
      {{/unless}}
      <button type="submit" class="ui button" {{action "close"}}>{{t "forms.edit-form.close-button-text"}}</button>
    </div>
  </div>
  <div class="ui inernally celled grid">
    <div class="row">
      <div class="sixteen wide column">
        {{#flexberry-maptoolbar
          leafletMap=leafletMap
          layers=model.rootLayer.layers as |mapToolbar|
        }}
          {{map-tools/drag activate=(action "onMapToolActivate" target=mapToolbar)}}
          {{map-tools/zoom-in activate=(action "onMapToolActivate" target=mapToolbar)}}
          {{map-tools/zoom-out activate=(action "onMapToolActivate" target=mapToolbar)}}
          {{map-commands/go-to execute=(action "onMapCommandExecute" target=mapToolbar)}}
          {{map-commands/full-extent execute=(action "onMapCommandExecute" target=mapToolbar)}}
          {{map-commands/search execute=(action "onMapCommandExecute" target=mapToolbar)}}
          {{map-tools/identify activate=(action "onMapToolActivate" target=mapToolbar)}}
          {{map-tools/measure activate=(action "onMapToolActivate" target=mapToolbar)}}
          {{map-tools/draw activate=(action "onMapToolActivate" target=mapToolbar)}}
          {{map-commands/export execute=(action "onMapCommandExecute" target=mapToolbar)}}
        {{/flexberry-maptoolbar}}
      </div>
    </div>
    <div class="row">
      <div class="ten wide column">
        {{#flexberry-map
          lat=model.lat
          lng=model.lng
          zoom=model.zoom
          layerLinks=layerLinks
          queryFilter=queryFilter
          leafletInit=(action "onMapLeafletInit" "leafletMap")
          leafletDestroy=(action "onMapLeafletDestroy" "leafletMap")
          moveend=(action "onMapMoveend" "model.lat" "model.lng")
          zoomend=(action "onMapZoomend" "model.zoom")
        }}
          {{flexberry-layers
            leafletMap=leafletMap
            leafletContainer=leafletMap
            layers=model.rootLayer.layers
          }}
          {{scale-control
            map=leafletMap
            imperial=false
          }}
          {{mini-map
            map=leafletMap
          }}
        {{/flexberry-map}}
      </div>
      <div class="six wide column">
        {{flexberry-maplayers
          class="styled"
          cswConnections=cswConnections
          leafletMap=leafletMap
          layers=(get-with-dynamic-actions this "model.rootLayer.layers"
            hierarchyPropertyName="layers"
            pathKeyword="layerPath"
            dynamicActions=(array
              (hash
                on="add"
                actionName="onMapLayerAdd"
                actionArguments=(array "{% layerPath %}")
              )
              (hash
                on="edit"
                actionName="onMapLayerEdit"
                actionArguments=(array "{% layerPath %}")
              )
              (hash
                on="remove"
                actionName="onMapLayerRemove"
                actionArguments=(array "{% layerPath %}")
              )
              (hash
                on="changeVisibility"
                actionName="onMapLayerChangeVisibility"
                actionArguments=(array "{% layerPath %}.visibility")
              )
            )
          )
          add=(action "onMapLayerAdd" "model.rootLayer")
        }}
      </div>
    </div>
  </div>
</form>
