<h3 class="ui header">{{t "forms.map.caption"}}</h3>
{{ui-message
  type="success"
  closeable=true
  visible=showFormSuccessMessage
  caption=formSuccessMessageCaption
  message=formSuccessMessage
  onShow=(action "onSuccessMessageShow")
  onHide=(action "onSuccessMessageHide")
}}
{{ui-message
  type="error"
  closeable=true
  visible=showFormErrorMessage
  caption=formErrorMessageCaption
  message=formErrorMessage
  onShow=(action "onErrorMessageShow")
  onHide=(action "onErrorMessageHide")
}}
<div class="ui {{formState}} form flexberry-vertical-form">
  <div class="field">
    <div class="flexberry-edit-panel">
      {{#unless readonly}}
        {{#unless (and hasParentRoute (not saveBeforeRouteLeave))}}
          <button type="submit" class="ui positive button" {{action "save"}}>
            {{t "forms.edit-form.save-button-text"}}
          </button>
        {{/unless}}
        {{#unless (and hasParentRoute (not saveBeforeRouteLeave))}}
          <button type="submit" class="ui positive button" {{action "saveAndClose"}}>
            {{t "forms.edit-form.saveAndClose-button-text"}}
          </button>
        {{/unless}}
        {{#unless (and model.isNew (or (not hasParentRoute) (and hasParentRoute saveBeforeRouteLeave)))}}
          <button type="submit" class="ui negative button" {{action "delete"}}>
            {{t "forms.edit-form.delete-button-text"}}
          </button>
        {{/unless}}
      {{/unless}}
      <button type="submit" class="ui button" {{action "close"}}>{{t "forms.edit-form.close-button-text"}}</button>
    </div>
  </div>
  <div class="ui inernally celled grid">
    <div class="ui very wide right sidebar treeview pushable">
        {{flexberry-maplayers
          class="styled"
          cswConnections=cswConnections
          leafletMap=leafletMap
          layers=(get-with-dynamic-actions this "model.hierarchy"
            hierarchyPropertyName="layers"
            pathKeyword="layerPath"
            dynamicActions=(array
              (hash
                on="add"
                actionName="onMapLayerAdd"
                actionArguments=(array "{% layerPath %}")
              )
              (hash
                on="edit"
                actionName="onMapLayerEdit"
                actionArguments=(array "{% layerPath %}")
              )
              (hash
                on="remove"
                actionName="onMapLayerRemove"
                actionArguments=(array "{% layerPath %}")
              )
              (hash
                on="changeVisibility"
                actionName="onMapLayerChangeVisibility"
                actionArguments=(array "{% layerPath %}.visibility")
              )
            )
          )
        add=(action "onMapLayerAdd" "model.hierarchy")
      }}
    </div>
    <div class="ui very wide right sidebar search pushable">
      {{flexberry-search-panel
          querySearch=(action "querySearch")
          clearSearch=(action "clearSearch")
          searchInProcess=searchInProcess
          searchSettings=(flexberry-search-properties-osm-ru "http://openstreetmap.ru/api/autocomplete?q={query}")
          }}
      {{layer-result-list
        results=searchResults
        serviceLayer=serviceLayer
        leafletMap=leafletMap
        }}
    </div>
    <div class="ui very wide right sidebar bookmarks pushable">
      {{spatial-bookmark        
        leafletMap=leafletMap
        mapid=model.id
      }}
    </div>
    <div class="row">
      <div class="sixteen wide column">
        {{#flexberry-maptoolbar
          leafletMap=leafletMap
          layers=model.hierarchy as |mapToolbar|
        }}
          {{map-tools/drag activate=(action "onMapToolActivate" target=mapToolbar)}}
          {{map-tools/zoom-in activate=(action "onMapToolActivate" target=mapToolbar)}}
          {{map-tools/zoom-out activate=(action "onMapToolActivate" target=mapToolbar)}}
          {{map-commands/go-to execute=(action "onMapCommandExecute" target=mapToolbar)}}
          {{map-commands/full-extent execute=(action "onMapCommandExecute" target=mapToolbar)}}
          {{map-commands/search execute=(action "onMapCommandExecute" target=mapToolbar)}}
          {{map-tools/identify
            identifyAll=false
            activate=(action "onMapToolActivate" target=mapToolbar)}}
          {{map-tools/measure
            measureCoordinates=false
            activate=(action "onMapToolActivate" target=mapToolbar)}}
          {{map-tools/draw
            drawPolygon=false
            activate=(action "onMapToolActivate" target=mapToolbar)}}
          {{map-commands/export execute=(action "onMapCommandExecute" target=mapToolbar)}}
          <a {{action 'toggleSidebar' '.ui.sidebar.bookmarks' '.mappanel'}}
              class="icon item"
              title={{t "forms.map.bookmarksbuttontooltip"}}>
            <i class="bookmark icon"></i>
          </a>
          <a {{action 'toggleSidebar' '.ui.sidebar.treeview' '.mappanel'}}
              class="icon item"
              title={{t "forms.map.treeviewbuttontooltip"}}>
            <i class="list icon"></i>
          </a>
          <a {{action 'toggleSidebar' '.ui.sidebar.search' '.mappanel'}}
              class="icon item"
              title={{t "forms.map.searchbuttontooltip"}}>
            <i class="search icon"></i>
          </a>
        {{/flexberry-maptoolbar}}
      </div>
    </div>
    <div class="row mappanel">
      {{#flexberry-map
        lat=model.lat
        lng=model.lng
        zoom=model.zoom
        queryFilter=queryFilter
        leafletInit=(action "onMapLeafletInit" "leafletMap")
        serviceLayerInit=(action "onServiceLayerInit" "serviceLayer")
        leafletDestroy=(action "onMapLeafletDestroy" "leafletMap")
        moveend=(action "onMapMoveend" "model.lat" "model.lng")
        zoomend=(action "onMapZoomend" "model.zoom")
        class="pusher"
      }}
        {{flexberry-layers
          leafletMap=leafletMap
          leafletContainer=leafletMap
          layers=model.hierarchy
        }}
        {{scale-control
          map=leafletMap
          imperial=false
        }}
        {{#minimap-control
            map=leafletMap as |groupLayers|
        }}
          {{flexberry-layers
            leafletContainer=groupLayers
            layers=model.hierarchy
          }}
        {{/minimap-control}}
      {{/flexberry-map}}
    </div>
  </div>
</div>
