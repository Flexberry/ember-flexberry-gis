{{!--
  See https://github.com/ciena-blueplanet/ember-block-slots#usage
  {{yield}} is required here to make yield-slots available.
--}}
{{yield}}

{{#flexberry-treenode
  _hasContent=_hasContent
  headerClick=(action "onHeaderClick")
  beforeExpand=(action "onBeforeExpand")
  beforeCollapse=(action "onBeforeCollapse")
}}
  {{#block-slot "header"}}
    <div class="flexberry-treenode-header-block">
      <div class="flexberry-treenode-caption-block">
        {{flexberry-ddau-checkbox
          class=(concat flexberryClassNames.visibilityCheckbox " " flexberryClassNames.preventExpandCollapse)
          value=layer.visibility
          change=(action "onVisibilityCheckboxChange")
        }}
        {{flexberry-icon
          class=(concat flexberryClassNames.typeIcon " " _typeIconClass)
        }}
        <label class={{flexberryClassNames.caption}}>
          {{layer.name}}
      </label>
      </div>
      <div class="flexberry-treenode-buttons-block">
        {{#if (not readonly)}}
          {{flexberry-button
            class=(concat flexberryClassNames.removeButton " right floated " flexberryClassNames.preventExpandCollapse)
            iconClass="trash icon"
            tooltip=(t "components.flexberry-maplayer.remove-button.tooltip")
            click=(action "onRemoveButtonClick")
          }}
          {{flexberry-button
            class=(concat flexberryClassNames.editButton " right floated " flexberryClassNames.preventExpandCollapse)
            iconClass="edit icon"
            tooltip=(t "components.flexberry-maplayer.edit-button.tooltip")
            click=(action "onEditButtonClick")
          }}
          {{flexberry-button
            class=(concat flexberryClassNames.copyButton " right floated " flexberryClassNames.preventExpandCollapse)
            iconClass="copy icon"
            tooltip=(t "components.flexberry-maplayer.copy-button.tooltip")
            click=(action "onCopyButtonClick")
          }}
          {{#if _addOperationIsAvailable}}
            {{flexberry-button
              class=(concat flexberryClassNames.addButton " right floated " flexberryClassNames.preventExpandCollapse)
              iconClass="plus icon"
              tooltip=(t "components.flexberry-maplayer.add-button.tooltip")
              click=(action "onAddButtonClick")
            }}
          {{/if}}
          {{#if _fitBoundsOperationIsAvailable}}
            {{flexberry-button
              class=(concat flexberryClassNames.boundsButton " right floated " flexberryClassNames.preventExpandCollapse)
              iconClass="maximize icon"
              tooltip=(t "components.flexberry-maplayer.bounds-button.tooltip")
              click=(action "onBoundsButtonClick")
            }}
          {{/if}}
          {{#if _attributesOperationIsAvailable}}
            {{flexberry-button
              class=(concat flexberryClassNames.attributesButton " right floated " flexberryClassNames.preventExpandCollapse)
              iconClass="browser icon"
              tooltip=(t "components.flexberry-maplayer.attributes-button.tooltip")
              click=(action "onAttributesButtonClick")
            }}
          {{/if}}
        {{/if}}
        {{#if _canChangeOpacity}}
          <label class="{{flexberryClassNames.opacityLabel}}" title="{{t "components.flexberry-maplayer.opacity-label.tooltip"}}">
            {{_opacityDisplayValue}}
          </label>
        {{/if}}
      </div>
    </div>
    {{!--
      Semantic UI modal dialogs takes long time to be initialized
      so include each dialog in the markup only if dialog has been requested by user (similar "lazy load").
    --}}
    {{#if _addDialogHasBeenRequested}}
      {{component "layers-dialogs/add"
        class=flexberryClassNames.addDialog
        visible=_addDialogIsVisible
        layer=_addDialogLayer
        leafletMap=leafletMap
        typeIsReadonly=false
        approve=(action "onAddDialogApprove")
      }}
    {{/if}}
    {{#if _copyDialogHasBeenRequested}}
      {{component "layers-dialogs/copy"
        class=flexberryClassNames.copyDialog
        visible=_copyDialogIsVisible
        layer=_copyDialogLayer
        typeIsReadonly=true
        leafletMap=leafletMap
        approve=(action "onCopyDialogApprove")
      }}
    {{/if}}
    {{#if _editDialogHasBeenRequested}}
      {{component "layers-dialogs/edit"
        class=flexberryClassNames.editDialog
        visible=_editDialogIsVisible
        layer=_editDialogLayer
        links=layer.layerLink
        linksPropertyPath="links"
        typeIsReadonly=true
        leafletMap=leafletMap
        approve=(action "onEditDialogApprove")
      }}
    {{/if}}
    {{#if _removeDialogHasBeenRequested}}
      {{component "layers-dialogs/remove"
        class=flexberryClassNames.removeDialog
        visible=_removeDialogIsVisible
        layer=_removeDialogLayer
        approve=(action "onRemoveDialogApprove")
      }}
    {{/if}}

    {{#yield-slot "header"}}
      {{yield}}
    {{/yield-slot}}
  {{/block-slot}}

  {{#block-slot "content"}}
    {{#if _hasLayers}}
      {{flexberry-maplayers
        readonly=readonly
        leafletMap=leafletMap
        layers=layer.layers
      }}
    {{/if}}
    {{#yield-slot "content"}}
      {{yield}}
      {{#if _canChangeOpacity}}
        {{flexberry-ddau-slider
          class=(concat flexberryClassNames.opacitySlider " " flexberryClassNames.preventExpandCollapse)
          value=layer.settingsAsObject.opacity
          change=(action "onOpacitySliderChange")
        }}
      {{/if}}
      {{#if (known-for-type "component" (concat "layer-treenode-contents/" layer.type))}}
        {{component (concat "layer-treenode-contents/" layer.type)
          layer=layer
          dynamicActions=layer.dynamicActions
        }}
      {{/if}}
      {{#if (and layer.legendCanBeDisplayed hasBeenExpanded)}}
        {{component (concat "legends/" layer.type "-legend")
          layer=layer
        }}
      {{/if}}
    {{/yield-slot}}
  {{/block-slot}}
{{/flexberry-treenode}}
