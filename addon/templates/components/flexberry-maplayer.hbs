{{!--
  See https://github.com/ciena-blueplanet/ember-block-slots#usage
  {{yield}} is required here to make yield-slots available.
--}}
{{yield}}

{{#flexberry-treenode
  _hasContent=_hasContent
  headerClick=(action "onHeaderClick")
  beforeExpand=(action "onBeforeExpand")
  beforeCollapse=(action "onBeforeCollapse")
}}
  {{#block-slot "header"}}
    <div class="flexberry-treenode-header-block">
      <div class="flexberry-treenode-caption-block">
        {{#if (and (not-eq layer.type 'group') compareLayersEnabled)}}
          {{flexberry-ddau-checkbox
            class=(concat flexberryClassNames.visibilityCheckbox " " flexberryClassNames.preventExpandCollapse)
            value=layer.visibility
            change=(action "onChange")
            readonly=(and (not-eq side layer.side) (not-eq layer.side null) true)
          }}
        {{else}}
          {{#if (not compareLayersEnabled)}}
            {{flexberry-ddau-checkbox
              class=(concat flexberryClassNames.visibilityCheckbox " " flexberryClassNames.preventExpandCollapse)
              value=layer.visibility
              change=(action "onVisibilityCheckboxChange")
            }}
          {{/if}}
        {{/if}}
        {{flexberry-icon
          class=(concat flexberryClassNames.typeIcon " " _typeIconClass)
        }}
        <label class={{flexberryClassNames.caption}}>
          {{layer.name}}
        </label>
        {{#if (not compareLayersEnabled)}}
          <div class="flexberry-treenode-buttons-block hidden">
            {{#if (not readonly)}}
              {{flexberry-button
                class=(concat flexberryClassNames.attributesButton " floated " flexberryClassNames.preventExpandCollapse)
                iconClass="plus icon"
                tooltip=(t "components.flexberry-maplayer.plus-button.tooltip")
                click=(action "onFeatureCreateButtonClick")
              }}
              {{#if _attributesOperationIsAvailable}}
                {{flexberry-button
                  class=(concat flexberryClassNames.attributesButton " floated " flexberryClassNames.preventExpandCollapse)
                  iconClass="browser icon"
                  tooltip=(t "components.flexberry-maplayer.attributes-button.tooltip")
                  click=(action "onAttributesButtonClick")
                }}
              {{/if}}
              <div class="allmore floated flexberry-button ui button icon">
                <a class="icon item more" {{action "onSubmenu" on="click"}}>
                  <i class="icon">...</i>
                </a>
                <div class="more submenu {{if isSubmenu '' 'hidden'}}">
                  <a class="more-button" {{action "onSubmenu" on="click"}}>
                    <p>...</p>
                  </a>
                  {{#if _fitBoundsOperationIsAvailable}}
                    <div class="{{flexberryClassNames.boundsButton}}">
                      <a class="icon item" title="{{t "components.flexberry-maplayer.bounds-button.tooltip"}}" {{action "onBoundsButtonClick" on="click"}}>
                        <i class="maximize icon"></i>
                        {{t "components.flexberry-maplayer.bounds-button.tooltip"}}
                      </a>
                    </div>
                  {{/if}}
                  <div class="{{flexberryClassNames.editButton}}">
                    <a class="icon item" title="{{t "components.flexberry-maplayer.edit-button.tooltip"}}" {{action "onEditButtonClick" on="click"}}>
                      <i class="edit icon"></i>
                      {{t "components.flexberry-maplayer.edit-button.tooltip"}}
                    </a>
                  </div>
                  <div class="{{flexberryClassNames.copyButton}}">
                    <a class="icon item" title="{{t "components.flexberry-maplayer.copy-button.tooltip"}}" {{action "onCopyButtonClick" on="click"}}>
                      <i class="copy icon"></i>
                      {{t "components.flexberry-maplayer.copy-button.tooltip"}}
                    </a>
                  </div>
                  {{#if _addOperationIsAvailable}}
                    <div class="{{flexberryClassNames.addButton}}">
                      <a class="icon item" title="{{t "components.flexberry-maplayer.add-button.tooltip"}}" {{action "onAddButtonClick" on="click"}}>
                        <i class="plus icon"></i>
                        {{t "components.flexberry-maplayer.add-button.tooltip"}}
                      </a>
                    </div>
                  {{/if}}
                  <div class="{{flexberryClassNames.removeButton}}">
                    <a class="icon item" title="{{t "components.flexberry-maplayer.remove-button.tooltip"}}" {{action "onRemoveButtonClick" on="click"}}>
                      <i class="trash icon"></i>
                      {{t "components.flexberry-maplayer.remove-button.tooltip"}}
                    </a>
                  </div>
                </div>
              </div>
            {{/if}}
          </div>
        {{/if}}
      </div>
    </div>
    {{!--
      Semantic UI modal dialogs takes long time to be initialized
      so include each dialog in the markup only if dialog has been requested by user (similar "lazy load").
    --}}
    {{#if _addDialogHasBeenRequested}}
      {{component "layers-dialogs/add"
        class=flexberryClassNames.addDialog
        visible=_addDialogIsVisible
        layer=_addDialogLayer
        leafletMap=leafletMap
        typeIsReadonly=false
        approve=(action "onAddDialogApprove")
      }}
    {{/if}}
    {{#if _copyDialogHasBeenRequested}}
      {{component "layers-dialogs/copy"
        class=flexberryClassNames.copyDialog
        visible=_copyDialogIsVisible
        layer=_copyDialogLayer
        typeIsReadonly=true
        leafletMap=leafletMap
        approve=(action "onCopyDialogApprove")
      }}
    {{/if}}
    {{#if _editDialogHasBeenRequested}}
      {{component "layers-dialogs/edit"
        class=flexberryClassNames.editDialog
        visible=_editDialogIsVisible
        layer=_editDialogLayer
        links=layer.layerLink
        linksPropertyPath="links"
        typeIsReadonly=true
        leafletMap=leafletMap
        approve=(action "onEditDialogApprove")
      }}
    {{/if}}
    {{#if _removeDialogHasBeenRequested}}
      {{component "layers-dialogs/remove"
        class=flexberryClassNames.removeDialog
        visible=_removeDialogIsVisible
        layer=_removeDialogLayer
        approve=(action "onRemoveDialogApprove")
      }}
    {{/if}}

    {{#yield-slot "header"}}
      {{yield}}
    {{/yield-slot}}
  {{/block-slot}}

  {{#block-slot "content"}}
    {{#if _hasLayers}}
      {{flexberry-maplayers
        readonly=readonly
        leafletMap=leafletMap
        layers=layer.layers
        compareLayersEnabled=compareLayersEnabled
        side=side
        sideBySide=sideBySide
        leftLayer=leftLayer
        rightLayer=rightLayer
        isGroup=isGroup
      }}
    {{/if}}
    {{#yield-slot "content"}}
      {{yield}}
      {{#if _canChangeOpacity}}
        {{flexberry-ddau-slider
          class=(concat flexberryClassNames.opacitySlider " " flexberryClassNames.preventExpandCollapse)
          value=layer.settingsAsObject.opacity
          change=(action "onOpacitySliderChange")
        }}
      {{/if}}
      {{#if (known-for-type "component" (concat "layer-treenode-contents/" layer.type))}}
        {{component (concat "layer-treenode-contents/" layer.type)
          layer=layer
          dynamicActions=layer.dynamicActions
        }}
      {{/if}}
      {{#if (and layer.legendCanBeDisplayed hasBeenExpanded)}}
        {{component (concat "legends/" layer.type "-legend")
          layer=layer
        }}
      {{/if}}
    {{/yield-slot}}
  {{/block-slot}}
{{/flexberry-treenode}}
