{{!--
  See https://github.com/ciena-blueplanet/ember-block-slots#usage
  {{yield}} is required here to make yield-slots available.
--}}
{{yield}}

{{#flexberry-treenode
  _hasContent=_hasContent
  headerClick=(action "onHeaderClick")
  beforeExpand=(action "onBeforeExpand")
  beforeCollapse=(action "onBeforeCollapse")
}}
  {{#block-slot "header"}}
    {{flexberry-ddau-checkbox
      class=(concat flexberryClassNames.visibilityCheckbox " " flexberryClassNames.preventExpandCollapse)
      value=visibility
      change=(action "onVisibilityCheckboxChange")
    }}
    {{flexberry-icon
      class=(concat flexberryClassNames.typeIcon " " _typeIconClass)
    }}
    <label class={{flexberryClassNames.caption}}>
      {{name}}
    </label>
    {{#if (not readonly)}}
      {{flexberry-button
        class=(concat flexberryClassNames.removeButton " right floated " flexberryClassNames.preventExpandCollapse)
        iconClass="trash icon"
        click=(action "onRemoveButtonClick")
      }}
      {{flexberry-button
        class=(concat flexberryClassNames.editButton " right floated " flexberryClassNames.preventExpandCollapse)
        iconClass="edit icon"
        click=(action "onEditButtonClick")
      }}
      {{#if _addOperationIsAvailable}}
        {{flexberry-button
          class=(concat flexberryClassNames.addButton " right floated " flexberryClassNames.preventExpandCollapse)
          iconClass="plus icon"
          click=(action "onAddButtonClick")
        }}
      {{/if}}
      <div style="clear: both;"></div>
    {{/if}}

    {{#if _canChangeOpacity}}
      <label class="{{flexberryClassNames.opacityLabel}}" title="{{t "components.flexberry-maplayer.opacity" }}">
        {{_opacityDisplayValue}}
      </label>
    {{/if}}

    {{!--
      Semantic UI modal dialogs takes long time to be initialized
      so include each dialog in the markup only if dialog has been requested by user (similar "lazy load").
    --}}
    {{#if _addDialogHasBeenRequested}}
      {{component "layers-dialogs/add"
        class=flexberryClassNames.addDialog
        visible=_addDialogIsVisible
        layer=null
        cswConnections=cswConnections
        leafletMap=leafletMap
        approve=(action "onAddDialogApprove")
      }}
    {{/if}}
    {{#if _editDialogHasBeenRequested}}
      {{component "layers-dialogs/edit"
        class=flexberryClassNames.editDialog
        visible=_editDialogIsVisible
        layer=(hash
          type=type
          name=name
          coordinateReferenceSystem=coordinateReferenceSystem
          settings=settings
        )
        cswConnections=cswConnections
        leafletMap=leafletMap
        approve=(action "onEditDialogApprove")
      }}
    {{/if}}
    {{#if _removeDialogHasBeenRequested}}
      {{component "layers-dialogs/remove"
        class=flexberryClassNames.removeDialog
        visible=_removeDialogIsVisible
        layer=(hash
          type=type
          name=name
          coordinateReferenceSystem=coordinateReferenceSystem
          settings=settings
        )
        approve=(action "onRemoveDialogApprove")
      }}
    {{/if}}

    {{#yield-slot "header"}}
      {{yield}}
    {{/yield-slot}}
  {{/block-slot}}

  {{#block-slot "content"}}
    {{#if _hasLayers}}
      {{flexberry-maplayers
        layers=layers
        cswConnections=cswConnections
        leafletMap=leafletMap
        readonly=readonly
      }}
    {{/if}}
    {{#yield-slot "content"}}
      {{yield}}
      {{#if _canChangeOpacity}}
        {{flexberry-ddau-slider
          class=(concat flexberryClassNames.opacitySlider " " flexberryClassNames.preventExpandCollapse)
          value=opacity
          change=(action "onOpacitySliderChange")
        }}
      {{/if}}
      {{#if legendCanBeDisplayed}}
        {{component (concat "legends/" type "-legend") layerName=name layerSettings=settingsAsObject}}
      {{/if}}
    {{/yield-slot}}
  {{/block-slot}}
{{/flexberry-treenode}}
