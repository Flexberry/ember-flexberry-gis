"use strict";

/* jshint ignore:start */



/* jshint ignore:end */

define('dummy/adapters/application-offline', ['exports', 'ember-flexberry-data', 'dummy/config/environment'], function (exports, _emberFlexberryData, _dummyConfigEnvironment) {

  /**
    Application offline adapter.
  
    @class ApplicationOfflineAdapter
    @extends OfflineAdapter
    @uses AdapterMixin
  */
  exports['default'] = _emberFlexberryData.Adapter.Offline.extend({
    /**
      Offline dadabase name.
       @property dbName
      @type String
      @default config.APP.offline.dbName
    */
    dbName: _dummyConfigEnvironment['default'].APP.offline.dbName
  });
});
/**
  @module ember-flexberry-gis-dummy
*/
define('dummy/adapters/application', ['exports', 'ember-flexberry-data', 'dummy/config/environment', 'ember-flexberry-gis/adapters/odata'], function (exports, _emberFlexberryData, _dummyConfigEnvironment, _emberFlexberryGisAdaptersOdata) {

  /**
    Application adapter.
  
    @class ApplicationAdapter
    @extends OdataAdapter
    @uses AdapterMixin
  */
  exports['default'] = _emberFlexberryGisAdaptersOdata['default'].extend(_emberFlexberryData.Projection.AdapterMixin, {
    /**
      Host address to which all requests will be sent.
       @property host
      @type String
      @default config.APP.backendUrls.api
    */
    host: _dummyConfigEnvironment['default'].APP.backendUrls.api
  });
});
/**
  @module ember-flexberry-gis-dummy
*/
define('dummy/adapters/odata', ['exports', 'ember-flexberry-data/adapters/odata'], function (exports, _emberFlexberryDataAdaptersOdata) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataAdaptersOdata['default'];
    }
  });
});
define('dummy/adapters/offline', ['exports', 'ember-flexberry-data/adapters/offline'], function (exports, _emberFlexberryDataAdaptersOffline) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataAdaptersOffline['default'];
    }
  });
});
define('dummy/app', ['exports', 'ember', 'dummy/resolver', 'ember-load-initializers', 'dummy/config/environment', 'dummy/models/custom-inflector-rules'], function (exports, _ember, _dummyResolver, _emberLoadInitializers, _dummyConfigEnvironment, _dummyModelsCustomInflectorRules) {

  var App = undefined;

  _ember['default'].MODEL_FACTORY_INJECTIONS = true;

  App = _ember['default'].Application.extend({
    modulePrefix: _dummyConfigEnvironment['default'].modulePrefix,
    podModulePrefix: _dummyConfigEnvironment['default'].podModulePrefix,
    Resolver: _dummyResolver['default']
  });

  (0, _emberLoadInitializers['default'])(App, _dummyConfigEnvironment['default'].modulePrefix);

  exports['default'] = App;
});
define('dummy/browserify', ['exports', 'npm:dexie', 'npm:node-uuid'], function (exports, _npmDexie, _npmNodeUuid) {});
// Requirement of ember-browserify.
// In order to use NPM pacakges inside the addon, we have to import
// them from somewhere in /app directory.
// See: https://github.com/ef4/ember-browserify#using-ember-browserify-in-addons
define('dummy/components/advlimit-dialog-content', ['exports', 'ember-flexberry/components/advlimit-dialog-content'], function (exports, _emberFlexberryComponentsAdvlimitDialogContent) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryComponentsAdvlimitDialogContent['default'];
    }
  });
});
define('dummy/components/app-version', ['exports', 'ember-cli-app-version/components/app-version', 'dummy/config/environment'], function (exports, _emberCliAppVersionComponentsAppVersion, _dummyConfigEnvironment) {

  var name = _dummyConfigEnvironment['default'].APP.name;
  var version = _dummyConfigEnvironment['default'].APP.version;

  exports['default'] = _emberCliAppVersionComponentsAppVersion['default'].extend({
    version: version,
    name: name
  });
});
define('dummy/components/base-control', ['exports', 'ember-flexberry-gis/components/base-control'], function (exports, _emberFlexberryGisComponentsBaseControl) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsBaseControl['default'];
    }
  });
});
define('dummy/components/base-layer', ['exports', 'ember-flexberry-gis/components/base-layer'], function (exports, _emberFlexberryGisComponentsBaseLayer) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsBaseLayer['default'];
    }
  });
});
define('dummy/components/base-vector-layer', ['exports', 'ember-flexberry-gis/components/base-vector-layer'], function (exports, _emberFlexberryGisComponentsBaseVectorLayer) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsBaseVectorLayer['default'];
    }
  });
});
define('dummy/components/block-slot', ['exports', 'ember-block-slots/components/block-slot'], function (exports, _emberBlockSlotsComponentsBlockSlot) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberBlockSlotsComponentsBlockSlot['default'];
    }
  });
});
define('dummy/components/charts/base-chart-type', ['exports', 'ember-flexberry-gis/components/charts/base-chart-type'], function (exports, _emberFlexberryGisComponentsChartsBaseChartType) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsChartsBaseChartType['default'];
    }
  });
});
define('dummy/components/charts/index-chart', ['exports', 'ember-flexberry-gis/components/charts/index-chart'], function (exports, _emberFlexberryGisComponentsChartsIndexChart) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsChartsIndexChart['default'];
    }
  });
});
define('dummy/components/charts/type-charts/bar', ['exports', 'ember-flexberry-gis/components/charts/type-charts/bar'], function (exports, _emberFlexberryGisComponentsChartsTypeChartsBar) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsChartsTypeChartsBar['default'];
    }
  });
});
define('dummy/components/charts/type-charts/line', ['exports', 'ember-flexberry-gis/components/charts/type-charts/line'], function (exports, _emberFlexberryGisComponentsChartsTypeChartsLine) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsChartsTypeChartsLine['default'];
    }
  });
});
define('dummy/components/charts/type-charts/pie', ['exports', 'ember-flexberry-gis/components/charts/type-charts/pie'], function (exports, _emberFlexberryGisComponentsChartsTypeChartsPie) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsChartsTypeChartsPie['default'];
    }
  });
});
define('dummy/components/colsconfig-dialog-content', ['exports', 'ember-flexberry/components/colsconfig-dialog-content'], function (exports, _emberFlexberryComponentsColsconfigDialogContent) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryComponentsColsconfigDialogContent['default'];
    }
  });
});
define('dummy/components/compare-object-geometries-panel', ['exports', 'ember-flexberry-gis/components/compare-object-geometries-panel'], function (exports, _emberFlexberryGisComponentsCompareObjectGeometriesPanel) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsCompareObjectGeometriesPanel['default'];
    }
  });
});
define('dummy/components/div-control', ['exports', 'ember-flexberry-gis/components/div-control'], function (exports, _emberFlexberryGisComponentsDivControl) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsDivControl['default'];
    }
  });
});
define('dummy/components/drag-box', ['exports', 'ember-flexberry-gis/components/drag-box'], function (exports, _emberFlexberryGisComponentsDragBox) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsDragBox['default'];
    }
  });
});
define('dummy/components/favorites-list', ['exports', 'ember-flexberry-gis/components/favorites-list'], function (exports, _emberFlexberryGisComponentsFavoritesList) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsFavoritesList['default'];
    }
  });
});
define('dummy/components/feature-export', ['exports', 'ember-flexberry-gis/components/feature-export'], function (exports, _emberFlexberryGisComponentsFeatureExport) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsFeatureExport['default'];
    }
  });
});
define('dummy/components/feature-result-item', ['exports', 'ember-flexberry-gis/components/feature-result-item'], function (exports, _emberFlexberryGisComponentsFeatureResultItem) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsFeatureResultItem['default'];
    }
  });
});
define('dummy/components/filters-dialog-content', ['exports', 'ember-flexberry/components/filters-dialog-content'], function (exports, _emberFlexberryComponentsFiltersDialogContent) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryComponentsFiltersDialogContent['default'];
    }
  });
});
define('dummy/components/flexberry-boundingbox', ['exports', 'ember-flexberry-gis/components/flexberry-boundingbox'], function (exports, _emberFlexberryGisComponentsFlexberryBoundingbox) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsFlexberryBoundingbox['default'];
    }
  });
});
define('dummy/components/flexberry-button-dropdown', ['exports', 'ember-flexberry-gis/components/flexberry-button-dropdown'], function (exports, _emberFlexberryGisComponentsFlexberryButtonDropdown) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsFlexberryButtonDropdown['default'];
    }
  });
});
define('dummy/components/flexberry-button', ['exports', 'ember-flexberry/components/flexberry-button'], function (exports, _emberFlexberryComponentsFlexberryButton) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryComponentsFlexberryButton['default'];
    }
  });
});
define('dummy/components/flexberry-checkbox', ['exports', 'ember-flexberry/components/flexberry-checkbox'], function (exports, _emberFlexberryComponentsFlexberryCheckbox) {
  exports['default'] = _emberFlexberryComponentsFlexberryCheckbox['default'];
});
define('dummy/components/flexberry-colorpicker', ['exports', 'ember-flexberry/components/flexberry-colorpicker'], function (exports, _emberFlexberryComponentsFlexberryColorpicker) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryComponentsFlexberryColorpicker['default'];
    }
  });
});
define('dummy/components/flexberry-create-object-geometry', ['exports', 'ember-flexberry-gis/components/flexberry-create-object-geometry'], function (exports, _emberFlexberryGisComponentsFlexberryCreateObjectGeometry) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsFlexberryCreateObjectGeometry['default'];
    }
  });
});
define('dummy/components/flexberry-datepicker', ['exports', 'ember-flexberry/components/flexberry-datepicker'], function (exports, _emberFlexberryComponentsFlexberryDatepicker) {
  exports['default'] = _emberFlexberryComponentsFlexberryDatepicker['default'];
});
define('dummy/components/flexberry-ddau-checkbox', ['exports', 'ember-flexberry/components/flexberry-ddau-checkbox'], function (exports, _emberFlexberryComponentsFlexberryDdauCheckbox) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryComponentsFlexberryDdauCheckbox['default'];
    }
  });
});
define('dummy/components/flexberry-ddau-slider', ['exports', 'ember-flexberry/components/flexberry-ddau-slider'], function (exports, _emberFlexberryComponentsFlexberryDdauSlider) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryComponentsFlexberryDdauSlider['default'];
    }
  });
});
define('dummy/components/flexberry-dialog', ['exports', 'ember-flexberry/components/flexberry-dialog'], function (exports, _emberFlexberryComponentsFlexberryDialog) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryComponentsFlexberryDialog['default'];
    }
  });
});
define('dummy/components/flexberry-dropdown-input', ['exports', 'ember-flexberry-gis/components/flexberry-dropdown-input'], function (exports, _emberFlexberryGisComponentsFlexberryDropdownInput) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsFlexberryDropdownInput['default'];
    }
  });
});
define('dummy/components/flexberry-dropdown', ['exports', 'ember-flexberry/components/flexberry-dropdown'], function (exports, _emberFlexberryComponentsFlexberryDropdown) {
  exports['default'] = _emberFlexberryComponentsFlexberryDropdown['default'];
});
define('dummy/components/flexberry-edit-crs', ['exports', 'ember-flexberry-gis/components/flexberry-edit-crs'], function (exports, _emberFlexberryGisComponentsFlexberryEditCrs) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsFlexberryEditCrs['default'];
    }
  });
});
define('dummy/components/flexberry-edit-layer-feature', ['exports', 'ember-flexberry-gis/components/flexberry-edit-layer-feature'], function (exports, _emberFlexberryGisComponentsFlexberryEditLayerFeature) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsFlexberryEditLayerFeature['default'];
    }
  });
});
define('dummy/components/flexberry-edit-layermap', ['exports', 'ember-flexberry-gis/components/flexberry-edit-layermap'], function (exports, _emberFlexberryGisComponentsFlexberryEditLayermap) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsFlexberryEditLayermap['default'];
    }
  });
});
define('dummy/components/flexberry-error', ['exports', 'ember-flexberry/components/flexberry-error'], function (exports, _emberFlexberryComponentsFlexberryError) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryComponentsFlexberryError['default'];
    }
  });
});
define('dummy/components/flexberry-field', ['exports', 'ember-flexberry/components/flexberry-field'], function (exports, _emberFlexberryComponentsFlexberryField) {
  exports['default'] = _emberFlexberryComponentsFlexberryField['default'];
});
define('dummy/components/flexberry-file', ['exports', 'ember-flexberry/components/flexberry-file'], function (exports, _emberFlexberryComponentsFlexberryFile) {
  exports['default'] = _emberFlexberryComponentsFlexberryFile['default'];
});
define('dummy/components/flexberry-groupedit', ['exports', 'ember-flexberry/components/flexberry-groupedit'], function (exports, _emberFlexberryComponentsFlexberryGroupedit) {
  exports['default'] = _emberFlexberryComponentsFlexberryGroupedit['default'];
});
define('dummy/components/flexberry-icon', ['exports', 'ember-flexberry/components/flexberry-icon'], function (exports, _emberFlexberryComponentsFlexberryIcon) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryComponentsFlexberryIcon['default'];
    }
  });
});
define('dummy/components/flexberry-identify-file', ['exports', 'ember-flexberry-gis/components/flexberry-identify-file'], function (exports, _emberFlexberryGisComponentsFlexberryIdentifyFile) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsFlexberryIdentifyFile['default'];
    }
  });
});
define('dummy/components/flexberry-identify-panel', ['exports', 'ember-flexberry-gis/components/flexberry-identify-panel'], function (exports, _emberFlexberryGisComponentsFlexberryIdentifyPanel) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsFlexberryIdentifyPanel['default'];
    }
  });
});
define('dummy/components/flexberry-jsonarea', ['exports', 'ember-flexberry/components/flexberry-jsonarea'], function (exports, _emberFlexberryComponentsFlexberryJsonarea) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryComponentsFlexberryJsonarea['default'];
    }
  });
});
define('dummy/components/flexberry-layers-attributes-panel', ['exports', 'ember-flexberry-gis/components/flexberry-layers-attributes-panel'], function (exports, _emberFlexberryGisComponentsFlexberryLayersAttributesPanel) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsFlexberryLayersAttributesPanel['default'];
    }
  });
});
define('dummy/components/flexberry-layers-dropdown', ['exports', 'ember-flexberry-gis/components/flexberry-layers-dropdown'], function (exports, _emberFlexberryGisComponentsFlexberryLayersDropdown) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsFlexberryLayersDropdown['default'];
    }
  });
});
define('dummy/components/flexberry-layers-intersections-panel', ['exports', 'ember-flexberry-gis/components/flexberry-layers-intersections-panel'], function (exports, _emberFlexberryGisComponentsFlexberryLayersIntersectionsPanel) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsFlexberryLayersIntersectionsPanel['default'];
    }
  });
});
define('dummy/components/flexberry-layers', ['exports', 'ember-flexberry-gis/components/flexberry-layers'], function (exports, _emberFlexberryGisComponentsFlexberryLayers) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsFlexberryLayers['default'];
    }
  });
});
define('dummy/components/flexberry-layerslegends', ['exports', 'ember-flexberry-gis/components/flexberry-layerslegends'], function (exports, _emberFlexberryGisComponentsFlexberryLayerslegends) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsFlexberryLayerslegends['default'];
    }
  });
});
define('dummy/components/flexberry-links-editor', ['exports', 'ember-flexberry-gis/components/flexberry-links-editor'], function (exports, _emberFlexberryGisComponentsFlexberryLinksEditor) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsFlexberryLinksEditor['default'];
    }
  });
});
define('dummy/components/flexberry-lookup', ['exports', 'ember-flexberry/components/flexberry-lookup'], function (exports, _emberFlexberryComponentsFlexberryLookup) {
  exports['default'] = _emberFlexberryComponentsFlexberryLookup['default'];
});
define('dummy/components/flexberry-map', ['exports', 'ember-flexberry-gis/components/flexberry-map'], function (exports, _emberFlexberryGisComponentsFlexberryMap) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsFlexberryMap['default'];
    }
  });
});
define('dummy/components/flexberry-mapinfo', ['exports', 'ember-flexberry-gis/components/flexberry-mapinfo'], function (exports, _emberFlexberryGisComponentsFlexberryMapinfo) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsFlexberryMapinfo['default'];
    }
  });
});
define('dummy/components/flexberry-maplayer', ['exports', 'ember-flexberry-gis/components/flexberry-maplayer'], function (exports, _emberFlexberryGisComponentsFlexberryMaplayer) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsFlexberryMaplayer['default'];
    }
  });
});
define('dummy/components/flexberry-maplayers', ['exports', 'ember-flexberry-gis/components/flexberry-maplayers'], function (exports, _emberFlexberryGisComponentsFlexberryMaplayers) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsFlexberryMaplayers['default'];
    }
  });
});
define('dummy/components/flexberry-maptoolbar', ['exports', 'ember-flexberry-gis/components/flexberry-maptoolbar'], function (exports, _emberFlexberryGisComponentsFlexberryMaptoolbar) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsFlexberryMaptoolbar['default'];
    }
  });
});
define('dummy/components/flexberry-menu', ['exports', 'ember-flexberry/components/flexberry-menu'], function (exports, _emberFlexberryComponentsFlexberryMenu) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryComponentsFlexberryMenu['default'];
    }
  });
});
define('dummy/components/flexberry-menuitem', ['exports', 'ember-flexberry/components/flexberry-menuitem'], function (exports, _emberFlexberryComponentsFlexberryMenuitem) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryComponentsFlexberryMenuitem['default'];
    }
  });
});
define('dummy/components/flexberry-multiple-select', ['exports', 'ember-flexberry-gis/components/flexberry-multiple-select'], function (exports, _emberFlexberryGisComponentsFlexberryMultipleSelect) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsFlexberryMultipleSelect['default'];
    }
  });
});
define('dummy/components/flexberry-objectlistview', ['exports', 'ember-flexberry/components/flexberry-objectlistview'], function (exports, _emberFlexberryComponentsFlexberryObjectlistview) {
  exports['default'] = _emberFlexberryComponentsFlexberryObjectlistview['default'];
});
define('dummy/components/flexberry-search-panel', ['exports', 'ember-flexberry-gis/components/flexberry-search-panel'], function (exports, _emberFlexberryGisComponentsFlexberrySearchPanel) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsFlexberrySearchPanel['default'];
    }
  });
});
define('dummy/components/flexberry-search', ['exports', 'ember-flexberry-gis/components/flexberry-search'], function (exports, _emberFlexberryGisComponentsFlexberrySearch) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsFlexberrySearch['default'];
    }
  });
});
define('dummy/components/flexberry-simpledatetime', ['exports', 'ember-flexberry/components/flexberry-simpledatetime'], function (exports, _emberFlexberryComponentsFlexberrySimpledatetime) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryComponentsFlexberrySimpledatetime['default'];
    }
  });
});
define('dummy/components/flexberry-simpleolv', ['exports', 'ember-flexberry/components/flexberry-simpleolv'], function (exports, _emberFlexberryComponentsFlexberrySimpleolv) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryComponentsFlexberrySimpleolv['default'];
    }
  });
});
define('dummy/components/flexberry-tab-bar', ['exports', 'ember-flexberry/components/flexberry-tab-bar'], function (exports, _emberFlexberryComponentsFlexberryTabBar) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryComponentsFlexberryTabBar['default'];
    }
  });
});
define('dummy/components/flexberry-table', ['exports', 'ember-flexberry-gis/components/flexberry-table'], function (exports, _emberFlexberryGisComponentsFlexberryTable) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsFlexberryTable['default'];
    }
  });
});
define('dummy/components/flexberry-text-cell', ['exports', 'ember-flexberry/components/flexberry-text-cell'], function (exports, _emberFlexberryComponentsFlexberryTextCell) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryComponentsFlexberryTextCell['default'];
    }
  });
});
define('dummy/components/flexberry-textarea', ['exports', 'ember-flexberry/components/flexberry-textarea'], function (exports, _emberFlexberryComponentsFlexberryTextarea) {
  exports['default'] = _emberFlexberryComponentsFlexberryTextarea['default'];
});
define('dummy/components/flexberry-textbox', ['exports', 'ember-flexberry/components/flexberry-textbox'], function (exports, _emberFlexberryComponentsFlexberryTextbox) {
  exports['default'] = _emberFlexberryComponentsFlexberryTextbox['default'];
});
define('dummy/components/flexberry-toggler', ['exports', 'ember-flexberry/components/flexberry-toggler'], function (exports, _emberFlexberryComponentsFlexberryToggler) {
  exports['default'] = _emberFlexberryComponentsFlexberryToggler['default'];
});
define('dummy/components/flexberry-tree', ['exports', 'ember-flexberry/components/flexberry-tree'], function (exports, _emberFlexberryComponentsFlexberryTree) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryComponentsFlexberryTree['default'];
    }
  });
});
define('dummy/components/flexberry-treenode', ['exports', 'ember-flexberry/components/flexberry-treenode'], function (exports, _emberFlexberryComponentsFlexberryTreenode) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryComponentsFlexberryTreenode['default'];
    }
  });
});
define('dummy/components/flexberry-validationmessage', ['exports', 'ember-flexberry/components/flexberry-validationmessage'], function (exports, _emberFlexberryComponentsFlexberryValidationmessage) {
  exports['default'] = _emberFlexberryComponentsFlexberryValidationmessage['default'];
});
define('dummy/components/flexberry-validationsummary', ['exports', 'ember-flexberry/components/flexberry-validationsummary'], function (exports, _emberFlexberryComponentsFlexberryValidationsummary) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryComponentsFlexberryValidationsummary['default'];
    }
  });
});
define('dummy/components/flexberry-wfs-filter', ['exports', 'ember-flexberry-gis/components/flexberry-wfs-filter'], function (exports, _emberFlexberryGisComponentsFlexberryWfsFilter) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsFlexberryWfsFilter['default'];
    }
  });
});
define('dummy/components/form-load-time-tracker', ['exports', 'ember-flexberry/components/form-load-time-tracker'], function (exports, _emberFlexberryComponentsFormLoadTimeTracker) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryComponentsFormLoadTimeTracker['default'];
    }
  });
});
define('dummy/components/geometry-add-modes/draw', ['exports', 'ember-flexberry-gis/components/geometry-add-modes/draw'], function (exports, _emberFlexberryGisComponentsGeometryAddModesDraw) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsGeometryAddModesDraw['default'];
    }
  });
});
define('dummy/components/geometry-add-modes/geoprovider', ['exports', 'ember-flexberry-gis/components/geometry-add-modes/geoprovider'], function (exports, _emberFlexberryGisComponentsGeometryAddModesGeoprovider) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsGeometryAddModesGeoprovider['default'];
    }
  });
});
define('dummy/components/geometry-add-modes/import', ['exports', 'ember-flexberry-gis/components/geometry-add-modes/import'], function (exports, _emberFlexberryGisComponentsGeometryAddModesImport) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsGeometryAddModesImport['default'];
    }
  });
});
define('dummy/components/geometry-add-modes/manual', ['exports', 'ember-flexberry-gis/components/geometry-add-modes/manual'], function (exports, _emberFlexberryGisComponentsGeometryAddModesManual) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsGeometryAddModesManual['default'];
    }
  });
});
define('dummy/components/geometry-add-modes/rhumb', ['exports', 'ember-flexberry-gis/components/geometry-add-modes/rhumb'], function (exports, _emberFlexberryGisComponentsGeometryAddModesRhumb) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsGeometryAddModesRhumb['default'];
    }
  });
});
define('dummy/components/gradients/dropdown-gradient', ['exports', 'ember-flexberry-gis/components/gradients/dropdown-gradient'], function (exports, _emberFlexberryGisComponentsGradientsDropdownGradient) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsGradientsDropdownGradient['default'];
    }
  });
});
define('dummy/components/gradients/gradient-edit', ['exports', 'ember-flexberry-gis/components/gradients/gradient-edit'], function (exports, _emberFlexberryGisComponentsGradientsGradientEdit) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsGradientsGradientEdit['default'];
    }
  });
});
define('dummy/components/groupedit-toolbar', ['exports', 'ember-flexberry/components/groupedit-toolbar'], function (exports, _emberFlexberryComponentsGroupeditToolbar) {
  exports['default'] = _emberFlexberryComponentsGroupeditToolbar['default'];
});
define('dummy/components/help-popup', ['exports', 'ember-flexberry-gis/components/help-popup'], function (exports, _emberFlexberryGisComponentsHelpPopup) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsHelpPopup['default'];
    }
  });
});
define('dummy/components/history-control', ['exports', 'ember-flexberry-gis/components/history-control'], function (exports, _emberFlexberryGisComponentsHistoryControl) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsHistoryControl['default'];
    }
  });
});
define('dummy/components/layer-result-list', ['exports', 'ember-flexberry-gis/components/layer-result-list'], function (exports, _emberFlexberryGisComponentsLayerResultList) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayerResultList['default'];
    }
  });
});
define('dummy/components/layer-treenode-contents/base', ['exports', 'ember-flexberry-gis/components/layer-treenode-contents/base'], function (exports, _emberFlexberryGisComponentsLayerTreenodeContentsBase) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayerTreenodeContentsBase['default'];
    }
  });
});
define('dummy/components/layers-dialogs/add', ['exports', 'ember-flexberry-gis/components/layers-dialogs/add'], function (exports, _emberFlexberryGisComponentsLayersDialogsAdd) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersDialogsAdd['default'];
    }
  });
});
define('dummy/components/layers-dialogs/attributes/edit', ['exports', 'ember-flexberry-gis/components/layers-dialogs/attributes/edit'], function (exports, _emberFlexberryGisComponentsLayersDialogsAttributesEdit) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersDialogsAttributesEdit['default'];
    }
  });
});
define('dummy/components/layers-dialogs/attributes/move', ['exports', 'ember-flexberry-gis/components/layers-dialogs/attributes/move'], function (exports, _emberFlexberryGisComponentsLayersDialogsAttributesMove) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersDialogsAttributesMove['default'];
    }
  });
});
define('dummy/components/layers-dialogs/copy', ['exports', 'ember-flexberry-gis/components/layers-dialogs/copy'], function (exports, _emberFlexberryGisComponentsLayersDialogsCopy) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersDialogsCopy['default'];
    }
  });
});
define('dummy/components/layers-dialogs/edit', ['exports', 'ember-flexberry-gis/components/layers-dialogs/edit'], function (exports, _emberFlexberryGisComponentsLayersDialogsEdit) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersDialogsEdit['default'];
    }
  });
});
define('dummy/components/layers-dialogs/layers-prototyping-modes/metadata-mode', ['exports', 'ember-flexberry-gis/components/layers-dialogs/layers-prototyping-modes/metadata-mode'], function (exports, _emberFlexberryGisComponentsLayersDialogsLayersPrototypingModesMetadataMode) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersDialogsLayersPrototypingModesMetadataMode['default'];
    }
  });
});
define('dummy/components/layers-dialogs/remove', ['exports', 'ember-flexberry-gis/components/layers-dialogs/remove'], function (exports, _emberFlexberryGisComponentsLayersDialogsRemove) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersDialogsRemove['default'];
    }
  });
});
define('dummy/components/layers-dialogs/settings/combine', ['exports', 'ember-flexberry-gis/components/layers-dialogs/settings/combine'], function (exports, _emberFlexberryGisComponentsLayersDialogsSettingsCombine) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersDialogsSettingsCombine['default'];
    }
  });
});
define('dummy/components/layers-dialogs/settings/geocoder-osm-overpass', ['exports', 'ember-flexberry-gis/components/layers-dialogs/settings/geocoder-osm-overpass'], function (exports, _emberFlexberryGisComponentsLayersDialogsSettingsGeocoderOsmOverpass) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersDialogsSettingsGeocoderOsmOverpass['default'];
    }
  });
});
define('dummy/components/layers-dialogs/settings/geocoder-osm-ru', ['exports', 'ember-flexberry-gis/components/layers-dialogs/settings/geocoder-osm-ru'], function (exports, _emberFlexberryGisComponentsLayersDialogsSettingsGeocoderOsmRu) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersDialogsSettingsGeocoderOsmRu['default'];
    }
  });
});
define('dummy/components/layers-dialogs/settings/geojson', ['exports', 'ember-flexberry-gis/components/layers-dialogs/settings/geojson'], function (exports, _emberFlexberryGisComponentsLayersDialogsSettingsGeojson) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersDialogsSettingsGeojson['default'];
    }
  });
});
define('dummy/components/layers-dialogs/settings/group', ['exports', 'ember-flexberry-gis/components/layers-dialogs/settings/group'], function (exports, _emberFlexberryGisComponentsLayersDialogsSettingsGroup) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersDialogsSettingsGroup['default'];
    }
  });
});
define('dummy/components/layers-dialogs/settings/kml', ['exports', 'ember-flexberry-gis/components/layers-dialogs/settings/kml'], function (exports, _emberFlexberryGisComponentsLayersDialogsSettingsKml) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersDialogsSettingsKml['default'];
    }
  });
});
define('dummy/components/layers-dialogs/settings/odata-vector', ['exports', 'ember-flexberry-gis/components/layers-dialogs/settings/odata-vector'], function (exports, _emberFlexberryGisComponentsLayersDialogsSettingsOdataVector) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersDialogsSettingsOdataVector['default'];
    }
  });
});
define('dummy/components/layers-dialogs/settings/tile-vector', ['exports', 'ember-flexberry-gis/components/layers-dialogs/settings/tile-vector'], function (exports, _emberFlexberryGisComponentsLayersDialogsSettingsTileVector) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersDialogsSettingsTileVector['default'];
    }
  });
});
define('dummy/components/layers-dialogs/settings/tile', ['exports', 'ember-flexberry-gis/components/layers-dialogs/settings/tile'], function (exports, _emberFlexberryGisComponentsLayersDialogsSettingsTile) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersDialogsSettingsTile['default'];
    }
  });
});
define('dummy/components/layers-dialogs/settings/wfs', ['exports', 'ember-flexberry-gis/components/layers-dialogs/settings/wfs'], function (exports, _emberFlexberryGisComponentsLayersDialogsSettingsWfs) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersDialogsSettingsWfs['default'];
    }
  });
});
define('dummy/components/layers-dialogs/settings/wms-single-tile', ['exports', 'ember-flexberry-gis/components/layers-dialogs/settings/wms-single-tile'], function (exports, _emberFlexberryGisComponentsLayersDialogsSettingsWmsSingleTile) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersDialogsSettingsWmsSingleTile['default'];
    }
  });
});
define('dummy/components/layers-dialogs/settings/wms-wfs', ['exports', 'ember-flexberry-gis/components/layers-dialogs/settings/wms-wfs'], function (exports, _emberFlexberryGisComponentsLayersDialogsSettingsWmsWfs) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersDialogsSettingsWmsWfs['default'];
    }
  });
});
define('dummy/components/layers-dialogs/settings/wms', ['exports', 'ember-flexberry-gis/components/layers-dialogs/settings/wms'], function (exports, _emberFlexberryGisComponentsLayersDialogsSettingsWms) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersDialogsSettingsWms['default'];
    }
  });
});
define('dummy/components/layers-dialogs/tabs/display-settings', ['exports', 'ember-flexberry-gis/components/layers-dialogs/tabs/display-settings'], function (exports, _emberFlexberryGisComponentsLayersDialogsTabsDisplaySettings) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersDialogsTabsDisplaySettings['default'];
    }
  });
});
define('dummy/components/layers-dialogs/tabs/display', ['exports', 'ember-flexberry-gis/components/layers-dialogs/tabs/display'], function (exports, _emberFlexberryGisComponentsLayersDialogsTabsDisplay) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersDialogsTabsDisplay['default'];
    }
  });
});
define('dummy/components/layers-dialogs/tabs/identification-settings', ['exports', 'ember-flexberry-gis/components/layers-dialogs/tabs/identification-settings'], function (exports, _emberFlexberryGisComponentsLayersDialogsTabsIdentificationSettings) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersDialogsTabsIdentificationSettings['default'];
    }
  });
});
define('dummy/components/layers-dialogs/tabs/labels-settings', ['exports', 'ember-flexberry-gis/components/layers-dialogs/tabs/labels-settings'], function (exports, _emberFlexberryGisComponentsLayersDialogsTabsLabelsSettings) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersDialogsTabsLabelsSettings['default'];
    }
  });
});
define('dummy/components/layers-dialogs/tabs/legend-settings', ['exports', 'ember-flexberry-gis/components/layers-dialogs/tabs/legend-settings'], function (exports, _emberFlexberryGisComponentsLayersDialogsTabsLegendSettings) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersDialogsTabsLegendSettings['default'];
    }
  });
});
define('dummy/components/layers-dialogs/tabs/links', ['exports', 'ember-flexberry-gis/components/layers-dialogs/tabs/links'], function (exports, _emberFlexberryGisComponentsLayersDialogsTabsLinks) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersDialogsTabsLinks['default'];
    }
  });
});
define('dummy/components/layers-dialogs/tabs/load-file', ['exports', 'ember-flexberry-gis/components/layers-dialogs/tabs/load-file'], function (exports, _emberFlexberryGisComponentsLayersDialogsTabsLoadFile) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersDialogsTabsLoadFile['default'];
    }
  });
});
define('dummy/components/layers-dialogs/tabs/main-settings', ['exports', 'ember-flexberry-gis/components/layers-dialogs/tabs/main-settings'], function (exports, _emberFlexberryGisComponentsLayersDialogsTabsMainSettings) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersDialogsTabsMainSettings['default'];
    }
  });
});
define('dummy/components/layers-dialogs/tabs/main', ['exports', 'ember-flexberry-gis/components/layers-dialogs/tabs/main'], function (exports, _emberFlexberryGisComponentsLayersDialogsTabsMain) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersDialogsTabsMain['default'];
    }
  });
});
define('dummy/components/layers-dialogs/tabs/prototyping-modes', ['exports', 'ember-flexberry-gis/components/layers-dialogs/tabs/prototyping-modes'], function (exports, _emberFlexberryGisComponentsLayersDialogsTabsPrototypingModes) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersDialogsTabsPrototypingModes['default'];
    }
  });
});
define('dummy/components/layers-dialogs/tabs/search-settings', ['exports', 'ember-flexberry-gis/components/layers-dialogs/tabs/search-settings'], function (exports, _emberFlexberryGisComponentsLayersDialogsTabsSearchSettings) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersDialogsTabsSearchSettings['default'];
    }
  });
});
define('dummy/components/layers-styles-editor', ['exports', 'ember-flexberry-gis/components/layers-styles-editor'], function (exports, _emberFlexberryGisComponentsLayersStylesEditor) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersStylesEditor['default'];
    }
  });
});
define('dummy/components/layers-styles/categorized/base-categorized-layer-style', ['exports', 'ember-flexberry-gis/components/layers-styles/categorized/base-categorized-layer-style'], function (exports, _emberFlexberryGisComponentsLayersStylesCategorizedBaseCategorizedLayerStyle) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersStylesCategorizedBaseCategorizedLayerStyle['default'];
    }
  });
});
define('dummy/components/layers-styles/categorized/gradient-tools', ['exports', 'ember-flexberry-gis/components/layers-styles/categorized/gradient-tools'], function (exports, _emberFlexberryGisComponentsLayersStylesCategorizedGradientTools) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersStylesCategorizedGradientTools['default'];
    }
  });
});
define('dummy/components/layers-styles/categorized/layer-property-dropdown', ['exports', 'ember-flexberry-gis/components/layers-styles/categorized/layer-property-dropdown'], function (exports, _emberFlexberryGisComponentsLayersStylesCategorizedLayerPropertyDropdown) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersStylesCategorizedLayerPropertyDropdown['default'];
    }
  });
});
define('dummy/components/layers-styles/empty', ['exports', 'ember-flexberry-gis/components/layers-styles/empty'], function (exports, _emberFlexberryGisComponentsLayersStylesEmpty) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersStylesEmpty['default'];
    }
  });
});
define('dummy/components/layers-styles/graduated', ['exports', 'ember-flexberry-gis/components/layers-styles/graduated'], function (exports, _emberFlexberryGisComponentsLayersStylesGraduated) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersStylesGraduated['default'];
    }
  });
});
define('dummy/components/layers-styles/simple', ['exports', 'ember-flexberry-gis/components/layers-styles/simple'], function (exports, _emberFlexberryGisComponentsLayersStylesSimple) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersStylesSimple['default'];
    }
  });
});
define('dummy/components/layers-styles/simple/fill-editor', ['exports', 'ember-flexberry-gis/components/layers-styles/simple/fill-editor'], function (exports, _emberFlexberryGisComponentsLayersStylesSimpleFillEditor) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersStylesSimpleFillEditor['default'];
    }
  });
});
define('dummy/components/layers-styles/simple/path-editor', ['exports', 'ember-flexberry-gis/components/layers-styles/simple/path-editor'], function (exports, _emberFlexberryGisComponentsLayersStylesSimplePathEditor) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersStylesSimplePathEditor['default'];
    }
  });
});
define('dummy/components/layers-styles/simple/stroke-dasharray-dropdown', ['exports', 'ember-flexberry-gis/components/layers-styles/simple/stroke-dasharray-dropdown'], function (exports, _emberFlexberryGisComponentsLayersStylesSimpleStrokeDasharrayDropdown) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersStylesSimpleStrokeDasharrayDropdown['default'];
    }
  });
});
define('dummy/components/layers-styles/simple/stroke-editor', ['exports', 'ember-flexberry-gis/components/layers-styles/simple/stroke-editor'], function (exports, _emberFlexberryGisComponentsLayersStylesSimpleStrokeEditor) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersStylesSimpleStrokeEditor['default'];
    }
  });
});
define('dummy/components/layers-styles/simple/stroke-linecap-dropdown', ['exports', 'ember-flexberry-gis/components/layers-styles/simple/stroke-linecap-dropdown'], function (exports, _emberFlexberryGisComponentsLayersStylesSimpleStrokeLinecapDropdown) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersStylesSimpleStrokeLinecapDropdown['default'];
    }
  });
});
define('dummy/components/layers-styles/simple/stroke-linejoin-dropdown', ['exports', 'ember-flexberry-gis/components/layers-styles/simple/stroke-linejoin-dropdown'], function (exports, _emberFlexberryGisComponentsLayersStylesSimpleStrokeLinejoinDropdown) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersStylesSimpleStrokeLinejoinDropdown['default'];
    }
  });
});
define('dummy/components/layers-styles/unique', ['exports', 'ember-flexberry-gis/components/layers-styles/unique'], function (exports, _emberFlexberryGisComponentsLayersStylesUnique) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersStylesUnique['default'];
    }
  });
});
define('dummy/components/layers/combine-layer', ['exports', 'ember-flexberry-gis/components/layers/combine-layer'], function (exports, _emberFlexberryGisComponentsLayersCombineLayer) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersCombineLayer['default'];
    }
  });
});
define('dummy/components/layers/geocoder-base-layer', ['exports', 'ember-flexberry-gis/components/layers/geocoder-base-layer'], function (exports, _emberFlexberryGisComponentsLayersGeocoderBaseLayer) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersGeocoderBaseLayer['default'];
    }
  });
});
define('dummy/components/layers/geocoder-osm-overpass-layer', ['exports', 'ember-flexberry-gis/components/layers/geocoder-osm-overpass-layer'], function (exports, _emberFlexberryGisComponentsLayersGeocoderOsmOverpassLayer) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersGeocoderOsmOverpassLayer['default'];
    }
  });
});
define('dummy/components/layers/geocoder-osm-ru-layer', ['exports', 'ember-flexberry-gis/components/layers/geocoder-osm-ru-layer'], function (exports, _emberFlexberryGisComponentsLayersGeocoderOsmRuLayer) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersGeocoderOsmRuLayer['default'];
    }
  });
});
define('dummy/components/layers/geojson-layer', ['exports', 'ember-flexberry-gis/components/layers/geojson-layer'], function (exports, _emberFlexberryGisComponentsLayersGeojsonLayer) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersGeojsonLayer['default'];
    }
  });
});
define('dummy/components/layers/group-layer', ['exports', 'ember-flexberry-gis/components/layers/group-layer'], function (exports, _emberFlexberryGisComponentsLayersGroupLayer) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersGroupLayer['default'];
    }
  });
});
define('dummy/components/layers/kml-layer', ['exports', 'ember-flexberry-gis/components/layers/kml-layer'], function (exports, _emberFlexberryGisComponentsLayersKmlLayer) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersKmlLayer['default'];
    }
  });
});
define('dummy/components/layers/odata-vector-layer', ['exports', 'ember-flexberry-gis/components/layers/odata-vector-layer'], function (exports, _emberFlexberryGisComponentsLayersOdataVectorLayer) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersOdataVectorLayer['default'];
    }
  });
});
define('dummy/components/layers/osm-layer', ['exports', 'ember-flexberry-gis/components/layers/osm-layer'], function (exports, _emberFlexberryGisComponentsLayersOsmLayer) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersOsmLayer['default'];
    }
  });
});
define('dummy/components/layers/tile-layer', ['exports', 'ember-flexberry-gis/components/layers/tile-layer'], function (exports, _emberFlexberryGisComponentsLayersTileLayer) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersTileLayer['default'];
    }
  });
});
define('dummy/components/layers/tile-vector-layer', ['exports', 'ember-flexberry-gis/components/layers/tile-vector-layer'], function (exports, _emberFlexberryGisComponentsLayersTileVectorLayer) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersTileVectorLayer['default'];
    }
  });
});
define('dummy/components/layers/wfs-layer', ['exports', 'ember-flexberry-gis/components/layers/wfs-layer'], function (exports, _emberFlexberryGisComponentsLayersWfsLayer) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersWfsLayer['default'];
    }
  });
});
define('dummy/components/layers/with-history-layer', ['exports', 'ember-flexberry-gis/components/layers/with-history-layer'], function (exports, _emberFlexberryGisComponentsLayersWithHistoryLayer) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersWithHistoryLayer['default'];
    }
  });
});
define('dummy/components/layers/wms-layer', ['exports', 'ember-flexberry-gis/components/layers/wms-layer'], function (exports, _emberFlexberryGisComponentsLayersWmsLayer) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersWmsLayer['default'];
    }
  });
});
define('dummy/components/layers/wms-single-tile-layer', ['exports', 'ember-flexberry-gis/components/layers/wms-single-tile-layer'], function (exports, _emberFlexberryGisComponentsLayersWmsSingleTileLayer) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersWmsSingleTileLayer['default'];
    }
  });
});
define('dummy/components/layers/wms-wfs-layer', ['exports', 'ember-flexberry-gis/components/layers/wms-wfs-layer'], function (exports, _emberFlexberryGisComponentsLayersWmsWfsLayer) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLayersWmsWfsLayer['default'];
    }
  });
});
define('dummy/components/legend-control', ['exports', 'ember-flexberry-gis/components/legend-control'], function (exports, _emberFlexberryGisComponentsLegendControl) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLegendControl['default'];
    }
  });
});
define('dummy/components/legends/combine-legend', ['exports', 'ember-flexberry-gis/components/legends/combine-legend'], function (exports, _emberFlexberryGisComponentsLegendsCombineLegend) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLegendsCombineLegend['default'];
    }
  });
});
define('dummy/components/legends/geojson-legend', ['exports', 'ember-flexberry-gis/components/legends/geojson-legend'], function (exports, _emberFlexberryGisComponentsLegendsGeojsonLegend) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLegendsGeojsonLegend['default'];
    }
  });
});
define('dummy/components/legends/kml-legend', ['exports', 'ember-flexberry-gis/components/legends/kml-legend'], function (exports, _emberFlexberryGisComponentsLegendsKmlLegend) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLegendsKmlLegend['default'];
    }
  });
});
define('dummy/components/legends/layers-styles/empty', ['exports', 'ember-flexberry-gis/components/legends/layers-styles/empty'], function (exports, _emberFlexberryGisComponentsLegendsLayersStylesEmpty) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLegendsLayersStylesEmpty['default'];
    }
  });
});
define('dummy/components/legends/layers-styles/graduated', ['exports', 'ember-flexberry-gis/components/legends/layers-styles/graduated'], function (exports, _emberFlexberryGisComponentsLegendsLayersStylesGraduated) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLegendsLayersStylesGraduated['default'];
    }
  });
});
define('dummy/components/legends/layers-styles/simple', ['exports', 'ember-flexberry-gis/components/legends/layers-styles/simple'], function (exports, _emberFlexberryGisComponentsLegendsLayersStylesSimple) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLegendsLayersStylesSimple['default'];
    }
  });
});
define('dummy/components/legends/layers-styles/unique', ['exports', 'ember-flexberry-gis/components/legends/layers-styles/unique'], function (exports, _emberFlexberryGisComponentsLegendsLayersStylesUnique) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLegendsLayersStylesUnique['default'];
    }
  });
});
define('dummy/components/legends/odata-vector-legend', ['exports', 'ember-flexberry-gis/components/legends/odata-vector-legend'], function (exports, _emberFlexberryGisComponentsLegendsOdataVectorLegend) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLegendsOdataVectorLegend['default'];
    }
  });
});
define('dummy/components/legends/wfs-legend', ['exports', 'ember-flexberry-gis/components/legends/wfs-legend'], function (exports, _emberFlexberryGisComponentsLegendsWfsLegend) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLegendsWfsLegend['default'];
    }
  });
});
define('dummy/components/legends/with-history-legend', ['exports', 'ember-flexberry-gis/components/legends/with-history-legend'], function (exports, _emberFlexberryGisComponentsLegendsWithHistoryLegend) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLegendsWithHistoryLegend['default'];
    }
  });
});
define('dummy/components/legends/wms-legend', ['exports', 'ember-flexberry-gis/components/legends/wms-legend'], function (exports, _emberFlexberryGisComponentsLegendsWmsLegend) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLegendsWmsLegend['default'];
    }
  });
});
define('dummy/components/legends/wms-single-tile-legend', ['exports', 'ember-flexberry-gis/components/legends/wms-single-tile-legend'], function (exports, _emberFlexberryGisComponentsLegendsWmsSingleTileLegend) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLegendsWmsSingleTileLegend['default'];
    }
  });
});
define('dummy/components/legends/wms-wfs-legend', ['exports', 'ember-flexberry-gis/components/legends/wms-wfs-legend'], function (exports, _emberFlexberryGisComponentsLegendsWmsWfsLegend) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsLegendsWmsWfsLegend['default'];
    }
  });
});
define('dummy/components/map-commands-dialogs/export', ['exports', 'ember-flexberry-gis/components/map-commands-dialogs/export'], function (exports, _emberFlexberryGisComponentsMapCommandsDialogsExport) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsMapCommandsDialogsExport['default'];
    }
  });
});
define('dummy/components/map-commands-dialogs/go-to', ['exports', 'ember-flexberry-gis/components/map-commands-dialogs/go-to'], function (exports, _emberFlexberryGisComponentsMapCommandsDialogsGoTo) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsMapCommandsDialogsGoTo['default'];
    }
  });
});
define('dummy/components/map-commands-dialogs/search-settings/geocoder-osm-ru', ['exports', 'ember-flexberry-gis/components/map-commands-dialogs/search-settings/geocoder-osm-ru'], function (exports, _emberFlexberryGisComponentsMapCommandsDialogsSearchSettingsGeocoderOsmRu) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsMapCommandsDialogsSearchSettingsGeocoderOsmRu['default'];
    }
  });
});
define('dummy/components/map-commands-dialogs/search-settings/geojson', ['exports', 'ember-flexberry-gis/components/map-commands-dialogs/search-settings/geojson'], function (exports, _emberFlexberryGisComponentsMapCommandsDialogsSearchSettingsGeojson) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsMapCommandsDialogsSearchSettingsGeojson['default'];
    }
  });
});
define('dummy/components/map-commands-dialogs/search-settings/kml', ['exports', 'ember-flexberry-gis/components/map-commands-dialogs/search-settings/kml'], function (exports, _emberFlexberryGisComponentsMapCommandsDialogsSearchSettingsKml) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsMapCommandsDialogsSearchSettingsKml['default'];
    }
  });
});
define('dummy/components/map-commands-dialogs/search-settings/odata-vector', ['exports', 'ember-flexberry-gis/components/map-commands-dialogs/search-settings/odata-vector'], function (exports, _emberFlexberryGisComponentsMapCommandsDialogsSearchSettingsOdataVector) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsMapCommandsDialogsSearchSettingsOdataVector['default'];
    }
  });
});
define('dummy/components/map-commands-dialogs/search-settings/wfs', ['exports', 'ember-flexberry-gis/components/map-commands-dialogs/search-settings/wfs'], function (exports, _emberFlexberryGisComponentsMapCommandsDialogsSearchSettingsWfs) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsMapCommandsDialogsSearchSettingsWfs['default'];
    }
  });
});
define('dummy/components/map-commands-dialogs/search-settings/wms-wfs', ['exports', 'ember-flexberry-gis/components/map-commands-dialogs/search-settings/wms-wfs'], function (exports, _emberFlexberryGisComponentsMapCommandsDialogsSearchSettingsWmsWfs) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsMapCommandsDialogsSearchSettingsWmsWfs['default'];
    }
  });
});
define('dummy/components/map-commands-dialogs/search', ['exports', 'ember-flexberry-gis/components/map-commands-dialogs/search'], function (exports, _emberFlexberryGisComponentsMapCommandsDialogsSearch) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsMapCommandsDialogsSearch['default'];
    }
  });
});
define('dummy/components/map-commands/base', ['exports', 'ember-flexberry-gis/components/map-commands/base'], function (exports, _emberFlexberryGisComponentsMapCommandsBase) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsMapCommandsBase['default'];
    }
  });
});
define('dummy/components/map-commands/edit', ['exports', 'ember-flexberry-gis/components/map-commands/edit'], function (exports, _emberFlexberryGisComponentsMapCommandsEdit) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsMapCommandsEdit['default'];
    }
  });
});
define('dummy/components/map-commands/export', ['exports', 'ember-flexberry-gis/components/map-commands/export'], function (exports, _emberFlexberryGisComponentsMapCommandsExport) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsMapCommandsExport['default'];
    }
  });
});
define('dummy/components/map-commands/full-extent', ['exports', 'ember-flexberry-gis/components/map-commands/full-extent'], function (exports, _emberFlexberryGisComponentsMapCommandsFullExtent) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsMapCommandsFullExtent['default'];
    }
  });
});
define('dummy/components/map-commands/go-to', ['exports', 'ember-flexberry-gis/components/map-commands/go-to'], function (exports, _emberFlexberryGisComponentsMapCommandsGoTo) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsMapCommandsGoTo['default'];
    }
  });
});
define('dummy/components/map-commands/locate', ['exports', 'ember-flexberry-gis/components/map-commands/locate'], function (exports, _emberFlexberryGisComponentsMapCommandsLocate) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsMapCommandsLocate['default'];
    }
  });
});
define('dummy/components/map-commands/search', ['exports', 'ember-flexberry-gis/components/map-commands/search'], function (exports, _emberFlexberryGisComponentsMapCommandsSearch) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsMapCommandsSearch['default'];
    }
  });
});
define('dummy/components/map-dialogs/edit', ['exports', 'ember-flexberry-gis/components/map-dialogs/edit'], function (exports, _emberFlexberryGisComponentsMapDialogsEdit) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsMapDialogsEdit['default'];
    }
  });
});
define('dummy/components/map-tools/background-layers', ['exports', 'ember-flexberry-gis/components/map-tools/background-layers'], function (exports, _emberFlexberryGisComponentsMapToolsBackgroundLayers) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsMapToolsBackgroundLayers['default'];
    }
  });
});
define('dummy/components/map-tools/base', ['exports', 'ember-flexberry-gis/components/map-tools/base'], function (exports, _emberFlexberryGisComponentsMapToolsBase) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsMapToolsBase['default'];
    }
  });
});
define('dummy/components/map-tools/compare', ['exports', 'ember-flexberry-gis/components/map-tools/compare'], function (exports, _emberFlexberryGisComponentsMapToolsCompare) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsMapToolsCompare['default'];
    }
  });
});
define('dummy/components/map-tools/drag', ['exports', 'ember-flexberry-gis/components/map-tools/drag'], function (exports, _emberFlexberryGisComponentsMapToolsDrag) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsMapToolsDrag['default'];
    }
  });
});
define('dummy/components/map-tools/draw', ['exports', 'ember-flexberry-gis/components/map-tools/draw'], function (exports, _emberFlexberryGisComponentsMapToolsDraw) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsMapToolsDraw['default'];
    }
  });
});
define('dummy/components/map-tools/identify', ['exports', 'ember-flexberry-gis/components/map-tools/identify'], function (exports, _emberFlexberryGisComponentsMapToolsIdentify) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsMapToolsIdentify['default'];
    }
  });
});
define('dummy/components/map-tools/measure', ['exports', 'ember-flexberry-gis/components/map-tools/measure'], function (exports, _emberFlexberryGisComponentsMapToolsMeasure) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsMapToolsMeasure['default'];
    }
  });
});
define('dummy/components/map-tools/zoom-in', ['exports', 'ember-flexberry-gis/components/map-tools/zoom-in'], function (exports, _emberFlexberryGisComponentsMapToolsZoomIn) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsMapToolsZoomIn['default'];
    }
  });
});
define('dummy/components/map-tools/zoom-out', ['exports', 'ember-flexberry-gis/components/map-tools/zoom-out'], function (exports, _emberFlexberryGisComponentsMapToolsZoomOut) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsMapToolsZoomOut['default'];
    }
  });
});
define('dummy/components/markers-styles-editor', ['exports', 'ember-flexberry-gis/components/markers-styles-editor'], function (exports, _emberFlexberryGisComponentsMarkersStylesEditor) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsMarkersStylesEditor['default'];
    }
  });
});
define('dummy/components/markers-styles/default', ['exports', 'ember-flexberry-gis/components/markers-styles/default'], function (exports, _emberFlexberryGisComponentsMarkersStylesDefault) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsMarkersStylesDefault['default'];
    }
  });
});
define('dummy/components/markers-styles/image', ['exports', 'ember-flexberry-gis/components/markers-styles/image'], function (exports, _emberFlexberryGisComponentsMarkersStylesImage) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsMarkersStylesImage['default'];
    }
  });
});
define('dummy/components/markers-styles/image/icon-editor', ['exports', 'ember-flexberry-gis/components/markers-styles/image/icon-editor'], function (exports, _emberFlexberryGisComponentsMarkersStylesImageIconEditor) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsMarkersStylesImageIconEditor['default'];
    }
  });
});
define('dummy/components/minimap-control', ['exports', 'ember-flexberry-gis/components/minimap-control'], function (exports, _emberFlexberryGisComponentsMinimapControl) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsMinimapControl['default'];
    }
  });
});
define('dummy/components/mobile/flexberry-file', ['exports', 'ember-flexberry/components/mobile/flexberry-file'], function (exports, _emberFlexberryComponentsMobileFlexberryFile) {
  exports['default'] = _emberFlexberryComponentsMobileFlexberryFile['default'];
});
define('dummy/components/mobile/flexberry-groupedit', ['exports', 'ember-flexberry/components/mobile/flexberry-groupedit'], function (exports, _emberFlexberryComponentsMobileFlexberryGroupedit) {
  exports['default'] = _emberFlexberryComponentsMobileFlexberryGroupedit['default'];
});
define('dummy/components/mobile/flexberry-objectlistview', ['exports', 'ember-flexberry/components/mobile/flexberry-objectlistview'], function (exports, _emberFlexberryComponentsMobileFlexberryObjectlistview) {
  exports['default'] = _emberFlexberryComponentsMobileFlexberryObjectlistview['default'];
});
define('dummy/components/mobile/object-list-view-row', ['exports', 'ember-flexberry/components/mobile/object-list-view-row'], function (exports, _emberFlexberryComponentsMobileObjectListViewRow) {
  exports['default'] = _emberFlexberryComponentsMobileObjectListViewRow['default'];
});
define('dummy/components/mobile/object-list-view', ['exports', 'ember-flexberry/components/mobile/object-list-view'], function (exports, _emberFlexberryComponentsMobileObjectListView) {
  exports['default'] = _emberFlexberryComponentsMobileObjectListView['default'];
});
define('dummy/components/modal-dialog', ['exports', 'ember-flexberry/components/modal-dialog'], function (exports, _emberFlexberryComponentsModalDialog) {
  exports['default'] = _emberFlexberryComponentsModalDialog['default'];
});
define('dummy/components/object-list-view-cell', ['exports', 'ember-flexberry/components/object-list-view-cell'], function (exports, _emberFlexberryComponentsObjectListViewCell) {
  exports['default'] = _emberFlexberryComponentsObjectListViewCell['default'];
});
define('dummy/components/object-list-view-row', ['exports', 'ember-flexberry/components/object-list-view-row'], function (exports, _emberFlexberryComponentsObjectListViewRow) {
  exports['default'] = _emberFlexberryComponentsObjectListViewRow['default'];
});
define('dummy/components/object-list-view-single-column-cell', ['exports', 'ember-flexberry/components/object-list-view-single-column-cell'], function (exports, _emberFlexberryComponentsObjectListViewSingleColumnCell) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryComponentsObjectListViewSingleColumnCell['default'];
    }
  });
});
define('dummy/components/object-list-view', ['exports', 'ember-flexberry/components/object-list-view'], function (exports, _emberFlexberryComponentsObjectListView) {
  exports['default'] = _emberFlexberryComponentsObjectListView['default'];
});
define('dummy/components/olv-filter-interval', ['exports', 'ember-flexberry/components/olv-filter-interval'], function (exports, _emberFlexberryComponentsOlvFilterInterval) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryComponentsOlvFilterInterval['default'];
    }
  });
});
define('dummy/components/olv-setconfigdialogbutton', ['exports', 'ember-flexberry/components/olv-setconfigdialogbutton'], function (exports, _emberFlexberryComponentsOlvSetconfigdialogbutton) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryComponentsOlvSetconfigdialogbutton['default'];
    }
  });
});
define('dummy/components/olv-toolbar', ['exports', 'ember-flexberry/components/olv-toolbar'], function (exports, _emberFlexberryComponentsOlvToolbar) {
  exports['default'] = _emberFlexberryComponentsOlvToolbar['default'];
});
define('dummy/components/range-slider', ['exports', 'ui-slider/components/range-slider'], function (exports, _uiSliderComponentsRangeSlider) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _uiSliderComponentsRangeSlider['default'];
    }
  });
});
define('dummy/components/scale-control', ['exports', 'ember-flexberry-gis/components/scale-control'], function (exports, _emberFlexberryGisComponentsScaleControl) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsScaleControl['default'];
    }
  });
});
define('dummy/components/select-with-checkbox', ['exports', 'ember-flexberry-gis/components/select-with-checkbox'], function (exports, _emberFlexberryGisComponentsSelectWithCheckbox) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsSelectWithCheckbox['default'];
    }
  });
});
define('dummy/components/spatial-bookmark', ['exports', 'ember-flexberry-gis/components/spatial-bookmark'], function (exports, _emberFlexberryGisComponentsSpatialBookmark) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsSpatialBookmark['default'];
    }
  });
});
define('dummy/components/switch-scale-control', ['exports', 'ember-flexberry-gis/components/switch-scale-control'], function (exports, _emberFlexberryGisComponentsSwitchScaleControl) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsSwitchScaleControl['default'];
    }
  });
});
define('dummy/components/ui-accordion', ['exports', 'semantic-ui-ember/components/ui-accordion'], function (exports, _semanticUiEmberComponentsUiAccordion) {
  exports['default'] = _semanticUiEmberComponentsUiAccordion['default'];
});
define('dummy/components/ui-checkbox', ['exports', 'semantic-ui-ember/components/ui-checkbox'], function (exports, _semanticUiEmberComponentsUiCheckbox) {
  exports['default'] = _semanticUiEmberComponentsUiCheckbox['default'];
});
define('dummy/components/ui-dropdown-item', ['exports', 'semantic-ui-ember/components/ui-dropdown-item'], function (exports, _semanticUiEmberComponentsUiDropdownItem) {
  exports['default'] = _semanticUiEmberComponentsUiDropdownItem['default'];
});
define('dummy/components/ui-dropdown', ['exports', 'semantic-ui-ember/components/ui-dropdown'], function (exports, _semanticUiEmberComponentsUiDropdown) {
  exports['default'] = _semanticUiEmberComponentsUiDropdown['default'];
});
define('dummy/components/ui-embed', ['exports', 'semantic-ui-ember/components/ui-embed'], function (exports, _semanticUiEmberComponentsUiEmbed) {
  exports['default'] = _semanticUiEmberComponentsUiEmbed['default'];
});
define('dummy/components/ui-message', ['exports', 'ember-flexberry/components/ui-message'], function (exports, _emberFlexberryComponentsUiMessage) {
  exports['default'] = _emberFlexberryComponentsUiMessage['default'];
});
define('dummy/components/ui-modal', ['exports', 'semantic-ui-ember/components/ui-modal'], function (exports, _semanticUiEmberComponentsUiModal) {
  exports['default'] = _semanticUiEmberComponentsUiModal['default'];
});
define('dummy/components/ui-nag', ['exports', 'semantic-ui-ember/components/ui-nag'], function (exports, _semanticUiEmberComponentsUiNag) {
  exports['default'] = _semanticUiEmberComponentsUiNag['default'];
});
define('dummy/components/ui-popup', ['exports', 'semantic-ui-ember/components/ui-popup'], function (exports, _semanticUiEmberComponentsUiPopup) {
  exports['default'] = _semanticUiEmberComponentsUiPopup['default'];
});
define('dummy/components/ui-progress', ['exports', 'semantic-ui-ember/components/ui-progress'], function (exports, _semanticUiEmberComponentsUiProgress) {
  exports['default'] = _semanticUiEmberComponentsUiProgress['default'];
});
define('dummy/components/ui-radio', ['exports', 'semantic-ui-ember/components/ui-radio'], function (exports, _semanticUiEmberComponentsUiRadio) {
  exports['default'] = _semanticUiEmberComponentsUiRadio['default'];
});
define('dummy/components/ui-rating', ['exports', 'semantic-ui-ember/components/ui-rating'], function (exports, _semanticUiEmberComponentsUiRating) {
  exports['default'] = _semanticUiEmberComponentsUiRating['default'];
});
define('dummy/components/ui-search', ['exports', 'semantic-ui-ember/components/ui-search'], function (exports, _semanticUiEmberComponentsUiSearch) {
  exports['default'] = _semanticUiEmberComponentsUiSearch['default'];
});
define('dummy/components/ui-shape', ['exports', 'semantic-ui-ember/components/ui-shape'], function (exports, _semanticUiEmberComponentsUiShape) {
  exports['default'] = _semanticUiEmberComponentsUiShape['default'];
});
define('dummy/components/ui-sidebar', ['exports', 'semantic-ui-ember/components/ui-sidebar'], function (exports, _semanticUiEmberComponentsUiSidebar) {
  exports['default'] = _semanticUiEmberComponentsUiSidebar['default'];
});
define('dummy/components/ui-slider', ['exports', 'ui-slider/components/ui-slider'], function (exports, _uiSliderComponentsUiSlider) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _uiSliderComponentsUiSlider['default'];
    }
  });
});
define('dummy/components/ui-sticky', ['exports', 'semantic-ui-ember/components/ui-sticky'], function (exports, _semanticUiEmberComponentsUiSticky) {
  exports['default'] = _semanticUiEmberComponentsUiSticky['default'];
});
define('dummy/components/yield-slot', ['exports', 'ember-block-slots/components/yield-slot'], function (exports, _emberBlockSlotsComponentsYieldSlot) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberBlockSlotsComponentsYieldSlot['default'];
    }
  });
});
define('dummy/components/zoomslider-control', ['exports', 'ember-flexberry-gis/components/zoomslider-control'], function (exports, _emberFlexberryGisComponentsZoomsliderControl) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisComponentsZoomsliderControl['default'];
    }
  });
});
define('dummy/controllers/advlimit-dialog', ['exports', 'ember-flexberry/controllers/advlimit-dialog'], function (exports, _emberFlexberryControllersAdvlimitDialog) {
  exports['default'] = _emberFlexberryControllersAdvlimitDialog['default'];
});
define('dummy/controllers/api-test-map', ['exports', 'ember', 'dummy/controllers/map'], function (exports, _ember, _dummyControllersMap) {

  /**
    Map controller.
  
    @class MapController
    @extends EditMapController
    @uses EditFormControllerOperationsIndicationMixin
  */
  exports['default'] = _dummyControllersMap['default'].extend({
    /**
      Service for managing map API.
       @property mapApi
      @type MapApiService
    */
    mapApi: _ember['default'].inject.service(),

    actions: {
      /**
        Sets layerInitCallback function.
         @method  actions.applyApiSettings
      */
      applyApiSettings: function applyApiSettings() {
        this.get('mapApi').addToApi('layerInitCallback', function (model) {
          var layer = model.getLeafletObject();
          layer.eachLayer(function (layerr) {
            switch (model.layerModel.get('id')) {
              case 'f7670a1f-1acb-4571-923c-1ce3bc88e11e':
                layerr.setStyle({ color: '#808000', fillColor: '#FFD700' });
                break;
              case 'f8dec493-d879-49ae-ad55-f4f18c89cb88':
                layerr.setStyle({ color: '#008B8B' });
                break;
            }

            layerr.on('click', function (e) {
              window.alert(e.target.feature.properties.name);
            });
          });
        });

        this.send('refreshMap');
      },

      onIdentificationFinished: function onIdentificationFinished(e) {
        var leafletMap = this.get('leafletMap');
        var identifyServiceLayer = this.get('identifyServiceLayer');
        if (identifyServiceLayer) {
          identifyServiceLayer.clearLayers();
        } else {
          this.set('identifyServiceLayer', e.serviceLayer || L.featureGroup().addTo(leafletMap));
        }

        this.set('polygonLayer', e.polygonLayer);
        this.set('identifyToolResults', e.results);

        if (this.get('sidebar.2.active') !== true) {
          this.set('sidebar.2.active', true);
        }

        if (!this.get('sidebarOpened')) {
          this.send('toggleSidebar', {
            changed: false
          });
        }
      }
    }
  });
});
/**
  @module ember-flexberry-gis-dummy
*/
define('dummy/controllers/application', ['exports', 'ember', 'dummy/config/environment'], function (exports, _ember, _dummyConfigEnvironment) {

  var version = _dummyConfigEnvironment['default'].APP.version;

  /**
    Application controller.
  
    @class ApplicationController
    @extends <a href="http://emberjs.com/api/classes/Ember.Controller.html">Ember.Controller</a>
  */
  exports['default'] = _ember['default'].Controller.extend({
    /**
      Service that triggers objectlistview events.
       @property objectlistviewEventsService
      @type Service
    */
    objectlistviewEventsService: _ember['default'].inject.service('objectlistview-events'),

    /**
      Service for managing the state of the application.
       @property appState
      @type AppStateService
    */
    appState: _ember['default'].inject.service(),

    actions: {
      /**
        Call `updateWidthTrigger` for `objectlistviewEventsService`.
        @method actions.updateWidth
      */
      updateWidth: function updateWidth() {
        this.get('objectlistviewEventsService').updateWidthTrigger();
      },

      /**
        Toggles application sitemap's side bar.
         @method actions.toggleSidebar
      */
      toggleSidebar: function toggleSidebar() {
        var sidebar = _ember['default'].$('.ui.sidebar.main.menu');
        sidebar.sidebar('toggle');

        if (_ember['default'].$('.inverted.vertical.main.menu').hasClass('visible')) {
          _ember['default'].$('.sidebar.icon.text-menu-show').removeClass('hidden');
          _ember['default'].$('.sidebar.icon.text-menu-hide').addClass('hidden');
          _ember['default'].$('.bgw-opacity').addClass('hidden');
          _ember['default'].$('.full.height').css({ transition: 'width 0.45s ease-in-out 0s', width: '100%' });
        } else {
          _ember['default'].$('.sidebar.icon.text-menu-show').addClass('hidden');
          _ember['default'].$('.sidebar.icon.text-menu-hide').removeClass('hidden');
          _ember['default'].$('.bgw-opacity').removeClass('hidden');
          _ember['default'].$('.full.height').css({ transition: 'width 0.3s ease-in-out 0s', width: 'calc(100% - ' + sidebar.width() + 'px)' });
        }
      },

      /**
        Toggles application sitemap's side bar in mobile view.
         @method actions.toggleSidebarMobile
      */
      toggleSidebarMobile: function toggleSidebarMobile() {
        _ember['default'].$('.ui.sidebar.main.menu').sidebar('toggle');

        if (_ember['default'].$('.inverted.vertical.main.menu').hasClass('visible')) {
          _ember['default'].$('.sidebar.icon.text-menu-show').removeClass('hidden');
          _ember['default'].$('.sidebar.icon.text-menu-hide').addClass('hidden');
          _ember['default'].$('.bgw-opacity').addClass('hidden');
        } else {
          _ember['default'].$('.sidebar.icon.text-menu-show').addClass('hidden');
          _ember['default'].$('.sidebar.icon.text-menu-hide').removeClass('hidden');
          _ember['default'].$('.bgw-opacity').removeClass('hidden');
        }
      }
    },

    /**
      Flag: indicates that form to which controller is related designed for acceptance tests &
      all additional markup in application.hbs mustn't be rendered.
       @property isInAcceptanceTestMode
      @type Boolean
      @default false
    */
    isInAcceptanceTestMode: false,

    /**
      Currernt addon version.
       @property addonVersion
      @type String
    */
    addonVersion: version,

    /**
      Link to GitHub commit related to current addon version.
       @property addonVersionHref
      @type String
    */
    addonVersionHref: _ember['default'].computed('addonVersion', function () {
      var addonVersion = this.get('addonVersion');
      var commitSha = addonVersion.split('+')[1];

      return 'https://github.com/Flexberry/ember-flexberry/commit/' + commitSha;
    }),

    /**
      Flag: indicates whether current browser is internet explorer.
       @property browserIsInternetExplorer
      @type Boolean
    */
    browserIsInternetExplorer: _ember['default'].computed(function () {
      var userAgent = window.navigator.userAgent;

      return userAgent.indexOf('MSIE ') > 0 || userAgent.indexOf('Trident/') > 0 || userAgent.indexOf('Edge/') > 0;
    }),

    /**
      Locales supported by application.
       @property locales
      @type String[]
      @default ['ru', 'en']
    */
    locales: ['ru', 'en'],

    /**
      Handles changes in userSettingsService.isUserSettingsServiceEnabled.
       @method _userSettingsServiceChanged
      @private
    */
    _userSettingsServiceChanged: _ember['default'].observer('userSettingsService.isUserSettingsServiceEnabled', function () {
      this.get('target.router').refresh();
    }),

    /**
      Initializes controller.
    */
    init: function init() {
      this._super.apply(this, arguments);

      var i18n = this.get('i18n');
      if (_ember['default'].isNone(i18n)) {
        return;
      }

      // If i18n.locale is long value like 'ru-RU', 'en-GB', ... this code will return short variant 'ru', 'en', etc.
      var shortCurrentLocale = this.get('i18n.locale').split('-')[0];
      var availableLocales = _ember['default'].A(this.get('locales'));

      // Force current locale to be one of available,
      // if browser's current language is not supported by dummy application,
      // or if browser's current locale is long value like 'ru-RU', 'en-GB', etc.
      if (!availableLocales.contains(shortCurrentLocale)) {
        i18n.set('locale', 'en');
      } else {
        i18n.set('locale', shortCurrentLocale);
      }
    },

    /**
      Application sitemap.
       @property sitemap
      @type Object
    */
    sitemap: _ember['default'].computed('i18n.locale', function () {
      var i18n = this.get('i18n');

      return {
        nodes: [{
          link: 'index',
          caption: i18n.t('forms.application.sitemap.index.caption'),
          title: i18n.t('forms.application.sitemap.index.title'),
          children: null
        }, {
          link: null,
          caption: i18n.t('forms.application.sitemap.gis.caption'),
          title: i18n.t('forms.application.sitemap.gis.title'),
          children: [{
            link: 'maps',
            caption: i18n.t('forms.application.sitemap.gis.maps.caption'),
            title: i18n.t('forms.application.sitemap.gis.maps.title'),
            children: null
          }, {
            link: 'new-platform-flexberry-g-i-s-layer-metadata-l',
            caption: i18n.t('forms.application.sitemap.gis.map-metadata.caption'),
            title: i18n.t('forms.application.sitemap.gis.map-metadata.title'),
            children: null
          }, {
            link: 'gis-search-form',
            caption: i18n.t('forms.application.sitemap.gis.gis-search-form.caption'),
            title: i18n.t('forms.application.sitemap.gis.gis-search-form.title'),
            children: null
          }, {
            link: 'new-platform-flexberry-g-i-s-map-object-setting-l',
            caption: i18n.t('forms.application.sitemap.map-object-setting.caption'),
            title: i18n.t('forms.application.sitemap.map-object-setting.title'),
            children: null
          }]
        }, {
          link: null,
          caption: i18n.t('forms.application.sitemap.components-examples.caption'),
          title: i18n.t('forms.application.sitemap.components-examples.title'),
          children: [{
            link: 'components-examples/flexberry-boundingbox/settings-example',
            caption: i18n.t('forms.application.sitemap.components-examples.flexberry-boundingbox.caption'),
            title: i18n.t('forms.application.sitemap.components-examples.flexberry-boundingbox.title'),
            children: null
          }]
        }]
      };
    })
  });
});
/**
  @module ember-flexberry-gis-dummy
*/
define('dummy/controllers/colsconfig-dialog', ['exports', 'ember-flexberry/controllers/colsconfig-dialog'], function (exports, _emberFlexberryControllersColsconfigDialog) {
  exports['default'] = _emberFlexberryControllersColsconfigDialog['default'];
});
define('dummy/controllers/components-examples/flexberry-boundingbox/settings-example', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Controller.extend({
    /**
      Minimal latitude value.
       @property minLat
      @type number
      @default -90
    */
    minLat: -90,

    /**
      Maximal latitude value.
       @property maxLat
      @type number
      @default 90
    */
    maxLat: 90,

    /**
      Minimal longitude value.
       @property minLng
      @type number
      @default -180
    */
    minLng: -180,

    /**
      Maximal longitude value.
       @property maxLng
      @type number
      @default 180
    */
    maxLng: 180,

    actions: {
      onBoundingBoxChange: function onBoundingBoxChange(e) {
        console.log('boundingBoxChange: ', e);
      }
    }
  });
});
define('dummy/controllers/detail-edit-form', ['exports', 'ember-flexberry/controllers/detail-edit-form'], function (exports, _emberFlexberryControllersDetailEditForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryControllersDetailEditForm['default'];
    }
  });
});
define('dummy/controllers/edit-form', ['exports', 'ember-flexberry/controllers/edit-form'], function (exports, _emberFlexberryControllersEditForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryControllersEditForm['default'];
    }
  });
});
define('dummy/controllers/filters-dialog', ['exports', 'ember-flexberry/controllers/filters-dialog'], function (exports, _emberFlexberryControllersFiltersDialog) {
  exports['default'] = _emberFlexberryControllersFiltersDialog['default'];
});
define('dummy/controllers/flexberry-file-view-dialog', ['exports', 'ember-flexberry/controllers/flexberry-file-view-dialog'], function (exports, _emberFlexberryControllersFlexberryFileViewDialog) {
  exports['default'] = _emberFlexberryControllersFlexberryFileViewDialog['default'];
});
define('dummy/controllers/gis-search-form', ['exports', 'ember-flexberry-gis/controllers/gis-search-form'], function (exports, _emberFlexberryGisControllersGisSearchForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisControllersGisSearchForm['default'];
    }
  });
});
define('dummy/controllers/i-i-s-caseberry-logging-objects-application-log-e', ['exports', 'ember-flexberry/controllers/i-i-s-caseberry-logging-objects-application-log-e'], function (exports, _emberFlexberryControllersIISCaseberryLoggingObjectsApplicationLogE) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryControllersIISCaseberryLoggingObjectsApplicationLogE['default'];
    }
  });
});
define('dummy/controllers/i-i-s-caseberry-logging-objects-application-log-l', ['exports', 'ember-flexberry/controllers/i-i-s-caseberry-logging-objects-application-log-l'], function (exports, _emberFlexberryControllersIISCaseberryLoggingObjectsApplicationLogL) {
  /**
   * @module ember-flexberry
   */
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryControllersIISCaseberryLoggingObjectsApplicationLogL['default'];
    }
  });
});
define('dummy/controllers/list-form', ['exports', 'ember-flexberry/controllers/list-form'], function (exports, _emberFlexberryControllersListForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryControllersListForm['default'];
    }
  });
});
define('dummy/controllers/lookup-dialog', ['exports', 'ember-flexberry/controllers/lookup-dialog'], function (exports, _emberFlexberryControllersLookupDialog) {
  exports['default'] = _emberFlexberryControllersLookupDialog['default'];
});
define('dummy/controllers/map', ['exports', 'ember', 'ember-flexberry-gis/controllers/edit-map', 'ember-flexberry/mixins/edit-form-controller-operations-indication', 'npm:leaflet-side-by-side'], function (exports, _ember, _emberFlexberryGisControllersEditMap, _emberFlexberryMixinsEditFormControllerOperationsIndication, _npmLeafletSideBySide) {

  /**
    Map controller.
  
    @class MapController
    @extends EditMapController
    @uses EditFormControllerOperationsIndicationMixin
  */
  exports['default'] = _emberFlexberryGisControllersEditMap['default'].extend(_emberFlexberryMixinsEditFormControllerOperationsIndication['default'], {
    /**
      Property contatining sideBySide component.
      @property sideBySide
      @type L.control.sideBySide
      @default null
    */
    sideBySide: L.control.sideBySide(),

    compareService: _ember['default'].Service.inject('compare'),

    /**
      Parent route.
       @property parentRoute
      @type String
      @default 'maps'
    */
    parentRoute: 'maps',

    /**
      Idenify tool layers mode (which layers to identify).
       @property identifyToolLayerMode
      @default 'visible'
      @type String
    */
    identifyToolLayerMode: 'visible',

    /**
      Identify tool mode (in which type of area to identify).
       @property identifyToolToolMode
      @default 'marker'
      @type String
    */
    identifyToolToolMode: 'marker',

    /**
      Flag: indicates whether idenify tool's buffer if active or not.
       @property identifyToolBufferActive
      @type Boolean
      @default false
    */
    identifyToolBufferActive: false,

    /**
      Idenify tool buffer raduus units.
       @property identifyToolBufferUnits
      @type String
      @default 'kilometers'
    */
    identifyToolBufferUnits: 'kilometers',

    /**
      Idenify tool buffer radius in selected units.
       @property identifyToolBufferRadius
      @type Number
      @default 0
    */
    identifyToolBufferRadius: 0,

    /**
      Placeholder or default text (will be displayed if there is no selected item).
       @property placeholderSearch
      @type String
      @default null
    */
    placeholderSearch: null,

    /**
      Identify tool name computed by the specified tool settings.
       @property identifyToolName
      @type String
      @readOnly
    */
    identifyToolName: _ember['default'].computed('identifyToolLayerMode', 'identifyToolToolMode', function () {
      var identifyToolName = 'identify';
      var layerMode = this.get('identifyToolLayerMode');
      var toolMode = this.get('identifyToolToolMode');

      if (!(_ember['default'].isBlank(layerMode) || _ember['default'].isBlank(toolMode))) {
        identifyToolName = 'identify-' + layerMode + '-' + toolMode;
      }

      return identifyToolName;
    }),

    /**
      Polygon layer representing identification area (icluding buffer, if buffer enabled).
       @property identifyToolPolygonLayer
      @type <a href="http://leafletjs.com/reference-1.2.0.html#layergroup">L.LayerGroup</a>
      @default null
    */
    identifyToolPolygonLayer: null,

    /**
      Polygon layer around which the buffer is drawn.
       @property bufferedMainPolygonLayer
      @type <a href="http://leafletjs.com/reference.html#polygon">L.Polygon</a>
      @default null
    */
    identifyToolBufferedMainPolygonLayer: null,

    /**
      Identification results.
       @property identifyToolResults
      @type Object[]
    */
    identifyToolResults: null,

    /**
      Leaflet layer group for temporal layers.
       @property serviceLayer
      @type <a href="http://leafletjs.com/reference-1.2.0.html#layergroup">L.LayerGroup</a>
      @default null
    */
    serviceLayer: null,

    /**
      Flag: indicates whether to show layer tree or not.
       @property showTree
      @type Boolean
      @default false
    */
    showTree: false,

    /**
      Set of scales for map's switch scale control.
       @property switchScaleControlScales
      @type Number[]
    */
    switchScaleControlScales: [500, 1000, 2000, 5000, 10000, 15000, 25000, 50000, 75000, 100000, 150000, 200000],

    _leafletMapDidChange: _ember['default'].observer('leafletMap', function () {
      var leafletMap = this.get('leafletMap');
      if (leafletMap) {
        leafletMap.on('flexberry-map:toggleSidebar', this.onToggleSidebar, this);
      }
    }),

    /**
     Flat indicates that map should fire create object on first load
    */
    createObject: null,

    /**
      Sidebar tabs metadata.
       @property sidebar
      @type Object[]
    */
    sidebar: _ember['default'].A([{
      selector: 'treeview',
      captionPath: 'forms.map.treeviewbuttontooltip',
      iconClass: 'list icon'
    }, {
      selector: 'search',
      captionPath: 'forms.map.searchbuttontooltip',
      iconClass: 'search icon'
    }, {
      selector: 'identify',
      captionPath: 'forms.map.identifybuttontooltip',
      iconClass: 'info circle icon',
      'class': 'identify'
    }, {
      selector: 'bookmarks',
      captionPath: 'forms.map.bookmarksbuttontooltip',
      iconClass: 'bookmark icon'
    }, {
      selector: 'favorites',
      captionPath: 'forms.map.favoritesbuttontooltip',
      iconClass: 'favorites icon',
      'class': 'favorite'
    }, {
      selector: 'createObject',
      captionPath: 'forms.map.createobjectbuttontooltip',
      iconClass: 'createObject icon'
    }, {
      selector: 'createOrEditObject',
      captionPath: 'forms.map.createoreditobjectbuttontooltip',
      iconClass: 'createOrEditObject icon',
      'class': 'createOrEditObject'
    }, {
      selector: 'compare',
      captionPath: 'forms.map.comparebuttontooltip',
      iconClass: 'compare icon',
      'class': 'compare'
    }, {
      selector: 'compareObjects',
      caption: 'Сравнение объектов',
      iconClass: 'compareObjects icon',
      'class': 'compareObjects'
    }, {
      selector: 'intersectionObjects',
      caption: 'Сравнение объектов',
      iconClass: 'intersectionObjects icon',
      'class': 'intersectionObjects'
    }]),

    _showFavorites: false,

    _sidebarFiltered: _ember['default'].computed('sidebar', 'createObject', 'createOrEditObject', 'compareObjects', 'showIntersectionPanel', function () {
      var _this = this;

      var result = _ember['default'].A();
      var sidebar = this.get('sidebar');
      sidebar.forEach(function (item) {
        if ((item.selector !== 'createObject' || _this.get('createObject')) && (item.selector !== 'createOrEditObject' || _this.get('createOrEditObject')) && (item.selector !== 'intersectionObjects' || _this.get('showIntersectionPanel')) && (item.selector !== 'compareObjects' || _this.get('compareObjects'))) /* &&
                                                                                                                                                                                                                                                                                                                      (item.selector !== 'compare' || this.get('compare'))) */{
            result.push(item);
          }
      });

      return result;
    }),

    /**
      Sidebar items metadata.
       @property sidebarItems
      @type Object[]
    */
    sidebarItems: _ember['default'].computed('sidebar.[]', 'sidebar.@each.active', 'i18n', function () {
      var i18n = this.get('i18n');
      var sidebar = this.get('sidebar');

      var result = _ember['default'].A(sidebar);
      result.forEach(function (item) {
        var caption = _ember['default'].get(item, 'caption');
        var captionPath = _ember['default'].get(item, 'captionPath');

        if (!caption && captionPath) {
          _ember['default'].set(item, 'caption', i18n.t(captionPath));
        }
      });

      return result;
    }),

    /**
      СRS metadata.
       @property sidebar
      @type Object[]
     */
    availableCRS: _ember['default'].computed(function () {
      return [{
        crs: L.CRS.EPSG3395,
        name: 'EPSG:3395',
        xCaption: 'forms.map.xCaption',
        yCaption: 'forms.map.yCaption'
      }, {
        crs: L.CRS.EPSG4326,
        name: 'EPSG:4326',
        xCaption: 'forms.map.xCaption',
        yCaption: 'forms.map.yCaption'
      }, {
        crs: L.CRS.EPSG3857,
        name: 'EPSG:3857',
        xCaption: 'forms.map.xCaption',
        yCaption: 'forms.map.yCaption'
      }];
    }),

    /**
      Set of laeflet layers opened at 'flexberry-layers-attributes-panel'.
       @property editedLayers
      @type Object[]
      @default null
    */
    editedLayers: null,

    /**
      Index of currently selected tab at 'flexberry-layers-attributes-panel'.
       @property editedLayersSelectedTabIndex
      @type Object[]
      @default 0
    */
    editedLayersSelectedTabIndex: 0,

    /**
      Flag indicates whether 'flexberry-layers-attributes-panel' is folded or not.
       @property editedLayersPanelFolded
      @type Boolean
      @default true
    */
    editedLayersPanelFolded: true,

    /**
      Flag indicates whether 'flexberry-layers-attributes-panel' is loading or not.
       @property editedLayersPanelLoading
      @type Boolean
      @default false
    */
    editedLayersPanelLoading: false,

    /**
      Hash containing settiings for 'flexberry-layers-attributes-panel'.
       @property editedLayersPanelSettings
      @type Object
      @default null
    */
    editedLayersPanelSettings: null,

    /**
      Initializes 'flexberry-layers-attributes-panel'.
       @method initializeEditPanel
    */
    initializeEditPanel: function initializeEditPanel() {
      this.setProperties({
        editedLayers: _ember['default'].A(),
        editedLayersSelectedTabIndex: 0,
        editedLayersPanelFolded: true,
        editedLayersPanelSettings: {
          withToolbar: true,
          sidebarOpened: false
        }
      });
    },

    /**
      Deinitializes 'flexberry-layers-attributes-panel'.
       @method destroyEditPanel
    */
    destroyEditPanel: function destroyEditPanel() {
      this.setProperties({
        editedLayers: null,
        editedLayersSelectedTabIndex: 0,
        editedLayersPanelFolded: true,
        editedLayersPanelSettings: {
          withToolbar: false,
          sidebarOpened: false
        }
      });
    },

    onToggleSidebar: function onToggleSidebar() {
      var tab = undefined;
      if (this.get('sidebarOpened')) {
        _ember['default'].$('.sidebar-wrapper .main-map-tab-bar > .item.tab.active').removeClass('active');
      } else {
        // поищем поcледнюю активную. у самих data-tab класс не сбрасывается
        var activeTab = _ember['default'].$('.sidebar-wrapper .sidebar.tabbar > .ui.tab.active');
        if (activeTab.length > 0) {
          var dataTab = activeTab.attr('data-tab');
          _ember['default'].$('.sidebar-wrapper .main-map-tab-bar > .item.tab[data-tab=' + dataTab + ']').addClass('active');
          tab = dataTab;
        } else {
          this.set('sidebar.0.active', true);
          tab = 'treeview';
        }
      }

      this.send('toggleSidebar', {
        changed: false,
        tabName: tab
      });
    },

    /**
      Observes changes in sidebar state and performs some changes in related 'flexberry-layers-attributes-panel'.
       @method sideBarStateDidChange
    */
    sideBarStateDidChange: _ember['default'].observer('sidebarOpened', function () {
      if (this.get('sidebarOpened')) {
        this.set('editedLayersPanelSettings.sidebarOpened', true);
      } else {
        this.set('editedLayersPanelSettings.sidebarOpened', false);
      }
    }),

    /**
      Handles leaflet map's container resize and performs some changes in related 'flexberry-layers-attributes-panel'.
       @method onLeafletMapContainerResizeStart
    */
    onLeafletMapContainerResizeStart: function onLeafletMapContainerResizeStart() {
      var panelHeight = _ember['default'].$('.mappanel').innerHeight();
      if (panelHeight < 630) {
        this.set('editedLayersPanelSettings.withToolbar', true);
      } else {
        this.set('editedLayersPanelSettings.withToolbar', false);
      }
    },

    actions: {
      onLoad: function onLoad(layer) {
        var config = _ember['default'].getOwner(this).resolveRegistration('config:environment');
        if (config.APP.backendUrls.hasOwnProperty('loaderBackendUrl')) {
          var loaderBackendUrl = config.APP.backendUrls.loaderBackendUrl;
          window.open(loaderBackendUrl, '_blank');
        }
      },

      OnCompareTwoGeometries: function OnCompareTwoGeometries() {
        var _this2 = this;

        this.set('compareObjects', true);
        _ember['default'].run.later(function () {
          var tab = undefined;
          var activeTab = _ember['default'].$('.sidebar-wrapper .sidebar.tabbar > .ui.tab.active');
          if (activeTab.length > 0) {
            tab = activeTab.attr('data-tab');
          }

          _ember['default'].$('.sidebar-wrapper .main-map-tab-bar > .item.tab.active').removeClass('active');

          _this2.set('sidebar.8.active', true);

          _this2.send('toggleSidebar', {
            changed: _this2.get('sidebarOpened'),
            tabName: 'compareObjects',
            prevTab: tab
          });
        });
      },

      onCompareTwoGeometriesEnd: function onCompareTwoGeometriesEnd() {
        this.set('compareObjects', false);

        this.set('sidebar.8.class', 'compareObjects');
        this.set('sidebar.8.active', false);

        this.set('sidebar.3.active', true);
        this.send('toggleSidebar', {
          changed: true,
          tabName: 'bookmarks'
        });
      },

      /**
        Handles create object.
         @method  actions.onCreateObject
      */
      onCreateObject: function onCreateObject(createItems) {
        var _this3 = this;

        this.set('createItems', createItems);
        this.set('createObject', true);

        if (this.get('createObject')) {
          _ember['default'].run.later(function () {
            if (_this3.get('sidebar.5.active') !== true) {
              _this3.set('sidebar.5.active', true);
            }

            if (!_this3.get('sidebarOpened')) {
              _this3.send('toggleSidebar', {
                changed: false,
                tabName: 'createObject'
              });
            }
          });
        }
      },

      /**
        Handles create/edit feature.
         @method  actions.onCreateOrEditFeature
      */
      onCreateOrEditFeature: function onCreateOrEditFeature(e) {
        var _this4 = this;

        this.set('createOrEditedFeature', e);
        this.set('createOrEditObject', true);

        if (this.get('createOrEditObject')) {
          _ember['default'].run.later(function () {
            if (_this4.get('sidebar.6.class').indexOf('active') === -1 && _this4.get('sidebarOpened')) {
              _ember['default'].$('.sidebar-wrapper .item.active').removeClass('active');
            }

            _this4.set('sidebar.6.active', true);

            if (!_this4.get('sidebarOpened')) {
              _this4.send('toggleSidebar', {
                changed: false,
                tabName: 'createOrEditObject'
              });
            }
          });
        }
      },

      onCreateOrEditFeatureEnd: function onCreateOrEditFeatureEnd() {
        this.set('createOrEditedFeature', null);
        this.set('createOrEditObject', false);

        this.set('sidebar.6.class', 'createOrEditObject');
        this.set('sidebar.6.active', false);

        this.set('sidebar.0.active', true);
      },

      attrSearch: function attrSearch(queryString) {
        if (this.get('sidebar.1.active') !== true) {
          this.set('sidebar.1.active', true);
        }

        this.set('attrVisible', true);
        this.set('queryString', queryString);

        if (!this.get('sidebarOpened')) {
          this.send('toggleSidebar', {
            changed: false,
            tabName: 'search'
          });
        }
      },

      showCompareSideBar: function showCompareSideBar() {
        var _this5 = this;

        if (_npmLeafletSideBySide['default']) {
          if (!this.get('compareService.compareLayersEnabled')) {
            this.set('sidebar.7.active', true);
          } else {
            this.set('sidebar.0.active', true);
          }

          if (!this.get('sidebarOpened')) {
            this.send('toggleSidebar', {
              changed: false,
              tabName: 'compare'
            });
          }

          setTimeout(function () {
            _this5.toggleProperty('compareService.compareLayersEnabled');
          }, 500);
        }
      },

      onQueryFinished: function onQueryFinished(e) {
        var _this6 = this;

        if (this.get('createObject')) {
          _ember['default'].run.later(function () {
            if (_this6.get('sidebar.5.active') !== true) {
              _this6.set('sidebar.5.active', true);
            }

            if (!_this6.get('sidebarOpened')) {
              _this6.send('toggleSidebar', {
                changed: false,
                tabName: 'createObject'
              });
            }
          });
        } else {
          this._identificationFinished(e);
        }
      },

      /**
        Handles leaflet map initialization.
         @method  actions.onMapLeafletInit
      */
      onMapLeafletInit: function onMapLeafletInit() {
        this._super.apply(this, arguments);

        this.initializeEditPanel();
      },

      /**
        Handles leaflet map deinitialization.
         @method  actions.onMapLeafletDestroy
      */
      onMapLeafletDestroy: function onMapLeafletDestroy() {
        this.destroyEditPanel();
        this.set('sidebarOpened', false);
        this.set('showTree', false);
        var leafletMap = this.get('leafletMap');
        if (leafletMap) {
          leafletMap.off('flexberry-map:toggleSidebar', this.onToggleSidebar, this);
        }

        this._super.apply(this, arguments);
      },

      /**
        Toggles sidebar.
         @method actions.toggleSidebar
      */
      toggleSidebar: function toggleSidebar(e) {
        var _this7 = this;

        if (!e.changed) {
          var sidebarOpened = !this.get('sidebarOpened');
          this.set('sidebarOpened', sidebarOpened);

          // push left map controls to right for sidebar width
          if (sidebarOpened) {
            _ember['default'].$('.sidebar-wrapper').addClass('visible');
          } else {
            _ember['default'].$('.sidebar-wrapper').removeClass('visible');
            this.set('attrVisible', false);
          }
        }

        if (e.tabName !== 'search') {
          this.set('attrVisible', false);
        }

        if (e.tabName !== 'compare' && this.get('compareService.compareLayersEnabled')) {
          this.set('compareService.compareLayersEnabled', false);
        }

        if (e.tabName === 'identify') {
          var leafletMap = this.get('leafletMap');
          if (_ember['default'].isNone(leafletMap)) {
            return;
          }

          // Enable identify tool when 'identify' tab is clicked.
          var identifyToolName = this.get('identifyToolName');
          var identifyToolProperties = {
            bufferActive: this.get('identifyToolBufferActive'),
            bufferUnits: this.get('identifyToolBufferUnits'),
            bufferRadius: this.get('identifyToolBufferRadius'),
            layerMode: this.get('identifyToolLayerMode'),
            toolMode: this.get('identifyToolToolMode'),
            layers: this.get('model.hierarchy')
          };

          leafletMap.flexberryMap.tools.enable(identifyToolName, identifyToolProperties);
        }

        if (e.tabName === 'treeview') {
          if (!this.get('showTree')) {
            _ember['default'].run.later(function () {
              _this7.set('showTree', true);
            }, 500);
          }
        }

        if (e.prevTab === 'createOrEditObject') {
          if (e.changed) {
            this.set('createOrEditObject', false);
            this.set('createOrEditedFeature', null);
          }

          this.set('sidebar.6.class', 'createOrEditObject');
          this.set('sidebar.6.active', false);
        }

        if (e.prevTab === 'intersectionObjects') {
          if (e.changed) {
            this.set('showIntersectionPanel', false);
            this.set('feature', null);
          }

          this.set('sidebar.9.class', 'intersectionObjects');
          this.set('sidebar.9.active', false);
        }

        if (e.prevTab === 'compareObjects') {
          if (e.changed) {
            this.set('compareObjects', null);
          }

          this.set('sidebar.8.class', 'compareObjects');
          this.set('sidebar.8.active', false);
        }
      },

      /**
        Performs search.
         @method actions.querySearch
      */
      querySearch: function querySearch(e) {
        var leafletMap = this.get('leafletMap');

        leafletMap.fire('flexberry-map:search', e);

        this.set('searchResults', e.results);

        if (this.get('sidebar.1.active') !== true) {
          this.set('sidebar.1.active', true);
          if (!this.get('sidebarOpened')) {
            this.send('toggleSidebar', {
              changed: false,
              tabName: 'search'
            });
          }
        }
      },

      /**
        Clears search results.
         @method actions.clearSearch
      */
      clearSearch: function clearSearch() {
        this.set('searchResults', null);
      },

      /**
        Action shows intersection panel.
         @method actions.onIntersectionPanel
      */
      onIntersectionPanel: function onIntersectionPanel(feature) {
        var _this8 = this;

        this.set('feature', feature);
        this.set('showIntersectionPanel', true);
        _ember['default'].run.later(function () {
          var tab = undefined;
          var activeTab = _ember['default'].$('.rgis-sidebar-wrapper .sidebar.tabbar > .ui.tab.active');
          if (activeTab.length > 0) {
            tab = activeTab.attr('data-tab');
          }

          _ember['default'].$('.rgis-sidebar-wrapper .main-map-tab-bar > .item.tab.active').removeClass('active');

          _this8.set('sidebar.9.active', true);

          _this8.send('toggleSidebar', {
            changed: _this8.get('sidebarOpened'),
            tabName: 'intersectionObjects',
            prevTab: tab
          });
        });
      },

      /**
        Close intersection panel.
         @method actions.findIntersection
      */
      closeIntersectionPanel: function closeIntersectionPanel() {
        this.set('intersection', false);
        this.set('showIntersectionPanel', false);

        this.set('feature', null);

        this.set('sidebar.9.class', 'createOrEditObject');
        this.set('sidebar.9.active', false);

        this.set('sidebar.0.active', true);
        this.send('toggleSidebar', {
          changed: true,
          tabName: 'treeview'
        });
      },

      /**
        Handles 'flexberry-identify-panel:identificationFinished' event of leaflet map.
         @method identificationFinished
        @param {Object} e Event object.
        @param {Object} results Hash containing search results.
        @param {Object[]} results.features Array containing (GeoJSON feature-objects)[http://geojson.org/geojson-spec.html#feature-objects]
        or a promise returning such array.
      */
      onIdentificationFinished: function onIdentificationFinished(e) {
        var serviceLayer = this.get('serviceLayer');
        serviceLayer.clearLayers();

        this.set('identifyToolPolygonLayer', e.polygonLayer);
        this.set('identifyToolBufferedMainPolygonLayer', e.bufferedMainPolygonLayer);
        this.set('identifyToolResults', e.results);

        // Below is kind of madness, but if you want sidebar to move on identification finish - do that.
        if (this.get('sidebar.2.active') !== true) {
          this.set('sidebar.2.active', true);
        }

        if (!this.get('sidebarOpened')) {
          this.send('toggleSidebar', {
            changed: false,
            tabName: 'identify'
          });
        }
      },

      /**
        Clears identification results.
         @method actions.onIdentificationClear
      */
      onIdentificationClear: function onIdentificationClear() {
        this.set('identifyToolResults', null);

        var serviceLayer = this.get('serviceLayer');
        if (serviceLayer) {
          serviceLayer.clearLayers();
        }

        var identifyToolPolygonLayer = this.get('identifyToolPolygonLayer');
        if (identifyToolPolygonLayer) {
          identifyToolPolygonLayer.disableEdit();
          identifyToolPolygonLayer.remove();
        }

        var identifyToolBufferedMainPolygonLayer = this.get('identifyToolBufferedMainPolygonLayer');
        if (identifyToolBufferedMainPolygonLayer) {
          identifyToolBufferedMainPolygonLayer.remove();
        }
      }
    }
  });
});
/**
  @module ember-flexberry-gis-dummy
*/
define('dummy/controllers/map/new', ['exports', 'dummy/controllers/map'], function (exports, _dummyControllersMap) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _dummyControllersMap['default'];
    }
  });
});
define('dummy/controllers/maps', ['exports', 'ember-flexberry-gis/controllers/list-map'], function (exports, _emberFlexberryGisControllersListMap) {

  /**
    Maps controller.
  
    @class MapsController
    @extends ListMapController
  */
  exports['default'] = _emberFlexberryGisControllersListMap['default'].extend({
    /**
      Name of related edit form route.
       @property editFormRoute
      @type String
      @default 'map'
    */
    editFormRoute: 'map'
  });
});
/**
  @module ember-flexberry-gis-dummy
*/
define('dummy/controllers/new-platform-flexberry-g-i-s-layer-metadata-e', ['exports', 'ember-flexberry-gis/controllers/new-platform-flexberry-g-i-s-layer-metadata-e'], function (exports, _emberFlexberryGisControllersNewPlatformFlexberryGISLayerMetadataE) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisControllersNewPlatformFlexberryGISLayerMetadataE['default'];
    }
  });
});
define('dummy/controllers/new-platform-flexberry-g-i-s-layer-metadata-e/new', ['exports', 'ember-flexberry-gis/controllers/new-platform-flexberry-g-i-s-layer-metadata-e/new'], function (exports, _emberFlexberryGisControllersNewPlatformFlexberryGISLayerMetadataENew) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisControllersNewPlatformFlexberryGISLayerMetadataENew['default'];
    }
  });
});
define('dummy/controllers/new-platform-flexberry-g-i-s-layer-metadata-l', ['exports', 'ember-flexberry-gis/controllers/new-platform-flexberry-g-i-s-layer-metadata-l'], function (exports, _emberFlexberryGisControllersNewPlatformFlexberryGISLayerMetadataL) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisControllersNewPlatformFlexberryGISLayerMetadataL['default'];
    }
  });
});
define('dummy/controllers/new-platform-flexberry-g-i-s-map-object-setting-e', ['exports', 'ember-flexberry/controllers/edit-form'], function (exports, _emberFlexberryControllersEditForm) {
  exports['default'] = _emberFlexberryControllersEditForm['default'].extend({
    parentRoute: 'new-platform-flexberry-g-i-s-map-object-setting-l'
  });
});
define('dummy/controllers/new-platform-flexberry-g-i-s-map-object-setting-e/new', ['exports', 'dummy/controllers/new-platform-flexberry-g-i-s-map-object-setting-e'], function (exports, _dummyControllersNewPlatformFlexberryGISMapObjectSettingE) {

  var NewPlatformFlexberryGISMapObjectSettingENewController = _dummyControllersNewPlatformFlexberryGISMapObjectSettingE['default'];
  exports['default'] = NewPlatformFlexberryGISMapObjectSettingENewController;
});
define('dummy/controllers/new-platform-flexberry-g-i-s-map-object-setting-l', ['exports', 'ember-flexberry/controllers/list-form'], function (exports, _emberFlexberryControllersListForm) {
  exports['default'] = _emberFlexberryControllersListForm['default'].extend({
    /**
      Name of related edit form route.
       @property editFormRoute
      @type String
      @default 'new-platform-flexberry-g-i-s-map-object-setting-e'
     */
    editFormRoute: 'new-platform-flexberry-g-i-s-map-object-setting-e'
  });
});
define('dummy/controllers/new-platform-flexberry-services-lock-list', ['exports', 'ember-flexberry/controllers/new-platform-flexberry-services-lock-list'], function (exports, _emberFlexberryControllersNewPlatformFlexberryServicesLockList) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryControllersNewPlatformFlexberryServicesLockList['default'];
    }
  });
});
define('dummy/controllers/sitemap-node', ['exports', 'ember'], function (exports, _ember) {

  /**
    Controller for 'site-map-node' view from 'ember-flexberry' addon.
  
    @class SitemapNodeController
    @extends <a href="http://emberjs.com/api/classes/Ember.Controller.html">Ember.Controller</a>
  */
  exports['default'] = _ember['default'].Controller.extend({
    actions: {
      /**
        Hide Sidebar by clicking submenu item.
         @method actions.subMenuEl
      */
      hideSidebar: function hideSidebar() {
        _ember['default'].$('.ui.sidebar').sidebar('hide');
      },

      /**
        Expand menu items by click.
         @method actions.subMenuEl
      */
      subMenuEl: function subMenuEl(e) {
        var $this = _ember['default'].$(e.currentTarget).parent().find('.subMenu:first');
        if ($this.hasClass('hidden')) {
          $this.removeClass('hidden');
          _ember['default'].$(e.target).parent().find('.item-minus:first').removeClass('hidden');
          _ember['default'].$(e.target).parent().find('.item-plus:first').addClass('hidden');
        } else {
          $this.addClass('hidden');
          _ember['default'].$(e.target).parent().find('.item-minus:first').addClass('hidden');
          _ember['default'].$(e.target).parent().find('.item-plus:first').removeClass('hidden');
        }
      }
    }
  });
});
define('dummy/coordinate-reference-systems/earth', ['exports', 'ember-flexberry-gis/coordinate-reference-systems/earth'], function (exports, _emberFlexberryGisCoordinateReferenceSystemsEarth) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisCoordinateReferenceSystemsEarth['default'];
    }
  });
});
define('dummy/coordinate-reference-systems/epsg-3395', ['exports', 'ember-flexberry-gis/coordinate-reference-systems/epsg-3395'], function (exports, _emberFlexberryGisCoordinateReferenceSystemsEpsg3395) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisCoordinateReferenceSystemsEpsg3395['default'];
    }
  });
});
define('dummy/coordinate-reference-systems/epsg-3857', ['exports', 'ember-flexberry-gis/coordinate-reference-systems/epsg-3857'], function (exports, _emberFlexberryGisCoordinateReferenceSystemsEpsg3857) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisCoordinateReferenceSystemsEpsg3857['default'];
    }
  });
});
define('dummy/coordinate-reference-systems/epsg-4326', ['exports', 'ember-flexberry-gis/coordinate-reference-systems/epsg-4326'], function (exports, _emberFlexberryGisCoordinateReferenceSystemsEpsg4326) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisCoordinateReferenceSystemsEpsg4326['default'];
    }
  });
});
define('dummy/coordinate-reference-systems/proj4', ['exports', 'ember-flexberry-gis/coordinate-reference-systems/proj4'], function (exports, _emberFlexberryGisCoordinateReferenceSystemsProj4) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisCoordinateReferenceSystemsProj4['default'];
    }
  });
});
define('dummy/coordinate-reference-systems/simple', ['exports', 'ember-flexberry-gis/coordinate-reference-systems/simple'], function (exports, _emberFlexberryGisCoordinateReferenceSystemsSimple) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisCoordinateReferenceSystemsSimple['default'];
    }
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/adapters/odata.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/adapters');
  test('modules/ember-flexberry-gis/adapters/odata.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/adapters/odata.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/adapters/odata.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/adapters/odata.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/adapters/odata.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/base-control.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components');
  test('modules/ember-flexberry-gis/components/base-control.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/base-control.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/base-control.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/base-control.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/base-control.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/base-layer.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components');
  test('modules/ember-flexberry-gis/components/base-layer.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/base-layer.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/base-layer.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/base-layer.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/base-layer.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/base-vector-layer.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components');
  test('modules/ember-flexberry-gis/components/base-vector-layer.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/base-vector-layer.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/base-vector-layer.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/base-vector-layer.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/base-vector-layer.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/charts/base-chart-type.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/charts');
  test('modules/ember-flexberry-gis/components/charts/base-chart-type.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/charts/base-chart-type.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/charts/base-chart-type.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/charts/base-chart-type.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/charts/base-chart-type.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/charts/index-chart.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/charts');
  test('modules/ember-flexberry-gis/components/charts/index-chart.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/charts/index-chart.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/charts/index-chart.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/charts/index-chart.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/charts/index-chart.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/charts/type-charts/bar.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/charts/type-charts');
  test('modules/ember-flexberry-gis/components/charts/type-charts/bar.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/charts/type-charts/bar.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/charts/type-charts/bar.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/charts/type-charts/bar.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/charts/type-charts/bar.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/charts/type-charts/line.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/charts/type-charts');
  test('modules/ember-flexberry-gis/components/charts/type-charts/line.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/charts/type-charts/line.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/charts/type-charts/line.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/charts/type-charts/line.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/charts/type-charts/line.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/charts/type-charts/pie.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/charts/type-charts');
  test('modules/ember-flexberry-gis/components/charts/type-charts/pie.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/charts/type-charts/pie.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/charts/type-charts/pie.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/charts/type-charts/pie.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/charts/type-charts/pie.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/compare-object-geometries-panel.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components');
  test('modules/ember-flexberry-gis/components/compare-object-geometries-panel.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/compare-object-geometries-panel.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/compare-object-geometries-panel.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/compare-object-geometries-panel.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/compare-object-geometries-panel.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/div-control.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components');
  test('modules/ember-flexberry-gis/components/div-control.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/div-control.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/div-control.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/div-control.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/div-control.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/drag-box.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components');
  test('modules/ember-flexberry-gis/components/drag-box.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/drag-box.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/drag-box.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/drag-box.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/drag-box.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/favorites-list.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components');
  test('modules/ember-flexberry-gis/components/favorites-list.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/favorites-list.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/favorites-list.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/favorites-list.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/favorites-list.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/feature-export.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components');
  test('modules/ember-flexberry-gis/components/feature-export.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/feature-export.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/feature-export.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/feature-export.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/feature-export.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/feature-result-item.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components');
  test('modules/ember-flexberry-gis/components/feature-result-item.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/feature-result-item.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/feature-result-item.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/feature-result-item.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/feature-result-item.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/flexberry-boundingbox.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components');
  test('modules/ember-flexberry-gis/components/flexberry-boundingbox.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/flexberry-boundingbox.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/flexberry-boundingbox.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/flexberry-boundingbox.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/flexberry-boundingbox.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/flexberry-button-dropdown.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components');
  test('modules/ember-flexberry-gis/components/flexberry-button-dropdown.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/flexberry-button-dropdown.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/flexberry-button-dropdown.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/flexberry-button-dropdown.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/flexberry-button-dropdown.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/flexberry-create-object-geometry.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components');
  test('modules/ember-flexberry-gis/components/flexberry-create-object-geometry.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/flexberry-create-object-geometry.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/flexberry-create-object-geometry.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/flexberry-create-object-geometry.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/flexberry-create-object-geometry.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/flexberry-dropdown-input.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components');
  test('modules/ember-flexberry-gis/components/flexberry-dropdown-input.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/flexberry-dropdown-input.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/flexberry-dropdown-input.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/flexberry-dropdown-input.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/flexberry-dropdown-input.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/flexberry-edit-crs.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components');
  test('modules/ember-flexberry-gis/components/flexberry-edit-crs.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/flexberry-edit-crs.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/flexberry-edit-crs.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/flexberry-edit-crs.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/flexberry-edit-crs.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/flexberry-edit-layer-feature.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components');
  test('modules/ember-flexberry-gis/components/flexberry-edit-layer-feature.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/flexberry-edit-layer-feature.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/flexberry-edit-layer-feature.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/flexberry-edit-layer-feature.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/flexberry-edit-layer-feature.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/flexberry-edit-layermap.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components');
  test('modules/ember-flexberry-gis/components/flexberry-edit-layermap.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/flexberry-edit-layermap.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/flexberry-edit-layermap.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/flexberry-edit-layermap.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/flexberry-edit-layermap.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/flexberry-identify-file.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components');
  test('modules/ember-flexberry-gis/components/flexberry-identify-file.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/flexberry-identify-file.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/flexberry-identify-file.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/flexberry-identify-file.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/flexberry-identify-file.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/flexberry-identify-panel.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components');
  test('modules/ember-flexberry-gis/components/flexberry-identify-panel.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/flexberry-identify-panel.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/flexberry-identify-panel.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/flexberry-identify-panel.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/flexberry-identify-panel.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/flexberry-layers-attributes-panel.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components');
  test('modules/ember-flexberry-gis/components/flexberry-layers-attributes-panel.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/flexberry-layers-attributes-panel.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/flexberry-layers-attributes-panel.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/flexberry-layers-attributes-panel.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/flexberry-layers-attributes-panel.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/flexberry-layers-dropdown.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components');
  test('modules/ember-flexberry-gis/components/flexberry-layers-dropdown.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/flexberry-layers-dropdown.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/flexberry-layers-dropdown.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/flexberry-layers-dropdown.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/flexberry-layers-dropdown.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/flexberry-layers-intersections-panel.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components');
  test('modules/ember-flexberry-gis/components/flexberry-layers-intersections-panel.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/flexberry-layers-intersections-panel.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/flexberry-layers-intersections-panel.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/flexberry-layers-intersections-panel.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/flexberry-layers-intersections-panel.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/flexberry-layers.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components');
  test('modules/ember-flexberry-gis/components/flexberry-layers.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/flexberry-layers.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/flexberry-layers.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/flexberry-layers.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/flexberry-layers.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/flexberry-layerslegends.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components');
  test('modules/ember-flexberry-gis/components/flexberry-layerslegends.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/flexberry-layerslegends.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/flexberry-layerslegends.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/flexberry-layerslegends.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/flexberry-layerslegends.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/flexberry-links-editor.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components');
  test('modules/ember-flexberry-gis/components/flexberry-links-editor.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/flexberry-links-editor.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/flexberry-links-editor.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/flexberry-links-editor.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/flexberry-links-editor.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/flexberry-map.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components');
  test('modules/ember-flexberry-gis/components/flexberry-map.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/flexberry-map.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/flexberry-map.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/flexberry-map.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/flexberry-map.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/flexberry-mapinfo.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components');
  test('modules/ember-flexberry-gis/components/flexberry-mapinfo.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/flexberry-mapinfo.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/flexberry-mapinfo.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/flexberry-mapinfo.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/flexberry-mapinfo.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/flexberry-maplayer.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components');
  test('modules/ember-flexberry-gis/components/flexberry-maplayer.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/flexberry-maplayer.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/flexberry-maplayer.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/flexberry-maplayer.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/flexberry-maplayer.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/flexberry-maplayers.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components');
  test('modules/ember-flexberry-gis/components/flexberry-maplayers.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/flexberry-maplayers.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/flexberry-maplayers.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/flexberry-maplayers.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/flexberry-maplayers.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/flexberry-maptoolbar.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components');
  test('modules/ember-flexberry-gis/components/flexberry-maptoolbar.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/flexberry-maptoolbar.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/flexberry-maptoolbar.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/flexberry-maptoolbar.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/flexberry-maptoolbar.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/flexberry-multiple-select.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components');
  test('modules/ember-flexberry-gis/components/flexberry-multiple-select.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/flexberry-multiple-select.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/flexberry-multiple-select.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/flexberry-multiple-select.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/flexberry-multiple-select.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/flexberry-search-panel.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components');
  test('modules/ember-flexberry-gis/components/flexberry-search-panel.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/flexberry-search-panel.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/flexberry-search-panel.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/flexberry-search-panel.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/flexberry-search-panel.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/flexberry-search.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components');
  test('modules/ember-flexberry-gis/components/flexberry-search.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/flexberry-search.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/flexberry-search.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/flexberry-search.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/flexberry-search.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/flexberry-simpledatetime.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components');
  test('modules/ember-flexberry-gis/components/flexberry-simpledatetime.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/flexberry-simpledatetime.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/flexberry-simpledatetime.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/flexberry-simpledatetime.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/flexberry-simpledatetime.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/flexberry-table.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components');
  test('modules/ember-flexberry-gis/components/flexberry-table.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/flexberry-table.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/flexberry-table.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/flexberry-table.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/flexberry-table.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/flexberry-wfs-filter.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components');
  test('modules/ember-flexberry-gis/components/flexberry-wfs-filter.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/flexberry-wfs-filter.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/flexberry-wfs-filter.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/flexberry-wfs-filter.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/flexberry-wfs-filter.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/geometry-add-modes/draw.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/geometry-add-modes');
  test('modules/ember-flexberry-gis/components/geometry-add-modes/draw.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/geometry-add-modes/draw.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/geometry-add-modes/draw.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/geometry-add-modes/draw.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/geometry-add-modes/draw.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/geometry-add-modes/geoprovider.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/geometry-add-modes');
  test('modules/ember-flexberry-gis/components/geometry-add-modes/geoprovider.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/geometry-add-modes/geoprovider.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/geometry-add-modes/geoprovider.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/geometry-add-modes/geoprovider.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/geometry-add-modes/geoprovider.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/geometry-add-modes/import.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/geometry-add-modes');
  test('modules/ember-flexberry-gis/components/geometry-add-modes/import.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/geometry-add-modes/import.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/geometry-add-modes/import.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/geometry-add-modes/import.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/geometry-add-modes/import.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/geometry-add-modes/manual.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/geometry-add-modes');
  test('modules/ember-flexberry-gis/components/geometry-add-modes/manual.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/geometry-add-modes/manual.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/geometry-add-modes/manual.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/geometry-add-modes/manual.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/geometry-add-modes/manual.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/geometry-add-modes/rhumb.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/geometry-add-modes');
  test('modules/ember-flexberry-gis/components/geometry-add-modes/rhumb.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/geometry-add-modes/rhumb.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/geometry-add-modes/rhumb.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/geometry-add-modes/rhumb.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/geometry-add-modes/rhumb.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/gradients/dropdown-gradient.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/gradients');
  test('modules/ember-flexberry-gis/components/gradients/dropdown-gradient.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/gradients/dropdown-gradient.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/gradients/dropdown-gradient.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/gradients/dropdown-gradient.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/gradients/dropdown-gradient.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/gradients/gradient-edit.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/gradients');
  test('modules/ember-flexberry-gis/components/gradients/gradient-edit.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/gradients/gradient-edit.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/gradients/gradient-edit.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/gradients/gradient-edit.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/gradients/gradient-edit.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/help-popup.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components');
  test('modules/ember-flexberry-gis/components/help-popup.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/help-popup.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/help-popup.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/help-popup.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/help-popup.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/history-control.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components');
  test('modules/ember-flexberry-gis/components/history-control.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/history-control.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/history-control.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/history-control.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/history-control.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layer-result-list.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components');
  test('modules/ember-flexberry-gis/components/layer-result-list.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layer-result-list.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layer-result-list.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layer-result-list.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layer-result-list.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layer-treenode-contents/base.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layer-treenode-contents');
  test('modules/ember-flexberry-gis/components/layer-treenode-contents/base.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layer-treenode-contents/base.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layer-treenode-contents/base.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layer-treenode-contents/base.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layer-treenode-contents/base.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/add.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers-dialogs');
  test('modules/ember-flexberry-gis/components/layers-dialogs/add.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/add.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/add.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers-dialogs/add.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/add.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/attributes/edit.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers-dialogs/attributes');
  test('modules/ember-flexberry-gis/components/layers-dialogs/attributes/edit.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/attributes/edit.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/attributes/edit.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers-dialogs/attributes/edit.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/attributes/edit.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/attributes/move.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers-dialogs/attributes');
  test('modules/ember-flexberry-gis/components/layers-dialogs/attributes/move.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/attributes/move.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/attributes/move.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers-dialogs/attributes/move.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/attributes/move.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/copy.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers-dialogs');
  test('modules/ember-flexberry-gis/components/layers-dialogs/copy.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/copy.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/copy.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers-dialogs/copy.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/copy.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/edit.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers-dialogs');
  test('modules/ember-flexberry-gis/components/layers-dialogs/edit.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/edit.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/edit.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers-dialogs/edit.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/edit.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/layers-prototyping-modes/base.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers-dialogs/layers-prototyping-modes');
  test('modules/ember-flexberry-gis/components/layers-dialogs/layers-prototyping-modes/base.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/layers-prototyping-modes/base.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/layers-prototyping-modes/base.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers-dialogs/layers-prototyping-modes/base.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/layers-prototyping-modes/base.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/layers-prototyping-modes/metadata-mode.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers-dialogs/layers-prototyping-modes');
  test('modules/ember-flexberry-gis/components/layers-dialogs/layers-prototyping-modes/metadata-mode.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/layers-prototyping-modes/metadata-mode.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/layers-prototyping-modes/metadata-mode.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers-dialogs/layers-prototyping-modes/metadata-mode.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/layers-prototyping-modes/metadata-mode.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/remove.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers-dialogs');
  test('modules/ember-flexberry-gis/components/layers-dialogs/remove.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/remove.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/remove.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers-dialogs/remove.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/remove.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/settings/combine.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers-dialogs/settings');
  test('modules/ember-flexberry-gis/components/layers-dialogs/settings/combine.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/settings/combine.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/settings/combine.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers-dialogs/settings/combine.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/settings/combine.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/settings/geocoder-osm-overpass.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers-dialogs/settings');
  test('modules/ember-flexberry-gis/components/layers-dialogs/settings/geocoder-osm-overpass.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/settings/geocoder-osm-overpass.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/settings/geocoder-osm-overpass.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers-dialogs/settings/geocoder-osm-overpass.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/settings/geocoder-osm-overpass.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/settings/geocoder-osm-ru.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers-dialogs/settings');
  test('modules/ember-flexberry-gis/components/layers-dialogs/settings/geocoder-osm-ru.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/settings/geocoder-osm-ru.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/settings/geocoder-osm-ru.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers-dialogs/settings/geocoder-osm-ru.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/settings/geocoder-osm-ru.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/settings/geojson.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers-dialogs/settings');
  test('modules/ember-flexberry-gis/components/layers-dialogs/settings/geojson.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/settings/geojson.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/settings/geojson.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers-dialogs/settings/geojson.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/settings/geojson.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/settings/group.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers-dialogs/settings');
  test('modules/ember-flexberry-gis/components/layers-dialogs/settings/group.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/settings/group.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/settings/group.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers-dialogs/settings/group.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/settings/group.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/settings/kml.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers-dialogs/settings');
  test('modules/ember-flexberry-gis/components/layers-dialogs/settings/kml.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/settings/kml.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/settings/kml.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers-dialogs/settings/kml.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/settings/kml.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/settings/odata-vector.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers-dialogs/settings');
  test('modules/ember-flexberry-gis/components/layers-dialogs/settings/odata-vector.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/settings/odata-vector.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/settings/odata-vector.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers-dialogs/settings/odata-vector.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/settings/odata-vector.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/settings/tile-vector.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers-dialogs/settings');
  test('modules/ember-flexberry-gis/components/layers-dialogs/settings/tile-vector.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/settings/tile-vector.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/settings/tile-vector.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers-dialogs/settings/tile-vector.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/settings/tile-vector.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/settings/tile.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers-dialogs/settings');
  test('modules/ember-flexberry-gis/components/layers-dialogs/settings/tile.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/settings/tile.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/settings/tile.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers-dialogs/settings/tile.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/settings/tile.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/settings/wfs.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers-dialogs/settings');
  test('modules/ember-flexberry-gis/components/layers-dialogs/settings/wfs.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/settings/wfs.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/settings/wfs.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers-dialogs/settings/wfs.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/settings/wfs.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/settings/wms-single-tile.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers-dialogs/settings');
  test('modules/ember-flexberry-gis/components/layers-dialogs/settings/wms-single-tile.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/settings/wms-single-tile.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/settings/wms-single-tile.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers-dialogs/settings/wms-single-tile.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/settings/wms-single-tile.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/settings/wms-wfs.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers-dialogs/settings');
  test('modules/ember-flexberry-gis/components/layers-dialogs/settings/wms-wfs.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/settings/wms-wfs.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/settings/wms-wfs.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers-dialogs/settings/wms-wfs.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/settings/wms-wfs.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/settings/wms.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers-dialogs/settings');
  test('modules/ember-flexberry-gis/components/layers-dialogs/settings/wms.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/settings/wms.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/settings/wms.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers-dialogs/settings/wms.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/settings/wms.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/tabs/display-settings.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers-dialogs/tabs');
  test('modules/ember-flexberry-gis/components/layers-dialogs/tabs/display-settings.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/tabs/display-settings.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/tabs/display-settings.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers-dialogs/tabs/display-settings.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/tabs/display-settings.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/tabs/display.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers-dialogs/tabs');
  test('modules/ember-flexberry-gis/components/layers-dialogs/tabs/display.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/tabs/display.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/tabs/display.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers-dialogs/tabs/display.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/tabs/display.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/tabs/identification-settings.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers-dialogs/tabs');
  test('modules/ember-flexberry-gis/components/layers-dialogs/tabs/identification-settings.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/tabs/identification-settings.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/tabs/identification-settings.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers-dialogs/tabs/identification-settings.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/tabs/identification-settings.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/tabs/labels-settings.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers-dialogs/tabs');
  test('modules/ember-flexberry-gis/components/layers-dialogs/tabs/labels-settings.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/tabs/labels-settings.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/tabs/labels-settings.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers-dialogs/tabs/labels-settings.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/tabs/labels-settings.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/tabs/legend-settings.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers-dialogs/tabs');
  test('modules/ember-flexberry-gis/components/layers-dialogs/tabs/legend-settings.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/tabs/legend-settings.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/tabs/legend-settings.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers-dialogs/tabs/legend-settings.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/tabs/legend-settings.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/tabs/links.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers-dialogs/tabs');
  test('modules/ember-flexberry-gis/components/layers-dialogs/tabs/links.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/tabs/links.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/tabs/links.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers-dialogs/tabs/links.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/tabs/links.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/tabs/load-file.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers-dialogs/tabs');
  test('modules/ember-flexberry-gis/components/layers-dialogs/tabs/load-file.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/tabs/load-file.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/tabs/load-file.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers-dialogs/tabs/load-file.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/tabs/load-file.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/tabs/main-settings.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers-dialogs/tabs');
  test('modules/ember-flexberry-gis/components/layers-dialogs/tabs/main-settings.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/tabs/main-settings.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/tabs/main-settings.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers-dialogs/tabs/main-settings.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/tabs/main-settings.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/tabs/main.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers-dialogs/tabs');
  test('modules/ember-flexberry-gis/components/layers-dialogs/tabs/main.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/tabs/main.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/tabs/main.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers-dialogs/tabs/main.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/tabs/main.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/tabs/prototyping-modes.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers-dialogs/tabs');
  test('modules/ember-flexberry-gis/components/layers-dialogs/tabs/prototyping-modes.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/tabs/prototyping-modes.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/tabs/prototyping-modes.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers-dialogs/tabs/prototyping-modes.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/tabs/prototyping-modes.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/tabs/search-settings.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers-dialogs/tabs');
  test('modules/ember-flexberry-gis/components/layers-dialogs/tabs/search-settings.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/tabs/search-settings.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-dialogs/tabs/search-settings.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers-dialogs/tabs/search-settings.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers-dialogs/tabs/search-settings.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-styles-editor.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components');
  test('modules/ember-flexberry-gis/components/layers-styles-editor.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers-styles-editor.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-styles-editor.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers-styles-editor.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers-styles-editor.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-styles/categorized/base-categorized-layer-style.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers-styles/categorized');
  test('modules/ember-flexberry-gis/components/layers-styles/categorized/base-categorized-layer-style.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers-styles/categorized/base-categorized-layer-style.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-styles/categorized/base-categorized-layer-style.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers-styles/categorized/base-categorized-layer-style.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers-styles/categorized/base-categorized-layer-style.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-styles/categorized/gradient-tools.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers-styles/categorized');
  test('modules/ember-flexberry-gis/components/layers-styles/categorized/gradient-tools.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers-styles/categorized/gradient-tools.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-styles/categorized/gradient-tools.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers-styles/categorized/gradient-tools.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers-styles/categorized/gradient-tools.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-styles/categorized/layer-property-dropdown.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers-styles/categorized');
  test('modules/ember-flexberry-gis/components/layers-styles/categorized/layer-property-dropdown.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers-styles/categorized/layer-property-dropdown.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-styles/categorized/layer-property-dropdown.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers-styles/categorized/layer-property-dropdown.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers-styles/categorized/layer-property-dropdown.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-styles/empty.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers-styles');
  test('modules/ember-flexberry-gis/components/layers-styles/empty.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers-styles/empty.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-styles/empty.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers-styles/empty.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers-styles/empty.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-styles/graduated.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers-styles');
  test('modules/ember-flexberry-gis/components/layers-styles/graduated.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers-styles/graduated.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-styles/graduated.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers-styles/graduated.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers-styles/graduated.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-styles/simple.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers-styles');
  test('modules/ember-flexberry-gis/components/layers-styles/simple.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers-styles/simple.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-styles/simple.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers-styles/simple.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers-styles/simple.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-styles/simple/fill-editor.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers-styles/simple');
  test('modules/ember-flexberry-gis/components/layers-styles/simple/fill-editor.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers-styles/simple/fill-editor.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-styles/simple/fill-editor.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers-styles/simple/fill-editor.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers-styles/simple/fill-editor.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-styles/simple/path-editor.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers-styles/simple');
  test('modules/ember-flexberry-gis/components/layers-styles/simple/path-editor.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers-styles/simple/path-editor.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-styles/simple/path-editor.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers-styles/simple/path-editor.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers-styles/simple/path-editor.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-styles/simple/stroke-dasharray-dropdown.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers-styles/simple');
  test('modules/ember-flexberry-gis/components/layers-styles/simple/stroke-dasharray-dropdown.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers-styles/simple/stroke-dasharray-dropdown.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-styles/simple/stroke-dasharray-dropdown.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers-styles/simple/stroke-dasharray-dropdown.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers-styles/simple/stroke-dasharray-dropdown.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-styles/simple/stroke-editor.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers-styles/simple');
  test('modules/ember-flexberry-gis/components/layers-styles/simple/stroke-editor.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers-styles/simple/stroke-editor.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-styles/simple/stroke-editor.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers-styles/simple/stroke-editor.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers-styles/simple/stroke-editor.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-styles/simple/stroke-linecap-dropdown.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers-styles/simple');
  test('modules/ember-flexberry-gis/components/layers-styles/simple/stroke-linecap-dropdown.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers-styles/simple/stroke-linecap-dropdown.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-styles/simple/stroke-linecap-dropdown.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers-styles/simple/stroke-linecap-dropdown.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers-styles/simple/stroke-linecap-dropdown.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-styles/simple/stroke-linejoin-dropdown.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers-styles/simple');
  test('modules/ember-flexberry-gis/components/layers-styles/simple/stroke-linejoin-dropdown.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers-styles/simple/stroke-linejoin-dropdown.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-styles/simple/stroke-linejoin-dropdown.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers-styles/simple/stroke-linejoin-dropdown.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers-styles/simple/stroke-linejoin-dropdown.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-styles/unique.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers-styles');
  test('modules/ember-flexberry-gis/components/layers-styles/unique.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers-styles/unique.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers-styles/unique.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers-styles/unique.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers-styles/unique.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers/combine-layer.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers');
  test('modules/ember-flexberry-gis/components/layers/combine-layer.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers/combine-layer.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers/combine-layer.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers/combine-layer.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers/combine-layer.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers/geocoder-base-layer.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers');
  test('modules/ember-flexberry-gis/components/layers/geocoder-base-layer.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers/geocoder-base-layer.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers/geocoder-base-layer.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers/geocoder-base-layer.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers/geocoder-base-layer.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers/geocoder-osm-overpass-layer.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers');
  test('modules/ember-flexberry-gis/components/layers/geocoder-osm-overpass-layer.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers/geocoder-osm-overpass-layer.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers/geocoder-osm-overpass-layer.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers/geocoder-osm-overpass-layer.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers/geocoder-osm-overpass-layer.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers/geocoder-osm-ru-layer.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers');
  test('modules/ember-flexberry-gis/components/layers/geocoder-osm-ru-layer.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers/geocoder-osm-ru-layer.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers/geocoder-osm-ru-layer.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers/geocoder-osm-ru-layer.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers/geocoder-osm-ru-layer.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers/geojson-layer.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers');
  test('modules/ember-flexberry-gis/components/layers/geojson-layer.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers/geojson-layer.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers/geojson-layer.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers/geojson-layer.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers/geojson-layer.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers/group-layer.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers');
  test('modules/ember-flexberry-gis/components/layers/group-layer.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers/group-layer.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers/group-layer.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers/group-layer.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers/group-layer.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers/kml-layer.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers');
  test('modules/ember-flexberry-gis/components/layers/kml-layer.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers/kml-layer.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers/kml-layer.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers/kml-layer.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers/kml-layer.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers/odata-vector-layer.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers');
  test('modules/ember-flexberry-gis/components/layers/odata-vector-layer.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers/odata-vector-layer.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers/odata-vector-layer.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers/odata-vector-layer.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers/odata-vector-layer.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers/osm-layer.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers');
  test('modules/ember-flexberry-gis/components/layers/osm-layer.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers/osm-layer.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers/osm-layer.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers/osm-layer.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers/osm-layer.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers/tile-layer.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers');
  test('modules/ember-flexberry-gis/components/layers/tile-layer.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers/tile-layer.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers/tile-layer.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers/tile-layer.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers/tile-layer.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers/tile-vector-layer.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers');
  test('modules/ember-flexberry-gis/components/layers/tile-vector-layer.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers/tile-vector-layer.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers/tile-vector-layer.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers/tile-vector-layer.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers/tile-vector-layer.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers/wfs-layer.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers');
  test('modules/ember-flexberry-gis/components/layers/wfs-layer.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers/wfs-layer.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers/wfs-layer.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers/wfs-layer.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers/wfs-layer.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers/with-history-layer.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers');
  test('modules/ember-flexberry-gis/components/layers/with-history-layer.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers/with-history-layer.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers/with-history-layer.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers/with-history-layer.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers/with-history-layer.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers/wms-layer.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers');
  test('modules/ember-flexberry-gis/components/layers/wms-layer.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers/wms-layer.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers/wms-layer.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers/wms-layer.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers/wms-layer.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers/wms-single-tile-layer.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers');
  test('modules/ember-flexberry-gis/components/layers/wms-single-tile-layer.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers/wms-single-tile-layer.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers/wms-single-tile-layer.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers/wms-single-tile-layer.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers/wms-single-tile-layer.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers/wms-wfs-layer.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/layers');
  test('modules/ember-flexberry-gis/components/layers/wms-wfs-layer.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/layers/wms-wfs-layer.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/layers/wms-wfs-layer.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/layers/wms-wfs-layer.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/layers/wms-wfs-layer.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/legend-control.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components');
  test('modules/ember-flexberry-gis/components/legend-control.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/legend-control.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/legend-control.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/legend-control.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/legend-control.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/legends/-private/base-legend.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/legends/-private');
  test('modules/ember-flexberry-gis/components/legends/-private/base-legend.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/legends/-private/base-legend.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/legends/-private/base-legend.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/legends/-private/base-legend.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/legends/-private/base-legend.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/legends/-private/vector-legend.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/legends/-private');
  test('modules/ember-flexberry-gis/components/legends/-private/vector-legend.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/legends/-private/vector-legend.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/legends/-private/vector-legend.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/legends/-private/vector-legend.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/legends/-private/vector-legend.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/legends/combine-legend.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/legends');
  test('modules/ember-flexberry-gis/components/legends/combine-legend.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/legends/combine-legend.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/legends/combine-legend.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/legends/combine-legend.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/legends/combine-legend.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/legends/geojson-legend.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/legends');
  test('modules/ember-flexberry-gis/components/legends/geojson-legend.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/legends/geojson-legend.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/legends/geojson-legend.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/legends/geojson-legend.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/legends/geojson-legend.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/legends/kml-legend.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/legends');
  test('modules/ember-flexberry-gis/components/legends/kml-legend.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/legends/kml-legend.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/legends/kml-legend.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/legends/kml-legend.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/legends/kml-legend.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/legends/layers-styles/-private/base.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/legends/layers-styles/-private');
  test('modules/ember-flexberry-gis/components/legends/layers-styles/-private/base.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/legends/layers-styles/-private/base.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/legends/layers-styles/-private/base.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/legends/layers-styles/-private/base.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/legends/layers-styles/-private/base.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/legends/layers-styles/-private/categorized.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/legends/layers-styles/-private');
  test('modules/ember-flexberry-gis/components/legends/layers-styles/-private/categorized.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/legends/layers-styles/-private/categorized.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/legends/layers-styles/-private/categorized.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/legends/layers-styles/-private/categorized.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/legends/layers-styles/-private/categorized.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/legends/layers-styles/empty.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/legends/layers-styles');
  test('modules/ember-flexberry-gis/components/legends/layers-styles/empty.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/legends/layers-styles/empty.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/legends/layers-styles/empty.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/legends/layers-styles/empty.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/legends/layers-styles/empty.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/legends/layers-styles/graduated.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/legends/layers-styles');
  test('modules/ember-flexberry-gis/components/legends/layers-styles/graduated.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/legends/layers-styles/graduated.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/legends/layers-styles/graduated.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/legends/layers-styles/graduated.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/legends/layers-styles/graduated.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/legends/layers-styles/simple.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/legends/layers-styles');
  test('modules/ember-flexberry-gis/components/legends/layers-styles/simple.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/legends/layers-styles/simple.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/legends/layers-styles/simple.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/legends/layers-styles/simple.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/legends/layers-styles/simple.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/legends/layers-styles/unique.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/legends/layers-styles');
  test('modules/ember-flexberry-gis/components/legends/layers-styles/unique.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/legends/layers-styles/unique.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/legends/layers-styles/unique.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/legends/layers-styles/unique.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/legends/layers-styles/unique.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/legends/odata-vector-legend.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/legends');
  test('modules/ember-flexberry-gis/components/legends/odata-vector-legend.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/legends/odata-vector-legend.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/legends/odata-vector-legend.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/legends/odata-vector-legend.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/legends/odata-vector-legend.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/legends/wfs-legend.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/legends');
  test('modules/ember-flexberry-gis/components/legends/wfs-legend.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/legends/wfs-legend.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/legends/wfs-legend.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/legends/wfs-legend.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/legends/wfs-legend.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/legends/with-history-legend.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/legends');
  test('modules/ember-flexberry-gis/components/legends/with-history-legend.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/legends/with-history-legend.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/legends/with-history-legend.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/legends/with-history-legend.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/legends/with-history-legend.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/legends/wms-legend.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/legends');
  test('modules/ember-flexberry-gis/components/legends/wms-legend.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/legends/wms-legend.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/legends/wms-legend.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/legends/wms-legend.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/legends/wms-legend.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/legends/wms-single-tile-legend.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/legends');
  test('modules/ember-flexberry-gis/components/legends/wms-single-tile-legend.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/legends/wms-single-tile-legend.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/legends/wms-single-tile-legend.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/legends/wms-single-tile-legend.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/legends/wms-single-tile-legend.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/legends/wms-wfs-legend.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/legends');
  test('modules/ember-flexberry-gis/components/legends/wms-wfs-legend.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/legends/wms-wfs-legend.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/legends/wms-wfs-legend.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/legends/wms-wfs-legend.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/legends/wms-wfs-legend.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/map-commands-dialogs/export.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/map-commands-dialogs');
  test('modules/ember-flexberry-gis/components/map-commands-dialogs/export.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/map-commands-dialogs/export.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/map-commands-dialogs/export.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/map-commands-dialogs/export.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/map-commands-dialogs/export.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/map-commands-dialogs/go-to.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/map-commands-dialogs');
  test('modules/ember-flexberry-gis/components/map-commands-dialogs/go-to.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/map-commands-dialogs/go-to.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/map-commands-dialogs/go-to.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/map-commands-dialogs/go-to.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/map-commands-dialogs/go-to.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/map-commands-dialogs/search-settings/geocoder-osm-ru.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/map-commands-dialogs/search-settings');
  test('modules/ember-flexberry-gis/components/map-commands-dialogs/search-settings/geocoder-osm-ru.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/map-commands-dialogs/search-settings/geocoder-osm-ru.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/map-commands-dialogs/search-settings/geocoder-osm-ru.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/map-commands-dialogs/search-settings/geocoder-osm-ru.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/map-commands-dialogs/search-settings/geocoder-osm-ru.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/map-commands-dialogs/search-settings/geojson.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/map-commands-dialogs/search-settings');
  test('modules/ember-flexberry-gis/components/map-commands-dialogs/search-settings/geojson.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/map-commands-dialogs/search-settings/geojson.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/map-commands-dialogs/search-settings/geojson.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/map-commands-dialogs/search-settings/geojson.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/map-commands-dialogs/search-settings/geojson.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/map-commands-dialogs/search-settings/kml.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/map-commands-dialogs/search-settings');
  test('modules/ember-flexberry-gis/components/map-commands-dialogs/search-settings/kml.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/map-commands-dialogs/search-settings/kml.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/map-commands-dialogs/search-settings/kml.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/map-commands-dialogs/search-settings/kml.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/map-commands-dialogs/search-settings/kml.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/map-commands-dialogs/search-settings/odata-vector.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/map-commands-dialogs/search-settings');
  test('modules/ember-flexberry-gis/components/map-commands-dialogs/search-settings/odata-vector.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/map-commands-dialogs/search-settings/odata-vector.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/map-commands-dialogs/search-settings/odata-vector.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/map-commands-dialogs/search-settings/odata-vector.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/map-commands-dialogs/search-settings/odata-vector.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/map-commands-dialogs/search-settings/wfs.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/map-commands-dialogs/search-settings');
  test('modules/ember-flexberry-gis/components/map-commands-dialogs/search-settings/wfs.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/map-commands-dialogs/search-settings/wfs.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/map-commands-dialogs/search-settings/wfs.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/map-commands-dialogs/search-settings/wfs.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/map-commands-dialogs/search-settings/wfs.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/map-commands-dialogs/search-settings/wms-wfs.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/map-commands-dialogs/search-settings');
  test('modules/ember-flexberry-gis/components/map-commands-dialogs/search-settings/wms-wfs.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/map-commands-dialogs/search-settings/wms-wfs.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/map-commands-dialogs/search-settings/wms-wfs.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/map-commands-dialogs/search-settings/wms-wfs.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/map-commands-dialogs/search-settings/wms-wfs.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/map-commands-dialogs/search.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/map-commands-dialogs');
  test('modules/ember-flexberry-gis/components/map-commands-dialogs/search.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/map-commands-dialogs/search.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/map-commands-dialogs/search.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/map-commands-dialogs/search.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/map-commands-dialogs/search.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/map-commands/base.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/map-commands');
  test('modules/ember-flexberry-gis/components/map-commands/base.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/map-commands/base.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/map-commands/base.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/map-commands/base.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/map-commands/base.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/map-commands/edit.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/map-commands');
  test('modules/ember-flexberry-gis/components/map-commands/edit.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/map-commands/edit.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/map-commands/edit.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/map-commands/edit.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/map-commands/edit.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/map-commands/export.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/map-commands');
  test('modules/ember-flexberry-gis/components/map-commands/export.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/map-commands/export.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/map-commands/export.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/map-commands/export.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/map-commands/export.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/map-commands/full-extent.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/map-commands');
  test('modules/ember-flexberry-gis/components/map-commands/full-extent.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/map-commands/full-extent.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/map-commands/full-extent.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/map-commands/full-extent.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/map-commands/full-extent.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/map-commands/go-to.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/map-commands');
  test('modules/ember-flexberry-gis/components/map-commands/go-to.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/map-commands/go-to.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/map-commands/go-to.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/map-commands/go-to.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/map-commands/go-to.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/map-commands/locate.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/map-commands');
  test('modules/ember-flexberry-gis/components/map-commands/locate.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/map-commands/locate.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/map-commands/locate.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/map-commands/locate.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/map-commands/locate.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/map-commands/search.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/map-commands');
  test('modules/ember-flexberry-gis/components/map-commands/search.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/map-commands/search.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/map-commands/search.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/map-commands/search.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/map-commands/search.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/map-dialogs/edit.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/map-dialogs');
  test('modules/ember-flexberry-gis/components/map-dialogs/edit.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/map-dialogs/edit.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/map-dialogs/edit.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/map-dialogs/edit.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/map-dialogs/edit.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/map-tools/background-layers.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/map-tools');
  test('modules/ember-flexberry-gis/components/map-tools/background-layers.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/map-tools/background-layers.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/map-tools/background-layers.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/map-tools/background-layers.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/map-tools/background-layers.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/map-tools/base.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/map-tools');
  test('modules/ember-flexberry-gis/components/map-tools/base.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/map-tools/base.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/map-tools/base.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/map-tools/base.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/map-tools/base.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/map-tools/compare.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/map-tools');
  test('modules/ember-flexberry-gis/components/map-tools/compare.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/map-tools/compare.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/map-tools/compare.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/map-tools/compare.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/map-tools/compare.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/map-tools/drag.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/map-tools');
  test('modules/ember-flexberry-gis/components/map-tools/drag.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/map-tools/drag.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/map-tools/drag.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/map-tools/drag.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/map-tools/drag.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/map-tools/draw.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/map-tools');
  test('modules/ember-flexberry-gis/components/map-tools/draw.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/map-tools/draw.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/map-tools/draw.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/map-tools/draw.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/map-tools/draw.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/map-tools/identify.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/map-tools');
  test('modules/ember-flexberry-gis/components/map-tools/identify.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/map-tools/identify.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/map-tools/identify.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/map-tools/identify.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/map-tools/identify.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/map-tools/measure.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/map-tools');
  test('modules/ember-flexberry-gis/components/map-tools/measure.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/map-tools/measure.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/map-tools/measure.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/map-tools/measure.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/map-tools/measure.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/map-tools/zoom-in.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/map-tools');
  test('modules/ember-flexberry-gis/components/map-tools/zoom-in.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/map-tools/zoom-in.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/map-tools/zoom-in.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/map-tools/zoom-in.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/map-tools/zoom-in.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/map-tools/zoom-out.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/map-tools');
  test('modules/ember-flexberry-gis/components/map-tools/zoom-out.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/map-tools/zoom-out.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/map-tools/zoom-out.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/map-tools/zoom-out.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/map-tools/zoom-out.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/markers-styles-editor.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components');
  test('modules/ember-flexberry-gis/components/markers-styles-editor.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/markers-styles-editor.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/markers-styles-editor.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/markers-styles-editor.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/markers-styles-editor.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/markers-styles/default.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/markers-styles');
  test('modules/ember-flexberry-gis/components/markers-styles/default.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/markers-styles/default.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/markers-styles/default.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/markers-styles/default.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/markers-styles/default.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/markers-styles/image.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/markers-styles');
  test('modules/ember-flexberry-gis/components/markers-styles/image.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/markers-styles/image.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/markers-styles/image.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/markers-styles/image.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/markers-styles/image.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/markers-styles/image/icon-editor.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components/markers-styles/image');
  test('modules/ember-flexberry-gis/components/markers-styles/image/icon-editor.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/markers-styles/image/icon-editor.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/markers-styles/image/icon-editor.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/markers-styles/image/icon-editor.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/markers-styles/image/icon-editor.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/minimap-control.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components');
  test('modules/ember-flexberry-gis/components/minimap-control.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/minimap-control.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/minimap-control.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/minimap-control.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/minimap-control.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/scale-control.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components');
  test('modules/ember-flexberry-gis/components/scale-control.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/scale-control.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/scale-control.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/scale-control.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/scale-control.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/select-with-checkbox.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components');
  test('modules/ember-flexberry-gis/components/select-with-checkbox.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/select-with-checkbox.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/select-with-checkbox.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/select-with-checkbox.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/select-with-checkbox.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/spatial-bookmark.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components');
  test('modules/ember-flexberry-gis/components/spatial-bookmark.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/spatial-bookmark.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/spatial-bookmark.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/spatial-bookmark.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/spatial-bookmark.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/switch-scale-control.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components');
  test('modules/ember-flexberry-gis/components/switch-scale-control.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/switch-scale-control.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/switch-scale-control.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/switch-scale-control.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/switch-scale-control.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/zoomslider-control.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/components');
  test('modules/ember-flexberry-gis/components/zoomslider-control.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/components/zoomslider-control.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/components/zoomslider-control.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/components/zoomslider-control.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/components/zoomslider-control.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/controllers/edit-map.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/controllers');
  test('modules/ember-flexberry-gis/controllers/edit-map.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/controllers/edit-map.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/controllers/edit-map.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/controllers/edit-map.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/controllers/edit-map.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/controllers/gis-search-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/controllers');
  test('modules/ember-flexberry-gis/controllers/gis-search-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/controllers/gis-search-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/controllers/gis-search-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/controllers/gis-search-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/controllers/gis-search-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/controllers/list-map.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/controllers');
  test('modules/ember-flexberry-gis/controllers/list-map.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/controllers/list-map.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/controllers/list-map.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/controllers/list-map.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/controllers/list-map.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/controllers/new-platform-flexberry-g-i-s-layer-metadata-e.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/controllers');
  test('modules/ember-flexberry-gis/controllers/new-platform-flexberry-g-i-s-layer-metadata-e.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/controllers/new-platform-flexberry-g-i-s-layer-metadata-e.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/controllers/new-platform-flexberry-g-i-s-layer-metadata-e.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/controllers/new-platform-flexberry-g-i-s-layer-metadata-e.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/controllers/new-platform-flexberry-g-i-s-layer-metadata-e.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/controllers/new-platform-flexberry-g-i-s-layer-metadata-e/new.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/controllers/new-platform-flexberry-g-i-s-layer-metadata-e');
  test('modules/ember-flexberry-gis/controllers/new-platform-flexberry-g-i-s-layer-metadata-e/new.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/controllers/new-platform-flexberry-g-i-s-layer-metadata-e/new.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/controllers/new-platform-flexberry-g-i-s-layer-metadata-e/new.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/controllers/new-platform-flexberry-g-i-s-layer-metadata-e/new.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/controllers/new-platform-flexberry-g-i-s-layer-metadata-e/new.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/controllers/new-platform-flexberry-g-i-s-layer-metadata-l.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/controllers');
  test('modules/ember-flexberry-gis/controllers/new-platform-flexberry-g-i-s-layer-metadata-l.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/controllers/new-platform-flexberry-g-i-s-layer-metadata-l.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/controllers/new-platform-flexberry-g-i-s-layer-metadata-l.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/controllers/new-platform-flexberry-g-i-s-layer-metadata-l.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/controllers/new-platform-flexberry-g-i-s-layer-metadata-l.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/coordinate-reference-systems/earth.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/coordinate-reference-systems');
  test('modules/ember-flexberry-gis/coordinate-reference-systems/earth.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/coordinate-reference-systems/earth.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/coordinate-reference-systems/earth.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/coordinate-reference-systems/earth.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/coordinate-reference-systems/earth.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/coordinate-reference-systems/epsg-3395.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/coordinate-reference-systems');
  test('modules/ember-flexberry-gis/coordinate-reference-systems/epsg-3395.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/coordinate-reference-systems/epsg-3395.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/coordinate-reference-systems/epsg-3395.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/coordinate-reference-systems/epsg-3395.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/coordinate-reference-systems/epsg-3395.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/coordinate-reference-systems/epsg-3857.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/coordinate-reference-systems');
  test('modules/ember-flexberry-gis/coordinate-reference-systems/epsg-3857.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/coordinate-reference-systems/epsg-3857.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/coordinate-reference-systems/epsg-3857.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/coordinate-reference-systems/epsg-3857.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/coordinate-reference-systems/epsg-3857.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/coordinate-reference-systems/epsg-4326.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/coordinate-reference-systems');
  test('modules/ember-flexberry-gis/coordinate-reference-systems/epsg-4326.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/coordinate-reference-systems/epsg-4326.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/coordinate-reference-systems/epsg-4326.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/coordinate-reference-systems/epsg-4326.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/coordinate-reference-systems/epsg-4326.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/coordinate-reference-systems/proj4.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/coordinate-reference-systems');
  test('modules/ember-flexberry-gis/coordinate-reference-systems/proj4.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/coordinate-reference-systems/proj4.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/coordinate-reference-systems/proj4.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/coordinate-reference-systems/proj4.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/coordinate-reference-systems/proj4.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/coordinate-reference-systems/simple.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/coordinate-reference-systems');
  test('modules/ember-flexberry-gis/coordinate-reference-systems/simple.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/coordinate-reference-systems/simple.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/coordinate-reference-systems/simple.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/coordinate-reference-systems/simple.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/coordinate-reference-systems/simple.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/geo-providers/base.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/geo-providers');
  test('modules/ember-flexberry-gis/geo-providers/base.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/geo-providers/base.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/geo-providers/base.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/geo-providers/base.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/geo-providers/base.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/geo-providers/yandex-maps-geocoder.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/geo-providers');
  test('modules/ember-flexberry-gis/geo-providers/yandex-maps-geocoder.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/geo-providers/yandex-maps-geocoder.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/geo-providers/yandex-maps-geocoder.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/geo-providers/yandex-maps-geocoder.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/geo-providers/yandex-maps-geocoder.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/helpers/array-contains.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/helpers');
  test('modules/ember-flexberry-gis/helpers/array-contains.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/helpers/array-contains.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/helpers/array-contains.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/helpers/array-contains.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/helpers/array-contains.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/helpers/ember-guid.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/helpers');
  test('modules/ember-flexberry-gis/helpers/ember-guid.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/helpers/ember-guid.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/helpers/ember-guid.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/helpers/ember-guid.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/helpers/ember-guid.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/helpers/flexberry-search-properties-osm-ru.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/helpers');
  test('modules/ember-flexberry-gis/helpers/flexberry-search-properties-osm-ru.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/helpers/flexberry-search-properties-osm-ru.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/helpers/flexberry-search-properties-osm-ru.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/helpers/flexberry-search-properties-osm-ru.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/helpers/flexberry-search-properties-osm-ru.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/helpers/header-from-projection.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/helpers');
  test('modules/ember-flexberry-gis/helpers/header-from-projection.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/helpers/header-from-projection.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/helpers/header-from-projection.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/helpers/header-from-projection.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/helpers/header-from-projection.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/helpers/instance-of.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/helpers');
  test('modules/ember-flexberry-gis/helpers/instance-of.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/helpers/instance-of.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/helpers/instance-of.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/helpers/instance-of.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/helpers/instance-of.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/helpers/is-none.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/helpers');
  test('modules/ember-flexberry-gis/helpers/is-none.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/helpers/is-none.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/helpers/is-none.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/helpers/is-none.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/helpers/is-none.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/helpers/known-for-type.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/helpers');
  test('modules/ember-flexberry-gis/helpers/known-for-type.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/helpers/known-for-type.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/helpers/known-for-type.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/helpers/known-for-type.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/helpers/known-for-type.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/helpers/object-contains.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/helpers');
  test('modules/ember-flexberry-gis/helpers/object-contains.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/helpers/object-contains.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/helpers/object-contains.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/helpers/object-contains.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/helpers/object-contains.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/helpers/regex-test.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/helpers');
  test('modules/ember-flexberry-gis/helpers/regex-test.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/helpers/regex-test.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/helpers/regex-test.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/helpers/regex-test.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/helpers/regex-test.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/initializers/coordinate-reference-systems.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/initializers');
  test('modules/ember-flexberry-gis/initializers/coordinate-reference-systems.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/initializers/coordinate-reference-systems.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/initializers/coordinate-reference-systems.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/initializers/coordinate-reference-systems.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/initializers/coordinate-reference-systems.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/initializers/leaflet-editable-measures.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/initializers');
  test('modules/ember-flexberry-gis/initializers/leaflet-editable-measures.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/initializers/leaflet-editable-measures.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/initializers/leaflet-editable-measures.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/initializers/leaflet-editable-measures.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/initializers/leaflet-editable-measures.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/initializers/leaflet-ewkt.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/initializers');
  test('modules/ember-flexberry-gis/initializers/leaflet-ewkt.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/initializers/leaflet-ewkt.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/initializers/leaflet-ewkt.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/initializers/leaflet-ewkt.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/initializers/leaflet-ewkt.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/initializers/leaflet-grid-layer.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/initializers');
  test('modules/ember-flexberry-gis/initializers/leaflet-grid-layer.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/initializers/leaflet-grid-layer.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/initializers/leaflet-grid-layer.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/initializers/leaflet-grid-layer.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/initializers/leaflet-grid-layer.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/initializers/leaflet-jsts.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/initializers');
  test('modules/ember-flexberry-gis/initializers/leaflet-jsts.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/initializers/leaflet-jsts.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/initializers/leaflet-jsts.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/initializers/leaflet-jsts.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/initializers/leaflet-jsts.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/initializers/leaflet-marker.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/initializers');
  test('modules/ember-flexberry-gis/initializers/leaflet-marker.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/initializers/leaflet-marker.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/initializers/leaflet-marker.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/initializers/leaflet-marker.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/initializers/leaflet-marker.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/initializers/leaflet-path.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/initializers');
  test('modules/ember-flexberry-gis/initializers/leaflet-path.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/initializers/leaflet-path.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/initializers/leaflet-path.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/initializers/leaflet-path.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/initializers/leaflet-path.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/initializers/leaflet.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/initializers');
  test('modules/ember-flexberry-gis/initializers/leaflet.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/initializers/leaflet.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/initializers/leaflet.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/initializers/leaflet.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/initializers/leaflet.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/initializers/local-storage.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/initializers');
  test('modules/ember-flexberry-gis/initializers/local-storage.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/initializers/local-storage.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/initializers/local-storage.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/initializers/local-storage.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/initializers/local-storage.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/initializers/map-commands.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/initializers');
  test('modules/ember-flexberry-gis/initializers/map-commands.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/initializers/map-commands.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/initializers/map-commands.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/initializers/map-commands.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/initializers/map-commands.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/initializers/map-tools.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/initializers');
  test('modules/ember-flexberry-gis/initializers/map-tools.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/initializers/map-tools.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/initializers/map-tools.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/initializers/map-tools.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/initializers/map-tools.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/instance-initializers/block-slots.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/instance-initializers');
  test('modules/ember-flexberry-gis/instance-initializers/block-slots.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/instance-initializers/block-slots.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/instance-initializers/block-slots.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/instance-initializers/block-slots.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/instance-initializers/block-slots.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/instance-initializers/flexberry-search.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/instance-initializers');
  test('modules/ember-flexberry-gis/instance-initializers/flexberry-search.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/instance-initializers/flexberry-search.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/instance-initializers/flexberry-search.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/instance-initializers/flexberry-search.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/instance-initializers/flexberry-search.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/instance-initializers/jsts.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/instance-initializers');
  test('modules/ember-flexberry-gis/instance-initializers/jsts.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/instance-initializers/jsts.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/instance-initializers/jsts.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/instance-initializers/jsts.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/instance-initializers/jsts.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/instance-initializers/layers.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/instance-initializers');
  test('modules/ember-flexberry-gis/instance-initializers/layers.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/instance-initializers/layers.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/instance-initializers/layers.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/instance-initializers/layers.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/instance-initializers/layers.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/instance-initializers/leaflet-editable-measures.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/instance-initializers');
  test('modules/ember-flexberry-gis/instance-initializers/leaflet-editable-measures.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/instance-initializers/leaflet-editable-measures.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/instance-initializers/leaflet-editable-measures.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/instance-initializers/leaflet-editable-measures.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/instance-initializers/leaflet-editable-measures.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/instance-initializers/open-map.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/instance-initializers');
  test('modules/ember-flexberry-gis/instance-initializers/open-map.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/instance-initializers/open-map.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/instance-initializers/open-map.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/instance-initializers/open-map.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/instance-initializers/open-map.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/instance-initializers/owner.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/instance-initializers');
  test('modules/ember-flexberry-gis/instance-initializers/owner.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/instance-initializers/owner.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/instance-initializers/owner.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/instance-initializers/owner.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/instance-initializers/owner.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/instance-initializers/precision-scale.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/instance-initializers');
  test('modules/ember-flexberry-gis/instance-initializers/precision-scale.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/instance-initializers/precision-scale.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/instance-initializers/precision-scale.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/instance-initializers/precision-scale.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/instance-initializers/precision-scale.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/layers-prototyping-modes/-private/base.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/layers-prototyping-modes/-private');
  test('modules/ember-flexberry-gis/layers-prototyping-modes/-private/base.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/layers-prototyping-modes/-private/base.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/layers-prototyping-modes/-private/base.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/layers-prototyping-modes/-private/base.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/layers-prototyping-modes/-private/base.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/layers-prototyping-modes/metadata-mode.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/layers-prototyping-modes');
  test('modules/ember-flexberry-gis/layers-prototyping-modes/metadata-mode.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/layers-prototyping-modes/metadata-mode.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/layers-prototyping-modes/metadata-mode.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/layers-prototyping-modes/metadata-mode.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/layers-prototyping-modes/metadata-mode.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/layers-styles/-private/base.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/layers-styles/-private');
  test('modules/ember-flexberry-gis/layers-styles/-private/base.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/layers-styles/-private/base.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/layers-styles/-private/base.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/layers-styles/-private/base.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/layers-styles/-private/base.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/layers-styles/-private/categorized.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/layers-styles/-private');
  test('modules/ember-flexberry-gis/layers-styles/-private/categorized.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/layers-styles/-private/categorized.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/layers-styles/-private/categorized.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/layers-styles/-private/categorized.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/layers-styles/-private/categorized.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/layers-styles/empty.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/layers-styles');
  test('modules/ember-flexberry-gis/layers-styles/empty.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/layers-styles/empty.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/layers-styles/empty.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/layers-styles/empty.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/layers-styles/empty.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/layers-styles/graduated.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/layers-styles');
  test('modules/ember-flexberry-gis/layers-styles/graduated.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/layers-styles/graduated.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/layers-styles/graduated.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/layers-styles/graduated.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/layers-styles/graduated.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/layers-styles/simple.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/layers-styles');
  test('modules/ember-flexberry-gis/layers-styles/simple.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/layers-styles/simple.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/layers-styles/simple.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/layers-styles/simple.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/layers-styles/simple.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/layers-styles/unique.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/layers-styles');
  test('modules/ember-flexberry-gis/layers-styles/unique.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/layers-styles/unique.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/layers-styles/unique.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/layers-styles/unique.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/layers-styles/unique.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/layers/-private/base.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/layers/-private');
  test('modules/ember-flexberry-gis/layers/-private/base.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/layers/-private/base.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/layers/-private/base.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/layers/-private/base.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/layers/-private/base.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/layers/-private/vector.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/layers/-private');
  test('modules/ember-flexberry-gis/layers/-private/vector.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/layers/-private/vector.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/layers/-private/vector.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/layers/-private/vector.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/layers/-private/vector.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/layers/combine.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/layers');
  test('modules/ember-flexberry-gis/layers/combine.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/layers/combine.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/layers/combine.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/layers/combine.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/layers/combine.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/layers/geocoder-osm-overpass.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/layers');
  test('modules/ember-flexberry-gis/layers/geocoder-osm-overpass.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/layers/geocoder-osm-overpass.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/layers/geocoder-osm-overpass.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/layers/geocoder-osm-overpass.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/layers/geocoder-osm-overpass.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/layers/geocoder-osm-ru.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/layers');
  test('modules/ember-flexberry-gis/layers/geocoder-osm-ru.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/layers/geocoder-osm-ru.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/layers/geocoder-osm-ru.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/layers/geocoder-osm-ru.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/layers/geocoder-osm-ru.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/layers/geojson.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/layers');
  test('modules/ember-flexberry-gis/layers/geojson.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/layers/geojson.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/layers/geojson.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/layers/geojson.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/layers/geojson.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/layers/group.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/layers');
  test('modules/ember-flexberry-gis/layers/group.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/layers/group.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/layers/group.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/layers/group.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/layers/group.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/layers/kml.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/layers');
  test('modules/ember-flexberry-gis/layers/kml.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/layers/kml.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/layers/kml.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/layers/kml.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/layers/kml.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/layers/odata-vector.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/layers');
  test('modules/ember-flexberry-gis/layers/odata-vector.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/layers/odata-vector.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/layers/odata-vector.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/layers/odata-vector.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/layers/odata-vector.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/layers/osm.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/layers');
  test('modules/ember-flexberry-gis/layers/osm.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/layers/osm.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/layers/osm.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/layers/osm.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/layers/osm.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/layers/tile-vector.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/layers');
  test('modules/ember-flexberry-gis/layers/tile-vector.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/layers/tile-vector.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/layers/tile-vector.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/layers/tile-vector.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/layers/tile-vector.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/layers/tile.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/layers');
  test('modules/ember-flexberry-gis/layers/tile.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/layers/tile.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/layers/tile.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/layers/tile.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/layers/tile.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/layers/wfs.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/layers');
  test('modules/ember-flexberry-gis/layers/wfs.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/layers/wfs.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/layers/wfs.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/layers/wfs.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/layers/wfs.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/layers/with-history.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/layers');
  test('modules/ember-flexberry-gis/layers/with-history.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/layers/with-history.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/layers/with-history.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/layers/with-history.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/layers/with-history.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/layers/wms-single-tile.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/layers');
  test('modules/ember-flexberry-gis/layers/wms-single-tile.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/layers/wms-single-tile.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/layers/wms-single-tile.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/layers/wms-single-tile.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/layers/wms-single-tile.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/layers/wms-wfs.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/layers');
  test('modules/ember-flexberry-gis/layers/wms-wfs.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/layers/wms-wfs.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/layers/wms-wfs.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/layers/wms-wfs.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/layers/wms-wfs.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/layers/wms.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/layers');
  test('modules/ember-flexberry-gis/layers/wms.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/layers/wms.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/layers/wms.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/layers/wms.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/layers/wms.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en');
  test('modules/ember-flexberry-gis/locales/en/components.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/charts.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components');
  test('modules/ember-flexberry-gis/locales/en/components/charts.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/charts.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/charts.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/charts.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/charts.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/charts/index-chart.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components/charts');
  test('modules/ember-flexberry-gis/locales/en/components/charts/index-chart.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/charts/index-chart.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/charts/index-chart.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/charts/index-chart.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/charts/index-chart.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/charts/type-charts.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components/charts');
  test('modules/ember-flexberry-gis/locales/en/components/charts/type-charts.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/charts/type-charts.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/charts/type-charts.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/charts/type-charts.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/charts/type-charts.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/compare-object-geometries-panel.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components');
  test('modules/ember-flexberry-gis/locales/en/components/compare-object-geometries-panel.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/compare-object-geometries-panel.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/compare-object-geometries-panel.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/compare-object-geometries-panel.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/compare-object-geometries-panel.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/feature-result-item.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components');
  test('modules/ember-flexberry-gis/locales/en/components/feature-result-item.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/feature-result-item.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/feature-result-item.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/feature-result-item.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/feature-result-item.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/flexberry-boundingbox.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components');
  test('modules/ember-flexberry-gis/locales/en/components/flexberry-boundingbox.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/flexberry-boundingbox.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/flexberry-boundingbox.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/flexberry-boundingbox.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/flexberry-boundingbox.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/flexberry-create-object-geometry.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components');
  test('modules/ember-flexberry-gis/locales/en/components/flexberry-create-object-geometry.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/flexberry-create-object-geometry.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/flexberry-create-object-geometry.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/flexberry-create-object-geometry.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/flexberry-create-object-geometry.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/flexberry-edit-crs.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components');
  test('modules/ember-flexberry-gis/locales/en/components/flexberry-edit-crs.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/flexberry-edit-crs.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/flexberry-edit-crs.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/flexberry-edit-crs.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/flexberry-edit-crs.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/flexberry-edit-layer-feature.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components');
  test('modules/ember-flexberry-gis/locales/en/components/flexberry-edit-layer-feature.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/flexberry-edit-layer-feature.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/flexberry-edit-layer-feature.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/flexberry-edit-layer-feature.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/flexberry-edit-layer-feature.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/flexberry-identify-panel.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components');
  test('modules/ember-flexberry-gis/locales/en/components/flexberry-identify-panel.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/flexberry-identify-panel.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/flexberry-identify-panel.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/flexberry-identify-panel.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/flexberry-identify-panel.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/flexberry-layers-attributes-panel.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components');
  test('modules/ember-flexberry-gis/locales/en/components/flexberry-layers-attributes-panel.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/flexberry-layers-attributes-panel.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/flexberry-layers-attributes-panel.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/flexberry-layers-attributes-panel.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/flexberry-layers-attributes-panel.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/flexberry-layers-intersections-panel.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components');
  test('modules/ember-flexberry-gis/locales/en/components/flexberry-layers-intersections-panel.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/flexberry-layers-intersections-panel.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/flexberry-layers-intersections-panel.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/flexberry-layers-intersections-panel.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/flexberry-layers-intersections-panel.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/flexberry-links-editor.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components');
  test('modules/ember-flexberry-gis/locales/en/components/flexberry-links-editor.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/flexberry-links-editor.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/flexberry-links-editor.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/flexberry-links-editor.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/flexberry-links-editor.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/flexberry-map.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components');
  test('modules/ember-flexberry-gis/locales/en/components/flexberry-map.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/flexberry-map.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/flexberry-map.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/flexberry-map.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/flexberry-map.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/flexberry-mapinfo.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components');
  test('modules/ember-flexberry-gis/locales/en/components/flexberry-mapinfo.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/flexberry-mapinfo.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/flexberry-mapinfo.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/flexberry-mapinfo.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/flexberry-mapinfo.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/flexberry-maplayer.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components');
  test('modules/ember-flexberry-gis/locales/en/components/flexberry-maplayer.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/flexberry-maplayer.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/flexberry-maplayer.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/flexberry-maplayer.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/flexberry-maplayer.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/flexberry-maplayers.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components');
  test('modules/ember-flexberry-gis/locales/en/components/flexberry-maplayers.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/flexberry-maplayers.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/flexberry-maplayers.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/flexberry-maplayers.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/flexberry-maplayers.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/flexberry-maptoolbar.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components');
  test('modules/ember-flexberry-gis/locales/en/components/flexberry-maptoolbar.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/flexberry-maptoolbar.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/flexberry-maptoolbar.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/flexberry-maptoolbar.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/flexberry-maptoolbar.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/flexberry-multiple-select.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components');
  test('modules/ember-flexberry-gis/locales/en/components/flexberry-multiple-select.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/flexberry-multiple-select.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/flexberry-multiple-select.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/flexberry-multiple-select.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/flexberry-multiple-select.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/flexberry-search.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components');
  test('modules/ember-flexberry-gis/locales/en/components/flexberry-search.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/flexberry-search.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/flexberry-search.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/flexberry-search.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/flexberry-search.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/flexberry-table.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components');
  test('modules/ember-flexberry-gis/locales/en/components/flexberry-table.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/flexberry-table.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/flexberry-table.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/flexberry-table.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/flexberry-table.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/flexberry-wfs-filter.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components');
  test('modules/ember-flexberry-gis/locales/en/components/flexberry-wfs-filter.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/flexberry-wfs-filter.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/flexberry-wfs-filter.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/flexberry-wfs-filter.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/flexberry-wfs-filter.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/geometry-add-modes.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components');
  test('modules/ember-flexberry-gis/locales/en/components/geometry-add-modes.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/geometry-add-modes.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/geometry-add-modes.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/geometry-add-modes.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/geometry-add-modes.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/geometry-add-modes/draw.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components/geometry-add-modes');
  test('modules/ember-flexberry-gis/locales/en/components/geometry-add-modes/draw.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/geometry-add-modes/draw.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/geometry-add-modes/draw.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/geometry-add-modes/draw.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/geometry-add-modes/draw.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/geometry-add-modes/geoprovider.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components/geometry-add-modes');
  test('modules/ember-flexberry-gis/locales/en/components/geometry-add-modes/geoprovider.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/geometry-add-modes/geoprovider.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/geometry-add-modes/geoprovider.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/geometry-add-modes/geoprovider.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/geometry-add-modes/geoprovider.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/geometry-add-modes/import.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components/geometry-add-modes');
  test('modules/ember-flexberry-gis/locales/en/components/geometry-add-modes/import.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/geometry-add-modes/import.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/geometry-add-modes/import.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/geometry-add-modes/import.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/geometry-add-modes/import.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/geometry-add-modes/manual.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components/geometry-add-modes');
  test('modules/ember-flexberry-gis/locales/en/components/geometry-add-modes/manual.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/geometry-add-modes/manual.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/geometry-add-modes/manual.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/geometry-add-modes/manual.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/geometry-add-modes/manual.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/geometry-add-modes/rhumb.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components/geometry-add-modes');
  test('modules/ember-flexberry-gis/locales/en/components/geometry-add-modes/rhumb.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/geometry-add-modes/rhumb.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/geometry-add-modes/rhumb.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/geometry-add-modes/rhumb.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/geometry-add-modes/rhumb.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/gradients.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components');
  test('modules/ember-flexberry-gis/locales/en/components/gradients.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/gradients.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/gradients.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/gradients.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/gradients.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/gradients/dropdown-gradient.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components/gradients');
  test('modules/ember-flexberry-gis/locales/en/components/gradients/dropdown-gradient.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/gradients/dropdown-gradient.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/gradients/dropdown-gradient.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/gradients/dropdown-gradient.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/gradients/dropdown-gradient.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/gradients/gradient-edit.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components/gradients');
  test('modules/ember-flexberry-gis/locales/en/components/gradients/gradient-edit.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/gradients/gradient-edit.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/gradients/gradient-edit.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/gradients/gradient-edit.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/gradients/gradient-edit.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/history-control.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components');
  test('modules/ember-flexberry-gis/locales/en/components/history-control.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/history-control.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/history-control.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/history-control.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/history-control.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/layer-result-list.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components');
  test('modules/ember-flexberry-gis/locales/en/components/layer-result-list.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/layer-result-list.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/layer-result-list.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/layer-result-list.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/layer-result-list.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/layers-dialogs.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components');
  test('modules/ember-flexberry-gis/locales/en/components/layers-dialogs.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/layers-dialogs.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/layers-dialogs.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/layers-dialogs.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/layers-dialogs.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/layers-dialogs/add.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components/layers-dialogs');
  test('modules/ember-flexberry-gis/locales/en/components/layers-dialogs/add.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/layers-dialogs/add.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/layers-dialogs/add.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/layers-dialogs/add.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/layers-dialogs/add.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/layers-dialogs/attributes/edit.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components/layers-dialogs/attributes');
  test('modules/ember-flexberry-gis/locales/en/components/layers-dialogs/attributes/edit.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/layers-dialogs/attributes/edit.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/layers-dialogs/attributes/edit.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/layers-dialogs/attributes/edit.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/layers-dialogs/attributes/edit.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/layers-dialogs/copy.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components/layers-dialogs');
  test('modules/ember-flexberry-gis/locales/en/components/layers-dialogs/copy.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/layers-dialogs/copy.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/layers-dialogs/copy.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/layers-dialogs/copy.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/layers-dialogs/copy.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/layers-dialogs/edit.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components/layers-dialogs');
  test('modules/ember-flexberry-gis/locales/en/components/layers-dialogs/edit.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/layers-dialogs/edit.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/layers-dialogs/edit.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/layers-dialogs/edit.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/layers-dialogs/edit.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/layers-dialogs/layers-prototyping-modes.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components/layers-dialogs');
  test('modules/ember-flexberry-gis/locales/en/components/layers-dialogs/layers-prototyping-modes.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/layers-dialogs/layers-prototyping-modes.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/layers-dialogs/layers-prototyping-modes.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/layers-dialogs/layers-prototyping-modes.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/layers-dialogs/layers-prototyping-modes.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/layers-dialogs/remove.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components/layers-dialogs');
  test('modules/ember-flexberry-gis/locales/en/components/layers-dialogs/remove.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/layers-dialogs/remove.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/layers-dialogs/remove.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/layers-dialogs/remove.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/layers-dialogs/remove.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/layers-dialogs/settings.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components/layers-dialogs');
  test('modules/ember-flexberry-gis/locales/en/components/layers-dialogs/settings.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/layers-dialogs/settings.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/layers-dialogs/settings.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/layers-dialogs/settings.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/layers-dialogs/settings.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/layers-dialogs/settings/geojson.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components/layers-dialogs/settings');
  test('modules/ember-flexberry-gis/locales/en/components/layers-dialogs/settings/geojson.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/layers-dialogs/settings/geojson.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/layers-dialogs/settings/geojson.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/layers-dialogs/settings/geojson.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/layers-dialogs/settings/geojson.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/layers-dialogs/settings/kml.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components/layers-dialogs/settings');
  test('modules/ember-flexberry-gis/locales/en/components/layers-dialogs/settings/kml.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/layers-dialogs/settings/kml.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/layers-dialogs/settings/kml.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/layers-dialogs/settings/kml.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/layers-dialogs/settings/kml.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/layers-dialogs/settings/wfs.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components/layers-dialogs/settings');
  test('modules/ember-flexberry-gis/locales/en/components/layers-dialogs/settings/wfs.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/layers-dialogs/settings/wfs.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/layers-dialogs/settings/wfs.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/layers-dialogs/settings/wfs.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/layers-dialogs/settings/wfs.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/layers-dialogs/settings/wms-wfs.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components/layers-dialogs/settings');
  test('modules/ember-flexberry-gis/locales/en/components/layers-dialogs/settings/wms-wfs.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/layers-dialogs/settings/wms-wfs.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/layers-dialogs/settings/wms-wfs.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/layers-dialogs/settings/wms-wfs.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/layers-dialogs/settings/wms-wfs.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/layers-dialogs/settings/wms.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components/layers-dialogs/settings');
  test('modules/ember-flexberry-gis/locales/en/components/layers-dialogs/settings/wms.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/layers-dialogs/settings/wms.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/layers-dialogs/settings/wms.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/layers-dialogs/settings/wms.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/layers-dialogs/settings/wms.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/layers-styles-editor.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components');
  test('modules/ember-flexberry-gis/locales/en/components/layers-styles-editor.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/layers-styles-editor.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/layers-styles-editor.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/layers-styles-editor.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/layers-styles-editor.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/layers-styles.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components');
  test('modules/ember-flexberry-gis/locales/en/components/layers-styles.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/layers-styles.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/layers-styles.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/layers-styles.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/layers-styles.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/layers-styles/categorized.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components/layers-styles');
  test('modules/ember-flexberry-gis/locales/en/components/layers-styles/categorized.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/layers-styles/categorized.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/layers-styles/categorized.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/layers-styles/categorized.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/layers-styles/categorized.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/layers-styles/categorized/layer-property-dropdown.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components/layers-styles/categorized');
  test('modules/ember-flexberry-gis/locales/en/components/layers-styles/categorized/layer-property-dropdown.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/layers-styles/categorized/layer-property-dropdown.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/layers-styles/categorized/layer-property-dropdown.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/layers-styles/categorized/layer-property-dropdown.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/layers-styles/categorized/layer-property-dropdown.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/layers-styles/empty.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components/layers-styles');
  test('modules/ember-flexberry-gis/locales/en/components/layers-styles/empty.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/layers-styles/empty.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/layers-styles/empty.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/layers-styles/empty.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/layers-styles/empty.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/layers-styles/graduated.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components/layers-styles');
  test('modules/ember-flexberry-gis/locales/en/components/layers-styles/graduated.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/layers-styles/graduated.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/layers-styles/graduated.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/layers-styles/graduated.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/layers-styles/graduated.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/layers-styles/simple.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components/layers-styles');
  test('modules/ember-flexberry-gis/locales/en/components/layers-styles/simple.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/layers-styles/simple.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/layers-styles/simple.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/layers-styles/simple.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/layers-styles/simple.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/layers-styles/simple/fill-editor.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components/layers-styles/simple');
  test('modules/ember-flexberry-gis/locales/en/components/layers-styles/simple/fill-editor.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/layers-styles/simple/fill-editor.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/layers-styles/simple/fill-editor.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/layers-styles/simple/fill-editor.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/layers-styles/simple/fill-editor.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/layers-styles/simple/path-editor.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components/layers-styles/simple');
  test('modules/ember-flexberry-gis/locales/en/components/layers-styles/simple/path-editor.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/layers-styles/simple/path-editor.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/layers-styles/simple/path-editor.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/layers-styles/simple/path-editor.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/layers-styles/simple/path-editor.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/layers-styles/simple/stroke-editor.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components/layers-styles/simple');
  test('modules/ember-flexberry-gis/locales/en/components/layers-styles/simple/stroke-editor.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/layers-styles/simple/stroke-editor.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/layers-styles/simple/stroke-editor.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/layers-styles/simple/stroke-editor.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/layers-styles/simple/stroke-editor.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/layers-styles/unique.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components/layers-styles');
  test('modules/ember-flexberry-gis/locales/en/components/layers-styles/unique.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/layers-styles/unique.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/layers-styles/unique.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/layers-styles/unique.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/layers-styles/unique.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/legends.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components');
  test('modules/ember-flexberry-gis/locales/en/components/legends.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/legends.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/legends.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/legends.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/legends.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/legends/vector-legend.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components/legends');
  test('modules/ember-flexberry-gis/locales/en/components/legends/vector-legend.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/legends/vector-legend.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/legends/vector-legend.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/legends/vector-legend.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/legends/vector-legend.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components');
  test('modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs/export.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs');
  test('modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs/export.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs/export.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs/export.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs/export.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs/export.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs/go-to.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs');
  test('modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs/go-to.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs/go-to.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs/go-to.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs/go-to.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs/go-to.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs/search-settings/geocoder-osm-ru.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs/search-settings');
  test('modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs/search-settings/geocoder-osm-ru.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs/search-settings/geocoder-osm-ru.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs/search-settings/geocoder-osm-ru.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs/search-settings/geocoder-osm-ru.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs/search-settings/geocoder-osm-ru.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs/search-settings/geojson.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs/search-settings');
  test('modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs/search-settings/geojson.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs/search-settings/geojson.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs/search-settings/geojson.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs/search-settings/geojson.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs/search-settings/geojson.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs/search-settings/kml.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs/search-settings');
  test('modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs/search-settings/kml.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs/search-settings/kml.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs/search-settings/kml.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs/search-settings/kml.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs/search-settings/kml.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs/search-settings/odata-vector.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs/search-settings');
  test('modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs/search-settings/odata-vector.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs/search-settings/odata-vector.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs/search-settings/odata-vector.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs/search-settings/odata-vector.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs/search-settings/odata-vector.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs/search-settings/wfs.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs/search-settings');
  test('modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs/search-settings/wfs.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs/search-settings/wfs.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs/search-settings/wfs.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs/search-settings/wfs.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs/search-settings/wfs.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs/search.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs');
  test('modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs/search.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs/search.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs/search.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs/search.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/map-commands-dialogs/search.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/map-commands.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components');
  test('modules/ember-flexberry-gis/locales/en/components/map-commands.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/map-commands.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/map-commands.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/map-commands.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/map-commands.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/map-dialogs.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components');
  test('modules/ember-flexberry-gis/locales/en/components/map-dialogs.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/map-dialogs.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/map-dialogs.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/map-dialogs.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/map-dialogs.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/map-dialogs/add.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components/map-dialogs');
  test('modules/ember-flexberry-gis/locales/en/components/map-dialogs/add.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/map-dialogs/add.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/map-dialogs/add.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/map-dialogs/add.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/map-dialogs/add.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/map-dialogs/edit.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components/map-dialogs');
  test('modules/ember-flexberry-gis/locales/en/components/map-dialogs/edit.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/map-dialogs/edit.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/map-dialogs/edit.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/map-dialogs/edit.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/map-dialogs/edit.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/map-tools.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components');
  test('modules/ember-flexberry-gis/locales/en/components/map-tools.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/map-tools.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/map-tools.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/map-tools.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/map-tools.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/markers-styles-editor.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components');
  test('modules/ember-flexberry-gis/locales/en/components/markers-styles-editor.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/markers-styles-editor.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/markers-styles-editor.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/markers-styles-editor.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/markers-styles-editor.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/markers-styles.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components');
  test('modules/ember-flexberry-gis/locales/en/components/markers-styles.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/markers-styles.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/markers-styles.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/markers-styles.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/markers-styles.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/markers-styles/default.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components/markers-styles');
  test('modules/ember-flexberry-gis/locales/en/components/markers-styles/default.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/markers-styles/default.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/markers-styles/default.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/markers-styles/default.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/markers-styles/default.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/markers-styles/image.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components/markers-styles');
  test('modules/ember-flexberry-gis/locales/en/components/markers-styles/image.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/markers-styles/image.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/markers-styles/image.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/markers-styles/image.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/markers-styles/image.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/markers-styles/image/icon-editor.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components/markers-styles/image');
  test('modules/ember-flexberry-gis/locales/en/components/markers-styles/image/icon-editor.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/markers-styles/image/icon-editor.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/markers-styles/image/icon-editor.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/markers-styles/image/icon-editor.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/markers-styles/image/icon-editor.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/minimap.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components');
  test('modules/ember-flexberry-gis/locales/en/components/minimap.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/minimap.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/minimap.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/minimap.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/minimap.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/spatial-bookmarks.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/components');
  test('modules/ember-flexberry-gis/locales/en/components/spatial-bookmarks.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/components/spatial-bookmarks.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/components/spatial-bookmarks.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/components/spatial-bookmarks.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/components/spatial-bookmarks.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/crs.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en');
  test('modules/ember-flexberry-gis/locales/en/crs.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/crs.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/crs.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/crs.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/crs.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/forms.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en');
  test('modules/ember-flexberry-gis/locales/en/forms.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/forms.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/forms.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/forms.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/forms.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/forms/gis-search-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/forms');
  test('modules/ember-flexberry-gis/locales/en/forms/gis-search-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/forms/gis-search-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/forms/gis-search-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/forms/gis-search-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/forms/gis-search-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/forms/new-platform-flexberry-g-i-s-layer-metadata-e.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/forms');
  test('modules/ember-flexberry-gis/locales/en/forms/new-platform-flexberry-g-i-s-layer-metadata-e.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/forms/new-platform-flexberry-g-i-s-layer-metadata-e.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/forms/new-platform-flexberry-g-i-s-layer-metadata-e.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/forms/new-platform-flexberry-g-i-s-layer-metadata-e.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/forms/new-platform-flexberry-g-i-s-layer-metadata-e.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/forms/new-platform-flexberry-g-i-s-layer-metadata-l.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/forms');
  test('modules/ember-flexberry-gis/locales/en/forms/new-platform-flexberry-g-i-s-layer-metadata-l.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/forms/new-platform-flexberry-g-i-s-layer-metadata-l.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/forms/new-platform-flexberry-g-i-s-layer-metadata-l.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/forms/new-platform-flexberry-g-i-s-layer-metadata-l.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/forms/new-platform-flexberry-g-i-s-layer-metadata-l.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/gradients.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en');
  test('modules/ember-flexberry-gis/locales/en/gradients.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/gradients.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/gradients.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/gradients.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/gradients.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/gradients/dropdown-gradient.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/gradients');
  test('modules/ember-flexberry-gis/locales/en/gradients/dropdown-gradient.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/gradients/dropdown-gradient.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/gradients/dropdown-gradient.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/gradients/dropdown-gradient.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/gradients/dropdown-gradient.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/gradients/gradient-edit.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/gradients');
  test('modules/ember-flexberry-gis/locales/en/gradients/gradient-edit.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/gradients/gradient-edit.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/gradients/gradient-edit.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/gradients/gradient-edit.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/gradients/gradient-edit.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/layers-styles.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en');
  test('modules/ember-flexberry-gis/locales/en/layers-styles.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/layers-styles.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/layers-styles.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/layers-styles.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/layers-styles.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/layers-styles/empty.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/layers-styles');
  test('modules/ember-flexberry-gis/locales/en/layers-styles/empty.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/layers-styles/empty.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/layers-styles/empty.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/layers-styles/empty.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/layers-styles/empty.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/layers-styles/gradient-tools.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/layers-styles');
  test('modules/ember-flexberry-gis/locales/en/layers-styles/gradient-tools.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/layers-styles/gradient-tools.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/layers-styles/gradient-tools.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/layers-styles/gradient-tools.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/layers-styles/gradient-tools.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/layers-styles/graduated.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/layers-styles');
  test('modules/ember-flexberry-gis/locales/en/layers-styles/graduated.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/layers-styles/graduated.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/layers-styles/graduated.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/layers-styles/graduated.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/layers-styles/graduated.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/layers-styles/simple.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/layers-styles');
  test('modules/ember-flexberry-gis/locales/en/layers-styles/simple.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/layers-styles/simple.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/layers-styles/simple.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/layers-styles/simple.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/layers-styles/simple.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/layers-styles/unique.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/layers-styles');
  test('modules/ember-flexberry-gis/locales/en/layers-styles/unique.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/layers-styles/unique.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/layers-styles/unique.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/layers-styles/unique.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/layers-styles/unique.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/map-commands.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en');
  test('modules/ember-flexberry-gis/locales/en/map-commands.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/map-commands.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/map-commands.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/map-commands.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/map-commands.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/map-commands/go-to.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/map-commands');
  test('modules/ember-flexberry-gis/locales/en/map-commands/go-to.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/map-commands/go-to.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/map-commands/go-to.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/map-commands/go-to.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/map-commands/go-to.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/map-tools.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en');
  test('modules/ember-flexberry-gis/locales/en/map-tools.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/map-tools.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/map-tools.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/map-tools.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/map-tools.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/markers-styles.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en');
  test('modules/ember-flexberry-gis/locales/en/markers-styles.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/markers-styles.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/markers-styles.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/markers-styles.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/markers-styles.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/markers-styles/default.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/markers-styles');
  test('modules/ember-flexberry-gis/locales/en/markers-styles/default.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/markers-styles/default.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/markers-styles/default.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/markers-styles/default.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/markers-styles/default.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/markers-styles/image.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/markers-styles');
  test('modules/ember-flexberry-gis/locales/en/markers-styles/image.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/markers-styles/image.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/markers-styles/image.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/markers-styles/image.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/markers-styles/image.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/models.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en');
  test('modules/ember-flexberry-gis/locales/en/models.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/models.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/models.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/models.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/models.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/models/new-platform-flexberry-g-i-s-layer-link.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/models');
  test('modules/ember-flexberry-gis/locales/en/models/new-platform-flexberry-g-i-s-layer-link.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/models/new-platform-flexberry-g-i-s-layer-link.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/models/new-platform-flexberry-g-i-s-layer-link.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/models/new-platform-flexberry-g-i-s-layer-link.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/models/new-platform-flexberry-g-i-s-layer-link.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/models/new-platform-flexberry-g-i-s-layer-metadata.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/models');
  test('modules/ember-flexberry-gis/locales/en/models/new-platform-flexberry-g-i-s-layer-metadata.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/models/new-platform-flexberry-g-i-s-layer-metadata.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/models/new-platform-flexberry-g-i-s-layer-metadata.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/models/new-platform-flexberry-g-i-s-layer-metadata.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/models/new-platform-flexberry-g-i-s-layer-metadata.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/models/new-platform-flexberry-g-i-s-link-metadata.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/models');
  test('modules/ember-flexberry-gis/locales/en/models/new-platform-flexberry-g-i-s-link-metadata.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/models/new-platform-flexberry-g-i-s-link-metadata.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/models/new-platform-flexberry-g-i-s-link-metadata.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/models/new-platform-flexberry-g-i-s-link-metadata.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/models/new-platform-flexberry-g-i-s-link-metadata.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/models/new-platform-flexberry-g-i-s-link-parameter.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/models');
  test('modules/ember-flexberry-gis/locales/en/models/new-platform-flexberry-g-i-s-link-parameter.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/models/new-platform-flexberry-g-i-s-link-parameter.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/models/new-platform-flexberry-g-i-s-link-parameter.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/models/new-platform-flexberry-g-i-s-link-parameter.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/models/new-platform-flexberry-g-i-s-link-parameter.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/models/new-platform-flexberry-g-i-s-map-layer.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/models');
  test('modules/ember-flexberry-gis/locales/en/models/new-platform-flexberry-g-i-s-map-layer.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/models/new-platform-flexberry-g-i-s-map-layer.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/models/new-platform-flexberry-g-i-s-map-layer.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/models/new-platform-flexberry-g-i-s-map-layer.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/models/new-platform-flexberry-g-i-s-map-layer.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/models/new-platform-flexberry-g-i-s-map-object-setting.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/models');
  test('modules/ember-flexberry-gis/locales/en/models/new-platform-flexberry-g-i-s-map-object-setting.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/models/new-platform-flexberry-g-i-s-map-object-setting.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/models/new-platform-flexberry-g-i-s-map-object-setting.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/models/new-platform-flexberry-g-i-s-map-object-setting.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/models/new-platform-flexberry-g-i-s-map-object-setting.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/models/new-platform-flexberry-g-i-s-map.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/models');
  test('modules/ember-flexberry-gis/locales/en/models/new-platform-flexberry-g-i-s-map.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/models/new-platform-flexberry-g-i-s-map.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/models/new-platform-flexberry-g-i-s-map.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/models/new-platform-flexberry-g-i-s-map.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/models/new-platform-flexberry-g-i-s-map.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/models/new-platform-flexberry-g-i-s-parameter-metadata.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en/models');
  test('modules/ember-flexberry-gis/locales/en/models/new-platform-flexberry-g-i-s-parameter-metadata.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/models/new-platform-flexberry-g-i-s-parameter-metadata.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/models/new-platform-flexberry-g-i-s-parameter-metadata.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/models/new-platform-flexberry-g-i-s-parameter-metadata.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/models/new-platform-flexberry-g-i-s-parameter-metadata.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/translations.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/en');
  test('modules/ember-flexberry-gis/locales/en/translations.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/en/translations.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/en/translations.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/en/translations.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/en/translations.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru');
  test('modules/ember-flexberry-gis/locales/ru/components.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/charts.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components');
  test('modules/ember-flexberry-gis/locales/ru/components/charts.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/charts.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/charts.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/charts.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/charts.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/charts/index-chart.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components/charts');
  test('modules/ember-flexberry-gis/locales/ru/components/charts/index-chart.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/charts/index-chart.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/charts/index-chart.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/charts/index-chart.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/charts/index-chart.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/charts/type-charts.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components/charts');
  test('modules/ember-flexberry-gis/locales/ru/components/charts/type-charts.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/charts/type-charts.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/charts/type-charts.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/charts/type-charts.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/charts/type-charts.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/compare-object-geometries-panel.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components');
  test('modules/ember-flexberry-gis/locales/ru/components/compare-object-geometries-panel.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/compare-object-geometries-panel.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/compare-object-geometries-panel.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/compare-object-geometries-panel.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/compare-object-geometries-panel.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/feature-result-item.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components');
  test('modules/ember-flexberry-gis/locales/ru/components/feature-result-item.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/feature-result-item.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/feature-result-item.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/feature-result-item.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/feature-result-item.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/flexberry-boundingbox.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components');
  test('modules/ember-flexberry-gis/locales/ru/components/flexberry-boundingbox.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/flexberry-boundingbox.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/flexberry-boundingbox.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/flexberry-boundingbox.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/flexberry-boundingbox.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/flexberry-create-object-geometry.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components');
  test('modules/ember-flexberry-gis/locales/ru/components/flexberry-create-object-geometry.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/flexberry-create-object-geometry.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/flexberry-create-object-geometry.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/flexberry-create-object-geometry.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/flexberry-create-object-geometry.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/flexberry-edit-crs.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components');
  test('modules/ember-flexberry-gis/locales/ru/components/flexberry-edit-crs.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/flexberry-edit-crs.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/flexberry-edit-crs.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/flexberry-edit-crs.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/flexberry-edit-crs.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/flexberry-edit-layer-feature.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components');
  test('modules/ember-flexberry-gis/locales/ru/components/flexberry-edit-layer-feature.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/flexberry-edit-layer-feature.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/flexberry-edit-layer-feature.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/flexberry-edit-layer-feature.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/flexberry-edit-layer-feature.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/flexberry-identify-panel.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components');
  test('modules/ember-flexberry-gis/locales/ru/components/flexberry-identify-panel.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/flexberry-identify-panel.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/flexberry-identify-panel.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/flexberry-identify-panel.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/flexberry-identify-panel.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/flexberry-layers-attributes-panel.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components');
  test('modules/ember-flexberry-gis/locales/ru/components/flexberry-layers-attributes-panel.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/flexberry-layers-attributes-panel.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/flexberry-layers-attributes-panel.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/flexberry-layers-attributes-panel.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/flexberry-layers-attributes-panel.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/flexberry-layers-intersections-panel.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components');
  test('modules/ember-flexberry-gis/locales/ru/components/flexberry-layers-intersections-panel.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/flexberry-layers-intersections-panel.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/flexberry-layers-intersections-panel.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/flexberry-layers-intersections-panel.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/flexberry-layers-intersections-panel.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/flexberry-links-editor.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components');
  test('modules/ember-flexberry-gis/locales/ru/components/flexberry-links-editor.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/flexberry-links-editor.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/flexberry-links-editor.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/flexberry-links-editor.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/flexberry-links-editor.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/flexberry-map.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components');
  test('modules/ember-flexberry-gis/locales/ru/components/flexberry-map.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/flexberry-map.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/flexberry-map.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/flexberry-map.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/flexberry-map.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/flexberry-mapinfo.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components');
  test('modules/ember-flexberry-gis/locales/ru/components/flexberry-mapinfo.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/flexberry-mapinfo.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/flexberry-mapinfo.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/flexberry-mapinfo.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/flexberry-mapinfo.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/flexberry-maplayer.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components');
  test('modules/ember-flexberry-gis/locales/ru/components/flexberry-maplayer.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/flexberry-maplayer.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/flexberry-maplayer.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/flexberry-maplayer.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/flexberry-maplayer.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/flexberry-maplayers.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components');
  test('modules/ember-flexberry-gis/locales/ru/components/flexberry-maplayers.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/flexberry-maplayers.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/flexberry-maplayers.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/flexberry-maplayers.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/flexberry-maplayers.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/flexberry-maptoolbar.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components');
  test('modules/ember-flexberry-gis/locales/ru/components/flexberry-maptoolbar.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/flexberry-maptoolbar.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/flexberry-maptoolbar.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/flexberry-maptoolbar.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/flexberry-maptoolbar.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/flexberry-multiple-select.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components');
  test('modules/ember-flexberry-gis/locales/ru/components/flexberry-multiple-select.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/flexberry-multiple-select.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/flexberry-multiple-select.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/flexberry-multiple-select.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/flexberry-multiple-select.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/flexberry-search.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components');
  test('modules/ember-flexberry-gis/locales/ru/components/flexberry-search.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/flexberry-search.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/flexberry-search.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/flexberry-search.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/flexberry-search.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/flexberry-table.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components');
  test('modules/ember-flexberry-gis/locales/ru/components/flexberry-table.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/flexberry-table.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/flexberry-table.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/flexberry-table.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/flexberry-table.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/flexberry-wfs-filter.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components');
  test('modules/ember-flexberry-gis/locales/ru/components/flexberry-wfs-filter.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/flexberry-wfs-filter.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/flexberry-wfs-filter.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/flexberry-wfs-filter.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/flexberry-wfs-filter.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/geometry-add-modes.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components');
  test('modules/ember-flexberry-gis/locales/ru/components/geometry-add-modes.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/geometry-add-modes.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/geometry-add-modes.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/geometry-add-modes.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/geometry-add-modes.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/geometry-add-modes/draw.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components/geometry-add-modes');
  test('modules/ember-flexberry-gis/locales/ru/components/geometry-add-modes/draw.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/geometry-add-modes/draw.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/geometry-add-modes/draw.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/geometry-add-modes/draw.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/geometry-add-modes/draw.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/geometry-add-modes/geoprovider.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components/geometry-add-modes');
  test('modules/ember-flexberry-gis/locales/ru/components/geometry-add-modes/geoprovider.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/geometry-add-modes/geoprovider.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/geometry-add-modes/geoprovider.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/geometry-add-modes/geoprovider.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/geometry-add-modes/geoprovider.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/geometry-add-modes/import.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components/geometry-add-modes');
  test('modules/ember-flexberry-gis/locales/ru/components/geometry-add-modes/import.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/geometry-add-modes/import.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/geometry-add-modes/import.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/geometry-add-modes/import.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/geometry-add-modes/import.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/geometry-add-modes/manual.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components/geometry-add-modes');
  test('modules/ember-flexberry-gis/locales/ru/components/geometry-add-modes/manual.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/geometry-add-modes/manual.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/geometry-add-modes/manual.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/geometry-add-modes/manual.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/geometry-add-modes/manual.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/geometry-add-modes/rhumb.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components/geometry-add-modes');
  test('modules/ember-flexberry-gis/locales/ru/components/geometry-add-modes/rhumb.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/geometry-add-modes/rhumb.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/geometry-add-modes/rhumb.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/geometry-add-modes/rhumb.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/geometry-add-modes/rhumb.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/gradients.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components');
  test('modules/ember-flexberry-gis/locales/ru/components/gradients.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/gradients.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/gradients.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/gradients.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/gradients.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/gradients/dropdown-gradient.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components/gradients');
  test('modules/ember-flexberry-gis/locales/ru/components/gradients/dropdown-gradient.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/gradients/dropdown-gradient.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/gradients/dropdown-gradient.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/gradients/dropdown-gradient.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/gradients/dropdown-gradient.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/gradients/gradient-edit.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components/gradients');
  test('modules/ember-flexberry-gis/locales/ru/components/gradients/gradient-edit.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/gradients/gradient-edit.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/gradients/gradient-edit.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/gradients/gradient-edit.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/gradients/gradient-edit.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/history-control.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components');
  test('modules/ember-flexberry-gis/locales/ru/components/history-control.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/history-control.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/history-control.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/history-control.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/history-control.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/layer-result-list.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components');
  test('modules/ember-flexberry-gis/locales/ru/components/layer-result-list.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/layer-result-list.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/layer-result-list.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/layer-result-list.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/layer-result-list.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/layers-dialogs.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components');
  test('modules/ember-flexberry-gis/locales/ru/components/layers-dialogs.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/layers-dialogs.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/layers-dialogs.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/layers-dialogs.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/layers-dialogs.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/add.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components/layers-dialogs');
  test('modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/add.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/add.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/add.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/add.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/add.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/attributes/edit.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/attributes');
  test('modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/attributes/edit.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/attributes/edit.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/attributes/edit.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/attributes/edit.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/attributes/edit.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/copy.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components/layers-dialogs');
  test('modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/copy.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/copy.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/copy.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/copy.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/copy.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/edit.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components/layers-dialogs');
  test('modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/edit.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/edit.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/edit.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/edit.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/edit.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/layers-prototyping-modes.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components/layers-dialogs');
  test('modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/layers-prototyping-modes.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/layers-prototyping-modes.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/layers-prototyping-modes.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/layers-prototyping-modes.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/layers-prototyping-modes.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/remove.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components/layers-dialogs');
  test('modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/remove.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/remove.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/remove.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/remove.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/remove.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/settings.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components/layers-dialogs');
  test('modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/settings.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/settings.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/settings.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/settings.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/settings.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/settings/geojson.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/settings');
  test('modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/settings/geojson.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/settings/geojson.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/settings/geojson.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/settings/geojson.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/settings/geojson.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/settings/kml.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/settings');
  test('modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/settings/kml.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/settings/kml.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/settings/kml.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/settings/kml.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/settings/kml.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/settings/wfs.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/settings');
  test('modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/settings/wfs.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/settings/wfs.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/settings/wfs.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/settings/wfs.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/settings/wfs.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/settings/wms-wfs.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/settings');
  test('modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/settings/wms-wfs.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/settings/wms-wfs.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/settings/wms-wfs.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/settings/wms-wfs.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/settings/wms-wfs.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/settings/wms.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/settings');
  test('modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/settings/wms.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/settings/wms.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/settings/wms.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/settings/wms.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/layers-dialogs/settings/wms.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/layers-styles-editor.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components');
  test('modules/ember-flexberry-gis/locales/ru/components/layers-styles-editor.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/layers-styles-editor.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/layers-styles-editor.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/layers-styles-editor.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/layers-styles-editor.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/layers-styles.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components');
  test('modules/ember-flexberry-gis/locales/ru/components/layers-styles.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/layers-styles.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/layers-styles.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/layers-styles.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/layers-styles.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/layers-styles/categorized.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components/layers-styles');
  test('modules/ember-flexberry-gis/locales/ru/components/layers-styles/categorized.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/layers-styles/categorized.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/layers-styles/categorized.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/layers-styles/categorized.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/layers-styles/categorized.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/layers-styles/categorized/layer-property-dropdown.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components/layers-styles/categorized');
  test('modules/ember-flexberry-gis/locales/ru/components/layers-styles/categorized/layer-property-dropdown.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/layers-styles/categorized/layer-property-dropdown.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/layers-styles/categorized/layer-property-dropdown.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/layers-styles/categorized/layer-property-dropdown.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/layers-styles/categorized/layer-property-dropdown.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/layers-styles/empty.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components/layers-styles');
  test('modules/ember-flexberry-gis/locales/ru/components/layers-styles/empty.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/layers-styles/empty.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/layers-styles/empty.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/layers-styles/empty.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/layers-styles/empty.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/layers-styles/graduated.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components/layers-styles');
  test('modules/ember-flexberry-gis/locales/ru/components/layers-styles/graduated.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/layers-styles/graduated.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/layers-styles/graduated.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/layers-styles/graduated.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/layers-styles/graduated.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/layers-styles/simple.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components/layers-styles');
  test('modules/ember-flexberry-gis/locales/ru/components/layers-styles/simple.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/layers-styles/simple.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/layers-styles/simple.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/layers-styles/simple.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/layers-styles/simple.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/layers-styles/simple/fill-editor.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components/layers-styles/simple');
  test('modules/ember-flexberry-gis/locales/ru/components/layers-styles/simple/fill-editor.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/layers-styles/simple/fill-editor.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/layers-styles/simple/fill-editor.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/layers-styles/simple/fill-editor.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/layers-styles/simple/fill-editor.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/layers-styles/simple/path-editor.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components/layers-styles/simple');
  test('modules/ember-flexberry-gis/locales/ru/components/layers-styles/simple/path-editor.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/layers-styles/simple/path-editor.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/layers-styles/simple/path-editor.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/layers-styles/simple/path-editor.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/layers-styles/simple/path-editor.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/layers-styles/simple/stroke-editor.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components/layers-styles/simple');
  test('modules/ember-flexberry-gis/locales/ru/components/layers-styles/simple/stroke-editor.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/layers-styles/simple/stroke-editor.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/layers-styles/simple/stroke-editor.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/layers-styles/simple/stroke-editor.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/layers-styles/simple/stroke-editor.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/layers-styles/unique.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components/layers-styles');
  test('modules/ember-flexberry-gis/locales/ru/components/layers-styles/unique.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/layers-styles/unique.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/layers-styles/unique.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/layers-styles/unique.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/layers-styles/unique.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/legends.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components');
  test('modules/ember-flexberry-gis/locales/ru/components/legends.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/legends.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/legends.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/legends.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/legends.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/legends/vector-legend.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components/legends');
  test('modules/ember-flexberry-gis/locales/ru/components/legends/vector-legend.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/legends/vector-legend.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/legends/vector-legend.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/legends/vector-legend.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/legends/vector-legend.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components');
  test('modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs/export.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs');
  test('modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs/export.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs/export.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs/export.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs/export.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs/export.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs/go-to.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs');
  test('modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs/go-to.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs/go-to.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs/go-to.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs/go-to.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs/go-to.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs/search-settings/geocoder-osm-ru.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs/search-settings');
  test('modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs/search-settings/geocoder-osm-ru.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs/search-settings/geocoder-osm-ru.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs/search-settings/geocoder-osm-ru.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs/search-settings/geocoder-osm-ru.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs/search-settings/geocoder-osm-ru.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs/search-settings/geojson.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs/search-settings');
  test('modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs/search-settings/geojson.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs/search-settings/geojson.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs/search-settings/geojson.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs/search-settings/geojson.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs/search-settings/geojson.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs/search-settings/kml.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs/search-settings');
  test('modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs/search-settings/kml.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs/search-settings/kml.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs/search-settings/kml.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs/search-settings/kml.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs/search-settings/kml.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs/search-settings/odata-vector.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs/search-settings');
  test('modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs/search-settings/odata-vector.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs/search-settings/odata-vector.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs/search-settings/odata-vector.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs/search-settings/odata-vector.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs/search-settings/odata-vector.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs/search-settings/wfs.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs/search-settings');
  test('modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs/search-settings/wfs.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs/search-settings/wfs.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs/search-settings/wfs.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs/search-settings/wfs.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs/search-settings/wfs.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs/search.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs');
  test('modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs/search.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs/search.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs/search.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs/search.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/map-commands-dialogs/search.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/map-commands.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components');
  test('modules/ember-flexberry-gis/locales/ru/components/map-commands.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/map-commands.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/map-commands.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/map-commands.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/map-commands.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/map-dialogs.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components');
  test('modules/ember-flexberry-gis/locales/ru/components/map-dialogs.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/map-dialogs.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/map-dialogs.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/map-dialogs.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/map-dialogs.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/map-dialogs/add.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components/map-dialogs');
  test('modules/ember-flexberry-gis/locales/ru/components/map-dialogs/add.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/map-dialogs/add.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/map-dialogs/add.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/map-dialogs/add.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/map-dialogs/add.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/map-dialogs/edit.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components/map-dialogs');
  test('modules/ember-flexberry-gis/locales/ru/components/map-dialogs/edit.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/map-dialogs/edit.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/map-dialogs/edit.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/map-dialogs/edit.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/map-dialogs/edit.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/map-tools.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components');
  test('modules/ember-flexberry-gis/locales/ru/components/map-tools.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/map-tools.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/map-tools.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/map-tools.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/map-tools.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/markers-styles-editor.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components');
  test('modules/ember-flexberry-gis/locales/ru/components/markers-styles-editor.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/markers-styles-editor.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/markers-styles-editor.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/markers-styles-editor.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/markers-styles-editor.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/markers-styles.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components');
  test('modules/ember-flexberry-gis/locales/ru/components/markers-styles.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/markers-styles.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/markers-styles.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/markers-styles.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/markers-styles.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/markers-styles/default.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components/markers-styles');
  test('modules/ember-flexberry-gis/locales/ru/components/markers-styles/default.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/markers-styles/default.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/markers-styles/default.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/markers-styles/default.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/markers-styles/default.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/markers-styles/image.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components/markers-styles');
  test('modules/ember-flexberry-gis/locales/ru/components/markers-styles/image.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/markers-styles/image.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/markers-styles/image.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/markers-styles/image.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/markers-styles/image.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/markers-styles/image/icon-editor.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components/markers-styles/image');
  test('modules/ember-flexberry-gis/locales/ru/components/markers-styles/image/icon-editor.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/markers-styles/image/icon-editor.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/markers-styles/image/icon-editor.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/markers-styles/image/icon-editor.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/markers-styles/image/icon-editor.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/minimap.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components');
  test('modules/ember-flexberry-gis/locales/ru/components/minimap.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/minimap.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/minimap.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/minimap.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/minimap.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/spatial-bookmarks.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/components');
  test('modules/ember-flexberry-gis/locales/ru/components/spatial-bookmarks.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/components/spatial-bookmarks.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/components/spatial-bookmarks.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/components/spatial-bookmarks.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/components/spatial-bookmarks.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/crs.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru');
  test('modules/ember-flexberry-gis/locales/ru/crs.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/crs.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/crs.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/crs.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/crs.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/forms.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru');
  test('modules/ember-flexberry-gis/locales/ru/forms.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/forms.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/forms.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/forms.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/forms.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/forms/gis-search-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/forms');
  test('modules/ember-flexberry-gis/locales/ru/forms/gis-search-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/forms/gis-search-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/forms/gis-search-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/forms/gis-search-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/forms/gis-search-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/forms/new-platform-flexberry-g-i-s-layer-metadata-e.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/forms');
  test('modules/ember-flexberry-gis/locales/ru/forms/new-platform-flexberry-g-i-s-layer-metadata-e.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/forms/new-platform-flexberry-g-i-s-layer-metadata-e.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/forms/new-platform-flexberry-g-i-s-layer-metadata-e.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/forms/new-platform-flexberry-g-i-s-layer-metadata-e.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/forms/new-platform-flexberry-g-i-s-layer-metadata-e.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/forms/new-platform-flexberry-g-i-s-layer-metadata-l.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/forms');
  test('modules/ember-flexberry-gis/locales/ru/forms/new-platform-flexberry-g-i-s-layer-metadata-l.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/forms/new-platform-flexberry-g-i-s-layer-metadata-l.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/forms/new-platform-flexberry-g-i-s-layer-metadata-l.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/forms/new-platform-flexberry-g-i-s-layer-metadata-l.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/forms/new-platform-flexberry-g-i-s-layer-metadata-l.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/gradients.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru');
  test('modules/ember-flexberry-gis/locales/ru/gradients.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/gradients.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/gradients.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/gradients.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/gradients.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/gradients/dropdown-gradient.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/gradients');
  test('modules/ember-flexberry-gis/locales/ru/gradients/dropdown-gradient.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/gradients/dropdown-gradient.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/gradients/dropdown-gradient.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/gradients/dropdown-gradient.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/gradients/dropdown-gradient.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/gradients/gradient-edit.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/gradients');
  test('modules/ember-flexberry-gis/locales/ru/gradients/gradient-edit.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/gradients/gradient-edit.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/gradients/gradient-edit.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/gradients/gradient-edit.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/gradients/gradient-edit.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/layers-styles.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru');
  test('modules/ember-flexberry-gis/locales/ru/layers-styles.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/layers-styles.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/layers-styles.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/layers-styles.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/layers-styles.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/layers-styles/empty.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/layers-styles');
  test('modules/ember-flexberry-gis/locales/ru/layers-styles/empty.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/layers-styles/empty.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/layers-styles/empty.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/layers-styles/empty.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/layers-styles/empty.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/layers-styles/gradient-tools.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/layers-styles');
  test('modules/ember-flexberry-gis/locales/ru/layers-styles/gradient-tools.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/layers-styles/gradient-tools.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/layers-styles/gradient-tools.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/layers-styles/gradient-tools.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/layers-styles/gradient-tools.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/layers-styles/graduated.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/layers-styles');
  test('modules/ember-flexberry-gis/locales/ru/layers-styles/graduated.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/layers-styles/graduated.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/layers-styles/graduated.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/layers-styles/graduated.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/layers-styles/graduated.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/layers-styles/simple.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/layers-styles');
  test('modules/ember-flexberry-gis/locales/ru/layers-styles/simple.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/layers-styles/simple.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/layers-styles/simple.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/layers-styles/simple.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/layers-styles/simple.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/layers-styles/unique.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/layers-styles');
  test('modules/ember-flexberry-gis/locales/ru/layers-styles/unique.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/layers-styles/unique.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/layers-styles/unique.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/layers-styles/unique.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/layers-styles/unique.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/map-commands.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru');
  test('modules/ember-flexberry-gis/locales/ru/map-commands.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/map-commands.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/map-commands.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/map-commands.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/map-commands.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/map-commands/go-to.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/map-commands');
  test('modules/ember-flexberry-gis/locales/ru/map-commands/go-to.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/map-commands/go-to.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/map-commands/go-to.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/map-commands/go-to.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/map-commands/go-to.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/map-tools.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru');
  test('modules/ember-flexberry-gis/locales/ru/map-tools.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/map-tools.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/map-tools.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/map-tools.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/map-tools.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/markers-styles.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru');
  test('modules/ember-flexberry-gis/locales/ru/markers-styles.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/markers-styles.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/markers-styles.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/markers-styles.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/markers-styles.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/markers-styles/default.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/markers-styles');
  test('modules/ember-flexberry-gis/locales/ru/markers-styles/default.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/markers-styles/default.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/markers-styles/default.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/markers-styles/default.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/markers-styles/default.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/markers-styles/image.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/markers-styles');
  test('modules/ember-flexberry-gis/locales/ru/markers-styles/image.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/markers-styles/image.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/markers-styles/image.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/markers-styles/image.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/markers-styles/image.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/models.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru');
  test('modules/ember-flexberry-gis/locales/ru/models.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/models.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/models.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/models.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/models.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/models/new-platform-flexberry-g-i-s-layer-link.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/models');
  test('modules/ember-flexberry-gis/locales/ru/models/new-platform-flexberry-g-i-s-layer-link.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/models/new-platform-flexberry-g-i-s-layer-link.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/models/new-platform-flexberry-g-i-s-layer-link.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/models/new-platform-flexberry-g-i-s-layer-link.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/models/new-platform-flexberry-g-i-s-layer-link.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/models/new-platform-flexberry-g-i-s-layer-metadata.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/models');
  test('modules/ember-flexberry-gis/locales/ru/models/new-platform-flexberry-g-i-s-layer-metadata.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/models/new-platform-flexberry-g-i-s-layer-metadata.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/models/new-platform-flexberry-g-i-s-layer-metadata.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/models/new-platform-flexberry-g-i-s-layer-metadata.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/models/new-platform-flexberry-g-i-s-layer-metadata.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/models/new-platform-flexberry-g-i-s-link-metadata.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/models');
  test('modules/ember-flexberry-gis/locales/ru/models/new-platform-flexberry-g-i-s-link-metadata.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/models/new-platform-flexberry-g-i-s-link-metadata.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/models/new-platform-flexberry-g-i-s-link-metadata.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/models/new-platform-flexberry-g-i-s-link-metadata.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/models/new-platform-flexberry-g-i-s-link-metadata.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/models/new-platform-flexberry-g-i-s-link-parameter.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/models');
  test('modules/ember-flexberry-gis/locales/ru/models/new-platform-flexberry-g-i-s-link-parameter.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/models/new-platform-flexberry-g-i-s-link-parameter.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/models/new-platform-flexberry-g-i-s-link-parameter.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/models/new-platform-flexberry-g-i-s-link-parameter.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/models/new-platform-flexberry-g-i-s-link-parameter.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/models/new-platform-flexberry-g-i-s-map-layer.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/models');
  test('modules/ember-flexberry-gis/locales/ru/models/new-platform-flexberry-g-i-s-map-layer.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/models/new-platform-flexberry-g-i-s-map-layer.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/models/new-platform-flexberry-g-i-s-map-layer.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/models/new-platform-flexberry-g-i-s-map-layer.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/models/new-platform-flexberry-g-i-s-map-layer.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/models/new-platform-flexberry-g-i-s-map-object-setting.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/models');
  test('modules/ember-flexberry-gis/locales/ru/models/new-platform-flexberry-g-i-s-map-object-setting.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/models/new-platform-flexberry-g-i-s-map-object-setting.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/models/new-platform-flexberry-g-i-s-map-object-setting.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/models/new-platform-flexberry-g-i-s-map-object-setting.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/models/new-platform-flexberry-g-i-s-map-object-setting.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/models/new-platform-flexberry-g-i-s-map.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/models');
  test('modules/ember-flexberry-gis/locales/ru/models/new-platform-flexberry-g-i-s-map.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/models/new-platform-flexberry-g-i-s-map.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/models/new-platform-flexberry-g-i-s-map.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/models/new-platform-flexberry-g-i-s-map.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/models/new-platform-flexberry-g-i-s-map.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/models/new-platform-flexberry-g-i-s-parameter-metadata.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru/models');
  test('modules/ember-flexberry-gis/locales/ru/models/new-platform-flexberry-g-i-s-parameter-metadata.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/models/new-platform-flexberry-g-i-s-parameter-metadata.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/models/new-platform-flexberry-g-i-s-parameter-metadata.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/models/new-platform-flexberry-g-i-s-parameter-metadata.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/models/new-platform-flexberry-g-i-s-parameter-metadata.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/translations.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/locales/ru');
  test('modules/ember-flexberry-gis/locales/ru/translations.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/locales/ru/translations.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/locales/ru/translations.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/locales/ru/translations.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/locales/ru/translations.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-commands/base.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/map-commands');
  test('modules/ember-flexberry-gis/map-commands/base.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/map-commands/base.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-commands/base.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/map-commands/base.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/map-commands/base.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-commands/edit.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/map-commands');
  test('modules/ember-flexberry-gis/map-commands/edit.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/map-commands/edit.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-commands/edit.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/map-commands/edit.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/map-commands/edit.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-commands/export-download.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/map-commands');
  test('modules/ember-flexberry-gis/map-commands/export-download.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/map-commands/export-download.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-commands/export-download.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/map-commands/export-download.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/map-commands/export-download.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-commands/export-print.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/map-commands');
  test('modules/ember-flexberry-gis/map-commands/export-print.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/map-commands/export-print.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-commands/export-print.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/map-commands/export-print.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/map-commands/export-print.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-commands/export.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/map-commands');
  test('modules/ember-flexberry-gis/map-commands/export.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/map-commands/export.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-commands/export.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/map-commands/export.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/map-commands/export.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-commands/full-extent.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/map-commands');
  test('modules/ember-flexberry-gis/map-commands/full-extent.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/map-commands/full-extent.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-commands/full-extent.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/map-commands/full-extent.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/map-commands/full-extent.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-commands/go-to.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/map-commands');
  test('modules/ember-flexberry-gis/map-commands/go-to.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/map-commands/go-to.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-commands/go-to.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/map-commands/go-to.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/map-commands/go-to.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-commands/locate.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/map-commands');
  test('modules/ember-flexberry-gis/map-commands/locate.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/map-commands/locate.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-commands/locate.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/map-commands/locate.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/map-commands/locate.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-commands/search-attributes.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/map-commands');
  test('modules/ember-flexberry-gis/map-commands/search-attributes.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/map-commands/search-attributes.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-commands/search-attributes.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/map-commands/search-attributes.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/map-commands/search-attributes.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-commands/search-clear.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/map-commands');
  test('modules/ember-flexberry-gis/map-commands/search-clear.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/map-commands/search-clear.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-commands/search-clear.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/map-commands/search-clear.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/map-commands/search-clear.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-commands/search-show.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/map-commands');
  test('modules/ember-flexberry-gis/map-commands/search-show.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/map-commands/search-show.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-commands/search-show.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/map-commands/search-show.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/map-commands/search-show.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-commands/search.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/map-commands');
  test('modules/ember-flexberry-gis/map-commands/search.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/map-commands/search.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-commands/search.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/map-commands/search.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/map-commands/search.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/background-layers.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/map-tools');
  test('modules/ember-flexberry-gis/map-tools/background-layers.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/map-tools/background-layers.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/background-layers.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/map-tools/background-layers.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/map-tools/background-layers.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/base-nonclickable.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/map-tools');
  test('modules/ember-flexberry-gis/map-tools/base-nonclickable.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/map-tools/base-nonclickable.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/base-nonclickable.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/map-tools/base-nonclickable.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/map-tools/base-nonclickable.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/base.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/map-tools');
  test('modules/ember-flexberry-gis/map-tools/base.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/map-tools/base.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/base.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/map-tools/base.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/map-tools/base.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/drag.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/map-tools');
  test('modules/ember-flexberry-gis/map-tools/drag.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/map-tools/drag.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/drag.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/map-tools/drag.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/map-tools/drag.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/draw-circle.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/map-tools');
  test('modules/ember-flexberry-gis/map-tools/draw-circle.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/map-tools/draw-circle.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/draw-circle.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/map-tools/draw-circle.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/map-tools/draw-circle.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/draw-clear.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/map-tools');
  test('modules/ember-flexberry-gis/map-tools/draw-clear.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/map-tools/draw-clear.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/draw-clear.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/map-tools/draw-clear.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/map-tools/draw-clear.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/draw-marker.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/map-tools');
  test('modules/ember-flexberry-gis/map-tools/draw-marker.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/map-tools/draw-marker.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/draw-marker.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/map-tools/draw-marker.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/map-tools/draw-marker.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/draw-polygon.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/map-tools');
  test('modules/ember-flexberry-gis/map-tools/draw-polygon.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/map-tools/draw-polygon.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/draw-polygon.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/map-tools/draw-polygon.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/map-tools/draw-polygon.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/draw-polyline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/map-tools');
  test('modules/ember-flexberry-gis/map-tools/draw-polyline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/map-tools/draw-polyline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/draw-polyline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/map-tools/draw-polyline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/map-tools/draw-polyline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/draw-rectangle.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/map-tools');
  test('modules/ember-flexberry-gis/map-tools/draw-rectangle.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/map-tools/draw-rectangle.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/draw-rectangle.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/map-tools/draw-rectangle.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/map-tools/draw-rectangle.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/draw.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/map-tools');
  test('modules/ember-flexberry-gis/map-tools/draw.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/map-tools/draw.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/draw.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/map-tools/draw.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/map-tools/draw.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/identify-all-file.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/map-tools');
  test('modules/ember-flexberry-gis/map-tools/identify-all-file.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/map-tools/identify-all-file.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/identify-all-file.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/map-tools/identify-all-file.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/map-tools/identify-all-file.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/identify-all-marker.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/map-tools');
  test('modules/ember-flexberry-gis/map-tools/identify-all-marker.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/map-tools/identify-all-marker.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/identify-all-marker.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/map-tools/identify-all-marker.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/map-tools/identify-all-marker.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/identify-all-polygon.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/map-tools');
  test('modules/ember-flexberry-gis/map-tools/identify-all-polygon.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/map-tools/identify-all-polygon.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/identify-all-polygon.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/map-tools/identify-all-polygon.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/map-tools/identify-all-polygon.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/identify-all-polyline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/map-tools');
  test('modules/ember-flexberry-gis/map-tools/identify-all-polyline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/map-tools/identify-all-polyline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/identify-all-polyline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/map-tools/identify-all-polyline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/map-tools/identify-all-polyline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/identify-all-rectangle.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/map-tools');
  test('modules/ember-flexberry-gis/map-tools/identify-all-rectangle.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/map-tools/identify-all-rectangle.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/identify-all-rectangle.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/map-tools/identify-all-rectangle.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/map-tools/identify-all-rectangle.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/identify-file.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/map-tools');
  test('modules/ember-flexberry-gis/map-tools/identify-file.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/map-tools/identify-file.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/identify-file.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/map-tools/identify-file.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/map-tools/identify-file.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/identify-geom-only-file.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/map-tools');
  test('modules/ember-flexberry-gis/map-tools/identify-geom-only-file.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/map-tools/identify-geom-only-file.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/identify-geom-only-file.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/map-tools/identify-geom-only-file.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/map-tools/identify-geom-only-file.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/identify-geom-only-marker.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/map-tools');
  test('modules/ember-flexberry-gis/map-tools/identify-geom-only-marker.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/map-tools/identify-geom-only-marker.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/identify-geom-only-marker.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/map-tools/identify-geom-only-marker.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/map-tools/identify-geom-only-marker.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/identify-geom-only-polygon.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/map-tools');
  test('modules/ember-flexberry-gis/map-tools/identify-geom-only-polygon.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/map-tools/identify-geom-only-polygon.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/identify-geom-only-polygon.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/map-tools/identify-geom-only-polygon.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/map-tools/identify-geom-only-polygon.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/identify-geom-only-polyline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/map-tools');
  test('modules/ember-flexberry-gis/map-tools/identify-geom-only-polyline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/map-tools/identify-geom-only-polyline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/identify-geom-only-polyline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/map-tools/identify-geom-only-polyline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/map-tools/identify-geom-only-polyline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/identify-geom-only-rectangle.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/map-tools');
  test('modules/ember-flexberry-gis/map-tools/identify-geom-only-rectangle.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/map-tools/identify-geom-only-rectangle.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/identify-geom-only-rectangle.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/map-tools/identify-geom-only-rectangle.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/map-tools/identify-geom-only-rectangle.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/identify-marker.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/map-tools');
  test('modules/ember-flexberry-gis/map-tools/identify-marker.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/map-tools/identify-marker.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/identify-marker.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/map-tools/identify-marker.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/map-tools/identify-marker.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/identify-polygon.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/map-tools');
  test('modules/ember-flexberry-gis/map-tools/identify-polygon.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/map-tools/identify-polygon.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/identify-polygon.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/map-tools/identify-polygon.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/map-tools/identify-polygon.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/identify-polyline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/map-tools');
  test('modules/ember-flexberry-gis/map-tools/identify-polyline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/map-tools/identify-polyline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/identify-polyline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/map-tools/identify-polyline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/map-tools/identify-polyline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/identify-rectangle.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/map-tools');
  test('modules/ember-flexberry-gis/map-tools/identify-rectangle.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/map-tools/identify-rectangle.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/identify-rectangle.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/map-tools/identify-rectangle.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/map-tools/identify-rectangle.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/identify-top-file.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/map-tools');
  test('modules/ember-flexberry-gis/map-tools/identify-top-file.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/map-tools/identify-top-file.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/identify-top-file.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/map-tools/identify-top-file.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/map-tools/identify-top-file.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/identify-top-marker.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/map-tools');
  test('modules/ember-flexberry-gis/map-tools/identify-top-marker.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/map-tools/identify-top-marker.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/identify-top-marker.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/map-tools/identify-top-marker.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/map-tools/identify-top-marker.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/identify-top-polygon.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/map-tools');
  test('modules/ember-flexberry-gis/map-tools/identify-top-polygon.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/map-tools/identify-top-polygon.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/identify-top-polygon.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/map-tools/identify-top-polygon.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/map-tools/identify-top-polygon.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/identify-top-polyline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/map-tools');
  test('modules/ember-flexberry-gis/map-tools/identify-top-polyline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/map-tools/identify-top-polyline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/identify-top-polyline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/map-tools/identify-top-polyline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/map-tools/identify-top-polyline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/identify-top-rectangle.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/map-tools');
  test('modules/ember-flexberry-gis/map-tools/identify-top-rectangle.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/map-tools/identify-top-rectangle.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/identify-top-rectangle.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/map-tools/identify-top-rectangle.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/map-tools/identify-top-rectangle.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/identify-visible-file.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/map-tools');
  test('modules/ember-flexberry-gis/map-tools/identify-visible-file.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/map-tools/identify-visible-file.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/identify-visible-file.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/map-tools/identify-visible-file.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/map-tools/identify-visible-file.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/identify-visible-marker.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/map-tools');
  test('modules/ember-flexberry-gis/map-tools/identify-visible-marker.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/map-tools/identify-visible-marker.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/identify-visible-marker.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/map-tools/identify-visible-marker.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/map-tools/identify-visible-marker.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/identify-visible-polygon.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/map-tools');
  test('modules/ember-flexberry-gis/map-tools/identify-visible-polygon.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/map-tools/identify-visible-polygon.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/identify-visible-polygon.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/map-tools/identify-visible-polygon.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/map-tools/identify-visible-polygon.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/identify-visible-polyline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/map-tools');
  test('modules/ember-flexberry-gis/map-tools/identify-visible-polyline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/map-tools/identify-visible-polyline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/identify-visible-polyline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/map-tools/identify-visible-polyline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/map-tools/identify-visible-polyline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/identify-visible-rectangle.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/map-tools');
  test('modules/ember-flexberry-gis/map-tools/identify-visible-rectangle.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/map-tools/identify-visible-rectangle.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/identify-visible-rectangle.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/map-tools/identify-visible-rectangle.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/map-tools/identify-visible-rectangle.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/identify.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/map-tools');
  test('modules/ember-flexberry-gis/map-tools/identify.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/map-tools/identify.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/identify.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/map-tools/identify.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/map-tools/identify.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/measure-area.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/map-tools');
  test('modules/ember-flexberry-gis/map-tools/measure-area.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/map-tools/measure-area.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/measure-area.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/map-tools/measure-area.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/map-tools/measure-area.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/measure-clear.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/map-tools');
  test('modules/ember-flexberry-gis/map-tools/measure-clear.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/map-tools/measure-clear.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/measure-clear.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/map-tools/measure-clear.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/map-tools/measure-clear.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/measure-coordinates.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/map-tools');
  test('modules/ember-flexberry-gis/map-tools/measure-coordinates.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/map-tools/measure-coordinates.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/measure-coordinates.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/map-tools/measure-coordinates.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/map-tools/measure-coordinates.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/measure-distance.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/map-tools');
  test('modules/ember-flexberry-gis/map-tools/measure-distance.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/map-tools/measure-distance.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/measure-distance.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/map-tools/measure-distance.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/map-tools/measure-distance.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/measure-radius.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/map-tools');
  test('modules/ember-flexberry-gis/map-tools/measure-radius.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/map-tools/measure-radius.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/measure-radius.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/map-tools/measure-radius.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/map-tools/measure-radius.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/measure.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/map-tools');
  test('modules/ember-flexberry-gis/map-tools/measure.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/map-tools/measure.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/measure.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/map-tools/measure.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/map-tools/measure.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/rectangle.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/map-tools');
  test('modules/ember-flexberry-gis/map-tools/rectangle.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/map-tools/rectangle.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/rectangle.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/map-tools/rectangle.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/map-tools/rectangle.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/zoom-in.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/map-tools');
  test('modules/ember-flexberry-gis/map-tools/zoom-in.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/map-tools/zoom-in.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/zoom-in.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/map-tools/zoom-in.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/map-tools/zoom-in.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/zoom-out.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/map-tools');
  test('modules/ember-flexberry-gis/map-tools/zoom-out.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/map-tools/zoom-out.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/map-tools/zoom-out.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/map-tools/zoom-out.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/map-tools/zoom-out.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/markers-styles/-private/base.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/markers-styles/-private');
  test('modules/ember-flexberry-gis/markers-styles/-private/base.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/markers-styles/-private/base.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/markers-styles/-private/base.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/markers-styles/-private/base.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/markers-styles/-private/base.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/markers-styles/default.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/markers-styles');
  test('modules/ember-flexberry-gis/markers-styles/default.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/markers-styles/default.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/markers-styles/default.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/markers-styles/default.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/markers-styles/default.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/markers-styles/image.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/markers-styles');
  test('modules/ember-flexberry-gis/markers-styles/image.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/markers-styles/image.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/markers-styles/image.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/markers-styles/image.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/markers-styles/image.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/compare-layers.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins');
  test('modules/ember-flexberry-gis/mixins/compare-layers.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/compare-layers.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/compare-layers.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/compare-layers.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/compare-layers.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/dynamic-properties.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins');
  test('modules/ember-flexberry-gis/mixins/dynamic-properties.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/dynamic-properties.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/dynamic-properties.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/dynamic-properties.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/dynamic-properties.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/edit-feature.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins');
  test('modules/ember-flexberry-gis/mixins/edit-feature.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/edit-feature.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/edit-feature.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/edit-feature.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/edit-feature.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/favorites-features.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins');
  test('modules/ember-flexberry-gis/mixins/favorites-features.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/favorites-features.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/favorites-features.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/favorites-features.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/favorites-features.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/flexberry-boundingbox-map-loader.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins');
  test('modules/ember-flexberry-gis/mixins/flexberry-boundingbox-map-loader.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/flexberry-boundingbox-map-loader.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/flexberry-boundingbox-map-loader.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/flexberry-boundingbox-map-loader.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/flexberry-boundingbox-map-loader.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/flexberry-check-file.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins');
  test('modules/ember-flexberry-gis/mixins/flexberry-check-file.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/flexberry-check-file.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/flexberry-check-file.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/flexberry-check-file.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/flexberry-check-file.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/flexberry-layers-action-handler.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins');
  test('modules/ember-flexberry-gis/mixins/flexberry-layers-action-handler.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/flexberry-layers-action-handler.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/flexberry-layers-action-handler.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/flexberry-layers-action-handler.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/flexberry-layers-action-handler.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/flexberry-links-editor-actions-handler.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins');
  test('modules/ember-flexberry-gis/mixins/flexberry-links-editor-actions-handler.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/flexberry-links-editor-actions-handler.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/flexberry-links-editor-actions-handler.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/flexberry-links-editor-actions-handler.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/flexberry-links-editor-actions-handler.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/flexberry-map-actions-handler.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins');
  test('modules/ember-flexberry-gis/mixins/flexberry-map-actions-handler.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/flexberry-map-actions-handler.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/flexberry-map-actions-handler.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/flexberry-map-actions-handler.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/flexberry-map-actions-handler.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/flexberry-map-model-api-cosmos.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins');
  test('modules/ember-flexberry-gis/mixins/flexberry-map-model-api-cosmos.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/flexberry-map-model-api-cosmos.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/flexberry-map-model-api-cosmos.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/flexberry-map-model-api-cosmos.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/flexberry-map-model-api-cosmos.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/flexberry-map-model-api-expansion.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins');
  test('modules/ember-flexberry-gis/mixins/flexberry-map-model-api-expansion.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/flexberry-map-model-api-expansion.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/flexberry-map-model-api-expansion.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/flexberry-map-model-api-expansion.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/flexberry-map-model-api-expansion.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/flexberry-map-model-api-reloadlayer.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins');
  test('modules/ember-flexberry-gis/mixins/flexberry-map-model-api-reloadlayer.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/flexberry-map-model-api-reloadlayer.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/flexberry-map-model-api-reloadlayer.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/flexberry-map-model-api-reloadlayer.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/flexberry-map-model-api-reloadlayer.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/flexberry-map-model-api-savelayer.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins');
  test('modules/ember-flexberry-gis/mixins/flexberry-map-model-api-savelayer.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/flexberry-map-model-api-savelayer.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/flexberry-map-model-api-savelayer.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/flexberry-map-model-api-savelayer.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/flexberry-map-model-api-savelayer.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/flexberry-map-model-api-visualedit.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins');
  test('modules/ember-flexberry-gis/mixins/flexberry-map-model-api-visualedit.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/flexberry-map-model-api-visualedit.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/flexberry-map-model-api-visualedit.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/flexberry-map-model-api-visualedit.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/flexberry-map-model-api-visualedit.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/flexberry-map-model-api.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins');
  test('modules/ember-flexberry-gis/mixins/flexberry-map-model-api.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/flexberry-map-model-api.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/flexberry-map-model-api.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/flexberry-map-model-api.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/flexberry-map-model-api.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/flexberry-maplayer-actions-handler.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins');
  test('modules/ember-flexberry-gis/mixins/flexberry-maplayer-actions-handler.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/flexberry-maplayer-actions-handler.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/flexberry-maplayer-actions-handler.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/flexberry-maplayer-actions-handler.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/flexberry-maplayer-actions-handler.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/geojson-filter-parser.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins');
  test('modules/ember-flexberry-gis/mixins/geojson-filter-parser.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/geojson-filter-parser.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/geojson-filter-parser.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/geojson-filter-parser.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/geojson-filter-parser.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/geom-only-map-tool.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins');
  test('modules/ember-flexberry-gis/mixins/geom-only-map-tool.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/geom-only-map-tool.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/geom-only-map-tool.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/geom-only-map-tool.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/geom-only-map-tool.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/layer-model.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins');
  test('modules/ember-flexberry-gis/mixins/layer-model.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/layer-model.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/layer-model.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/layer-model.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/layer-model.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/layer-result-list-actions-handler.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins');
  test('modules/ember-flexberry-gis/mixins/layer-result-list-actions-handler.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/layer-result-list-actions-handler.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/layer-result-list-actions-handler.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/layer-result-list-actions-handler.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/layer-result-list-actions-handler.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/leaflet-crs.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins');
  test('modules/ember-flexberry-gis/mixins/leaflet-crs.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/leaflet-crs.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/leaflet-crs.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/leaflet-crs.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/leaflet-crs.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/leaflet-events.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins');
  test('modules/ember-flexberry-gis/mixins/leaflet-events.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/leaflet-events.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/leaflet-events.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/leaflet-events.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/leaflet-events.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/leaflet-map/map-commands.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins/leaflet-map');
  test('modules/ember-flexberry-gis/mixins/leaflet-map/map-commands.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/leaflet-map/map-commands.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/leaflet-map/map-commands.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/leaflet-map/map-commands.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/leaflet-map/map-commands.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/leaflet-map/map-interaction.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins/leaflet-map');
  test('modules/ember-flexberry-gis/mixins/leaflet-map/map-interaction.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/leaflet-map/map-interaction.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/leaflet-map/map-interaction.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/leaflet-map/map-interaction.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/leaflet-map/map-interaction.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/leaflet-map/map-loader.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins/leaflet-map');
  test('modules/ember-flexberry-gis/mixins/leaflet-map/map-loader.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/leaflet-map/map-loader.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/leaflet-map/map-loader.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/leaflet-map/map-loader.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/leaflet-map/map-loader.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/leaflet-map/map-sidebar.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins/leaflet-map');
  test('modules/ember-flexberry-gis/mixins/leaflet-map/map-sidebar.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/leaflet-map/map-sidebar.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/leaflet-map/map-sidebar.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/leaflet-map/map-sidebar.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/leaflet-map/map-sidebar.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/leaflet-map/map-tools.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins/leaflet-map');
  test('modules/ember-flexberry-gis/mixins/leaflet-map/map-tools.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/leaflet-map/map-tools.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/leaflet-map/map-tools.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/leaflet-map/map-tools.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/leaflet-map/map-tools.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/leaflet-map/map-visibility.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins/leaflet-map');
  test('modules/ember-flexberry-gis/mixins/leaflet-map/map-visibility.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/leaflet-map/map-visibility.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/leaflet-map/map-visibility.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/leaflet-map/map-visibility.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/leaflet-map/map-visibility.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/leaflet-options.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins');
  test('modules/ember-flexberry-gis/mixins/leaflet-options.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/leaflet-options.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/leaflet-options.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/leaflet-options.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/leaflet-options.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/leaflet-properties.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins');
  test('modules/ember-flexberry-gis/mixins/leaflet-properties.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/leaflet-properties.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/leaflet-properties.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/leaflet-properties.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/leaflet-properties.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/leaflet-zoom-to-feature.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins');
  test('modules/ember-flexberry-gis/mixins/leaflet-zoom-to-feature.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/leaflet-zoom-to-feature.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/leaflet-zoom-to-feature.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/leaflet-zoom-to-feature.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/leaflet-zoom-to-feature.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/local-storage-binding.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins');
  test('modules/ember-flexberry-gis/mixins/local-storage-binding.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/local-storage-binding.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/local-storage-binding.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/local-storage-binding.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/local-storage-binding.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/map-tools/identify-all.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins/map-tools');
  test('modules/ember-flexberry-gis/mixins/map-tools/identify-all.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/map-tools/identify-all.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/map-tools/identify-all.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/map-tools/identify-all.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/map-tools/identify-all.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/map-tools/identify-top.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins/map-tools');
  test('modules/ember-flexberry-gis/mixins/map-tools/identify-top.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/map-tools/identify-top.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/map-tools/identify-top.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/map-tools/identify-top.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/map-tools/identify-top.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/map-tools/identify-visible.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins/map-tools');
  test('modules/ember-flexberry-gis/mixins/map-tools/identify-visible.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/map-tools/identify-visible.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/map-tools/identify-visible.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/map-tools/identify-visible.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/map-tools/identify-visible.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/odata-filter-parser.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins');
  test('modules/ember-flexberry-gis/mixins/odata-filter-parser.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/odata-filter-parser.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/odata-filter-parser.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/odata-filter-parser.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/odata-filter-parser.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/regenerated/models/new-platform-flexberry-g-i-s-layer-link.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins/regenerated/models');
  test('modules/ember-flexberry-gis/mixins/regenerated/models/new-platform-flexberry-g-i-s-layer-link.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/regenerated/models/new-platform-flexberry-g-i-s-layer-link.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/regenerated/models/new-platform-flexberry-g-i-s-layer-link.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/regenerated/models/new-platform-flexberry-g-i-s-layer-link.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/regenerated/models/new-platform-flexberry-g-i-s-layer-link.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/regenerated/models/new-platform-flexberry-g-i-s-layer-metadata.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins/regenerated/models');
  test('modules/ember-flexberry-gis/mixins/regenerated/models/new-platform-flexberry-g-i-s-layer-metadata.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/regenerated/models/new-platform-flexberry-g-i-s-layer-metadata.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/regenerated/models/new-platform-flexberry-g-i-s-layer-metadata.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/regenerated/models/new-platform-flexberry-g-i-s-layer-metadata.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/regenerated/models/new-platform-flexberry-g-i-s-layer-metadata.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/regenerated/models/new-platform-flexberry-g-i-s-link-metadata.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins/regenerated/models');
  test('modules/ember-flexberry-gis/mixins/regenerated/models/new-platform-flexberry-g-i-s-link-metadata.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/regenerated/models/new-platform-flexberry-g-i-s-link-metadata.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/regenerated/models/new-platform-flexberry-g-i-s-link-metadata.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/regenerated/models/new-platform-flexberry-g-i-s-link-metadata.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/regenerated/models/new-platform-flexberry-g-i-s-link-metadata.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/regenerated/models/new-platform-flexberry-g-i-s-link-parameter.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins/regenerated/models');
  test('modules/ember-flexberry-gis/mixins/regenerated/models/new-platform-flexberry-g-i-s-link-parameter.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/regenerated/models/new-platform-flexberry-g-i-s-link-parameter.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/regenerated/models/new-platform-flexberry-g-i-s-link-parameter.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/regenerated/models/new-platform-flexberry-g-i-s-link-parameter.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/regenerated/models/new-platform-flexberry-g-i-s-link-parameter.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/regenerated/models/new-platform-flexberry-g-i-s-map-layer.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins/regenerated/models');
  test('modules/ember-flexberry-gis/mixins/regenerated/models/new-platform-flexberry-g-i-s-map-layer.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/regenerated/models/new-platform-flexberry-g-i-s-map-layer.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/regenerated/models/new-platform-flexberry-g-i-s-map-layer.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/regenerated/models/new-platform-flexberry-g-i-s-map-layer.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/regenerated/models/new-platform-flexberry-g-i-s-map-layer.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/regenerated/models/new-platform-flexberry-g-i-s-map-object-setting.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins/regenerated/models');
  test('modules/ember-flexberry-gis/mixins/regenerated/models/new-platform-flexberry-g-i-s-map-object-setting.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/regenerated/models/new-platform-flexberry-g-i-s-map-object-setting.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/regenerated/models/new-platform-flexberry-g-i-s-map-object-setting.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/regenerated/models/new-platform-flexberry-g-i-s-map-object-setting.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/regenerated/models/new-platform-flexberry-g-i-s-map-object-setting.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/regenerated/models/new-platform-flexberry-g-i-s-map.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins/regenerated/models');
  test('modules/ember-flexberry-gis/mixins/regenerated/models/new-platform-flexberry-g-i-s-map.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/regenerated/models/new-platform-flexberry-g-i-s-map.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/regenerated/models/new-platform-flexberry-g-i-s-map.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/regenerated/models/new-platform-flexberry-g-i-s-map.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/regenerated/models/new-platform-flexberry-g-i-s-map.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/regenerated/models/new-platform-flexberry-g-i-s-parameter-metadata.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins/regenerated/models');
  test('modules/ember-flexberry-gis/mixins/regenerated/models/new-platform-flexberry-g-i-s-parameter-metadata.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/regenerated/models/new-platform-flexberry-g-i-s-parameter-metadata.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/regenerated/models/new-platform-flexberry-g-i-s-parameter-metadata.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/regenerated/models/new-platform-flexberry-g-i-s-parameter-metadata.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/regenerated/models/new-platform-flexberry-g-i-s-parameter-metadata.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-layer-link-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins/regenerated/serializers');
  test('modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-layer-link-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-layer-link-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-layer-link-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-layer-link-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-layer-link-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-layer-link.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins/regenerated/serializers');
  test('modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-layer-link.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-layer-link.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-layer-link.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-layer-link.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-layer-link.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-layer-metadata-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins/regenerated/serializers');
  test('modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-layer-metadata-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-layer-metadata-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-layer-metadata-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-layer-metadata-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-layer-metadata-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-layer-metadata.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins/regenerated/serializers');
  test('modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-layer-metadata.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-layer-metadata.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-layer-metadata.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-layer-metadata.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-layer-metadata.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-link-metadata-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins/regenerated/serializers');
  test('modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-link-metadata-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-link-metadata-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-link-metadata-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-link-metadata-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-link-metadata-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-link-metadata.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins/regenerated/serializers');
  test('modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-link-metadata.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-link-metadata.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-link-metadata.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-link-metadata.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-link-metadata.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-link-parameter-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins/regenerated/serializers');
  test('modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-link-parameter-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-link-parameter-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-link-parameter-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-link-parameter-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-link-parameter-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-link-parameter.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins/regenerated/serializers');
  test('modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-link-parameter.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-link-parameter.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-link-parameter.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-link-parameter.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-link-parameter.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-map-layer-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins/regenerated/serializers');
  test('modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-map-layer-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-map-layer-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-map-layer-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-map-layer-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-map-layer-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-map-layer.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins/regenerated/serializers');
  test('modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-map-layer.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-map-layer.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-map-layer.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-map-layer.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-map-layer.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-map-object-setting-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins/regenerated/serializers');
  test('modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-map-object-setting-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-map-object-setting-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-map-object-setting-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-map-object-setting-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-map-object-setting-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-map-object-setting.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins/regenerated/serializers');
  test('modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-map-object-setting.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-map-object-setting.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-map-object-setting.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-map-object-setting.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-map-object-setting.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-map-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins/regenerated/serializers');
  test('modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-map-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-map-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-map-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-map-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-map-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-map.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins/regenerated/serializers');
  test('modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-map.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-map.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-map.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-map.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-map.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-parameter-metadata-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins/regenerated/serializers');
  test('modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-parameter-metadata-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-parameter-metadata-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-parameter-metadata-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-parameter-metadata-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-parameter-metadata-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-parameter-metadata.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins/regenerated/serializers');
  test('modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-parameter-metadata.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-parameter-metadata.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-parameter-metadata.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-parameter-metadata.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/regenerated/serializers/new-platform-flexberry-g-i-s-parameter-metadata.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/result-feature-initializer.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins');
  test('modules/ember-flexberry-gis/mixins/result-feature-initializer.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/result-feature-initializer.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/result-feature-initializer.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/result-feature-initializer.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/result-feature-initializer.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/snap-draw.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins');
  test('modules/ember-flexberry-gis/mixins/snap-draw.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/snap-draw.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/snap-draw.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/snap-draw.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/snap-draw.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/wfs-filter-parser.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/mixins');
  test('modules/ember-flexberry-gis/mixins/wfs-filter-parser.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/mixins/wfs-filter-parser.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/mixins/wfs-filter-parser.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/mixins/wfs-filter-parser.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/mixins/wfs-filter-parser.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/models/new-platform-flexberry-g-i-s-layer-link.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/models');
  test('modules/ember-flexberry-gis/models/new-platform-flexberry-g-i-s-layer-link.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/models/new-platform-flexberry-g-i-s-layer-link.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/models/new-platform-flexberry-g-i-s-layer-link.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/models/new-platform-flexberry-g-i-s-layer-link.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/models/new-platform-flexberry-g-i-s-layer-link.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/models/new-platform-flexberry-g-i-s-layer-metadata.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/models');
  test('modules/ember-flexberry-gis/models/new-platform-flexberry-g-i-s-layer-metadata.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/models/new-platform-flexberry-g-i-s-layer-metadata.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/models/new-platform-flexberry-g-i-s-layer-metadata.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/models/new-platform-flexberry-g-i-s-layer-metadata.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/models/new-platform-flexberry-g-i-s-layer-metadata.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/models/new-platform-flexberry-g-i-s-link-metadata.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/models');
  test('modules/ember-flexberry-gis/models/new-platform-flexberry-g-i-s-link-metadata.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/models/new-platform-flexberry-g-i-s-link-metadata.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/models/new-platform-flexberry-g-i-s-link-metadata.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/models/new-platform-flexberry-g-i-s-link-metadata.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/models/new-platform-flexberry-g-i-s-link-metadata.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/models/new-platform-flexberry-g-i-s-link-parameter.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/models');
  test('modules/ember-flexberry-gis/models/new-platform-flexberry-g-i-s-link-parameter.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/models/new-platform-flexberry-g-i-s-link-parameter.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/models/new-platform-flexberry-g-i-s-link-parameter.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/models/new-platform-flexberry-g-i-s-link-parameter.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/models/new-platform-flexberry-g-i-s-link-parameter.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/models/new-platform-flexberry-g-i-s-map-layer.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/models');
  test('modules/ember-flexberry-gis/models/new-platform-flexberry-g-i-s-map-layer.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/models/new-platform-flexberry-g-i-s-map-layer.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/models/new-platform-flexberry-g-i-s-map-layer.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/models/new-platform-flexberry-g-i-s-map-layer.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/models/new-platform-flexberry-g-i-s-map-layer.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/models/new-platform-flexberry-g-i-s-map-object-setting.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/models');
  test('modules/ember-flexberry-gis/models/new-platform-flexberry-g-i-s-map-object-setting.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/models/new-platform-flexberry-g-i-s-map-object-setting.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/models/new-platform-flexberry-g-i-s-map-object-setting.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/models/new-platform-flexberry-g-i-s-map-object-setting.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/models/new-platform-flexberry-g-i-s-map-object-setting.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/models/new-platform-flexberry-g-i-s-map.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/models');
  test('modules/ember-flexberry-gis/models/new-platform-flexberry-g-i-s-map.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/models/new-platform-flexberry-g-i-s-map.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/models/new-platform-flexberry-g-i-s-map.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/models/new-platform-flexberry-g-i-s-map.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/models/new-platform-flexberry-g-i-s-map.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/models/new-platform-flexberry-g-i-s-parameter-metadata.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/models');
  test('modules/ember-flexberry-gis/models/new-platform-flexberry-g-i-s-parameter-metadata.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/models/new-platform-flexberry-g-i-s-parameter-metadata.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/models/new-platform-flexberry-g-i-s-parameter-metadata.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/models/new-platform-flexberry-g-i-s-parameter-metadata.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/models/new-platform-flexberry-g-i-s-parameter-metadata.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/objects/custom-renderer.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/objects');
  test('modules/ember-flexberry-gis/objects/custom-renderer.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/objects/custom-renderer.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/objects/custom-renderer.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/objects/custom-renderer.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/objects/custom-renderer.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/routes/edit-map-new.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/routes');
  test('modules/ember-flexberry-gis/routes/edit-map-new.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/routes/edit-map-new.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/routes/edit-map-new.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/routes/edit-map-new.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/routes/edit-map-new.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/routes/edit-map.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/routes');
  test('modules/ember-flexberry-gis/routes/edit-map.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/routes/edit-map.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/routes/edit-map.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/routes/edit-map.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/routes/edit-map.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/routes/gis-search-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/routes');
  test('modules/ember-flexberry-gis/routes/gis-search-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/routes/gis-search-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/routes/gis-search-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/routes/gis-search-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/routes/gis-search-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/routes/list-map.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/routes');
  test('modules/ember-flexberry-gis/routes/list-map.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/routes/list-map.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/routes/list-map.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/routes/list-map.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/routes/list-map.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/routes/new-platform-flexberry-g-i-s-layer-metadata-e.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/routes');
  test('modules/ember-flexberry-gis/routes/new-platform-flexberry-g-i-s-layer-metadata-e.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/routes/new-platform-flexberry-g-i-s-layer-metadata-e.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/routes/new-platform-flexberry-g-i-s-layer-metadata-e.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/routes/new-platform-flexberry-g-i-s-layer-metadata-e.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/routes/new-platform-flexberry-g-i-s-layer-metadata-e.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/routes/new-platform-flexberry-g-i-s-layer-metadata-e/new.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/routes/new-platform-flexberry-g-i-s-layer-metadata-e');
  test('modules/ember-flexberry-gis/routes/new-platform-flexberry-g-i-s-layer-metadata-e/new.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/routes/new-platform-flexberry-g-i-s-layer-metadata-e/new.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/routes/new-platform-flexberry-g-i-s-layer-metadata-e/new.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/routes/new-platform-flexberry-g-i-s-layer-metadata-e/new.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/routes/new-platform-flexberry-g-i-s-layer-metadata-e/new.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/routes/new-platform-flexberry-g-i-s-layer-metadata-l.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/routes');
  test('modules/ember-flexberry-gis/routes/new-platform-flexberry-g-i-s-layer-metadata-l.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/routes/new-platform-flexberry-g-i-s-layer-metadata-l.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/routes/new-platform-flexberry-g-i-s-layer-metadata-l.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/routes/new-platform-flexberry-g-i-s-layer-metadata-l.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/routes/new-platform-flexberry-g-i-s-layer-metadata-l.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-layer-link-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/serializers');
  test('modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-layer-link-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-layer-link-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-layer-link-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-layer-link-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-layer-link-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-layer-link.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/serializers');
  test('modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-layer-link.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-layer-link.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-layer-link.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-layer-link.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-layer-link.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-layer-metadata-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/serializers');
  test('modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-layer-metadata-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-layer-metadata-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-layer-metadata-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-layer-metadata-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-layer-metadata-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-layer-metadata.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/serializers');
  test('modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-layer-metadata.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-layer-metadata.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-layer-metadata.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-layer-metadata.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-layer-metadata.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-link-metadata-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/serializers');
  test('modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-link-metadata-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-link-metadata-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-link-metadata-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-link-metadata-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-link-metadata-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-link-metadata.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/serializers');
  test('modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-link-metadata.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-link-metadata.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-link-metadata.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-link-metadata.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-link-metadata.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-link-parameter-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/serializers');
  test('modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-link-parameter-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-link-parameter-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-link-parameter-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-link-parameter-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-link-parameter-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-link-parameter.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/serializers');
  test('modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-link-parameter.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-link-parameter.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-link-parameter.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-link-parameter.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-link-parameter.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-map-layer-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/serializers');
  test('modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-map-layer-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-map-layer-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-map-layer-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-map-layer-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-map-layer-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-map-layer.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/serializers');
  test('modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-map-layer.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-map-layer.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-map-layer.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-map-layer.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-map-layer.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-map-object-setting-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/serializers');
  test('modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-map-object-setting-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-map-object-setting-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-map-object-setting-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-map-object-setting-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-map-object-setting-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-map-object-setting.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/serializers');
  test('modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-map-object-setting.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-map-object-setting.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-map-object-setting.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-map-object-setting.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-map-object-setting.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-map-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/serializers');
  test('modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-map-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-map-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-map-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-map-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-map-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-map.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/serializers');
  test('modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-map.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-map.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-map.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-map.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-map.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-parameter-metadata-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/serializers');
  test('modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-parameter-metadata-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-parameter-metadata-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-parameter-metadata-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-parameter-metadata-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-parameter-metadata-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-parameter-metadata.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/serializers');
  test('modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-parameter-metadata.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-parameter-metadata.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-parameter-metadata.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-parameter-metadata.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-parameter-metadata.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/services/charts-render.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/services');
  test('modules/ember-flexberry-gis/services/charts-render.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/services/charts-render.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/services/charts-render.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/services/charts-render.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/services/charts-render.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/services/compare.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/services');
  test('modules/ember-flexberry-gis/services/compare.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/services/compare.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/services/compare.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/services/compare.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/services/compare.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/services/layers-styles-renderer.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/services');
  test('modules/ember-flexberry-gis/services/layers-styles-renderer.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/services/layers-styles-renderer.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/services/layers-styles-renderer.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/services/layers-styles-renderer.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/services/layers-styles-renderer.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/services/local-storage.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/services');
  test('modules/ember-flexberry-gis/services/local-storage.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/services/local-storage.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/services/local-storage.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/services/local-storage.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/services/local-storage.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/services/map-api.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/services');
  test('modules/ember-flexberry-gis/services/map-api.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/services/map-api.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/services/map-api.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/services/map-api.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/services/map-api.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/services/map-store.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/services');
  test('modules/ember-flexberry-gis/services/map-store.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/services/map-store.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/services/map-store.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/services/map-store.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/services/map-store.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/services/markers-styles-renderer.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/services');
  test('modules/ember-flexberry-gis/services/markers-styles-renderer.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/services/markers-styles-renderer.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/services/markers-styles-renderer.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/services/markers-styles-renderer.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/services/markers-styles-renderer.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/services/param-gradient.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/services');
  test('modules/ember-flexberry-gis/services/param-gradient.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/services/param-gradient.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/services/param-gradient.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/services/param-gradient.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/services/param-gradient.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/transforms/json.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/transforms');
  test('modules/ember-flexberry-gis/transforms/json.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/transforms/json.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/transforms/json.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/transforms/json.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/transforms/json.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/utils/available-coordinate-reference-systems-for-dropdown.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/utils');
  test('modules/ember-flexberry-gis/utils/available-coordinate-reference-systems-for-dropdown.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/utils/available-coordinate-reference-systems-for-dropdown.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/utils/available-coordinate-reference-systems-for-dropdown.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/utils/available-coordinate-reference-systems-for-dropdown.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/utils/available-coordinate-reference-systems-for-dropdown.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/utils/change-index-on-map-layers.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/utils');
  test('modules/ember-flexberry-gis/utils/change-index-on-map-layers.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/utils/change-index-on-map-layers.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/utils/change-index-on-map-layers.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/utils/change-index-on-map-layers.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/utils/change-index-on-map-layers.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/utils/check-zoom.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/utils');
  test('modules/ember-flexberry-gis/utils/check-zoom.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/utils/check-zoom.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/utils/check-zoom.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/utils/check-zoom.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/utils/check-zoom.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/utils/color-convertor.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/utils');
  test('modules/ember-flexberry-gis/utils/color-convertor.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/utils/color-convertor.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/utils/color-convertor.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/utils/color-convertor.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/utils/color-convertor.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/utils/color-interpolation.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/utils');
  test('modules/ember-flexberry-gis/utils/color-interpolation.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/utils/color-interpolation.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/utils/color-interpolation.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/utils/color-interpolation.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/utils/color-interpolation.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/utils/coordinates-to.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/utils');
  test('modules/ember-flexberry-gis/utils/coordinates-to.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/utils/coordinates-to.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/utils/coordinates-to.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/utils/coordinates-to.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/utils/coordinates-to.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/utils/copy-layer.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/utils');
  test('modules/ember-flexberry-gis/utils/copy-layer.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/utils/copy-layer.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/utils/copy-layer.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/utils/copy-layer.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/utils/copy-layer.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/utils/create-layer-from-metadata.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/utils');
  test('modules/ember-flexberry-gis/utils/create-layer-from-metadata.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/utils/create-layer-from-metadata.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/utils/create-layer-from-metadata.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/utils/create-layer-from-metadata.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/utils/create-layer-from-metadata.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/utils/download-file.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/utils');
  test('modules/ember-flexberry-gis/utils/download-file.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/utils/download-file.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/utils/download-file.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/utils/download-file.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/utils/download-file.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/utils/extended-get.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/utils');
  test('modules/ember-flexberry-gis/utils/extended-get.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/utils/extended-get.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/utils/extended-get.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/utils/extended-get.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/utils/extended-get.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/utils/extended-set.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/utils');
  test('modules/ember-flexberry-gis/utils/extended-set.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/utils/extended-set.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/utils/extended-set.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/utils/extended-set.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/utils/extended-set.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/utils/feature-with-area-intersect.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/utils');
  test('modules/ember-flexberry-gis/utils/feature-with-area-intersect.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/utils/feature-with-area-intersect.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/utils/feature-with-area-intersect.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/utils/feature-with-area-intersect.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/utils/feature-with-area-intersect.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/utils/get-boolean-from-string.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/utils');
  test('modules/ember-flexberry-gis/utils/get-boolean-from-string.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/utils/get-boolean-from-string.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/utils/get-boolean-from-string.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/utils/get-boolean-from-string.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/utils/get-boolean-from-string.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/utils/get-bounds-from-polygon.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/utils');
  test('modules/ember-flexberry-gis/utils/get-bounds-from-polygon.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/utils/get-bounds-from-polygon.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/utils/get-bounds-from-polygon.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/utils/get-bounds-from-polygon.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/utils/get-bounds-from-polygon.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/utils/get-crs-by-name.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/utils');
  test('modules/ember-flexberry-gis/utils/get-crs-by-name.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/utils/get-crs-by-name.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/utils/get-crs-by-name.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/utils/get-crs-by-name.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/utils/get-crs-by-name.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/utils/get-date-from-string.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/utils');
  test('modules/ember-flexberry-gis/utils/get-date-from-string.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/utils/get-date-from-string.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/utils/get-date-from-string.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/utils/get-date-from-string.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/utils/get-date-from-string.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/utils/html2canvas-clone.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/utils');
  test('modules/ember-flexberry-gis/utils/html2canvas-clone.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/utils/html2canvas-clone.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/utils/html2canvas-clone.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/utils/html2canvas-clone.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/utils/html2canvas-clone.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/utils/lat-lng-to-coord.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/utils');
  test('modules/ember-flexberry-gis/utils/lat-lng-to-coord.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/utils/lat-lng-to-coord.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/utils/lat-lng-to-coord.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/utils/lat-lng-to-coord.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/utils/lat-lng-to-coord.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/utils/layer-to-ewkt.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/utils');
  test('modules/ember-flexberry-gis/utils/layer-to-ewkt.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/utils/layer-to-ewkt.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/utils/layer-to-ewkt.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/utils/layer-to-ewkt.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/utils/layer-to-ewkt.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/utils/layer-to-jsts.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/utils');
  test('modules/ember-flexberry-gis/utils/layer-to-jsts.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/utils/layer-to-jsts.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/utils/layer-to-jsts.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/utils/layer-to-jsts.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/utils/layer-to-jsts.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/utils/leaflet-crs.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/utils');
  test('modules/ember-flexberry-gis/utils/leaflet-crs.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/utils/leaflet-crs.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/utils/leaflet-crs.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/utils/leaflet-crs.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/utils/leaflet-crs.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/utils/leaflet-opacity.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/utils');
  test('modules/ember-flexberry-gis/utils/leaflet-opacity.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/utils/leaflet-opacity.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/utils/leaflet-opacity.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/utils/leaflet-opacity.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/utils/leaflet-opacity.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/utils/open-close-sub-menu.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/utils');
  test('modules/ember-flexberry-gis/utils/open-close-sub-menu.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/utils/open-close-sub-menu.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/utils/open-close-sub-menu.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/utils/open-close-sub-menu.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/utils/open-close-sub-menu.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/utils/polygon-intersect-check.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/utils');
  test('modules/ember-flexberry-gis/utils/polygon-intersect-check.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/utils/polygon-intersect-check.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/utils/polygon-intersect-check.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/utils/polygon-intersect-check.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/utils/polygon-intersect-check.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/utils/rhumb-operations.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/utils');
  test('modules/ember-flexberry-gis/utils/rhumb-operations.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/utils/rhumb-operations.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/utils/rhumb-operations.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/utils/rhumb-operations.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/utils/rhumb-operations.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/utils/state.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/utils');
  test('modules/ember-flexberry-gis/utils/state.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/utils/state.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/utils/state.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/utils/state.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/utils/state.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/utils/zoom-to-bounds.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/utils');
  test('modules/ember-flexberry-gis/utils/zoom-to-bounds.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/utils/zoom-to-bounds.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/utils/zoom-to-bounds.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/utils/zoom-to-bounds.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/utils/zoom-to-bounds.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/views/gis-search-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-gis/views');
  test('modules/ember-flexberry-gis/views/gis-search-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-gis/views/gis-search-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-gis/tests/modules/ember-flexberry-gis/views/gis-search-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-gis/views/gis-search-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-gis/views/gis-search-form.js should pass jshint.');
  });
});
define('dummy/enums/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-t-execution-variant', ['exports', 'ember-flexberry-data/enums/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-t-execution-variant'], function (exports, _emberFlexberryDataEnumsICSSoftSTORMNETBusinessAuditObjectsTExecutionVariant) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataEnumsICSSoftSTORMNETBusinessAuditObjectsTExecutionVariant['default'];
    }
  });
});
define('dummy/enums/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-t-type-of-audit-operation', ['exports', 'ember-flexberry-data/enums/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-t-type-of-audit-operation'], function (exports, _emberFlexberryDataEnumsICSSoftSTORMNETBusinessAuditObjectsTTypeOfAuditOperation) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataEnumsICSSoftSTORMNETBusinessAuditObjectsTTypeOfAuditOperation['default'];
    }
  });
});
define('dummy/geo-providers/base', ['exports', 'ember-flexberry-gis/geo-providers/base'], function (exports, _emberFlexberryGisGeoProvidersBase) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisGeoProvidersBase['default'];
    }
  });
});
define('dummy/geo-providers/yandex-maps-geocoder', ['exports', 'ember-flexberry-gis/geo-providers/yandex-maps-geocoder'], function (exports, _emberFlexberryGisGeoProvidersYandexMapsGeocoder) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisGeoProvidersYandexMapsGeocoder['default'];
    }
  });
});
define('dummy/gis-browserify', ['exports', 'npm:@turf/buffer', 'npm:@turf/helpers', 'npm:@turf/difference', 'npm:@turf/boolean-equal', 'npm:@turf/line-split', 'npm:@turf/polygon-to-line', 'npm:@turf/line-to-polygon', 'npm:@turf/boolean-within', 'npm:@turf/kinks', 'npm:@turf/line-intersect', 'npm:@turf/intersect', 'npm:@turf/line-slice', 'npm:@turf/invariant', 'npm:@turf/distance', 'npm:@turf/midpoint', 'npm:@turf/union', 'npm:@turf/combine', 'npm:@turf/area', 'npm:@turf/boolean-point-in-polygon', 'npm:@turf/boolean-contains', 'npm:@turf/projection', 'npm:leaflet-side-by-side', 'npm:jsts', 'npm:clipper-lib'], function (exports, _npmTurfBuffer, _npmTurfHelpers, _npmTurfDifference, _npmTurfBooleanEqual, _npmTurfLineSplit, _npmTurfPolygonToLine, _npmTurfLineToPolygon, _npmTurfBooleanWithin, _npmTurfKinks, _npmTurfLineIntersect, _npmTurfIntersect, _npmTurfLineSlice, _npmTurfInvariant, _npmTurfDistance, _npmTurfMidpoint, _npmTurfUnion, _npmTurfCombine, _npmTurfArea, _npmTurfBooleanPointInPolygon, _npmTurfBooleanContains, _npmTurfProjection, _npmLeafletSideBySide, _npmJsts, _npmClipperLib) {});
// Requirement of ember-browserify.
// In order to use NPM pacakges inside the addon, we have to import
// them from somewhere in /app directory.
// See: https://github.com/ef4/ember-browserify#using-ember-browserify-in-addons
define('dummy/helpers/and', ['exports', 'ember', 'ember-truth-helpers/helpers/and'], function (exports, _ember, _emberTruthHelpersHelpersAnd) {

  var forExport = null;

  if (_ember['default'].Helper) {
    forExport = _ember['default'].Helper.helper(_emberTruthHelpersHelpersAnd.andHelper);
  } else if (_ember['default'].HTMLBars.makeBoundHelper) {
    forExport = _ember['default'].HTMLBars.makeBoundHelper(_emberTruthHelpersHelpersAnd.andHelper);
  }

  exports['default'] = forExport;
});
define('dummy/helpers/array-contains', ['exports', 'ember-flexberry/helpers/array-contains'], function (exports, _emberFlexberryHelpersArrayContains) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryHelpersArrayContains['default'];
    }
  });
  Object.defineProperty(exports, 'arrayContains', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryHelpersArrayContains.arrayContains;
    }
  });
});
define('dummy/helpers/array', ['exports', 'ember-flexberry/helpers/array'], function (exports, _emberFlexberryHelpersArray) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryHelpersArray['default'];
    }
  });
});
define('dummy/helpers/await', ['exports', 'ember-promise-helpers/helpers/await'], function (exports, _emberPromiseHelpersHelpersAwait) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberPromiseHelpersHelpersAwait['default'];
    }
  });
  Object.defineProperty(exports, 'await', {
    enumerable: true,
    get: function get() {
      return _emberPromiseHelpersHelpersAwait.await;
    }
  });
});
define('dummy/helpers/block-params', ['exports', 'ember-block-slots/helpers/block-params'], function (exports, _emberBlockSlotsHelpersBlockParams) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberBlockSlotsHelpersBlockParams['default'];
    }
  });
  Object.defineProperty(exports, 'blockParams', {
    enumerable: true,
    get: function get() {
      return _emberBlockSlotsHelpersBlockParams.blockParams;
    }
  });
});
define('dummy/helpers/ember-guid', ['exports', 'ember-flexberry-gis/helpers/ember-guid'], function (exports, _emberFlexberryGisHelpersEmberGuid) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisHelpersEmberGuid['default'];
    }
  });
});
define('dummy/helpers/eq', ['exports', 'ember', 'ember-truth-helpers/helpers/equal'], function (exports, _ember, _emberTruthHelpersHelpersEqual) {

  var forExport = null;

  if (_ember['default'].Helper) {
    forExport = _ember['default'].Helper.helper(_emberTruthHelpersHelpersEqual.equalHelper);
  } else if (_ember['default'].HTMLBars.makeBoundHelper) {
    forExport = _ember['default'].HTMLBars.makeBoundHelper(_emberTruthHelpersHelpersEqual.equalHelper);
  }

  exports['default'] = forExport;
});
define('dummy/helpers/flexberry-enum', ['exports', 'ember-flexberry/helpers/flexberry-enum'], function (exports, _emberFlexberryHelpersFlexberryEnum) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryHelpersFlexberryEnum['default'];
    }
  });
});
define('dummy/helpers/flexberry-search-properties-osm-ru', ['exports', 'ember-flexberry-gis/helpers/flexberry-search-properties-osm-ru'], function (exports, _emberFlexberryGisHelpersFlexberrySearchPropertiesOsmRu) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisHelpersFlexberrySearchPropertiesOsmRu['default'];
    }
  });
  Object.defineProperty(exports, 'flexberrySearchPropertiesOsmRu', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisHelpersFlexberrySearchPropertiesOsmRu.flexberrySearchPropertiesOsmRu;
    }
  });
});
define('dummy/helpers/get-formatted', ['exports', 'ember-flexberry/helpers/get-formatted'], function (exports, _emberFlexberryHelpersGetFormatted) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryHelpersGetFormatted['default'];
    }
  });
});
define('dummy/helpers/get-with-dynamic-actions', ['exports', 'ember-flexberry/helpers/get-with-dynamic-actions'], function (exports, _emberFlexberryHelpersGetWithDynamicActions) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryHelpersGetWithDynamicActions['default'];
    }
  });
});
define('dummy/helpers/gt', ['exports', 'ember', 'ember-truth-helpers/helpers/gt'], function (exports, _ember, _emberTruthHelpersHelpersGt) {

  var forExport = null;

  if (_ember['default'].Helper) {
    forExport = _ember['default'].Helper.helper(_emberTruthHelpersHelpersGt.gtHelper);
  } else if (_ember['default'].HTMLBars.makeBoundHelper) {
    forExport = _ember['default'].HTMLBars.makeBoundHelper(_emberTruthHelpersHelpersGt.gtHelper);
  }

  exports['default'] = forExport;
});
define('dummy/helpers/gte', ['exports', 'ember', 'ember-truth-helpers/helpers/gte'], function (exports, _ember, _emberTruthHelpersHelpersGte) {

  var forExport = null;

  if (_ember['default'].Helper) {
    forExport = _ember['default'].Helper.helper(_emberTruthHelpersHelpersGte.gteHelper);
  } else if (_ember['default'].HTMLBars.makeBoundHelper) {
    forExport = _ember['default'].HTMLBars.makeBoundHelper(_emberTruthHelpersHelpersGte.gteHelper);
  }

  exports['default'] = forExport;
});
define('dummy/helpers/header-from-projection', ['exports', 'ember-flexberry-gis/helpers/header-from-projection'], function (exports, _emberFlexberryGisHelpersHeaderFromProjection) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisHelpersHeaderFromProjection['default'];
    }
  });
});
define('dummy/helpers/instance-of', ['exports', 'ember-flexberry-gis/helpers/instance-of'], function (exports, _emberFlexberryGisHelpersInstanceOf) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisHelpersInstanceOf['default'];
    }
  });
  Object.defineProperty(exports, 'instanceOf', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisHelpersInstanceOf.instanceOf;
    }
  });
});
define('dummy/helpers/is-array', ['exports', 'ember', 'ember-truth-helpers/helpers/is-array'], function (exports, _ember, _emberTruthHelpersHelpersIsArray) {

  var forExport = null;

  if (_ember['default'].Helper) {
    forExport = _ember['default'].Helper.helper(_emberTruthHelpersHelpersIsArray.isArrayHelper);
  } else if (_ember['default'].HTMLBars.makeBoundHelper) {
    forExport = _ember['default'].HTMLBars.makeBoundHelper(_emberTruthHelpersHelpersIsArray.isArrayHelper);
  }

  exports['default'] = forExport;
});
define('dummy/helpers/is-blank', ['exports', 'ember-flexberry/helpers/is-blank'], function (exports, _emberFlexberryHelpersIsBlank) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryHelpersIsBlank['default'];
    }
  });
});
define('dummy/helpers/is-fulfilled', ['exports', 'ember-promise-helpers/helpers/is-fulfilled'], function (exports, _emberPromiseHelpersHelpersIsFulfilled) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberPromiseHelpersHelpersIsFulfilled['default'];
    }
  });
  Object.defineProperty(exports, 'isFulfilled', {
    enumerable: true,
    get: function get() {
      return _emberPromiseHelpersHelpersIsFulfilled.isFulfilled;
    }
  });
});
define('dummy/helpers/is-none', ['exports', 'ember-flexberry-gis/helpers/is-none'], function (exports, _emberFlexberryGisHelpersIsNone) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisHelpersIsNone['default'];
    }
  });
  Object.defineProperty(exports, 'isNone', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisHelpersIsNone.isNone;
    }
  });
});
define('dummy/helpers/is-pending', ['exports', 'ember-promise-helpers/helpers/is-pending'], function (exports, _emberPromiseHelpersHelpersIsPending) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberPromiseHelpersHelpersIsPending['default'];
    }
  });
  Object.defineProperty(exports, 'isPending', {
    enumerable: true,
    get: function get() {
      return _emberPromiseHelpersHelpersIsPending.isPending;
    }
  });
});
define('dummy/helpers/is-rejected', ['exports', 'ember-promise-helpers/helpers/is-rejected'], function (exports, _emberPromiseHelpersHelpersIsRejected) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberPromiseHelpersHelpersIsRejected['default'];
    }
  });
  Object.defineProperty(exports, 'isRejected', {
    enumerable: true,
    get: function get() {
      return _emberPromiseHelpersHelpersIsRejected.isRejected;
    }
  });
});
define('dummy/helpers/known-for-type', ['exports', 'ember-flexberry-gis/helpers/known-for-type'], function (exports, _emberFlexberryGisHelpersKnownForType) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisHelpersKnownForType['default'];
    }
  });
  Object.defineProperty(exports, 'knownForType', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisHelpersKnownForType.knownForType;
    }
  });
});
define('dummy/helpers/lt', ['exports', 'ember', 'ember-truth-helpers/helpers/lt'], function (exports, _ember, _emberTruthHelpersHelpersLt) {

  var forExport = null;

  if (_ember['default'].Helper) {
    forExport = _ember['default'].Helper.helper(_emberTruthHelpersHelpersLt.ltHelper);
  } else if (_ember['default'].HTMLBars.makeBoundHelper) {
    forExport = _ember['default'].HTMLBars.makeBoundHelper(_emberTruthHelpersHelpersLt.ltHelper);
  }

  exports['default'] = forExport;
});
define('dummy/helpers/lte', ['exports', 'ember', 'ember-truth-helpers/helpers/lte'], function (exports, _ember, _emberTruthHelpersHelpersLte) {

  var forExport = null;

  if (_ember['default'].Helper) {
    forExport = _ember['default'].Helper.helper(_emberTruthHelpersHelpersLte.lteHelper);
  } else if (_ember['default'].HTMLBars.makeBoundHelper) {
    forExport = _ember['default'].HTMLBars.makeBoundHelper(_emberTruthHelpersHelpersLte.lteHelper);
  }

  exports['default'] = forExport;
});
define('dummy/helpers/moment-calendar', ['exports', 'ember-moment/helpers/moment-calendar'], function (exports, _emberMomentHelpersMomentCalendar) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberMomentHelpersMomentCalendar['default'];
    }
  });
  Object.defineProperty(exports, 'momentCalendar', {
    enumerable: true,
    get: function get() {
      return _emberMomentHelpersMomentCalendar.momentCalendar;
    }
  });
});
define('dummy/helpers/moment-duration', ['exports', 'ember-moment/helpers/moment-duration'], function (exports, _emberMomentHelpersMomentDuration) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberMomentHelpersMomentDuration['default'];
    }
  });
});
define('dummy/helpers/moment-format', ['exports', 'ember', 'dummy/config/environment', 'ember-moment/helpers/moment-format'], function (exports, _ember, _dummyConfigEnvironment, _emberMomentHelpersMomentFormat) {
  exports['default'] = _emberMomentHelpersMomentFormat['default'].extend({
    globalAllowEmpty: !!_ember['default'].get(_dummyConfigEnvironment['default'], 'moment.allowEmpty')
  });
});
define('dummy/helpers/moment-from-now', ['exports', 'ember', 'dummy/config/environment', 'ember-moment/helpers/moment-from-now'], function (exports, _ember, _dummyConfigEnvironment, _emberMomentHelpersMomentFromNow) {
  exports['default'] = _emberMomentHelpersMomentFromNow['default'].extend({
    globalAllowEmpty: !!_ember['default'].get(_dummyConfigEnvironment['default'], 'moment.allowEmpty')
  });
});
define('dummy/helpers/moment-to-now', ['exports', 'ember', 'dummy/config/environment', 'ember-moment/helpers/moment-to-now'], function (exports, _ember, _dummyConfigEnvironment, _emberMomentHelpersMomentToNow) {
  exports['default'] = _emberMomentHelpersMomentToNow['default'].extend({
    globalAllowEmpty: !!_ember['default'].get(_dummyConfigEnvironment['default'], 'moment.allowEmpty')
  });
});
define('dummy/helpers/not-eq', ['exports', 'ember', 'ember-truth-helpers/helpers/not-equal'], function (exports, _ember, _emberTruthHelpersHelpersNotEqual) {

  var forExport = null;

  if (_ember['default'].Helper) {
    forExport = _ember['default'].Helper.helper(_emberTruthHelpersHelpersNotEqual.notEqualHelper);
  } else if (_ember['default'].HTMLBars.makeBoundHelper) {
    forExport = _ember['default'].HTMLBars.makeBoundHelper(_emberTruthHelpersHelpersNotEqual.notEqualHelper);
  }

  exports['default'] = forExport;
});
define('dummy/helpers/not', ['exports', 'ember', 'ember-truth-helpers/helpers/not'], function (exports, _ember, _emberTruthHelpersHelpersNot) {

  var forExport = null;

  if (_ember['default'].Helper) {
    forExport = _ember['default'].Helper.helper(_emberTruthHelpersHelpersNot.notHelper);
  } else if (_ember['default'].HTMLBars.makeBoundHelper) {
    forExport = _ember['default'].HTMLBars.makeBoundHelper(_emberTruthHelpersHelpersNot.notHelper);
  }

  exports['default'] = forExport;
});
define('dummy/helpers/object-contains', ['exports', 'ember-flexberry-gis/helpers/object-contains'], function (exports, _emberFlexberryGisHelpersObjectContains) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisHelpersObjectContains['default'];
    }
  });
});
define('dummy/helpers/or', ['exports', 'ember', 'ember-truth-helpers/helpers/or'], function (exports, _ember, _emberTruthHelpersHelpersOr) {

  var forExport = null;

  if (_ember['default'].Helper) {
    forExport = _ember['default'].Helper.helper(_emberTruthHelpersHelpersOr.orHelper);
  } else if (_ember['default'].HTMLBars.makeBoundHelper) {
    forExport = _ember['default'].HTMLBars.makeBoundHelper(_emberTruthHelpersHelpersOr.orHelper);
  }

  exports['default'] = forExport;
});
define('dummy/helpers/pluralize', ['exports', 'ember-inflector/lib/helpers/pluralize'], function (exports, _emberInflectorLibHelpersPluralize) {
  exports['default'] = _emberInflectorLibHelpersPluralize['default'];
});
define('dummy/helpers/promise-rejected-reason', ['exports', 'ember-promise-helpers/helpers/promise-rejected-reason'], function (exports, _emberPromiseHelpersHelpersPromiseRejectedReason) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberPromiseHelpersHelpersPromiseRejectedReason['default'];
    }
  });
});
define('dummy/helpers/readonly-cell', ['exports', 'ember-flexberry/helpers/readonly-cell'], function (exports, _emberFlexberryHelpersReadonlyCell) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryHelpersReadonlyCell['default'];
    }
  });
  Object.defineProperty(exports, 'readonlyCell', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryHelpersReadonlyCell.readonlyCell;
    }
  });
});
define('dummy/helpers/regex-test', ['exports', 'ember-flexberry-gis/helpers/regex-test'], function (exports, _emberFlexberryGisHelpersRegexTest) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisHelpersRegexTest['default'];
    }
  });
});
define('dummy/helpers/singularize', ['exports', 'ember-inflector/lib/helpers/singularize'], function (exports, _emberInflectorLibHelpersSingularize) {
  exports['default'] = _emberInflectorLibHelpersSingularize['default'];
});
define('dummy/helpers/t', ['exports', 'ember-i18n/helper'], function (exports, _emberI18nHelper) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberI18nHelper['default'];
    }
  });
});
define('dummy/helpers/to-safe-string', ['exports', 'ember'], function (exports, _ember) {
  var _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();

  /**
    Calls [Ember.Handlebars.SafeString] with the provided string.
    This is a convenient way to render JS variables values and HTML-tags.
  
    @method toSafeString
    @for Ember.Templates.helpers
    @param {*} value Value to be formatted as safe string.
    @see {Ember.Handlebars.SafeString}
    @public
  */
  exports['default'] = _ember['default'].Helper.extend({
    compute: function compute(_ref) {
      var _ref2 = _slicedToArray(_ref, 1);

      var value = _ref2[0];

      return new _ember['default'].Handlebars.SafeString(value);
    }
  });
});
define('dummy/helpers/to-string', ['exports', 'ember'], function (exports, _ember) {
  var _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();

  /**
    Casts given value into string.
    This is a convenient way to render JS variables values as their string representations.
  
    @method toString
    @for Ember.Templates.helpers
    @param {*} value Value to be casted into string.
    @public
  */
  exports['default'] = _ember['default'].Helper.extend({
    compute: function compute(_ref) {
      var _ref2 = _slicedToArray(_ref, 1);

      var value = _ref2[0];

      return '' + value;
    }
  });
});
define('dummy/helpers/xor', ['exports', 'ember', 'ember-truth-helpers/helpers/xor'], function (exports, _ember, _emberTruthHelpersHelpersXor) {

  var forExport = null;

  if (_ember['default'].Helper) {
    forExport = _ember['default'].Helper.helper(_emberTruthHelpersHelpersXor.xorHelper);
  } else if (_ember['default'].HTMLBars.makeBoundHelper) {
    forExport = _ember['default'].HTMLBars.makeBoundHelper(_emberTruthHelpersHelpersXor.xorHelper);
  }

  exports['default'] = forExport;
});
define('dummy/initializers/allow-link-action', ['exports', 'ember-link-action/initializers/allow-link-action'], function (exports, _emberLinkActionInitializersAllowLinkAction) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberLinkActionInitializersAllowLinkAction['default'];
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function get() {
      return _emberLinkActionInitializersAllowLinkAction.initialize;
    }
  });
});
define('dummy/initializers/app-version', ['exports', 'ember-cli-app-version/initializer-factory', 'dummy/config/environment'], function (exports, _emberCliAppVersionInitializerFactory, _dummyConfigEnvironment) {
  exports['default'] = {
    name: 'App Version',
    initialize: (0, _emberCliAppVersionInitializerFactory['default'])(_dummyConfigEnvironment['default'].APP.name, _dummyConfigEnvironment['default'].APP.version)
  };
});
define('dummy/initializers/component-prop-types', ['exports', 'ember-prop-types/initializers/component-prop-types'], function (exports, _emberPropTypesInitializersComponentPropTypes) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberPropTypesInitializersComponentPropTypes['default'];
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function get() {
      return _emberPropTypesInitializersComponentPropTypes.initialize;
    }
  });
});
define('dummy/initializers/container-debug-adapter', ['exports', 'ember-resolver/container-debug-adapter'], function (exports, _emberResolverContainerDebugAdapter) {
  exports['default'] = {
    name: 'container-debug-adapter',

    initialize: function initialize() {
      var app = arguments[1] || arguments[0];

      app.register('container-debug-adapter:main', _emberResolverContainerDebugAdapter['default']);
      app.inject('container-debug-adapter:main', 'namespace', 'application:main');
    }
  };
});
define('dummy/initializers/coordinate-reference-systems', ['exports', 'ember-flexberry-gis/initializers/coordinate-reference-systems'], function (exports, _emberFlexberryGisInitializersCoordinateReferenceSystems) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisInitializersCoordinateReferenceSystems['default'];
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisInitializersCoordinateReferenceSystems.initialize;
    }
  });
});
define('dummy/initializers/data-adapter', ['exports', 'ember'], function (exports, _ember) {

  /*
    This initializer is here to keep backwards compatibility with code depending
    on the `data-adapter` initializer (before Ember Data was an addon).
  
    Should be removed for Ember Data 3.x
  */

  exports['default'] = {
    name: 'data-adapter',
    before: 'store',
    initialize: _ember['default'].K
  };
});
define('dummy/initializers/ember-data', ['exports', 'ember-data/setup-container', 'ember-data/-private/core'], function (exports, _emberDataSetupContainer, _emberDataPrivateCore) {

  /*
  
    This code initializes Ember-Data onto an Ember application.
  
    If an Ember.js developer defines a subclass of DS.Store on their application,
    as `App.StoreService` (or via a module system that resolves to `service:store`)
    this code will automatically instantiate it and make it available on the
    router.
  
    Additionally, after an application's controllers have been injected, they will
    each have the store made available to them.
  
    For example, imagine an Ember.js application with the following classes:
  
    App.StoreService = DS.Store.extend({
      adapter: 'custom'
    });
  
    App.PostsController = Ember.ArrayController.extend({
      // ...
    });
  
    When the application is initialized, `App.ApplicationStore` will automatically be
    instantiated, and the instance of `App.PostsController` will have its `store`
    property set to that instance.
  
    Note that this code will only be run if the `ember-application` package is
    loaded. If Ember Data is being used in an environment other than a
    typical application (e.g., node.js where only `ember-runtime` is available),
    this code will be ignored.
  */

  exports['default'] = {
    name: 'ember-data',
    initialize: _emberDataSetupContainer['default']
  };
});
define("dummy/initializers/ember-i18n", ["exports", "dummy/instance-initializers/ember-i18n"], function (exports, _dummyInstanceInitializersEmberI18n) {
  exports["default"] = {
    name: _dummyInstanceInitializersEmberI18n["default"].name,

    initialize: function initialize() {
      var application = arguments[1] || arguments[0]; // depending on Ember version
      if (application.instanceInitializer) {
        return;
      }

      _dummyInstanceInitializersEmberI18n["default"].initialize(application);
    }
  };
});
define('dummy/initializers/ember-run-after', ['exports', 'ember-flexberry/initializers/ember-run-after'], function (exports, _emberFlexberryInitializersEmberRunAfter) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryInitializersEmberRunAfter['default'];
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryInitializersEmberRunAfter.initialize;
    }
  });
});
define('dummy/initializers/ember-validations', ['exports', 'ember-flexberry/initializers/ember-validations'], function (exports, _emberFlexberryInitializersEmberValidations) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryInitializersEmberValidations['default'];
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryInitializersEmberValidations.initialize;
    }
  });
});
define('dummy/initializers/export-application-global', ['exports', 'ember', 'dummy/config/environment'], function (exports, _ember, _dummyConfigEnvironment) {
  exports.initialize = initialize;

  function initialize() {
    var application = arguments[1] || arguments[0];
    if (_dummyConfigEnvironment['default'].exportApplicationGlobal !== false) {
      var theGlobal;
      if (typeof window !== 'undefined') {
        theGlobal = window;
      } else if (typeof global !== 'undefined') {
        theGlobal = global;
      } else if (typeof self !== 'undefined') {
        theGlobal = self;
      } else {
        // no reasonable global, just bail
        return;
      }

      var value = _dummyConfigEnvironment['default'].exportApplicationGlobal;
      var globalName;

      if (typeof value === 'string') {
        globalName = value;
      } else {
        globalName = _ember['default'].String.classify(_dummyConfigEnvironment['default'].modulePrefix);
      }

      if (!theGlobal[globalName]) {
        theGlobal[globalName] = application;

        application.reopen({
          willDestroy: function willDestroy() {
            this._super.apply(this, arguments);
            delete theGlobal[globalName];
          }
        });
      }
    }
  }

  exports['default'] = {
    name: 'export-application-global',

    initialize: initialize
  };
});
define('dummy/initializers/flexberry-enum', ['exports', 'ember-flexberry-data/initializers/flexberry-enum'], function (exports, _emberFlexberryDataInitializersFlexberryEnum) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataInitializersFlexberryEnum['default'];
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataInitializersFlexberryEnum.initialize;
    }
  });
});
define('dummy/initializers/i18n', ['exports', 'ember-flexberry/initializers/i18n'], function (exports, _emberFlexberryInitializersI18n) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryInitializersI18n['default'];
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryInitializersI18n.initialize;
    }
  });
});
define('dummy/initializers/injectStore', ['exports', 'ember'], function (exports, _ember) {

  /*
    This initializer is here to keep backwards compatibility with code depending
    on the `injectStore` initializer (before Ember Data was an addon).
  
    Should be removed for Ember Data 3.x
  */

  exports['default'] = {
    name: 'injectStore',
    before: 'store',
    initialize: _ember['default'].K
  };
});
define('dummy/initializers/leaflet-editable-measures', ['exports', 'dummy/config/environment', 'ember-flexberry-gis/initializers/leaflet-editable-measures'], function (exports, _dummyConfigEnvironment, _emberFlexberryGisInitializersLeafletEditableMeasures) {

  // Override initializer to pass into it baseUrl from config/environment.js.
  var originalInitialize = _emberFlexberryGisInitializersLeafletEditableMeasures['default'].initialize;
  _emberFlexberryGisInitializersLeafletEditableMeasures['default'].initialize = function (application) {
    originalInitialize.call(this, application, Ember.get(_dummyConfigEnvironment['default'], 'baseURL'));
  };

  exports['default'] = _emberFlexberryGisInitializersLeafletEditableMeasures['default'];
});
define('dummy/initializers/leaflet-ewkt', ['exports', 'ember-flexberry-gis/initializers/leaflet-ewkt'], function (exports, _emberFlexberryGisInitializersLeafletEwkt) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisInitializersLeafletEwkt['default'];
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisInitializersLeafletEwkt.initialize;
    }
  });
});
define('dummy/initializers/leaflet-grid-layer', ['exports', 'ember-flexberry-gis/initializers/leaflet-grid-layer'], function (exports, _emberFlexberryGisInitializersLeafletGridLayer) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisInitializersLeafletGridLayer['default'];
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisInitializersLeafletGridLayer.initialize;
    }
  });
});
define('dummy/initializers/leaflet-jsts', ['exports', 'ember-flexberry-gis/initializers/leaflet-jsts'], function (exports, _emberFlexberryGisInitializersLeafletJsts) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisInitializersLeafletJsts['default'];
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisInitializersLeafletJsts.initialize;
    }
  });
});
define('dummy/initializers/leaflet-marker', ['exports', 'ember-flexberry-gis/initializers/leaflet-marker'], function (exports, _emberFlexberryGisInitializersLeafletMarker) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisInitializersLeafletMarker['default'];
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisInitializersLeafletMarker.initialize;
    }
  });
});
define('dummy/initializers/leaflet-path', ['exports', 'ember-flexberry-gis/initializers/leaflet-path'], function (exports, _emberFlexberryGisInitializersLeafletPath) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisInitializersLeafletPath['default'];
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisInitializersLeafletPath.initialize;
    }
  });
});
define('dummy/initializers/leaflet', ['exports', 'dummy/config/environment', 'ember-flexberry-gis/initializers/leaflet'], function (exports, _dummyConfigEnvironment, _emberFlexberryGisInitializersLeaflet) {

  // Override initializer to pass into it baseUrl from config/environment.js.
  var originalInitialize = _emberFlexberryGisInitializersLeaflet['default'].initialize;
  _emberFlexberryGisInitializersLeaflet['default'].initialize = function (application) {
    originalInitialize.call(this, application, Ember.get(_dummyConfigEnvironment['default'], 'baseURL'));
  };

  exports['default'] = _emberFlexberryGisInitializersLeaflet['default'];
});
define('dummy/initializers/local-storage', ['exports', 'ember-flexberry-gis/initializers/local-storage'], function (exports, _emberFlexberryGisInitializersLocalStorage) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisInitializersLocalStorage['default'];
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisInitializersLocalStorage.initialize;
    }
  });
});
define('dummy/initializers/local-store', ['exports', 'ember-flexberry-data/initializers/local-store'], function (exports, _emberFlexberryDataInitializersLocalStore) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataInitializersLocalStore['default'];
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataInitializersLocalStore.initialize;
    }
  });
});
define('dummy/initializers/log', ['exports', 'ember-flexberry/initializers/log'], function (exports, _emberFlexberryInitializersLog) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryInitializersLog['default'];
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryInitializersLog.initialize;
    }
  });
});
define('dummy/initializers/map-commands', ['exports', 'ember-flexberry-gis/initializers/map-commands'], function (exports, _emberFlexberryGisInitializersMapCommands) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisInitializersMapCommands['default'];
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisInitializersMapCommands.initialize;
    }
  });
});
define('dummy/initializers/map-tools', ['exports', 'ember-flexberry-gis/initializers/map-tools'], function (exports, _emberFlexberryGisInitializersMapTools) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisInitializersMapTools['default'];
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisInitializersMapTools.initialize;
    }
  });
});
define('dummy/initializers/moment', ['exports', 'ember-flexberry/initializers/moment'], function (exports, _emberFlexberryInitializersMoment) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryInitializersMoment['default'];
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryInitializersMoment.initialize;
    }
  });
});
define('dummy/initializers/offline-globals', ['exports', 'ember-flexberry-data/initializers/offline-globals'], function (exports, _emberFlexberryDataInitializersOfflineGlobals) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataInitializersOfflineGlobals['default'];
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataInitializersOfflineGlobals.initialize;
    }
  });
});
define('dummy/initializers/perf', ['exports', 'ember-flexberry/initializers/perf'], function (exports, _emberFlexberryInitializersPerf) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryInitializersPerf['default'];
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryInitializersPerf.initialize;
    }
  });
});
define('dummy/initializers/render-perf-logger', ['exports', 'ember-flexberry/initializers/render-perf-logger'], function (exports, _emberFlexberryInitializersRenderPerfLogger) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryInitializersRenderPerfLogger['default'];
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryInitializersRenderPerfLogger.initialize;
    }
  });
});
define('dummy/initializers/store', ['exports', 'ember'], function (exports, _ember) {

  /*
    This initializer is here to keep backwards compatibility with code depending
    on the `store` initializer (before Ember Data was an addon).
  
    Should be removed for Ember Data 3.x
  */

  exports['default'] = {
    name: 'store',
    after: 'ember-data',
    initialize: _ember['default'].K
  };
});
define('dummy/initializers/transforms', ['exports', 'ember'], function (exports, _ember) {

  /*
    This initializer is here to keep backwards compatibility with code depending
    on the `transforms` initializer (before Ember Data was an addon).
  
    Should be removed for Ember Data 3.x
  */

  exports['default'] = {
    name: 'transforms',
    before: 'store',
    initialize: _ember['default'].K
  };
});
define('dummy/initializers/truth-helpers', ['exports', 'ember', 'ember-truth-helpers/utils/register-helper', 'ember-truth-helpers/helpers/and', 'ember-truth-helpers/helpers/or', 'ember-truth-helpers/helpers/equal', 'ember-truth-helpers/helpers/not', 'ember-truth-helpers/helpers/is-array', 'ember-truth-helpers/helpers/not-equal', 'ember-truth-helpers/helpers/gt', 'ember-truth-helpers/helpers/gte', 'ember-truth-helpers/helpers/lt', 'ember-truth-helpers/helpers/lte'], function (exports, _ember, _emberTruthHelpersUtilsRegisterHelper, _emberTruthHelpersHelpersAnd, _emberTruthHelpersHelpersOr, _emberTruthHelpersHelpersEqual, _emberTruthHelpersHelpersNot, _emberTruthHelpersHelpersIsArray, _emberTruthHelpersHelpersNotEqual, _emberTruthHelpersHelpersGt, _emberTruthHelpersHelpersGte, _emberTruthHelpersHelpersLt, _emberTruthHelpersHelpersLte) {
  exports.initialize = initialize;

  function initialize() /* container, application */{

    // Do not register helpers from Ember 1.13 onwards, starting from 1.13 they
    // will be auto-discovered.
    if (_ember['default'].Helper) {
      return;
    }

    (0, _emberTruthHelpersUtilsRegisterHelper.registerHelper)('and', _emberTruthHelpersHelpersAnd.andHelper);
    (0, _emberTruthHelpersUtilsRegisterHelper.registerHelper)('or', _emberTruthHelpersHelpersOr.orHelper);
    (0, _emberTruthHelpersUtilsRegisterHelper.registerHelper)('eq', _emberTruthHelpersHelpersEqual.equalHelper);
    (0, _emberTruthHelpersUtilsRegisterHelper.registerHelper)('not', _emberTruthHelpersHelpersNot.notHelper);
    (0, _emberTruthHelpersUtilsRegisterHelper.registerHelper)('is-array', _emberTruthHelpersHelpersIsArray.isArrayHelper);
    (0, _emberTruthHelpersUtilsRegisterHelper.registerHelper)('not-eq', _emberTruthHelpersHelpersNotEqual.notEqualHelper);
    (0, _emberTruthHelpersUtilsRegisterHelper.registerHelper)('gt', _emberTruthHelpersHelpersGt.gtHelper);
    (0, _emberTruthHelpersUtilsRegisterHelper.registerHelper)('gte', _emberTruthHelpersHelpersGte.gteHelper);
    (0, _emberTruthHelpersUtilsRegisterHelper.registerHelper)('lt', _emberTruthHelpersHelpersLt.ltHelper);
    (0, _emberTruthHelpersUtilsRegisterHelper.registerHelper)('lte', _emberTruthHelpersHelpersLte.lteHelper);
  }

  exports['default'] = {
    name: 'truth-helpers',
    initialize: initialize
  };
});
define('dummy/initializers/user-settings', ['exports', 'ember-flexberry/initializers/user-settings'], function (exports, _emberFlexberryInitializersUserSettings) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryInitializersUserSettings['default'];
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryInitializersUserSettings.initialize;
    }
  });
});
define('dummy/instance-initializers/block-slots', ['exports', 'ember-flexberry/instance-initializers/block-slots'], function (exports, _emberFlexberryInstanceInitializersBlockSlots) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryInstanceInitializersBlockSlots['default'];
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryInstanceInitializersBlockSlots.initialize;
    }
  });
});
define('dummy/instance-initializers/default-user-setting', ['exports', 'ember-flexberry/instance-initializers/default-user-settings'], function (exports, _emberFlexberryInstanceInitializersDefaultUserSettings) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryInstanceInitializersDefaultUserSettings['default'];
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryInstanceInitializersDefaultUserSettings.initialize;
    }
  });
});
define('dummy/instance-initializers/device', ['exports', 'ember-flexberry/instance-initializers/device'], function (exports, _emberFlexberryInstanceInitializersDevice) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryInstanceInitializersDevice['default'];
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryInstanceInitializersDevice.initialize;
    }
  });
});
define("dummy/instance-initializers/ember-data", ["exports", "ember-data/-private/instance-initializers/initialize-store-service"], function (exports, _emberDataPrivateInstanceInitializersInitializeStoreService) {
  exports["default"] = {
    name: "ember-data",
    initialize: _emberDataPrivateInstanceInitializersInitializeStoreService["default"]
  };
});
define("dummy/instance-initializers/ember-i18n", ["exports", "ember", "ember-i18n/stream", "ember-i18n/legacy-helper", "dummy/config/environment"], function (exports, _ember, _emberI18nStream, _emberI18nLegacyHelper, _dummyConfigEnvironment) {
  exports["default"] = {
    name: 'ember-i18n',

    initialize: function initialize(appOrAppInstance) {
      if (_emberI18nLegacyHelper["default"] != null) {
        (function () {
          // Used for Ember < 1.13
          var i18n = appOrAppInstance.container.lookup('service:i18n');

          i18n.localeStream = new _emberI18nStream["default"](function () {
            return i18n.get('locale');
          });

          _ember["default"].addObserver(i18n, 'locale', i18n, function () {
            this.localeStream.value(); // force the stream to be dirty
            this.localeStream.notify();
          });

          _ember["default"].HTMLBars._registerHelper('t', _emberI18nLegacyHelper["default"]);
        })();
      }
    }
  };
});
define('dummy/instance-initializers/flexberry-search', ['exports', 'ember-flexberry-gis/instance-initializers/flexberry-search'], function (exports, _emberFlexberryGisInstanceInitializersFlexberrySearch) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisInstanceInitializersFlexberrySearch['default'];
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisInstanceInitializersFlexberrySearch.initialize;
    }
  });
});
define('dummy/instance-initializers/i18n', ['exports', 'ember-flexberry/instance-initializers/moment'], function (exports, _emberFlexberryInstanceInitializersMoment) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryInstanceInitializersMoment['default'];
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryInstanceInitializersMoment.initialize;
    }
  });
});
define('dummy/instance-initializers/jsts', ['exports', 'ember-flexberry-gis/instance-initializers/jsts'], function (exports, _emberFlexberryGisInstanceInitializersJsts) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisInstanceInitializersJsts['default'];
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisInstanceInitializersJsts.initialize;
    }
  });
});
define('dummy/instance-initializers/layers', ['exports', 'ember-flexberry-gis/instance-initializers/layers'], function (exports, _emberFlexberryGisInstanceInitializersLayers) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisInstanceInitializersLayers['default'];
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisInstanceInitializersLayers.initialize;
    }
  });
});
define('dummy/instance-initializers/leaflet-editable-measures', ['exports', 'ember-flexberry-gis/instance-initializers/leaflet-editable-measures'], function (exports, _emberFlexberryGisInstanceInitializersLeafletEditableMeasures) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisInstanceInitializersLeafletEditableMeasures['default'];
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisInstanceInitializersLeafletEditableMeasures.initialize;
    }
  });
});
define('dummy/instance-initializers/lock', ['exports', 'ember-flexberry/instance-initializers/lock'], function (exports, _emberFlexberryInstanceInitializersLock) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryInstanceInitializersLock['default'];
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryInstanceInitializersLock.initialize;
    }
  });
});
define('dummy/instance-initializers/log', ['exports', 'ember-flexberry/instance-initializers/log'], function (exports, _emberFlexberryInstanceInitializersLog) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryInstanceInitializersLog['default'];
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryInstanceInitializersLog.initialize;
    }
  });
});
define('dummy/instance-initializers/moment', ['exports', 'ember-flexberry/instance-initializers/i18n'], function (exports, _emberFlexberryInstanceInitializersI18n) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryInstanceInitializersI18n['default'];
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryInstanceInitializersI18n.initialize;
    }
  });
});
define('dummy/instance-initializers/open-map', ['exports', 'ember-flexberry-gis/instance-initializers/open-map'], function (exports, _emberFlexberryGisInstanceInitializersOpenMap) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisInstanceInitializersOpenMap['default'];
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisInstanceInitializersOpenMap.initialize;
    }
  });
});
define('dummy/instance-initializers/owner', ['exports', 'ember-flexberry-gis/instance-initializers/owner'], function (exports, _emberFlexberryGisInstanceInitializersOwner) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisInstanceInitializersOwner['default'];
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisInstanceInitializersOwner.initialize;
    }
  });
});
define('dummy/instance-initializers/perf', ['exports', 'ember-flexberry/instance-initializers/perf'], function (exports, _emberFlexberryInstanceInitializersPerf) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryInstanceInitializersPerf['default'];
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryInstanceInitializersPerf.initialize;
    }
  });
});
define('dummy/instance-initializers/precision-scale', ['exports', 'ember-flexberry-gis/instance-initializers/precision-scale'], function (exports, _emberFlexberryGisInstanceInitializersPrecisionScale) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisInstanceInitializersPrecisionScale['default'];
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisInstanceInitializersPrecisionScale.initialize;
    }
  });
});
define('dummy/instance-initializers/set-singletons', ['exports', 'ember-flexberry-data/instance-initializers/set-singletons'], function (exports, _emberFlexberryDataInstanceInitializersSetSingletons) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataInstanceInitializersSetSingletons['default'];
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataInstanceInitializersSetSingletons.initialize;
    }
  });
});
define('dummy/layers-prototyping-modes/metadata-mode', ['exports', 'ember-flexberry-gis/layers-prototyping-modes/metadata-mode'], function (exports, _emberFlexberryGisLayersPrototypingModesMetadataMode) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisLayersPrototypingModesMetadataMode['default'];
    }
  });
});
define('dummy/layers-styles/empty', ['exports', 'ember-flexberry-gis/layers-styles/empty'], function (exports, _emberFlexberryGisLayersStylesEmpty) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisLayersStylesEmpty['default'];
    }
  });
});
define('dummy/layers-styles/graduated', ['exports', 'ember-flexberry-gis/layers-styles/graduated'], function (exports, _emberFlexberryGisLayersStylesGraduated) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisLayersStylesGraduated['default'];
    }
  });
});
define('dummy/layers-styles/simple', ['exports', 'ember-flexberry-gis/layers-styles/simple'], function (exports, _emberFlexberryGisLayersStylesSimple) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisLayersStylesSimple['default'];
    }
  });
});
define('dummy/layers-styles/unique', ['exports', 'ember-flexberry-gis/layers-styles/unique'], function (exports, _emberFlexberryGisLayersStylesUnique) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisLayersStylesUnique['default'];
    }
  });
});
define('dummy/layers/combine', ['exports', 'ember-flexberry-gis/layers/combine'], function (exports, _emberFlexberryGisLayersCombine) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisLayersCombine['default'];
    }
  });
});
define('dummy/layers/geocoder-osm-overpass', ['exports', 'ember-flexberry-gis/layers/geocoder-osm-overpass'], function (exports, _emberFlexberryGisLayersGeocoderOsmOverpass) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisLayersGeocoderOsmOverpass['default'];
    }
  });
});
define('dummy/layers/geocoder-osm-ru', ['exports', 'ember-flexberry-gis/layers/geocoder-osm-ru'], function (exports, _emberFlexberryGisLayersGeocoderOsmRu) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisLayersGeocoderOsmRu['default'];
    }
  });
});
define('dummy/layers/geojson', ['exports', 'ember-flexberry-gis/layers/geojson'], function (exports, _emberFlexberryGisLayersGeojson) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisLayersGeojson['default'];
    }
  });
});
define('dummy/layers/group', ['exports', 'ember-flexberry-gis/layers/group'], function (exports, _emberFlexberryGisLayersGroup) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisLayersGroup['default'];
    }
  });
});
define('dummy/layers/kml', ['exports', 'ember-flexberry-gis/layers/kml'], function (exports, _emberFlexberryGisLayersKml) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisLayersKml['default'];
    }
  });
});
define('dummy/layers/odata-vector', ['exports', 'ember-flexberry-gis/layers/odata-vector'], function (exports, _emberFlexberryGisLayersOdataVector) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisLayersOdataVector['default'];
    }
  });
});
define('dummy/layers/osm', ['exports', 'ember-flexberry-gis/layers/osm'], function (exports, _emberFlexberryGisLayersOsm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisLayersOsm['default'];
    }
  });
});
define('dummy/layers/tile-vector', ['exports', 'ember-flexberry-gis/layers/tile-vector'], function (exports, _emberFlexberryGisLayersTileVector) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisLayersTileVector['default'];
    }
  });
});
define('dummy/layers/tile', ['exports', 'ember-flexberry-gis/layers/tile'], function (exports, _emberFlexberryGisLayersTile) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisLayersTile['default'];
    }
  });
});
define('dummy/layers/wfs', ['exports', 'ember-flexberry-gis/layers/wfs'], function (exports, _emberFlexberryGisLayersWfs) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisLayersWfs['default'];
    }
  });
});
define('dummy/layers/with-history', ['exports', 'ember-flexberry-gis/layers/with-history'], function (exports, _emberFlexberryGisLayersWithHistory) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisLayersWithHistory['default'];
    }
  });
});
define('dummy/layers/wms-single-tile', ['exports', 'ember-flexberry-gis/layers/wms-single-tile'], function (exports, _emberFlexberryGisLayersWmsSingleTile) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisLayersWmsSingleTile['default'];
    }
  });
});
define('dummy/layers/wms-wfs', ['exports', 'ember-flexberry-gis/layers/wms-wfs'], function (exports, _emberFlexberryGisLayersWmsWfs) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisLayersWmsWfs['default'];
    }
  });
});
define('dummy/layers/wms', ['exports', 'ember-flexberry-gis/layers/wms'], function (exports, _emberFlexberryGisLayersWms) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisLayersWms['default'];
    }
  });
});
define('dummy/locales/en/forms', ['exports', 'dummy/locales/en/forms/index', 'dummy/locales/en/forms/loading', 'dummy/locales/en/forms/application', 'dummy/locales/en/forms/edit-form', 'dummy/locales/en/forms/maps', 'dummy/locales/en/forms/map', 'dummy/locales/en/forms/components-examples', 'dummy/locales/en/forms/new-platform-flexberry-g-i-s-map-object-setting-e', 'dummy/locales/en/forms/new-platform-flexberry-g-i-s-map-object-setting-l'], function (exports, _dummyLocalesEnFormsIndex, _dummyLocalesEnFormsLoading, _dummyLocalesEnFormsApplication, _dummyLocalesEnFormsEditForm, _dummyLocalesEnFormsMaps, _dummyLocalesEnFormsMap, _dummyLocalesEnFormsComponentsExamples, _dummyLocalesEnFormsNewPlatformFlexberryGISMapObjectSettingE, _dummyLocalesEnFormsNewPlatformFlexberryGISMapObjectSettingL) {
  exports['default'] = {
    'index': _dummyLocalesEnFormsIndex['default'],
    'loading': _dummyLocalesEnFormsLoading['default'],
    'application': _dummyLocalesEnFormsApplication['default'],
    'edit-form': _dummyLocalesEnFormsEditForm['default'],
    'maps': _dummyLocalesEnFormsMaps['default'],
    'map': _dummyLocalesEnFormsMap['default'],
    'components-examples': _dummyLocalesEnFormsComponentsExamples['default'],
    'new-platform-flexberry-g-i-s-map-object-setting-e': _dummyLocalesEnFormsNewPlatformFlexberryGISMapObjectSettingE['default'],
    'new-platform-flexberry-g-i-s-map-object-setting-l': _dummyLocalesEnFormsNewPlatformFlexberryGISMapObjectSettingL['default']
  };
});
define('dummy/locales/en/forms/application', ['exports', 'dummy/locales/en/forms/application/header', 'dummy/locales/en/forms/application/footer', 'dummy/locales/en/forms/application/sitemap'], function (exports, _dummyLocalesEnFormsApplicationHeader, _dummyLocalesEnFormsApplicationFooter, _dummyLocalesEnFormsApplicationSitemap) {
  exports['default'] = {
    'header': _dummyLocalesEnFormsApplicationHeader['default'],
    'footer': _dummyLocalesEnFormsApplicationFooter['default'],
    'sitemap': _dummyLocalesEnFormsApplicationSitemap['default']
  };
});
define('dummy/locales/en/forms/application/footer', ['exports'], function (exports) {
  exports['default'] = {
    'application-name': 'Test stand for ember-flexberry-gis',
    'application-version': {
      'caption': 'Addon version {{version}}',
      'title': 'It is version of ember-flexberry-gis addon, which uses in this dummy application ' + '(npm version + commit sha). ' + 'Click to open commit on GitHub.'
    }
  };
});
define('dummy/locales/en/forms/application/header', ['exports'], function (exports) {
  exports['default'] = {
    'menu': {
      'sitemap-button': {
        'caption': '',
        'title': 'Menu'
      },
      'user-settings-service-checkbox': {
        'caption': 'Use user settings service'
      },
      'show-menu': {
        'caption': 'Show menu'
      },
      'hide-menu': {
        'caption': 'Hide menu'
      },
      'language-dropdown': {
        'caption': 'Application language',
        'placeholder': 'Choose language'
      }
    }
  };
});
define('dummy/locales/en/forms/application/sitemap', ['exports'], function (exports) {
  exports['default'] = {
    'application-name': {
      'caption': 'Test stand for ember-flexberry-gis',
      'title': ''
    },
    'application-version': {
      'caption': 'Addon version {{version}}',
      'title': 'It is version of ember-flexberry-gis addon, which uses in this dummy application ' + '(npm version + commit sha). ' + 'Click to open commit on GitHub.'
    },
    'index': {
      'caption': 'Home',
      'title': ''
    },
    'gis': {
      'caption': 'GIS',
      'title': '',
      'maps': {
        'caption': 'Maps',
        'title': ''
      },
      'csw-connections': {
        'caption': 'CSW connections',
        'title': ''
      },
      'map-metadata': {
        'caption': 'Мetadata',
        'title': ''
      },
      'gis-search-form': {
        'caption': 'Search',
        'title': 'Search through layer metadata and maps'
      }
    },
    'map-object-setting': {
      'caption': 'Map object settings',
      'title': ''
    },
    'components-examples': {
      'caption': 'Components examples',
      'title': '',
      'flexberry-boundingbox': {
        'caption': 'flexberry-boundingbox',
        'title': '',
        'settings-example': {
          'caption': 'Пример работы компонента',
          'title': ''
        }
      }
    }
  };
});
define('dummy/locales/en/forms/components-examples', ['exports'], function (exports) {
  exports['default'] = {
    'flexberry-boundingbox': {
      'settings-example': {
        'caption': 'Flexberry-boundingbox testing form'
      }
    }
  };
});
define('dummy/locales/en/forms/edit-form', ['exports'], function (exports) {
  exports['default'] = {
    'save-success-message-caption': 'Save operation succeed',
    'save-success-message': 'Object saved',
    'save-error-message-caption': 'Save operation failed',
    'delete-success-message-caption': 'Delete operation succeed',
    'delete-success-message': 'Object deleted',
    'delete-error-message-caption': 'Delete operation failed'
  };
});
define('dummy/locales/en/forms/index', ['exports'], function (exports) {
  exports['default'] = {
    'greeting': 'Welcome to ember-flexberry-gis test stand!'
  };
});
define('dummy/locales/en/forms/loading', ['exports'], function (exports) {
  exports['default'] = {
    'spinner-caption': 'Loading data, please wait...'
  };
});
define('dummy/locales/en/forms/map', ['exports'], function (exports) {
  exports['default'] = {
    'caption': 'Map',
    'treeviewbuttontooltip': 'Show tree view',
    'searchbuttontooltip': 'Show search',
    'bookmarksbuttontooltip': 'Spatial bookmarks',
    'identifybuttontooltip': 'Show identification',
    'favoritesbuttontooltip': 'Show favorites',
    'createobjectbuttontooltip': 'Show object creation',
    'createoreditobjectbuttontooltip': 'Show object creation/editing',
    'comparebuttontooltip': 'Compare layers',
    'xCaption': 'Longitude',
    'yCaption': 'Latitude',

    'tabbar': {
      'treeview': {
        'caption': 'Layers list'
      },
      'search': {
        'caption': 'Search'
      },
      'identify': {
        'caption': 'Identify'
      },
      'bookmarks': {
        'caption': 'Spatial bookmarks'
      },
      'favorites': {
        'caption': 'Favorites'
      },
      'createObject': {
        'caption': 'Create object'
      },
      'createOrEditObject': {
        'caption': 'Create/Edit object'
      },
      'compare': {
        'caption': 'Compare layers'
      }
    }
  };
});
define('dummy/locales/en/forms/maps', ['exports'], function (exports) {
  exports['default'] = {
    'caption': 'Maps'
  };
});
define('dummy/locales/en/forms/new-platform-flexberry-g-i-s-map-object-setting-e', ['exports'], function (exports) {
  exports['default'] = {
    caption: 'Map Object Setting',
    'typeName-caption': 'Type Name',
    'title-caption': 'Title',
    'listForm-caption': 'List Form',
    'editForm-caption': 'Edit Form',
    'multEditForm-caption': 'MultEdit Form',
    'defaultMap-caption': 'Default Map'
  };
});
define('dummy/locales/en/forms/new-platform-flexberry-g-i-s-map-object-setting-l', ['exports'], function (exports) {
  exports['default'] = {
    caption: 'Map Object Setting'
  };
});
define('dummy/locales/en/translations', ['exports', 'ember', 'ember-flexberry/locales/en/translations', 'ember-flexberry-gis/locales/en/translations', 'dummy/locales/en/forms'], function (exports, _ember, _emberFlexberryLocalesEnTranslations, _emberFlexberryGisLocalesEnTranslations, _dummyLocalesEnForms) {

  var translations = {};
  _ember['default'].$.extend(true, translations, _emberFlexberryLocalesEnTranslations['default'], _emberFlexberryGisLocalesEnTranslations['default']);

  _ember['default'].$.extend(true, translations, {
    'application-name': 'Test stand for ember-flexberry-gis',
    'forms': _dummyLocalesEnForms['default']
  });

  exports['default'] = translations;
});
define('dummy/locales/ru/forms', ['exports', 'dummy/locales/ru/forms/index', 'dummy/locales/ru/forms/loading', 'dummy/locales/ru/forms/application', 'dummy/locales/ru/forms/edit-form', 'dummy/locales/ru/forms/maps', 'dummy/locales/ru/forms/map', 'dummy/locales/ru/forms/components-examples', 'dummy/locales/ru/forms/new-platform-flexberry-g-i-s-map-object-setting-e', 'dummy/locales/ru/forms/new-platform-flexberry-g-i-s-map-object-setting-l'], function (exports, _dummyLocalesRuFormsIndex, _dummyLocalesRuFormsLoading, _dummyLocalesRuFormsApplication, _dummyLocalesRuFormsEditForm, _dummyLocalesRuFormsMaps, _dummyLocalesRuFormsMap, _dummyLocalesRuFormsComponentsExamples, _dummyLocalesRuFormsNewPlatformFlexberryGISMapObjectSettingE, _dummyLocalesRuFormsNewPlatformFlexberryGISMapObjectSettingL) {
  exports['default'] = {
    'index': _dummyLocalesRuFormsIndex['default'],
    'loading': _dummyLocalesRuFormsLoading['default'],
    'application': _dummyLocalesRuFormsApplication['default'],
    'edit-form': _dummyLocalesRuFormsEditForm['default'],
    'maps': _dummyLocalesRuFormsMaps['default'],
    'map': _dummyLocalesRuFormsMap['default'],
    'components-examples': _dummyLocalesRuFormsComponentsExamples['default'],
    'new-platform-flexberry-g-i-s-map-object-setting-e': _dummyLocalesRuFormsNewPlatformFlexberryGISMapObjectSettingE['default'],
    'new-platform-flexberry-g-i-s-map-object-setting-l': _dummyLocalesRuFormsNewPlatformFlexberryGISMapObjectSettingL['default']
  };
});
define('dummy/locales/ru/forms/application', ['exports', 'dummy/locales/ru/forms/application/header', 'dummy/locales/ru/forms/application/footer', 'dummy/locales/ru/forms/application/sitemap'], function (exports, _dummyLocalesRuFormsApplicationHeader, _dummyLocalesRuFormsApplicationFooter, _dummyLocalesRuFormsApplicationSitemap) {
  exports['default'] = {
    'header': _dummyLocalesRuFormsApplicationHeader['default'],
    'footer': _dummyLocalesRuFormsApplicationFooter['default'],
    'sitemap': _dummyLocalesRuFormsApplicationSitemap['default']
  };
});
define('dummy/locales/ru/forms/application/footer', ['exports'], function (exports) {
  exports['default'] = {
    'application-name': 'Тестовый стенд ember-flexberry-gis',
    'application-version': {
      'caption': 'Версия аддона {{version}}',
      'title': 'Это версия аддона ember-flexberry-gis, которая сейчас используется в этом тестовом приложении ' + '(версия npm-пакета + хэш коммита). ' + 'Кликните, чтобы перейти на GitHub.'
    }
  };
});
define('dummy/locales/ru/forms/application/header', ['exports'], function (exports) {
  exports['default'] = {
    'menu': {
      'sitemap-button': {
        'caption': '',
        'title': 'Меню'
      },
      'user-settings-service-checkbox': {
        'caption': 'Использовать сервис пользовательских настроек'
      },
      'show-menu': {
        'caption': 'Показать меню'
      },
      'hide-menu': {
        'caption': 'Скрыть меню'
      },
      'language-dropdown': {
        'caption': 'Язык приложения',
        'placeholder': 'Выберете язык'
      }
    }
  };
});
define('dummy/locales/ru/forms/application/sitemap', ['exports'], function (exports) {
  exports['default'] = {
    'application-name': {
      'caption': 'Тестовый стенд ember-flexberry-gis',
      'title': ''
    },
    'application-version': {
      'caption': 'Версия аддона {{version}}',
      'title': 'Это версия аддона ember-flexberry-gis, которая сейчас используется в этом тестовом приложении ' + '(версия npm-пакета + хэш коммита). ' + 'Кликните, чтобы перейти на GitHub.'
    },
    'index': {
      'caption': 'Главная',
      'title': ''
    },
    'gis': {
      'caption': 'ГИС',
      'title': '',
      'maps': {
        'caption': 'Карты',
        'title': ''
      },
      'csw-connections': {
        'caption': 'CSW соединения',
        'title': ''
      },
      'map-metadata': {
        'caption': 'Метаданные',
        'title': ''
      },
      'gis-search-form': {
        'caption': 'Поиск',
        'title': 'Поиск по метаданным слоёв и проектам карт'
      }
    },
    'map-object-setting': {
      'caption': 'Настройка объектов карты',
      'title': ''
    },
    'components-examples': {
      'caption': 'Примеры компонентов',
      'title': '',
      'flexberry-boundingbox': {
        'caption': 'flexberry-boundingbox',
        'title': '',
        'settings-example': {
          'caption': 'Пример работы компонента',
          'title': ''
        }
      }
    }
  };
});
define('dummy/locales/ru/forms/components-examples', ['exports'], function (exports) {
  exports['default'] = {
    'flexberry-boundingbox': {
      'settings-example': {
        'caption': 'Тестовая форма flexberry-boundingbox'
      }
    }
  };
});
define('dummy/locales/ru/forms/edit-form', ['exports'], function (exports) {
  exports['default'] = {
    'save-success-message-caption': 'Сохранение завершилось успешно',
    'save-success-message': 'Объект сохранен',
    'save-error-message-caption': 'Ошибка сохранения',
    'delete-success-message-caption': 'Удаление завершилось успешно',
    'delete-success-message': 'Объект удален',
    'delete-error-message-caption': 'Ошибка удаления'
  };
});
define('dummy/locales/ru/forms/index', ['exports'], function (exports) {
  exports['default'] = {
    'greeting': 'Добро пожаловать на тестовый стенд ember-flexberry-gis!'
  };
});
define('dummy/locales/ru/forms/loading', ['exports'], function (exports) {
  exports['default'] = {
    'spinner-caption': 'Данные загружаются, пожалуйста подождите...'
  };
});
define('dummy/locales/ru/forms/map', ['exports'], function (exports) {
  exports['default'] = {
    'caption': 'Карта',
    'treeviewbuttontooltip': 'Список слоев',
    'searchbuttontooltip': 'Поиск',
    'bookmarksbuttontooltip': 'Пространственные закладки',
    'identifybuttontooltip': 'Идентификация',
    'favoritesbuttontooltip': 'Избранное',
    'createobjectbuttontooltip': 'Создание объекта',
    'createoreditobjectbuttontooltip': 'Создание/редактирование объекта',
    'comparebuttontooltip': 'Сравнение слоев',
    'xCaption': 'Долгота',
    'yCaption': 'Широта',

    'tabbar': {
      'treeview': {
        'caption': 'Список слоев'
      },
      'search': {
        'caption': 'Поиск'
      },
      'identify': {
        'caption': 'Идентификация'
      },
      'bookmarks': {
        'caption': 'Пространственные закладки'
      },
      'favorites': {
        'caption': 'Избранное'
      },
      'createObject': {
        'caption': 'Создание объекта'
      },
      'createOrEditObject': {
        'caption': 'Создание/редактирование объекта'
      },
      'compare': {
        'caption': 'Сравнить слои'
      }
    }
  };
});
define('dummy/locales/ru/forms/maps', ['exports'], function (exports) {
  exports['default'] = {
    'caption': 'Карты'
  };
});
define('dummy/locales/ru/forms/new-platform-flexberry-g-i-s-map-object-setting-e', ['exports'], function (exports) {
  exports['default'] = {
    caption: 'Настройка объектов карты',
    'typeName-caption': 'Тип',
    'title-caption': 'Отображаемое имя',
    'listForm-caption': 'Списковая форма',
    'editForm-caption': 'Форма редактирования',
    'multEditForm-caption': 'Форма группового создания',
    'defaultMap-caption': 'Карта по умолчанию'
  };
});
define('dummy/locales/ru/forms/new-platform-flexberry-g-i-s-map-object-setting-l', ['exports'], function (exports) {
  exports['default'] = {
    caption: 'Настройка объектов карты'
  };
});
define('dummy/locales/ru/translations', ['exports', 'ember', 'ember-flexberry/locales/ru/translations', 'ember-flexberry-gis/locales/ru/translations', 'dummy/locales/ru/forms'], function (exports, _ember, _emberFlexberryLocalesRuTranslations, _emberFlexberryGisLocalesRuTranslations, _dummyLocalesRuForms) {

  var translations = {};
  _ember['default'].$.extend(true, translations, _emberFlexberryLocalesRuTranslations['default'], _emberFlexberryGisLocalesRuTranslations['default']);

  _ember['default'].$.extend(true, translations, {
    'application-name': 'Тестовый стэнд ember-flexberry-gis',
    'forms': _dummyLocalesRuForms['default']
  });

  exports['default'] = translations;
});
define('dummy/map-commands/base', ['exports', 'ember-flexberry-gis/map-commands/base'], function (exports, _emberFlexberryGisMapCommandsBase) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisMapCommandsBase['default'];
    }
  });
});
define('dummy/map-commands/edit', ['exports', 'ember-flexberry-gis/map-commands/edit'], function (exports, _emberFlexberryGisMapCommandsEdit) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisMapCommandsEdit['default'];
    }
  });
});
define('dummy/map-commands/export-download', ['exports', 'ember-flexberry-gis/map-commands/export-download'], function (exports, _emberFlexberryGisMapCommandsExportDownload) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisMapCommandsExportDownload['default'];
    }
  });
});
define('dummy/map-commands/export-print', ['exports', 'ember-flexberry-gis/map-commands/export-print'], function (exports, _emberFlexberryGisMapCommandsExportPrint) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisMapCommandsExportPrint['default'];
    }
  });
});
define('dummy/map-commands/export', ['exports', 'ember-flexberry-gis/map-commands/export'], function (exports, _emberFlexberryGisMapCommandsExport) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisMapCommandsExport['default'];
    }
  });
});
define('dummy/map-commands/full-extent', ['exports', 'ember-flexberry-gis/map-commands/full-extent'], function (exports, _emberFlexberryGisMapCommandsFullExtent) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisMapCommandsFullExtent['default'];
    }
  });
});
define('dummy/map-commands/go-to', ['exports', 'ember-flexberry-gis/map-commands/go-to'], function (exports, _emberFlexberryGisMapCommandsGoTo) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisMapCommandsGoTo['default'];
    }
  });
});
define('dummy/map-commands/locate', ['exports', 'ember-flexberry-gis/map-commands/locate'], function (exports, _emberFlexberryGisMapCommandsLocate) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisMapCommandsLocate['default'];
    }
  });
});
define('dummy/map-commands/search-attributes', ['exports', 'ember-flexberry-gis/map-commands/search-attributes'], function (exports, _emberFlexberryGisMapCommandsSearchAttributes) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisMapCommandsSearchAttributes['default'];
    }
  });
});
define('dummy/map-commands/search-clear', ['exports', 'ember-flexberry-gis/map-commands/search-clear'], function (exports, _emberFlexberryGisMapCommandsSearchClear) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisMapCommandsSearchClear['default'];
    }
  });
});
define('dummy/map-commands/search-show', ['exports', 'ember-flexberry-gis/map-commands/search-show'], function (exports, _emberFlexberryGisMapCommandsSearchShow) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisMapCommandsSearchShow['default'];
    }
  });
});
define('dummy/map-commands/search', ['exports', 'ember-flexberry-gis/map-commands/search'], function (exports, _emberFlexberryGisMapCommandsSearch) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisMapCommandsSearch['default'];
    }
  });
});
define('dummy/map-tools/background-layers', ['exports', 'ember-flexberry-gis/map-tools/background-layers'], function (exports, _emberFlexberryGisMapToolsBackgroundLayers) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisMapToolsBackgroundLayers['default'];
    }
  });
});
define('dummy/map-tools/base-nonclickable', ['exports', 'ember-flexberry-gis/map-tools/base-nonclickable'], function (exports, _emberFlexberryGisMapToolsBaseNonclickable) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisMapToolsBaseNonclickable['default'];
    }
  });
});
define('dummy/map-tools/base', ['exports', 'ember-flexberry-gis/map-tools/base'], function (exports, _emberFlexberryGisMapToolsBase) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisMapToolsBase['default'];
    }
  });
});
define('dummy/map-tools/compare', ['exports', 'ember-flexberry-gis/map-tools/compare'], function (exports, _emberFlexberryGisMapToolsCompare) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisMapToolsCompare['default'];
    }
  });
});
define('dummy/map-tools/drag', ['exports', 'ember-flexberry-gis/map-tools/drag'], function (exports, _emberFlexberryGisMapToolsDrag) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisMapToolsDrag['default'];
    }
  });
});
define('dummy/map-tools/draw-circle', ['exports', 'ember-flexberry-gis/map-tools/draw-circle'], function (exports, _emberFlexberryGisMapToolsDrawCircle) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisMapToolsDrawCircle['default'];
    }
  });
});
define('dummy/map-tools/draw-clear', ['exports', 'ember-flexberry-gis/map-tools/draw-clear'], function (exports, _emberFlexberryGisMapToolsDrawClear) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisMapToolsDrawClear['default'];
    }
  });
});
define('dummy/map-tools/draw-marker', ['exports', 'ember-flexberry-gis/map-tools/draw-marker'], function (exports, _emberFlexberryGisMapToolsDrawMarker) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisMapToolsDrawMarker['default'];
    }
  });
});
define('dummy/map-tools/draw-polygon', ['exports', 'ember-flexberry-gis/map-tools/draw-polygon'], function (exports, _emberFlexberryGisMapToolsDrawPolygon) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisMapToolsDrawPolygon['default'];
    }
  });
});
define('dummy/map-tools/draw-polyline', ['exports', 'ember-flexberry-gis/map-tools/draw-polyline'], function (exports, _emberFlexberryGisMapToolsDrawPolyline) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisMapToolsDrawPolyline['default'];
    }
  });
});
define('dummy/map-tools/draw-rectangle', ['exports', 'ember-flexberry-gis/map-tools/draw-rectangle'], function (exports, _emberFlexberryGisMapToolsDrawRectangle) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisMapToolsDrawRectangle['default'];
    }
  });
});
define('dummy/map-tools/draw', ['exports', 'ember-flexberry-gis/map-tools/draw'], function (exports, _emberFlexberryGisMapToolsDraw) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisMapToolsDraw['default'];
    }
  });
});
define('dummy/map-tools/identify-all-file', ['exports', 'ember-flexberry-gis/map-tools/identify-all-file'], function (exports, _emberFlexberryGisMapToolsIdentifyAllFile) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisMapToolsIdentifyAllFile['default'];
    }
  });
});
define('dummy/map-tools/identify-all-marker', ['exports', 'ember-flexberry-gis/map-tools/identify-all-marker'], function (exports, _emberFlexberryGisMapToolsIdentifyAllMarker) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisMapToolsIdentifyAllMarker['default'];
    }
  });
});
define('dummy/map-tools/identify-all-polygon', ['exports', 'ember-flexberry-gis/map-tools/identify-all-polygon'], function (exports, _emberFlexberryGisMapToolsIdentifyAllPolygon) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisMapToolsIdentifyAllPolygon['default'];
    }
  });
});
define('dummy/map-tools/identify-all-polyline', ['exports', 'ember-flexberry-gis/map-tools/identify-all-polyline'], function (exports, _emberFlexberryGisMapToolsIdentifyAllPolyline) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisMapToolsIdentifyAllPolyline['default'];
    }
  });
});
define('dummy/map-tools/identify-all-rectangle', ['exports', 'ember-flexberry-gis/map-tools/identify-all-rectangle'], function (exports, _emberFlexberryGisMapToolsIdentifyAllRectangle) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisMapToolsIdentifyAllRectangle['default'];
    }
  });
});
define('dummy/map-tools/identify-geom-only-file', ['exports', 'ember-flexberry-gis/map-tools/identify-geom-only-file'], function (exports, _emberFlexberryGisMapToolsIdentifyGeomOnlyFile) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisMapToolsIdentifyGeomOnlyFile['default'];
    }
  });
});
define('dummy/map-tools/identify-geom-only-marker', ['exports', 'ember-flexberry-gis/map-tools/identify-geom-only-marker'], function (exports, _emberFlexberryGisMapToolsIdentifyGeomOnlyMarker) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisMapToolsIdentifyGeomOnlyMarker['default'];
    }
  });
});
define('dummy/map-tools/identify-geom-only-polygon', ['exports', 'ember-flexberry-gis/map-tools/identify-geom-only-polygon'], function (exports, _emberFlexberryGisMapToolsIdentifyGeomOnlyPolygon) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisMapToolsIdentifyGeomOnlyPolygon['default'];
    }
  });
});
define('dummy/map-tools/identify-geom-only-polyline', ['exports', 'ember-flexberry-gis/map-tools/identify-geom-only-polyline'], function (exports, _emberFlexberryGisMapToolsIdentifyGeomOnlyPolyline) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisMapToolsIdentifyGeomOnlyPolyline['default'];
    }
  });
});
define('dummy/map-tools/identify-geom-only-rectangle', ['exports', 'ember-flexberry-gis/map-tools/identify-geom-only-rectangle'], function (exports, _emberFlexberryGisMapToolsIdentifyGeomOnlyRectangle) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisMapToolsIdentifyGeomOnlyRectangle['default'];
    }
  });
});
define('dummy/map-tools/identify-top-file', ['exports', 'ember-flexberry-gis/map-tools/identify-top-file'], function (exports, _emberFlexberryGisMapToolsIdentifyTopFile) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisMapToolsIdentifyTopFile['default'];
    }
  });
});
define('dummy/map-tools/identify-top-marker', ['exports', 'ember-flexberry-gis/map-tools/identify-top-marker'], function (exports, _emberFlexberryGisMapToolsIdentifyTopMarker) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisMapToolsIdentifyTopMarker['default'];
    }
  });
});
define('dummy/map-tools/identify-top-polygon', ['exports', 'ember-flexberry-gis/map-tools/identify-top-polygon'], function (exports, _emberFlexberryGisMapToolsIdentifyTopPolygon) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisMapToolsIdentifyTopPolygon['default'];
    }
  });
});
define('dummy/map-tools/identify-top-polyline', ['exports', 'ember-flexberry-gis/map-tools/identify-top-polyline'], function (exports, _emberFlexberryGisMapToolsIdentifyTopPolyline) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisMapToolsIdentifyTopPolyline['default'];
    }
  });
});
define('dummy/map-tools/identify-top-rectangle', ['exports', 'ember-flexberry-gis/map-tools/identify-top-rectangle'], function (exports, _emberFlexberryGisMapToolsIdentifyTopRectangle) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisMapToolsIdentifyTopRectangle['default'];
    }
  });
});
define('dummy/map-tools/identify-visible-file', ['exports', 'ember-flexberry-gis/map-tools/identify-visible-file'], function (exports, _emberFlexberryGisMapToolsIdentifyVisibleFile) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisMapToolsIdentifyVisibleFile['default'];
    }
  });
});
define('dummy/map-tools/identify-visible-marker', ['exports', 'ember-flexberry-gis/map-tools/identify-visible-marker'], function (exports, _emberFlexberryGisMapToolsIdentifyVisibleMarker) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisMapToolsIdentifyVisibleMarker['default'];
    }
  });
});
define('dummy/map-tools/identify-visible-polygon', ['exports', 'ember-flexberry-gis/map-tools/identify-visible-polygon'], function (exports, _emberFlexberryGisMapToolsIdentifyVisiblePolygon) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisMapToolsIdentifyVisiblePolygon['default'];
    }
  });
});
define('dummy/map-tools/identify-visible-polyline', ['exports', 'ember-flexberry-gis/map-tools/identify-visible-polyline'], function (exports, _emberFlexberryGisMapToolsIdentifyVisiblePolyline) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisMapToolsIdentifyVisiblePolyline['default'];
    }
  });
});
define('dummy/map-tools/identify-visible-rectangle', ['exports', 'ember-flexberry-gis/map-tools/identify-visible-rectangle'], function (exports, _emberFlexberryGisMapToolsIdentifyVisibleRectangle) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisMapToolsIdentifyVisibleRectangle['default'];
    }
  });
});
define('dummy/map-tools/identify', ['exports', 'ember-flexberry-gis/map-tools/identify'], function (exports, _emberFlexberryGisMapToolsIdentify) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisMapToolsIdentify['default'];
    }
  });
});
define('dummy/map-tools/measure-area', ['exports', 'ember-flexberry-gis/map-tools/measure-area'], function (exports, _emberFlexberryGisMapToolsMeasureArea) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisMapToolsMeasureArea['default'];
    }
  });
});
define('dummy/map-tools/measure-clear', ['exports', 'ember-flexberry-gis/map-tools/measure-clear'], function (exports, _emberFlexberryGisMapToolsMeasureClear) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisMapToolsMeasureClear['default'];
    }
  });
});
define('dummy/map-tools/measure-coordinates', ['exports', 'ember-flexberry-gis/map-tools/measure-coordinates'], function (exports, _emberFlexberryGisMapToolsMeasureCoordinates) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisMapToolsMeasureCoordinates['default'];
    }
  });
});
define('dummy/map-tools/measure-distance', ['exports', 'ember-flexberry-gis/map-tools/measure-distance'], function (exports, _emberFlexberryGisMapToolsMeasureDistance) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisMapToolsMeasureDistance['default'];
    }
  });
});
define('dummy/map-tools/measure-radius', ['exports', 'ember-flexberry-gis/map-tools/measure-radius'], function (exports, _emberFlexberryGisMapToolsMeasureRadius) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisMapToolsMeasureRadius['default'];
    }
  });
});
define('dummy/map-tools/measure', ['exports', 'ember-flexberry-gis/map-tools/measure'], function (exports, _emberFlexberryGisMapToolsMeasure) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisMapToolsMeasure['default'];
    }
  });
});
define('dummy/map-tools/rectangle', ['exports', 'ember-flexberry-gis/map-tools/rectangle'], function (exports, _emberFlexberryGisMapToolsRectangle) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisMapToolsRectangle['default'];
    }
  });
});
define('dummy/map-tools/zoom-in', ['exports', 'ember-flexberry-gis/map-tools/zoom-in'], function (exports, _emberFlexberryGisMapToolsZoomIn) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisMapToolsZoomIn['default'];
    }
  });
});
define('dummy/map-tools/zoom-out', ['exports', 'ember-flexberry-gis/map-tools/zoom-out'], function (exports, _emberFlexberryGisMapToolsZoomOut) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisMapToolsZoomOut['default'];
    }
  });
});
define('dummy/markers-styles/default', ['exports', 'ember-flexberry-gis/markers-styles/default'], function (exports, _emberFlexberryGisMarkersStylesDefault) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisMarkersStylesDefault['default'];
    }
  });
});
define('dummy/markers-styles/image', ['exports', 'ember-flexberry-gis/markers-styles/image'], function (exports, _emberFlexberryGisMarkersStylesImage) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisMarkersStylesImage['default'];
    }
  });
});
define('dummy/mixins/link-action', ['exports', 'ember-link-action/mixins/link-action'], function (exports, _emberLinkActionMixinsLinkAction) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberLinkActionMixinsLinkAction['default'];
    }
  });
});
define('dummy/models/components-examples/flexberry-ddau-checkbox/settings-example/base', ['exports', 'ember-data', 'ember-flexberry-data'], function (exports, _emberData, _emberFlexberryData) {

  var Model = _emberFlexberryData.Projection.Model.extend({
    flag: _emberData['default'].attr('boolean')
  });

  // Edit form projection.
  Model.defineProjection('BaseE', 'components-examples/flexberry-ddau-checkbox/settings-example/base', {
    flag: _emberFlexberryData.Projection.attr('Flag')
  });

  exports['default'] = Model;
});
define('dummy/models/custom-inflector-rules', ['exports', 'ember-inflector'], function (exports, _emberInflector) {

  var inflector = _emberInflector['default'].inflector;

  inflector.irregular('connection', 'connections');
  inflector.irregular('parameter', 'parameters');
  inflector.irregular('link', 'links');
  inflector.irregular('metadata', 'metadatas');
  inflector.irregular('layer', 'layers');
  inflector.irregular('setting', 'settings');
  inflector.irregular('map', 'maps');

  exports['default'] = {};
});
/**
  @module ember-flexberry-gis-dummy
*/
define('dummy/models/flexberry-adv-limit', ['exports', 'ember-flexberry/models/flexberry-adv-limit'], function (exports, _emberFlexberryModelsFlexberryAdvLimit) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryModelsFlexberryAdvLimit['default'];
    }
  });
});
define('dummy/models/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-audit-entity', ['exports', 'ember-flexberry-data/models/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-audit-entity'], function (exports, _emberFlexberryDataModelsICSSoftSTORMNETBusinessAuditObjectsAuditEntity) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataModelsICSSoftSTORMNETBusinessAuditObjectsAuditEntity['default'];
    }
  });
});
define('dummy/models/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-audit-field', ['exports', 'ember-flexberry-data/models/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-audit-field'], function (exports, _emberFlexberryDataModelsICSSoftSTORMNETBusinessAuditObjectsAuditField) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataModelsICSSoftSTORMNETBusinessAuditObjectsAuditField['default'];
    }
  });
});
define('dummy/models/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-object-type', ['exports', 'ember-flexberry-data/models/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-object-type'], function (exports, _emberFlexberryDataModelsICSSoftSTORMNETBusinessAuditObjectsObjectType) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataModelsICSSoftSTORMNETBusinessAuditObjectsObjectType['default'];
    }
  });
});
define('dummy/models/i-c-s-soft-s-t-o-r-m-n-e-t-security-agent', ['exports', 'ember-flexberry-data/models/i-c-s-soft-s-t-o-r-m-n-e-t-security-agent'], function (exports, _emberFlexberryDataModelsICSSoftSTORMNETSecurityAgent) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataModelsICSSoftSTORMNETSecurityAgent['default'];
    }
  });
});
define('dummy/models/i-c-s-soft-s-t-o-r-m-n-e-t-security-link-group', ['exports', 'ember-flexberry-data/models/i-c-s-soft-s-t-o-r-m-n-e-t-security-link-group'], function (exports, _emberFlexberryDataModelsICSSoftSTORMNETSecurityLinkGroup) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataModelsICSSoftSTORMNETSecurityLinkGroup['default'];
    }
  });
});
define('dummy/models/i-c-s-soft-s-t-o-r-m-n-e-t-security-session', ['exports', 'ember-flexberry-data/models/i-c-s-soft-s-t-o-r-m-n-e-t-security-session'], function (exports, _emberFlexberryDataModelsICSSoftSTORMNETSecuritySession) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataModelsICSSoftSTORMNETSecuritySession['default'];
    }
  });
});
define('dummy/models/i-i-s-caseberry-logging-objects-application-log', ['exports', 'ember-flexberry/models/i-i-s-caseberry-logging-objects-application-log'], function (exports, _emberFlexberryModelsIISCaseberryLoggingObjectsApplicationLog) {
  /**
   * @module ember-flexberry
   */
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryModelsIISCaseberryLoggingObjectsApplicationLog['default'];
    }
  });
});
define('dummy/models/model-without-validation', ['exports', 'ember-flexberry-data/models/model-without-validation'], function (exports, _emberFlexberryDataModelsModelWithoutValidation) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataModelsModelWithoutValidation['default'];
    }
  });
});
define('dummy/models/model', ['exports', 'ember-flexberry-data/models/model'], function (exports, _emberFlexberryDataModelsModel) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataModelsModel['default'];
    }
  });
});
define('dummy/models/new-platform-flexberry-flexberry-user-setting', ['exports', 'ember-flexberry/models/new-platform-flexberry-flexberry-user-setting'], function (exports, _emberFlexberryModelsNewPlatformFlexberryFlexberryUserSetting) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryModelsNewPlatformFlexberryFlexberryUserSetting['default'];
    }
  });
});
define('dummy/models/new-platform-flexberry-g-i-s-layer-link', ['exports', 'ember-flexberry-gis/models/new-platform-flexberry-g-i-s-layer-link'], function (exports, _emberFlexberryGisModelsNewPlatformFlexberryGISLayerLink) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisModelsNewPlatformFlexberryGISLayerLink['default'];
    }
  });
});
define('dummy/models/new-platform-flexberry-g-i-s-layer-metadata', ['exports', 'ember-flexberry-gis/models/new-platform-flexberry-g-i-s-layer-metadata'], function (exports, _emberFlexberryGisModelsNewPlatformFlexberryGISLayerMetadata) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisModelsNewPlatformFlexberryGISLayerMetadata['default'];
    }
  });
});
define('dummy/models/new-platform-flexberry-g-i-s-link-metadata', ['exports', 'ember-flexberry-gis/models/new-platform-flexberry-g-i-s-link-metadata'], function (exports, _emberFlexberryGisModelsNewPlatformFlexberryGISLinkMetadata) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisModelsNewPlatformFlexberryGISLinkMetadata['default'];
    }
  });
});
define('dummy/models/new-platform-flexberry-g-i-s-link-parameter', ['exports', 'ember-flexberry-gis/models/new-platform-flexberry-g-i-s-link-parameter'], function (exports, _emberFlexberryGisModelsNewPlatformFlexberryGISLinkParameter) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisModelsNewPlatformFlexberryGISLinkParameter['default'];
    }
  });
});
define('dummy/models/new-platform-flexberry-g-i-s-map-layer', ['exports', 'ember-flexberry-gis/models/new-platform-flexberry-g-i-s-map-layer'], function (exports, _emberFlexberryGisModelsNewPlatformFlexberryGISMapLayer) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisModelsNewPlatformFlexberryGISMapLayer['default'];
    }
  });
});
define('dummy/models/new-platform-flexberry-g-i-s-map-object-setting', ['exports', 'ember-flexberry-gis/models/new-platform-flexberry-g-i-s-map-object-setting'], function (exports, _emberFlexberryGisModelsNewPlatformFlexberryGISMapObjectSetting) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisModelsNewPlatformFlexberryGISMapObjectSetting['default'];
    }
  });
});
define('dummy/models/new-platform-flexberry-g-i-s-map', ['exports', 'ember-flexberry-gis/models/new-platform-flexberry-g-i-s-map'], function (exports, _emberFlexberryGisModelsNewPlatformFlexberryGISMap) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisModelsNewPlatformFlexberryGISMap['default'];
    }
  });
});
define('dummy/models/new-platform-flexberry-g-i-s-parameter-metadata', ['exports', 'ember-flexberry-gis/models/new-platform-flexberry-g-i-s-parameter-metadata'], function (exports, _emberFlexberryGisModelsNewPlatformFlexberryGISParameterMetadata) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisModelsNewPlatformFlexberryGISParameterMetadata['default'];
    }
  });
});
define('dummy/models/new-platform-flexberry-services-lock', ['exports', 'ember-flexberry/models/new-platform-flexberry-services-lock'], function (exports, _emberFlexberryModelsNewPlatformFlexberryServicesLock) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryModelsNewPlatformFlexberryServicesLock['default'];
    }
  });
});
define('dummy/models/offline-model', ['exports', 'ember-flexberry-data/models/offline-model'], function (exports, _emberFlexberryDataModelsOfflineModel) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataModelsOfflineModel['default'];
    }
  });
});
define('dummy/resolver', ['exports', 'ember-flexberry/resolver'], function (exports, _emberFlexberryResolver) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryResolver['default'];
    }
  });
});
define('dummy/router', ['exports', 'ember', 'dummy/config/environment'], function (exports, _ember, _dummyConfigEnvironment) {

  var Router = _ember['default'].Router.extend({
    location: _dummyConfigEnvironment['default'].locationType
  });

  Router.map(function () {
    // Maps routes (list, edit, create).
    this.route('maps');
    this.route('map', { path: 'maps/:id' });
    this.route('map.new', { path: 'maps/new' });

    // Map test routes.
    this.route('api-test-map', { path: 'api-test-map/:id' });

    // Layer metadata routes (list, edit, create).
    this.route('new-platform-flexberry-g-i-s-layer-metadata-l', { path: 'layer-metadata' });
    this.route('new-platform-flexberry-g-i-s-layer-metadata-e', { path: 'layer-metadata/:id' });
    this.route('new-platform-flexberry-g-i-s-layer-metadata-e.new', { path: 'layer-metadata/new' });

    //Map object settings routes (list, edit, create).
    this.route('new-platform-flexberry-g-i-s-map-object-setting-l', { path: 'map-object-setting' });
    this.route('new-platform-flexberry-g-i-s-map-object-setting-e', { path: 'map-object-setting/:id' });
    this.route('new-platform-flexberry-g-i-s-map-object-setting-e.new', { path: 'map-object-setting/new' });

    // Maps and metadata search form's route.
    this.route('gis-search-form', { path: 'search' });

    // Components examples routes (sorted by component's names).
    this.route('components-examples/flexberry-maplayers/settings-example');

    this.route('components-examples/flexberry-boundingbox/settings-example');
    this.route('geojson-map');
    this.route('kml-map');
  });

  exports['default'] = Router;
});
define('dummy/routes/api-test-map', ['exports', 'dummy/routes/map'], function (exports, _dummyRoutesMap) {

  /**
    Map edit route.
  
    @class MapRoute
    @extends EditMapRoute
    @uses EditFormRouteOperationsIndicationMixin, MapRouteCswLoaderMixin
  */
  exports['default'] = _dummyRoutesMap['default'].extend({
    actions: {
      refreshMap: function refreshMap() {
        this.refresh();
      }
    }
  });
});
/**
  @module ember-flexberry-gis-dummy
*/
define('dummy/routes/application', ['exports', 'ember', 'ember-flexberry/mixins/modal-application-route'], function (exports, _ember, _emberFlexberryMixinsModalApplicationRoute) {

  /**
    Application route.
  
    @class ApplicationRoute
    @extends <a href="http://emberjs.com/api/classes/Ember.Route.html">Ember.Route</a>
  */
  exports['default'] = _ember['default'].Route.extend(_emberFlexberryMixinsModalApplicationRoute['default'], {});
});
/**
  @module ember-flexberry-gis-dummy
*/
define('dummy/routes/components-examples/flexberry-boundingbox/settings-example', ['exports', 'ember', 'ember-flexberry-data/utils/generate-unique-id'], function (exports, _ember, _emberFlexberryDataUtilsGenerateUniqueId) {
  exports['default'] = _ember['default'].Route.extend({

    /**
      Returns model related to current route.
      @method model
    */
    model: function model(params) {
      var store = this.get('store');

      // Create map model.
      var map = store.createRecord('new-platform-flexberry-g-i-s-map', {
        id: (0, _emberFlexberryDataUtilsGenerateUniqueId['default'])(),
        name: 'testmap',
        lat: 43.4012499836,
        lng: 39.8487556040693,
        zoom: 9.39874552061525,
        'public': true,
        coordinateReferenceSystem: '{"code":"EPSG:4326"}'
      });

      // Create layer model & add to map model.
      var openStreetMapLayer = store.createRecord('new-platform-flexberry-g-i-s-map-layer', {
        id: (0, _emberFlexberryDataUtilsGenerateUniqueId['default'])(),
        name: 'OSM',
        type: 'tile',
        visibility: true,
        index: 0,
        coordinateReferenceSystem: '{"code":"EPSG:3857","definition":null}',
        settings: '{"opacity": 1, "url":"http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"}'
      });
      map.get('mapLayer').pushObject(openStreetMapLayer);
      return map;
    }
  });
});
define('dummy/routes/edit-form', ['exports', 'ember-flexberry/routes/edit-form'], function (exports, _emberFlexberryRoutesEditForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryRoutesEditForm['default'];
    }
  });
});
define('dummy/routes/gis-search-form', ['exports', 'ember-flexberry-gis/routes/gis-search-form'], function (exports, _emberFlexberryGisRoutesGisSearchForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisRoutesGisSearchForm['default'];
    }
  });
});
define('dummy/routes/i-i-s-caseberry-logging-objects-application-log-e', ['exports', 'ember-flexberry/routes/i-i-s-caseberry-logging-objects-application-log-e'], function (exports, _emberFlexberryRoutesIISCaseberryLoggingObjectsApplicationLogE) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryRoutesIISCaseberryLoggingObjectsApplicationLogE['default'];
    }
  });
});
define('dummy/routes/i-i-s-caseberry-logging-objects-application-log-l', ['exports', 'ember-flexberry/routes/i-i-s-caseberry-logging-objects-application-log-l'], function (exports, _emberFlexberryRoutesIISCaseberryLoggingObjectsApplicationLogL) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryRoutesIISCaseberryLoggingObjectsApplicationLogL['default'];
    }
  });
});
define('dummy/routes/index', ['exports', 'ember'], function (exports, _ember) {

  /**
    Index route.
  
    @class IndexRoute
    @extends <a href="http://emberjs.com/api/classes/Ember.Route.html">Ember.Route</a>
  */
  exports['default'] = _ember['default'].Route.extend({});
});
/**
  @module ember-flexberry-gis-dummy
*/
define('dummy/routes/list-form', ['exports', 'ember-flexberry/routes/list-form'], function (exports, _emberFlexberryRoutesListForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryRoutesListForm['default'];
    }
  });
});
define('dummy/routes/map', ['exports', 'ember-flexberry-gis/routes/edit-map', 'ember-flexberry/mixins/edit-form-route-operations-indication'], function (exports, _emberFlexberryGisRoutesEditMap, _emberFlexberryMixinsEditFormRouteOperationsIndication) {

  /**
    Map edit route.
  
    @class MapRoute
    @extends EditMapRoute
    @uses EditFormRouteOperationsIndicationMixin, MapRouteCswLoaderMixin
  */
  exports['default'] = _emberFlexberryGisRoutesEditMap['default'].extend(_emberFlexberryMixinsEditFormRouteOperationsIndication['default'], {
    access: {
      map: true,
      mapLayerModel: [],
      mapLayerData: [],
      presenceLayerInGeoportal: []
    },

    afterModel: function afterModel(model) {
      this.set('access.mapLayerModel', model.get('mapLayer').map(function (r) {
        return r.id;
      }));
      this.set('access.mapLayerData', model.get('mapLayer').map(function (r) {
        return r.id;
      }));

      this._super.apply(this, arguments);
    }

  });
});
/**
  @module ember-flexberry-gis-dummy
*/
define('dummy/routes/map/new', ['exports', 'ember-flexberry-gis/routes/edit-map-new', 'ember-flexberry/mixins/edit-form-route-operations-indication'], function (exports, _emberFlexberryGisRoutesEditMapNew, _emberFlexberryMixinsEditFormRouteOperationsIndication) {

  /**
    New map edit route.
  
    @class NewMapRoute
    @extends EditMapNewRoute
    @uses EditFormRouteOperationsIndicationMixin
  */
  exports['default'] = _emberFlexberryGisRoutesEditMapNew['default'].extend(_emberFlexberryMixinsEditFormRouteOperationsIndication['default'], {
    /**
      Name of template to be rendered.
       @property templateName
      @type String
      @default 'map'
    */
    templateName: 'map'
  });
});
/**
  @module ember-flexberry-gis-dummy
*/
define('dummy/routes/maps', ['exports', 'ember-flexberry-gis/routes/list-map'], function (exports, _emberFlexberryGisRoutesListMap) {

  /**
    Maps list route.
  
    @class MapsRoute
    @extends ListMapRoute
  */
  exports['default'] = _emberFlexberryGisRoutesListMap['default'].extend({
    /**
      Defined developer user settings.
      For default userSetting use empty name ('').
      Property `<componentName>` may contain any of properties: `colsOrder`, `sorting`, `colsWidth` or being empty.
       ```javascript
      {
        <componentName>: {
          <settingName>: {
            colsOrder: [ { propName :<colName>, hide: true|false }, ... ],
            sorting: [{ propName: <colName>, direction: "asc"|"desc" }, ... ],
            colsWidths: [ <colName>:<colWidth>, ... ],
          },
          ...
        },
        ...
      }
      ```
       @property developerUserSettings
      @type Object
      @default { NewPlatformFlexberryGISMapL: {} }
    */
    developerUserSettings: { NewPlatformFlexberryGISMapL: {} }
  });
});
/**
  @module ember-flexberry-gis-dummy
*/
define('dummy/routes/new-platform-flexberry-g-i-s-layer-metadata-e', ['exports', 'ember-flexberry-gis/routes/new-platform-flexberry-g-i-s-layer-metadata-e'], function (exports, _emberFlexberryGisRoutesNewPlatformFlexberryGISLayerMetadataE) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisRoutesNewPlatformFlexberryGISLayerMetadataE['default'];
    }
  });
});
define('dummy/routes/new-platform-flexberry-g-i-s-layer-metadata-e/new', ['exports', 'ember-flexberry-gis/routes/new-platform-flexberry-g-i-s-layer-metadata-e/new'], function (exports, _emberFlexberryGisRoutesNewPlatformFlexberryGISLayerMetadataENew) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisRoutesNewPlatformFlexberryGISLayerMetadataENew['default'];
    }
  });
});
define('dummy/routes/new-platform-flexberry-g-i-s-layer-metadata-l', ['exports', 'ember-flexberry-gis/routes/new-platform-flexberry-g-i-s-layer-metadata-l'], function (exports, _emberFlexberryGisRoutesNewPlatformFlexberryGISLayerMetadataL) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisRoutesNewPlatformFlexberryGISLayerMetadataL['default'];
    }
  });
});
define('dummy/routes/new-platform-flexberry-g-i-s-map-object-setting-e', ['exports', 'ember-flexberry/routes/edit-form'], function (exports, _emberFlexberryRoutesEditForm) {
  exports['default'] = _emberFlexberryRoutesEditForm['default'].extend({
    modelProjection: 'MapObjectSettingE',
    modelName: 'new-platform-flexberry-g-i-s-map-object-setting'
  });
});
define('dummy/routes/new-platform-flexberry-g-i-s-map-object-setting-e/new', ['exports', 'ember-flexberry/routes/edit-form-new'], function (exports, _emberFlexberryRoutesEditFormNew) {
  exports['default'] = _emberFlexberryRoutesEditFormNew['default'].extend({
    modelProjection: 'MapObjectSettingE',
    modelName: 'new-platform-flexberry-g-i-s-map-object-setting',
    templateName: 'new-platform-flexberry-g-i-s-map-object-setting-e'
  });
});
define('dummy/routes/new-platform-flexberry-g-i-s-map-object-setting-l', ['exports', 'ember-flexberry/routes/list-form'], function (exports, _emberFlexberryRoutesListForm) {
  exports['default'] = _emberFlexberryRoutesListForm['default'].extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'MapObjectSettingL'
    */
    modelProjection: 'MapObjectSettingL',

    /**
      Name of model to be used as list's records types.
       @property modelName
      @type String
      @default 'new-platform-flexberry-g-i-s-map-object-setting'
    */
    modelName: 'new-platform-flexberry-g-i-s-map-object-setting',

    /**
      Defined user settings developer.
      For default userSetting use empty name ('').
      Property `<componentName>` may contain any of properties: `colsOrder`, `sorting`, `colsWidth` or being empty.
       ```javascript
      {
        <componentName>: {
          <settingName>: {
            colsOrder: [ { propName :<colName>, hide: true|false }, ... ],
            sorting: [{ propName: <colName>, direction: "asc"|"desc" }, ... ],
            colsWidths: [ <colName>:<colWidth>, ... ],
          },
          ...
        },
        ...
      }
      ```
       @property developerUserSettings
      @type Object
      @default {}
    */
    developerUserSettings: { NewPlatformFlexberryGISMapObjectSettingL: {} }
  });
});
define('dummy/routes/new-platform-flexberry-services-lock-list', ['exports', 'ember-flexberry/routes/new-platform-flexberry-services-lock-list'], function (exports, _emberFlexberryRoutesNewPlatformFlexberryServicesLockList) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryRoutesNewPlatformFlexberryServicesLockList['default'];
    }
  });
});
define('dummy/serializers/application-offline', ['exports', 'ember-data', 'ember-flexberry-data'], function (exports, _emberData, _emberFlexberryData) {

  /**
    Application offline serializer.
  
    @class ApplicationOfflineSerializer
    @extends OfflineSerializer
  */
  exports['default'] = _emberFlexberryData.Serializer.Offline.extend(_emberData['default'].EmbeddedRecordsMixin, {
    attrs: {}
  });
});
/**
  @module ember-flexberry-gis-dummy
*/
define('dummy/serializers/application', ['exports', 'ember-flexberry-data'], function (exports, _emberFlexberryData) {

  /**
    Application serializer.
  
    @class ApplicationSerializer
    @extends OdataSerializer
  */
  exports['default'] = _emberFlexberryData.Serializer.Odata.extend({});
});
/**
  @module ember-flexberry-gis-dummy
*/
define('dummy/serializers/base', ['exports', 'ember-flexberry-data/serializers/base'], function (exports, _emberFlexberryDataSerializersBase) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataSerializersBase['default'];
    }
  });
});
define('dummy/serializers/flexberry-adv-limit', ['exports', 'ember-flexberry/serializers/flexberry-adv-limit'], function (exports, _emberFlexberrySerializersFlexberryAdvLimit) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberrySerializersFlexberryAdvLimit['default'];
    }
  });
});
define('dummy/serializers/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-audit-entity-offline', ['exports', 'ember-flexberry-data/serializers/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-audit-entity-offline'], function (exports, _emberFlexberryDataSerializersICSSoftSTORMNETBusinessAuditObjectsAuditEntityOffline) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataSerializersICSSoftSTORMNETBusinessAuditObjectsAuditEntityOffline['default'];
    }
  });
});
define('dummy/serializers/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-audit-entity', ['exports', 'ember-flexberry-data/serializers/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-audit-entity'], function (exports, _emberFlexberryDataSerializersICSSoftSTORMNETBusinessAuditObjectsAuditEntity) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataSerializersICSSoftSTORMNETBusinessAuditObjectsAuditEntity['default'];
    }
  });
});
define('dummy/serializers/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-audit-field-offline', ['exports', 'ember-flexberry-data/serializers/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-audit-field-offline'], function (exports, _emberFlexberryDataSerializersICSSoftSTORMNETBusinessAuditObjectsAuditFieldOffline) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataSerializersICSSoftSTORMNETBusinessAuditObjectsAuditFieldOffline['default'];
    }
  });
});
define('dummy/serializers/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-audit-field', ['exports', 'ember-flexberry-data/serializers/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-audit-field'], function (exports, _emberFlexberryDataSerializersICSSoftSTORMNETBusinessAuditObjectsAuditField) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataSerializersICSSoftSTORMNETBusinessAuditObjectsAuditField['default'];
    }
  });
});
define('dummy/serializers/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-object-type-offline', ['exports', 'ember-flexberry-data/serializers/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-object-type-offline'], function (exports, _emberFlexberryDataSerializersICSSoftSTORMNETBusinessAuditObjectsObjectTypeOffline) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataSerializersICSSoftSTORMNETBusinessAuditObjectsObjectTypeOffline['default'];
    }
  });
});
define('dummy/serializers/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-object-type', ['exports', 'ember-flexberry-data/serializers/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-object-type'], function (exports, _emberFlexberryDataSerializersICSSoftSTORMNETBusinessAuditObjectsObjectType) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataSerializersICSSoftSTORMNETBusinessAuditObjectsObjectType['default'];
    }
  });
});
define('dummy/serializers/i-c-s-soft-s-t-o-r-m-n-e-t-security-agent-offline', ['exports', 'ember-flexberry-data/serializers/i-c-s-soft-s-t-o-r-m-n-e-t-security-agent-offline'], function (exports, _emberFlexberryDataSerializersICSSoftSTORMNETSecurityAgentOffline) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataSerializersICSSoftSTORMNETSecurityAgentOffline['default'];
    }
  });
});
define('dummy/serializers/i-c-s-soft-s-t-o-r-m-n-e-t-security-agent', ['exports', 'ember-flexberry-data/serializers/i-c-s-soft-s-t-o-r-m-n-e-t-security-agent'], function (exports, _emberFlexberryDataSerializersICSSoftSTORMNETSecurityAgent) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataSerializersICSSoftSTORMNETSecurityAgent['default'];
    }
  });
});
define('dummy/serializers/i-c-s-soft-s-t-o-r-m-n-e-t-security-link-group', ['exports', 'ember-flexberry-data/serializers/i-c-s-soft-s-t-o-r-m-n-e-t-security-link-group'], function (exports, _emberFlexberryDataSerializersICSSoftSTORMNETSecurityLinkGroup) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataSerializersICSSoftSTORMNETSecurityLinkGroup['default'];
    }
  });
});
define('dummy/serializers/i-c-s-soft-s-t-o-r-m-n-e-t-security-session', ['exports', 'ember-flexberry-data/serializers/i-c-s-soft-s-t-o-r-m-n-e-t-security-session'], function (exports, _emberFlexberryDataSerializersICSSoftSTORMNETSecuritySession) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataSerializersICSSoftSTORMNETSecuritySession['default'];
    }
  });
});
define('dummy/serializers/i-i-s-caseberry-logging-objects-application-log', ['exports', 'ember-flexberry/serializers/i-i-s-caseberry-logging-objects-application-log'], function (exports, _emberFlexberrySerializersIISCaseberryLoggingObjectsApplicationLog) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberrySerializersIISCaseberryLoggingObjectsApplicationLog['default'];
    }
  });
});
define('dummy/serializers/new-platform-flexberry-flexberry-user-setting', ['exports', 'ember-flexberry/serializers/new-platform-flexberry-flexberry-user-setting'], function (exports, _emberFlexberrySerializersNewPlatformFlexberryFlexberryUserSetting) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberrySerializersNewPlatformFlexberryFlexberryUserSetting['default'];
    }
  });
});
define('dummy/serializers/new-platform-flexberry-g-i-s-layer-link', ['exports', 'ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-layer-link'], function (exports, _emberFlexberryGisSerializersNewPlatformFlexberryGISLayerLink) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisSerializersNewPlatformFlexberryGISLayerLink['default'];
    }
  });
});
define('dummy/serializers/new-platform-flexberry-g-i-s-layer-metadata', ['exports', 'ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-layer-metadata'], function (exports, _emberFlexberryGisSerializersNewPlatformFlexberryGISLayerMetadata) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisSerializersNewPlatformFlexberryGISLayerMetadata['default'];
    }
  });
});
define('dummy/serializers/new-platform-flexberry-g-i-s-link-metadata', ['exports', 'ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-link-metadata'], function (exports, _emberFlexberryGisSerializersNewPlatformFlexberryGISLinkMetadata) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisSerializersNewPlatformFlexberryGISLinkMetadata['default'];
    }
  });
});
define('dummy/serializers/new-platform-flexberry-g-i-s-link-parameter', ['exports', 'ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-link-parameter'], function (exports, _emberFlexberryGisSerializersNewPlatformFlexberryGISLinkParameter) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisSerializersNewPlatformFlexberryGISLinkParameter['default'];
    }
  });
});
define('dummy/serializers/new-platform-flexberry-g-i-s-map-layer', ['exports', 'ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-map-layer'], function (exports, _emberFlexberryGisSerializersNewPlatformFlexberryGISMapLayer) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisSerializersNewPlatformFlexberryGISMapLayer['default'];
    }
  });
});
define('dummy/serializers/new-platform-flexberry-g-i-s-map-object-setting', ['exports', 'ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-map-object-setting'], function (exports, _emberFlexberryGisSerializersNewPlatformFlexberryGISMapObjectSetting) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisSerializersNewPlatformFlexberryGISMapObjectSetting['default'];
    }
  });
});
define('dummy/serializers/new-platform-flexberry-g-i-s-map', ['exports', 'ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-map'], function (exports, _emberFlexberryGisSerializersNewPlatformFlexberryGISMap) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisSerializersNewPlatformFlexberryGISMap['default'];
    }
  });
});
define('dummy/serializers/new-platform-flexberry-g-i-s-parameter-metadata', ['exports', 'ember-flexberry-gis/serializers/new-platform-flexberry-g-i-s-parameter-metadata'], function (exports, _emberFlexberryGisSerializersNewPlatformFlexberryGISParameterMetadata) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisSerializersNewPlatformFlexberryGISParameterMetadata['default'];
    }
  });
});
define('dummy/serializers/new-platform-flexberry-services-lock', ['exports', 'ember-flexberry/serializers/new-platform-flexberry-services-lock'], function (exports, _emberFlexberrySerializersNewPlatformFlexberryServicesLock) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberrySerializersNewPlatformFlexberryServicesLock['default'];
    }
  });
});
define('dummy/serializers/odata', ['exports', 'ember-flexberry-data/serializers/odata'], function (exports, _emberFlexberryDataSerializersOdata) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataSerializersOdata['default'];
    }
  });
});
define('dummy/serializers/offline', ['exports', 'ember-flexberry-data/serializers/offline'], function (exports, _emberFlexberryDataSerializersOffline) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataSerializersOffline['default'];
    }
  });
});
define('dummy/services/adv-limit', ['exports', 'ember-flexberry/services/adv-limit'], function (exports, _emberFlexberryServicesAdvLimit) {
  exports['default'] = _emberFlexberryServicesAdvLimit['default'];
});
define('dummy/services/ajax', ['exports', 'ember-ajax/services/ajax'], function (exports, _emberAjaxServicesAjax) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberAjaxServicesAjax['default'];
    }
  });
});
define('dummy/services/app-state', ['exports', 'ember-flexberry/services/app-state'], function (exports, _emberFlexberryServicesAppState) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryServicesAppState['default'];
    }
  });
});
define('dummy/services/charts-render', ['exports', 'ember-flexberry-gis/services/charts-render'], function (exports, _emberFlexberryGisServicesChartsRender) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisServicesChartsRender['default'];
    }
  });
});
define('dummy/services/cols-config-menu', ['exports', 'ember', 'ember-flexberry/services/cols-config-menu', 'dummy/config/environment'], function (exports, _ember, _emberFlexberryServicesColsConfigMenu, _dummyConfigEnvironment) {

  var environment = _ember['default'].get(_dummyConfigEnvironment['default'], 'environment');
  _emberFlexberryServicesColsConfigMenu['default'].reopen({
    environment: environment
  });

  exports['default'] = _emberFlexberryServicesColsConfigMenu['default'];

  // export { default } from 'ember-flexberry/services/cols-config-menu';
});
define('dummy/services/compare', ['exports', 'ember-flexberry-gis/services/compare'], function (exports, _emberFlexberryGisServicesCompare) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisServicesCompare['default'];
    }
  });
});
define('dummy/services/detail-interaction', ['exports', 'ember-flexberry/services/detail-interaction'], function (exports, _emberFlexberryServicesDetailInteraction) {
  exports['default'] = _emberFlexberryServicesDetailInteraction['default'];
});
define('dummy/services/device', ['exports', 'ember-flexberry/services/device'], function (exports, _emberFlexberryServicesDevice) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryServicesDevice['default'];
    }
  });
});
define('dummy/services/dexie', ['exports', 'ember-flexberry-data/services/dexie'], function (exports, _emberFlexberryDataServicesDexie) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataServicesDexie['default'];
    }
  });
});
define('dummy/services/form-load-time-tracker', ['exports', 'ember-flexberry/services/form-load-time-tracker'], function (exports, _emberFlexberryServicesFormLoadTimeTracker) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryServicesFormLoadTimeTracker['default'];
    }
  });
});
define('dummy/services/i18n', ['exports', 'ember-i18n/services/i18n'], function (exports, _emberI18nServicesI18n) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberI18nServicesI18n['default'];
    }
  });
});
define('dummy/services/layers-styles-renderer', ['exports', 'ember-flexberry-gis/services/layers-styles-renderer'], function (exports, _emberFlexberryGisServicesLayersStylesRenderer) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisServicesLayersStylesRenderer['default'];
    }
  });
});
define('dummy/services/local-storage', ['exports', 'ember-flexberry-gis/services/local-storage'], function (exports, _emberFlexberryGisServicesLocalStorage) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisServicesLocalStorage['default'];
    }
  });
});
define('dummy/services/log', ['exports', 'ember-flexberry/services/log'], function (exports, _emberFlexberryServicesLog) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryServicesLog['default'];
    }
  });
});
define('dummy/services/lookup-events', ['exports', 'ember-flexberry/services/lookup-events'], function (exports, _emberFlexberryServicesLookupEvents) {
  exports['default'] = _emberFlexberryServicesLookupEvents['default'];
});
define('dummy/services/map-api', ['exports', 'ember-flexberry-gis/services/map-api'], function (exports, _emberFlexberryGisServicesMapApi) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisServicesMapApi['default'];
    }
  });
});
define('dummy/services/map-store', ['exports', 'ember-flexberry-gis/services/map-store'], function (exports, _emberFlexberryGisServicesMapStore) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisServicesMapStore['default'];
    }
  });
});
define('dummy/services/markers-styles-renderer', ['exports', 'ember-flexberry-gis/services/markers-styles-renderer'], function (exports, _emberFlexberryGisServicesMarkersStylesRenderer) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisServicesMarkersStylesRenderer['default'];
    }
  });
});
define('dummy/services/moment', ['exports', 'ember', 'dummy/config/environment', 'ember-moment/services/moment'], function (exports, _ember, _dummyConfigEnvironment, _emberMomentServicesMoment) {
  exports['default'] = _emberMomentServicesMoment['default'].extend({
    defaultFormat: _ember['default'].get(_dummyConfigEnvironment['default'], 'moment.outputFormat')
  });
});
define('dummy/services/objectlistview-events', ['exports', 'ember-flexberry/services/objectlistview-events'], function (exports, _emberFlexberryServicesObjectlistviewEvents) {
  exports['default'] = _emberFlexberryServicesObjectlistviewEvents['default'];
});
define('dummy/services/offline-globals', ['exports', 'ember-flexberry-data/services/offline-globals'], function (exports, _emberFlexberryDataServicesOfflineGlobals) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataServicesOfflineGlobals['default'];
    }
  });
});
define('dummy/services/param-gradient', ['exports', 'ember-flexberry-gis/services/param-gradient'], function (exports, _emberFlexberryGisServicesParamGradient) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisServicesParamGradient['default'];
    }
  });
});
define('dummy/services/perf', ['exports', 'ember', 'ember-flexberry/services/perf', 'dummy/config/environment'], function (exports, _ember, _emberFlexberryServicesPerf, _dummyConfigEnvironment) {

  var enabled = _ember['default'].get(_dummyConfigEnvironment['default'], 'APP.perf.enabled');
  if (_ember['default'].typeOf(enabled) === 'boolean') {
    _emberFlexberryServicesPerf['default'].reopen({
      enabled: enabled
    });
  }

  exports['default'] = _emberFlexberryServicesPerf['default'];
});
define('dummy/services/store', ['exports', 'ember-flexberry-data'], function (exports, _emberFlexberryData) {
  exports['default'] = _emberFlexberryData.Projection.OnlineStore.reopen(_emberFlexberryData.Projection.StoreMixin);
});
/**
  @module ember-flexberry-gis-dummy
*/
define('dummy/services/syncer', ['exports', 'ember-flexberry-data/services/syncer'], function (exports, _emberFlexberryDataServicesSyncer) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataServicesSyncer['default'];
    }
  });
});
define('dummy/services/user-settings', ['exports', 'ember-flexberry/services/user-settings'], function (exports, _emberFlexberryServicesUserSettings) {

  /**
    Application user settings service.
  
    @class UserSettingsService
    @extends <a href="http://emberjs.com/api/classes/Ember.Service.html">Ember.Service</a>
  */
  exports['default'] = _emberFlexberryServicesUserSettings['default'].extend({
    /**
      User name.
       @property userName
      @type String
      @default 'admin'
      @for _userSettingsService
    **/
    userName: 'admin',

    /**
      Returns current user name.
      Method must be overridden if application uses some authentication.
       @method getCurrentUser
      @return {String} Current user name.
    */
    getCurrentUser: function getCurrentUser() {
      var user = this.get('userName');
      return user;
    }
  });
});
/**
  @module ember-flexberry-gis-dummy
*/
define('dummy/services/user', ['exports', 'ember-flexberry-data/services/user'], function (exports, _emberFlexberryDataServicesUser) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataServicesUser['default'];
    }
  });
});
define('dummy/services/validations', ['exports', 'ember'], function (exports, _ember) {

  var set = _ember['default'].set;

  exports['default'] = _ember['default'].Service.extend({
    init: function init() {
      set(this, 'cache', {});
    }
  });
});
define("dummy/templates/advlimit-dialog-content", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/advlimit-dialog-content.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "advlimit-dialog-content", [], ["model", ["subexpr", "@mut", [["get", "model", ["loc", [null, [2, 8], [2, 13]]]]], [], []], "close", ["subexpr", "action", ["closeModalDialog"], [], ["loc", [null, [3, 8], [3, 35]]]], "message", ["subexpr", "@mut", [["get", "message", ["loc", [null, [4, 10], [4, 17]]]]], [], []]], ["loc", [null, [1, 0], [5, 2]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/advlimit-dialog", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "fragmentReason": {
            "name": "missing-wrapper",
            "problems": ["wrong-type"]
          },
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 10,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/advlimit-dialog.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "outlet", ["modal-content"], [], ["loc", [null, [9, 2], [9, 28]]]]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 11,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/advlimit-dialog.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "modal-dialog", [], ["title", ["subexpr", "@mut", [["get", "title", ["loc", [null, [2, 8], [2, 13]]]]], [], []], "sizeClass", "small", "close", "removeModalDialog", "created", "createdModalDialog", "useOkButton", false, "useCloseButton", false], 0, null, ["loc", [null, [1, 0], [10, 17]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define("dummy/templates/api-test-map", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 26,
              "column": 8
            },
            "end": {
              "line": 85,
              "column": 8
            }
          },
          "moduleName": "dummy/templates/api-test-map.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("          ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "flexberry-maplayers", [], ["class", "styled", "leafletMap", ["subexpr", "@mut", [["get", "leafletMap", ["loc", [null, [29, 23], [29, 33]]]]], [], []], "layers", ["subexpr", "get-with-dynamic-actions", [["get", "this", ["loc", [null, [30, 45], [30, 49]]]], "model.hierarchy"], ["hierarchyPropertyName", "layers", "pathKeyword", "layerPath", "dynamicActions", ["subexpr", "array", [["subexpr", "hash", [], ["on", "add", "actionName", "onMapLayerAdd", "actionArguments", ["subexpr", "array", ["{% layerPath %}"], [], ["loc", [null, [37, 34], [37, 59]]]]], ["loc", [null, [34, 16], [38, 17]]]], ["subexpr", "hash", [], ["on", "copy", "actionName", "onMapLayerCopy", "actionArguments", ["subexpr", "array", ["model.hierarchy"], [], ["loc", [null, [42, 34], [42, 59]]]]], ["loc", [null, [39, 16], [43, 17]]]], ["subexpr", "hash", [], ["on", "edit", "actionName", "onMapLayerEdit", "actionArguments", ["subexpr", "array", ["{% layerPath %}"], [], ["loc", [null, [47, 34], [47, 59]]]]], ["loc", [null, [44, 16], [48, 17]]]], ["subexpr", "hash", [], ["on", "remove", "actionName", "onMapLayerRemove", "actionArguments", ["subexpr", "array", ["{% layerPath %}"], [], ["loc", [null, [52, 34], [52, 59]]]]], ["loc", [null, [49, 16], [53, 17]]]], ["subexpr", "hash", [], ["on", "changeVisibility", "actionName", "onMapLayerChangeVisibility", "actionArguments", ["subexpr", "array", ["{% layerPath %}.visibility"], [], ["loc", [null, [57, 34], [57, 70]]]]], ["loc", [null, [54, 16], [58, 17]]]], ["subexpr", "hash", [], ["on", "changeOpacity", "actionName", "onMapLayerChangeOpacity", "actionArguments", ["subexpr", "array", ["{% layerPath %}.settingsAsObject.opacity"], [], ["loc", [null, [62, 34], [62, 84]]]]], ["loc", [null, [59, 16], [63, 17]]]], ["subexpr", "hash", [], ["on", "fitBounds", "actionName", "onMapLayerFitBounds", "actionArguments", ["subexpr", "array", ["{% layerPath %}.bounds"], [], ["loc", [null, [67, 34], [67, 66]]]]], ["loc", [null, [64, 16], [68, 17]]]], ["subexpr", "hash", [], ["on", "attributesEdit", "actionName", "onAttributesEdit", "actionArguments", ["subexpr", "array", ["{% layerPath %}", ["subexpr", "hash", [], ["itemsPath", "editedLayers", "selectedTabIndexPath", "editedLayersSelectedTabIndex", "foldedPath", "editedLayersPanelFolded", "loadingPath", "editedLayersPanelLoading"], ["loc", [null, [73, 20], [78, 21]]]]], [], ["loc", [null, [72, 34], [79, 19]]]]], ["loc", [null, [69, 16], [80, 17]]]]], [], ["loc", [null, [33, 29], [81, 15]]]]], ["loc", [null, [30, 19], [82, 13]]]], "add", ["subexpr", "action", ["onMapLayerAdd", "model.hierarchy"], [], ["loc", [null, [83, 16], [83, 58]]]]], ["loc", [null, [27, 10], [84, 12]]]]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 85,
              "column": 8
            },
            "end": {
              "line": 88,
              "column": 8
            }
          },
          "moduleName": "dummy/templates/api-test-map.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("          ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "ui form loading");
          dom.setAttribute(el1, "style", "height: 100%;");
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes() {
          return [];
        },
        statements: [],
        locals: [],
        templates: []
      };
    })();
    var child2 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 146,
              "column": 6
            },
            "end": {
              "line": 185,
              "column": 6
            }
          },
          "moduleName": "dummy/templates/api-test-map.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(14);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);
          morphs[2] = dom.createMorphAt(fragment, 5, 5, contextualElement);
          morphs[3] = dom.createMorphAt(fragment, 7, 7, contextualElement);
          morphs[4] = dom.createMorphAt(fragment, 9, 9, contextualElement);
          morphs[5] = dom.createMorphAt(fragment, 11, 11, contextualElement);
          morphs[6] = dom.createMorphAt(fragment, 13, 13, contextualElement);
          morphs[7] = dom.createMorphAt(fragment, 15, 15, contextualElement);
          morphs[8] = dom.createMorphAt(fragment, 17, 17, contextualElement);
          morphs[9] = dom.createMorphAt(fragment, 19, 19, contextualElement);
          morphs[10] = dom.createMorphAt(fragment, 21, 21, contextualElement);
          morphs[11] = dom.createMorphAt(fragment, 23, 23, contextualElement);
          morphs[12] = dom.createMorphAt(fragment, 25, 25, contextualElement);
          morphs[13] = dom.createMorphAt(fragment, 27, 27, contextualElement);
          return morphs;
        },
        statements: [["inline", "map-commands/full-extent", [], ["lat", ["subexpr", "@mut", [["get", "model.lat", ["loc", [null, [148, 14], [148, 23]]]]], [], []], "lng", ["subexpr", "@mut", [["get", "model.lng", ["loc", [null, [149, 14], [149, 23]]]]], [], []], "zoom", ["subexpr", "@mut", [["get", "model.zoom", ["loc", [null, [150, 15], [150, 25]]]]], [], []], "leafletMap", ["subexpr", "@mut", [["get", "leafletMap", ["loc", [null, [151, 21], [151, 31]]]]], [], []]], ["loc", [null, [147, 8], [152, 10]]]], ["inline", "map-commands/edit", [], ["mapModel", ["subexpr", "@mut", [["get", "model", ["loc", [null, [154, 19], [154, 24]]]]], [], []], "leafletMap", ["subexpr", "@mut", [["get", "leafletMap", ["loc", [null, [155, 21], [155, 31]]]]], [], []]], ["loc", [null, [153, 8], [156, 10]]]], ["inline", "scale-control", [], ["imperial", false, "leafletMap", ["subexpr", "@mut", [["get", "leafletMap", ["loc", [null, [159, 21], [159, 31]]]]], [], []]], ["loc", [null, [157, 8], [160, 10]]]], ["inline", "history-control", [], ["leafletMap", ["subexpr", "@mut", [["get", "leafletMap", ["loc", [null, [161, 37], [161, 47]]]]], [], []]], ["loc", [null, [161, 8], [161, 49]]]], ["inline", "map-tools/drag", [], ["leafletMap", ["subexpr", "@mut", [["get", "leafletMap", ["loc", [null, [162, 36], [162, 46]]]]], [], []]], ["loc", [null, [162, 8], [162, 48]]]], ["inline", "map-tools/zoom-in", [], ["leafletMap", ["subexpr", "@mut", [["get", "leafletMap", ["loc", [null, [163, 39], [163, 49]]]]], [], []]], ["loc", [null, [163, 8], [163, 51]]]], ["inline", "map-tools/zoom-out", [], ["leafletMap", ["subexpr", "@mut", [["get", "leafletMap", ["loc", [null, [164, 40], [164, 50]]]]], [], []]], ["loc", [null, [164, 8], [164, 52]]]], ["inline", "map-tools/identify", [], ["layerMode", ["subexpr", "@mut", [["get", "identifyToolLayerMode", ["loc", [null, [166, 20], [166, 41]]]]], [], []], "toolMode", ["subexpr", "@mut", [["get", "identifyToolToolMode", ["loc", [null, [167, 19], [167, 39]]]]], [], []], "bufferActive", ["subexpr", "@mut", [["get", "identifyToolBufferActive", ["loc", [null, [168, 23], [168, 47]]]]], [], []], "bufferUnits", ["subexpr", "@mut", [["get", "identifyToolBufferUnits", ["loc", [null, [169, 22], [169, 45]]]]], [], []], "bufferRadius", ["subexpr", "@mut", [["get", "identifyToolBufferRadius", ["loc", [null, [170, 23], [170, 47]]]]], [], []], "layers", ["subexpr", "@mut", [["get", "model.hierarchy", ["loc", [null, [171, 17], [171, 32]]]]], [], []], "leafletMap", ["subexpr", "@mut", [["get", "leafletMap", ["loc", [null, [172, 21], [172, 31]]]]], [], []]], ["loc", [null, [165, 8], [173, 10]]]], ["inline", "map-commands/go-to", [], ["leafletMap", ["subexpr", "@mut", [["get", "leafletMap", ["loc", [null, [174, 40], [174, 50]]]]], [], []]], ["loc", [null, [174, 8], [174, 52]]]], ["inline", "map-commands/locate", [], ["leafletMap", ["subexpr", "@mut", [["get", "leafletMap", ["loc", [null, [175, 41], [175, 51]]]]], [], []]], ["loc", [null, [175, 8], [175, 53]]]], ["inline", "map-commands/search", [], ["leafletMap", ["subexpr", "@mut", [["get", "leafletMap", ["loc", [null, [176, 41], [176, 51]]]]], [], []]], ["loc", [null, [176, 8], [176, 53]]]], ["inline", "map-tools/measure", [], ["leafletMap", ["subexpr", "@mut", [["get", "leafletMap", ["loc", [null, [177, 39], [177, 49]]]]], [], []]], ["loc", [null, [177, 8], [177, 51]]]], ["inline", "map-tools/draw", [], ["leafletMap", ["subexpr", "@mut", [["get", "leafletMap", ["loc", [null, [178, 36], [178, 46]]]]], [], []]], ["loc", [null, [178, 8], [178, 48]]]], ["inline", "map-commands/export", [], ["iconClass", "external share icon", "timeout", 30000, "defaultMapCaption", ["subexpr", "@mut", [["get", "model.name", ["loc", [null, [182, 28], [182, 38]]]]], [], []], "leafletMap", ["subexpr", "@mut", [["get", "leafletMap", ["loc", [null, [183, 21], [183, 31]]]]], [], []]], ["loc", [null, [179, 8], [184, 10]]]]],
        locals: [],
        templates: []
      };
    })();
    var child3 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 216,
                "column": 8
              },
              "end": {
                "line": 225,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/api-test-map.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "flexberry-layers", [], ["leafletContainer", ["subexpr", "@mut", [["get", "groupLayers", ["loc", [null, [221, 29], [221, 40]]]]], [], []], "layers", ["subexpr", "@mut", [["get", "model.hierarchy", ["loc", [null, [222, 19], [222, 34]]]]], [], []], "forMinimap", true], ["loc", [null, [220, 10], [224, 12]]]]],
          locals: ["groupLayers"],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 190,
              "column": 6
            },
            "end": {
              "line": 226,
              "column": 6
            }
          },
          "moduleName": "dummy/templates/api-test-map.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(3);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);
          morphs[2] = dom.createMorphAt(fragment, 5, 5, contextualElement);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["inline", "flexberry-layers", [], ["leafletMap", ["subexpr", "@mut", [["get", "leafletMap", ["loc", [null, [207, 21], [207, 31]]]]], [], []], "leafletContainer", ["subexpr", "@mut", [["get", "leafletMap", ["loc", [null, [208, 27], [208, 37]]]]], [], []], "layers", ["subexpr", "@mut", [["get", "model.hierarchy", ["loc", [null, [209, 17], [209, 32]]]]], [], []]], ["loc", [null, [206, 8], [210, 10]]]], ["inline", "switch-scale-control", [], ["leafletMap", ["subexpr", "@mut", [["get", "leafletMap", ["loc", [null, [212, 21], [212, 31]]]]], [], []], "updateWhenIdle", true, "scales", ["subexpr", "@mut", [["get", "switchScaleControlScales", ["loc", [null, [214, 17], [214, 41]]]]], [], []]], ["loc", [null, [211, 8], [215, 10]]]], ["block", "minimap-control", [], ["minimized", true, "leafletMap", ["subexpr", "@mut", [["get", "leafletMap", ["loc", [null, [218, 21], [218, 31]]]]], [], []]], 0, null, ["loc", [null, [216, 8], [225, 28]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 234,
            "column": 7
          }
        },
        "moduleName": "dummy/templates/api-test-map.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("h3");
        dom.setAttribute(el1, "class", "ui header");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("form");
        dom.setAttribute(el1, "class", "ui form flexberry-vertical-form");
        dom.setAttribute(el1, "role", "form");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "flexberry-edit-panel");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("button");
        dom.setAttribute(el4, "type", "button");
        dom.setAttribute(el4, "class", "ui button");
        var el5 = dom.createTextNode("Set layerInitCallback");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "sidebar-wrapper");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "ui very wide right sidebar pushable tabbar");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "data-tab", "treeview");
        dom.setAttribute(el4, "class", "ui tab treeview");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("h3");
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "data-tab", "search");
        dom.setAttribute(el4, "class", "ui tab search");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("h3");
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "data-tab", "identify");
        dom.setAttribute(el4, "class", "ui tab identify");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("h3");
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "data-tab", "bookmarks");
        dom.setAttribute(el4, "class", "ui tab bookmarks");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("h3");
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "row");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "sixteen wide column");
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "mappanel");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "pusher");
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [2]);
        var element1 = dom.childAt(element0, [5, 1, 1]);
        var element2 = dom.childAt(element0, [7]);
        var element3 = dom.childAt(element2, [3]);
        var element4 = dom.childAt(element3, [1]);
        var element5 = dom.childAt(element3, [3]);
        var element6 = dom.childAt(element3, [5]);
        var element7 = dom.childAt(element3, [7]);
        var element8 = dom.childAt(element0, [9]);
        var morphs = new Array(20);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]), 0, 0);
        morphs[1] = dom.createMorphAt(element0, 1, 1);
        morphs[2] = dom.createMorphAt(element0, 3, 3);
        morphs[3] = dom.createElementMorph(element1);
        morphs[4] = dom.createMorphAt(element2, 1, 1);
        morphs[5] = dom.createMorphAt(dom.childAt(element4, [1]), 0, 0);
        morphs[6] = dom.createMorphAt(element4, 3, 3);
        morphs[7] = dom.createMorphAt(dom.childAt(element5, [1]), 0, 0);
        morphs[8] = dom.createMorphAt(element5, 3, 3);
        morphs[9] = dom.createMorphAt(element5, 5, 5);
        morphs[10] = dom.createMorphAt(dom.childAt(element6, [1]), 0, 0);
        morphs[11] = dom.createMorphAt(element6, 3, 3);
        morphs[12] = dom.createMorphAt(element6, 5, 5);
        morphs[13] = dom.createMorphAt(dom.childAt(element7, [1]), 0, 0);
        morphs[14] = dom.createMorphAt(element7, 3, 3);
        morphs[15] = dom.createAttrMorph(element8, 'class');
        morphs[16] = dom.createMorphAt(element8, 1, 1);
        morphs[17] = dom.createMorphAt(dom.childAt(element0, [11, 1]), 1, 1);
        morphs[18] = dom.createMorphAt(dom.childAt(element0, [13, 1]), 1, 1);
        morphs[19] = dom.createMorphAt(element0, 15, 15);
        return morphs;
      },
      statements: [["inline", "t", ["forms.map.caption"], [], ["loc", [null, [1, 22], [1, 47]]]], ["inline", "ui-message", [], ["type", "success", "closeable", true, "visible", ["subexpr", "@mut", [["get", "showFormSuccessMessage", ["loc", [null, [6, 12], [6, 34]]]]], [], []], "caption", ["subexpr", "@mut", [["get", "formSuccessMessageCaption", ["loc", [null, [7, 12], [7, 37]]]]], [], []], "message", ["subexpr", "@mut", [["get", "formSuccessMessage", ["loc", [null, [8, 12], [8, 30]]]]], [], []], "onShow", ["subexpr", "action", ["onSuccessMessageShow"], [], ["loc", [null, [9, 11], [9, 42]]]], "onHide", ["subexpr", "action", ["onSuccessMessageHide"], [], ["loc", [null, [10, 11], [10, 42]]]]], ["loc", [null, [3, 2], [11, 4]]]], ["inline", "flexberry-error", [], ["error", ["subexpr", "@mut", [["get", "error", ["loc", [null, [12, 26], [12, 31]]]]], [], []]], ["loc", [null, [12, 2], [12, 33]]]], ["element", "action", ["applyApiSettings"], [], ["loc", [null, [15, 46], [15, 75]]]], ["inline", "flexberry-tab-bar", [], ["change", ["subexpr", "action", ["toggleSidebar"], [], ["loc", [null, [20, 13], [20, 37]]]], "items", ["subexpr", "@mut", [["get", "sidebarItems", ["loc", [null, [21, 12], [21, 24]]]]], [], []]], ["loc", [null, [19, 4], [22, 6]]]], ["inline", "t", ["forms.map.tabbar.treeview.caption"], [], ["loc", [null, [25, 12], [25, 53]]]], ["block", "if", [["get", "showTree", ["loc", [null, [26, 14], [26, 22]]]]], [], 0, 1, ["loc", [null, [26, 8], [88, 15]]]], ["inline", "t", ["forms.map.tabbar.search.caption"], [], ["loc", [null, [91, 12], [91, 51]]]], ["inline", "flexberry-search-panel", [], ["querySearch", ["subexpr", "action", ["querySearch"], [], ["loc", [null, [93, 22], [93, 44]]]], "clearSearch", ["subexpr", "action", ["clearSearch"], [], ["loc", [null, [94, 22], [94, 44]]]], "searchInProcess", ["subexpr", "@mut", [["get", "searchInProcess", ["loc", [null, [95, 26], [95, 41]]]]], [], []], "searchSettings", ["subexpr", "flexberry-search-properties-osm-ru", ["http://openstreetmap.ru/api/autocomplete?q={query}"], [], ["loc", [null, [96, 25], [96, 114]]]]], ["loc", [null, [92, 8], [97, 10]]]], ["inline", "layer-result-list", [], ["results", ["subexpr", "@mut", [["get", "searchResults", ["loc", [null, [99, 18], [99, 31]]]]], [], []], "serviceLayer", ["subexpr", "@mut", [["get", "serviceLayer", ["loc", [null, [100, 23], [100, 35]]]]], [], []], "leafletMap", ["subexpr", "@mut", [["get", "leafletMap", ["loc", [null, [101, 21], [101, 31]]]]], [], []], "featureSelected", ["subexpr", "action", ["onLayerFeatureSelected"], [], ["loc", [null, [102, 26], [102, 59]]]]], ["loc", [null, [98, 8], [103, 10]]]], ["inline", "t", ["forms.map.tabbar.identify.caption"], [], ["loc", [null, [106, 12], [106, 53]]]], ["inline", "flexberry-identify-panel", [], ["layerMode", ["subexpr", "@mut", [["get", "identifyToolLayerMode", ["loc", [null, [108, 20], [108, 41]]]]], [], []], "toolMode", ["subexpr", "@mut", [["get", "identifyToolToolMode", ["loc", [null, [109, 19], [109, 39]]]]], [], []], "bufferActive", ["subexpr", "@mut", [["get", "identifyToolBufferActive", ["loc", [null, [110, 23], [110, 47]]]]], [], []], "bufferUnits", ["subexpr", "@mut", [["get", "identifyToolBufferUnits", ["loc", [null, [111, 22], [111, 45]]]]], [], []], "bufferRadius", ["subexpr", "@mut", [["get", "identifyToolBufferRadius", ["loc", [null, [112, 23], [112, 47]]]]], [], []], "layers", ["subexpr", "@mut", [["get", "model.hierarchy", ["loc", [null, [113, 17], [113, 32]]]]], [], []], "leafletMap", ["subexpr", "@mut", [["get", "leafletMap", ["loc", [null, [114, 21], [114, 31]]]]], [], []], "identificationFinished", ["subexpr", "action", ["onIdentificationFinished"], [], ["loc", [null, [115, 33], [115, 68]]]]], ["loc", [null, [107, 8], [116, 10]]]], ["inline", "layer-result-list", [], ["results", ["subexpr", "@mut", [["get", "identifyToolResults", ["loc", [null, [118, 18], [118, 37]]]]], [], []], "serviceLayer", ["subexpr", "@mut", [["get", "serviceLayer", ["loc", [null, [119, 23], [119, 35]]]]], [], []], "leafletMap", ["subexpr", "@mut", [["get", "leafletMap", ["loc", [null, [120, 21], [120, 31]]]]], [], []], "featureSelected", ["subexpr", "action", ["onLayerFeatureSelected"], [], ["loc", [null, [121, 26], [121, 59]]]]], ["loc", [null, [117, 8], [122, 10]]]], ["inline", "t", ["forms.map.tabbar.bookmarks.caption"], [], ["loc", [null, [125, 12], [125, 54]]]], ["inline", "spatial-bookmark", [], ["leafletMap", ["subexpr", "@mut", [["get", "leafletMap", ["loc", [null, [127, 21], [127, 31]]]]], [], []], "storageKey", ["subexpr", "@mut", [["get", "model.id", ["loc", [null, [128, 21], [128, 29]]]]], [], []]], ["loc", [null, [126, 8], [129, 10]]]], ["attribute", "class", ["subexpr", "concat", ["bottompanel-wrapper", ["subexpr", "if", [["subexpr", "or", [["subexpr", "gt", [["get", "editedLayers.length", ["loc", [null, [133, 56], [133, 75]]]], 0], [], ["loc", [null, [133, 52], [133, 78]]]], ["get", "editedLayersPanelLoading", ["loc", [null, [133, 79], [133, 103]]]]], [], ["loc", [null, [133, 48], [133, 104]]]], "", " hidden"], [], ["loc", [null, [133, 44], [133, 118]]]]], [], ["loc", [null, [133, 13], [133, 120]]]]], ["inline", "flexberry-layers-attributes-panel", [], ["items", ["subexpr", "@mut", [["get", "editedLayers", ["loc", [null, [135, 12], [135, 24]]]]], [], []], "serviceLayer", ["subexpr", "@mut", [["get", "serviceLayer", ["loc", [null, [136, 19], [136, 31]]]]], [], []], "selectedTabIndex", ["subexpr", "@mut", [["get", "editedLayersSelectedTabIndex", ["loc", [null, [137, 23], [137, 51]]]]], [], []], "folded", ["subexpr", "@mut", [["get", "editedLayersPanelFolded", ["loc", [null, [138, 13], [138, 36]]]]], [], []], "settings", ["subexpr", "@mut", [["get", "editedLayersPanelSettings", ["loc", [null, [139, 15], [139, 40]]]]], [], []], "loading", ["subexpr", "@mut", [["get", "editedLayersPanelLoading", ["loc", [null, [140, 14], [140, 38]]]]], [], []], "leafletMap", ["subexpr", "@mut", [["get", "leafletMap", ["loc", [null, [141, 17], [141, 27]]]]], [], []]], ["loc", [null, [134, 4], [142, 6]]]], ["block", "flexberry-maptoolbar", [], [], 2, null, ["loc", [null, [146, 6], [185, 31]]]], ["block", "flexberry-map", [], ["zoomSnap", 1, "zoomDelta", 1, "lat", ["subexpr", "@mut", [["get", "model.lat", ["loc", [null, [193, 12], [193, 21]]]]], [], []], "lng", ["subexpr", "@mut", [["get", "model.lng", ["loc", [null, [194, 12], [194, 21]]]]], [], []], "zoom", ["subexpr", "@mut", [["get", "model.zoom", ["loc", [null, [195, 13], [195, 23]]]]], [], []], "zoomControl", true, "queryFilter", ["subexpr", "@mut", [["get", "queryFilter", ["loc", [null, [197, 20], [197, 31]]]]], [], []], "mapObjectSetting", ["subexpr", "@mut", [["get", "setting", ["loc", [null, [198, 25], [198, 32]]]]], [], []], "leafletInit", ["subexpr", "action", ["onMapLeafletInit", "leafletMap"], [], ["loc", [null, [199, 20], [199, 60]]]], "serviceLayerInit", ["subexpr", "action", ["onServiceLayerInit", "serviceLayer"], [], ["loc", [null, [200, 25], [200, 69]]]], "leafletDestroy", ["subexpr", "action", ["onMapLeafletDestroy", "leafletMap"], [], ["loc", [null, [201, 23], [201, 66]]]], "moveend", ["subexpr", "action", ["onMapMoveend", "model.lat", "model.lng"], [], ["loc", [null, [202, 16], [202, 63]]]], "zoomend", ["subexpr", "action", ["onMapZoomend", "model.zoom"], [], ["loc", [null, [203, 16], [203, 52]]]], "queryFinished", ["subexpr", "action", ["onIdentificationFinished"], [], ["loc", [null, [204, 22], [204, 57]]]]], 3, null, ["loc", [null, [190, 6], [226, 24]]]], ["inline", "flexberry-mapinfo", [], ["mapId", ["subexpr", "@mut", [["get", "model.id", ["loc", [null, [230, 10], [230, 18]]]]], [], []], "name", ["subexpr", "@mut", [["get", "model.name", ["loc", [null, [231, 9], [231, 19]]]]], [], []], "description", ["subexpr", "@mut", [["get", "model.description", ["loc", [null, [232, 16], [232, 33]]]]], [], []]], ["loc", [null, [229, 2], [233, 4]]]]],
      locals: [],
      templates: [child0, child1, child2, child3]
    };
  })());
});
define("dummy/templates/application-with-submenu", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "fragmentReason": {
            "name": "missing-wrapper",
            "problems": ["multiple-nodes", "wrong-type"]
          },
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 15,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/application-with-submenu.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("a");
          dom.setAttribute(el1, "class", "item");
          dom.setAttribute(el1, "href", "https://github.com/flexberry");
          dom.setAttribute(el1, "target", "_blank");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("img");
          dom.setAttribute(el2, "class", "ui centered image");
          dom.setAttribute(el2, "src", "assets/images/flexberry-logo.png");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("a");
          dom.setAttribute(el1, "class", "item");
          dom.setAttribute(el1, "target", "_blank");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var element1 = dom.childAt(fragment, [3]);
          var morphs = new Array(5);
          morphs[0] = dom.createAttrMorph(element0, 'title');
          morphs[1] = dom.createAttrMorph(element1, 'href');
          morphs[2] = dom.createAttrMorph(element1, 'title');
          morphs[3] = dom.createMorphAt(element1, 1, 1);
          morphs[4] = dom.createMorphAt(fragment, 5, 5, contextualElement);
          return morphs;
        },
        statements: [["attribute", "title", ["subexpr", "t", ["forms.application.sitemap.application-name.title"], [], ["loc", [null, [5, 11], [5, 67]]]]], ["attribute", "href", ["get", "addonVersionHref", ["loc", [null, [9, 12], [9, 28]]]]], ["attribute", "title", ["subexpr", "t", ["forms.application.sitemap.application-version.title"], [], ["loc", [null, [11, 11], [11, 70]]]]], ["inline", "t", ["forms.application.sitemap.application-version.caption"], ["version", ["subexpr", "@mut", [["get", "addonVersion", ["loc", [null, [12, 72], [12, 84]]]]], [], []]], ["loc", [null, [12, 4], [12, 86]]]], ["inline", "render", ["sitemap", ["get", "sitemap", ["loc", [null, [14, 21], [14, 28]]]]], [], ["loc", [null, [14, 2], [14, 30]]]]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type", "multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 42,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/application-with-submenu.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "id", "example-with-submenu");
        dom.setAttribute(el1, "class", "pusher");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "full height");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "ui fixed main menu");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "ui container");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("a");
        dom.setAttribute(el5, "class", "launch icon item");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("i");
        dom.setAttribute(el6, "class", "sidebar icon");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5, "class", "right menu");
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "ui main container segment flexberry-content");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "ui close left rail");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5, "class", "ui sticky transition visible");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("div");
        dom.setAttribute(el6, "class", "flexberry-submenu ui large violet pointing secondary vertical following fluid menu");
        var el7 = dom.createTextNode("\n            ");
        dom.appendChild(el6, el7);
        var el7 = dom.createComment("");
        dom.appendChild(el6, el7);
        var el7 = dom.createTextNode("\n          ");
        dom.appendChild(el6, el7);
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "ui main container");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element2 = dom.childAt(fragment, [1, 1]);
        var element3 = dom.childAt(element2, [1, 1, 1]);
        var element4 = dom.childAt(element2, [3]);
        var morphs = new Array(5);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createElementMorph(element3);
        morphs[2] = dom.createMorphAt(dom.childAt(element4, [1, 1, 1]), 1, 1);
        morphs[3] = dom.createMorphAt(element4, 3, 3);
        morphs[4] = dom.createMorphAt(dom.childAt(fragment, [3]), 1, 1);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["block", "ui-sidebar", [], ["class", "inverted vertical main menu"], 0, null, ["loc", [null, [1, 0], [15, 15]]]], ["element", "action", ["toggleSidebar"], [], ["loc", [null, [20, 11], [20, 37]]]], ["inline", "render", ["sitemap", ["get", "sitemap", ["loc", [null, [31, 31], [31, 38]]]]], [], ["loc", [null, [31, 12], [31, 40]]]], ["content", "outlet", ["loc", [null, [35, 6], [35, 16]]]], ["inline", "outlet", ["modal"], [], ["loc", [null, [40, 2], [40, 20]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define("dummy/templates/application", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "fragmentReason": {
            "name": "triple-curlies"
          },
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 6,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/application.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "map-only-container");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element10 = dom.childAt(fragment, [1]);
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(element10, 1, 1);
          morphs[1] = dom.createMorphAt(element10, 3, 3);
          return morphs;
        },
        statements: [["content", "outlet", ["loc", [null, [3, 4], [3, 14]]]], ["inline", "outlet", ["modal"], [], ["loc", [null, [4, 4], [4, 22]]]]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 7,
                "column": 2
              },
              "end": {
                "line": 22,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/application.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("a");
            dom.setAttribute(el1, "class", "item");
            dom.setAttribute(el1, "target", "_blank");
            var el2 = dom.createTextNode("\n      ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n    ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1]);
            var morphs = new Array(4);
            morphs[0] = dom.createAttrMorph(element0, 'href');
            morphs[1] = dom.createAttrMorph(element0, 'title');
            morphs[2] = dom.createMorphAt(element0, 1, 1);
            morphs[3] = dom.createMorphAt(fragment, 3, 3, contextualElement);
            return morphs;
          },
          statements: [["attribute", "href", ["get", "addonVersionHref", ["loc", [null, [16, 13], [16, 29]]]]], ["attribute", "title", ["subexpr", "t", ["forms.application.sitemap.application-version.title"], [], ["loc", [null, [18, 12], [18, 71]]]]], ["inline", "t", ["forms.application.sitemap.application-version.caption"], ["version", ["subexpr", "@mut", [["get", "addonVersion", ["loc", [null, [19, 74], [19, 86]]]]], [], []]], ["loc", [null, [19, 6], [19, 88]]]], ["inline", "render", ["sitemap", ["get", "sitemap", ["loc", [null, [21, 23], [21, 30]]]]], [], ["loc", [null, [21, 4], [21, 32]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 6,
              "column": 0
            },
            "end": {
              "line": 113,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/application.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "bgw-fix");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "background-logo");
          var el3 = dom.createTextNode("\n      ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("div");
          dom.setAttribute(el3, "class", "ui top attached");
          var el4 = dom.createTextNode("\n        ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("div");
          dom.setAttribute(el4, "class", "ui attached menu");
          var el5 = dom.createTextNode("\n          ");
          dom.appendChild(el4, el5);
          var el5 = dom.createElement("div");
          dom.setAttribute(el5, "class", "ui container flex-container");
          var el6 = dom.createTextNode("\n            ");
          dom.appendChild(el5, el6);
          var el6 = dom.createElement("a");
          dom.setAttribute(el6, "class", "launch icon item");
          var el7 = dom.createTextNode("\n              ");
          dom.appendChild(el6, el7);
          var el7 = dom.createComment("");
          dom.appendChild(el6, el7);
          var el7 = dom.createTextNode("\n              ");
          dom.appendChild(el6, el7);
          var el7 = dom.createElement("i");
          dom.setAttribute(el7, "class", "sidebar icon text-menu-show");
          var el8 = dom.createTextNode("\n                ");
          dom.appendChild(el7, el8);
          var el8 = dom.createElement("span");
          dom.setAttribute(el8, "class", "text_menu ");
          var el9 = dom.createTextNode("\n                  ");
          dom.appendChild(el8, el9);
          var el9 = dom.createComment("");
          dom.appendChild(el8, el9);
          var el9 = dom.createTextNode("\n                ");
          dom.appendChild(el8, el9);
          dom.appendChild(el7, el8);
          var el8 = dom.createTextNode("\n                ");
          dom.appendChild(el7, el8);
          var el8 = dom.createElement("span");
          dom.setAttribute(el8, "class", "text_menu hidden text-menu-hide");
          var el9 = dom.createTextNode("\n                  ");
          dom.appendChild(el8, el9);
          var el9 = dom.createComment("");
          dom.appendChild(el8, el9);
          var el9 = dom.createTextNode("\n                ");
          dom.appendChild(el8, el9);
          dom.appendChild(el7, el8);
          var el8 = dom.createTextNode("\n              ");
          dom.appendChild(el7, el8);
          dom.appendChild(el6, el7);
          var el7 = dom.createTextNode("\n              ");
          dom.appendChild(el6, el7);
          var el7 = dom.createElement("i");
          dom.setAttribute(el7, "class", "sidebar icon hidden text-menu-hide hidden-text");
          var el8 = dom.createTextNode("\n                ");
          dom.appendChild(el7, el8);
          var el8 = dom.createElement("span");
          dom.setAttribute(el8, "class", "text_menu hidden-text");
          var el9 = dom.createTextNode("\n                  ");
          dom.appendChild(el8, el9);
          var el9 = dom.createComment("");
          dom.appendChild(el8, el9);
          var el9 = dom.createTextNode("\n                ");
          dom.appendChild(el8, el9);
          dom.appendChild(el7, el8);
          var el8 = dom.createTextNode("\n              ");
          dom.appendChild(el7, el8);
          dom.appendChild(el6, el7);
          var el7 = dom.createTextNode("\n            ");
          dom.appendChild(el6, el7);
          dom.appendChild(el5, el6);
          var el6 = dom.createTextNode("\n          ");
          dom.appendChild(el5, el6);
          dom.appendChild(el4, el5);
          var el5 = dom.createTextNode("\n        ");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n      ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n      ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("a");
          dom.setAttribute(el3, "class", "item logo");
          dom.setAttribute(el3, "href", "https://github.com/flexberry");
          dom.setAttribute(el3, "target", "_blank");
          var el4 = dom.createTextNode("\n        ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("img");
          dom.setAttribute(el4, "class", "ui centered image");
          dom.setAttribute(el4, "src", "assets/images/flexberry-logo.png");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n      ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n      ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("div");
          dom.setAttribute(el3, "class", "page-header-caption");
          var el4 = dom.createElement("a");
          dom.setAttribute(el4, "href", "https://github.com/flexberry");
          var el5 = dom.createComment("");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n    ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "id", "example");
          dom.setAttribute(el1, "class", "pusher");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          var el3 = dom.createTextNode("\n      ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("div");
          dom.setAttribute(el3, "class", "bgw-opacity hidden");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n      ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("div");
          dom.setAttribute(el3, "class", "full height");
          var el4 = dom.createTextNode("\n        ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("div");
          dom.setAttribute(el4, "class", "flexberry-content ui attached segment");
          var el5 = dom.createTextNode("\n          ");
          dom.appendChild(el4, el5);
          var el5 = dom.createElement("div");
          dom.setAttribute(el5, "class", "ui main container");
          var el6 = dom.createTextNode("\n            ");
          dom.appendChild(el5, el6);
          var el6 = dom.createElement("div");
          dom.setAttribute(el6, "class", "stackable grid container");
          var el7 = dom.createTextNode("\n              ");
          dom.appendChild(el6, el7);
          var el7 = dom.createComment("");
          dom.appendChild(el6, el7);
          var el7 = dom.createTextNode("\n            ");
          dom.appendChild(el6, el7);
          dom.appendChild(el5, el6);
          var el6 = dom.createTextNode("\n          ");
          dom.appendChild(el5, el6);
          dom.appendChild(el4, el5);
          var el5 = dom.createTextNode("\n        ");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n      ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n    ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "ui main container");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "ui vertical footer segment");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "ui container flex-container");
          var el3 = dom.createTextNode("\n      ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("div");
          dom.setAttribute(el3, "class", "ui text menu");
          var el4 = dom.createTextNode("\n        ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("a");
          dom.setAttribute(el4, "class", "brand item");
          dom.setAttribute(el4, "href", "#");
          var el5 = dom.createTextNode("\n          ");
          dom.appendChild(el4, el5);
          var el5 = dom.createComment("");
          dom.appendChild(el4, el5);
          var el5 = dom.createTextNode("\n        ");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n        ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("div");
          dom.setAttribute(el4, "class", "right item");
          var el5 = dom.createTextNode("\n          ");
          dom.appendChild(el4, el5);
          var el5 = dom.createElement("label");
          dom.setAttribute(el5, "style", "margin-right: 5px;");
          var el6 = dom.createTextNode("\n            ");
          dom.appendChild(el5, el6);
          var el6 = dom.createComment("");
          dom.appendChild(el5, el6);
          var el6 = dom.createTextNode("\n          ");
          dom.appendChild(el5, el6);
          dom.appendChild(el4, el5);
          var el5 = dom.createTextNode("\n          ");
          dom.appendChild(el4, el5);
          var el5 = dom.createComment("");
          dom.appendChild(el4, el5);
          var el5 = dom.createTextNode("\n        ");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n        ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("div");
          dom.setAttribute(el4, "class", "item lang");
          var el5 = dom.createTextNode("\n          ");
          dom.appendChild(el4, el5);
          var el5 = dom.createElement("label");
          dom.setAttribute(el5, "style", "margin-right: 5px;");
          var el6 = dom.createTextNode("\n            ");
          dom.appendChild(el5, el6);
          var el6 = dom.createComment("");
          dom.appendChild(el5, el6);
          var el6 = dom.createTextNode("\n          ");
          dom.appendChild(el5, el6);
          dom.appendChild(el4, el5);
          var el5 = dom.createTextNode("\n          ");
          dom.appendChild(el4, el5);
          var el5 = dom.createComment("");
          dom.appendChild(el4, el5);
          var el5 = dom.createTextNode("\n        ");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n        ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("div");
          dom.setAttribute(el4, "class", "right menu");
          var el5 = dom.createTextNode("\n          ");
          dom.appendChild(el4, el5);
          var el5 = dom.createElement("a");
          dom.setAttribute(el5, "class", "item");
          dom.setAttribute(el5, "target", "_blank");
          var el6 = dom.createTextNode("\n              ");
          dom.appendChild(el5, el6);
          var el6 = dom.createComment("");
          dom.appendChild(el5, el6);
          var el6 = dom.createTextNode("\n          ");
          dom.appendChild(el5, el6);
          dom.appendChild(el4, el5);
          var el5 = dom.createTextNode("\n        ");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n      ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n    ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element1 = dom.childAt(fragment, [2, 1]);
          var element2 = dom.childAt(element1, [1, 1, 1, 1]);
          var element3 = dom.childAt(element2, [3]);
          var element4 = dom.childAt(element1, [3]);
          var element5 = dom.childAt(fragment, [4, 1]);
          var element6 = dom.childAt(fragment, [8, 1, 1]);
          var element7 = dom.childAt(element6, [3]);
          var element8 = dom.childAt(element6, [5]);
          var element9 = dom.childAt(element6, [7, 1]);
          var morphs = new Array(20);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          morphs[1] = dom.createAttrMorph(element2, 'title');
          morphs[2] = dom.createElementMorph(element2);
          morphs[3] = dom.createMorphAt(element2, 1, 1);
          morphs[4] = dom.createMorphAt(dom.childAt(element3, [1]), 1, 1);
          morphs[5] = dom.createMorphAt(dom.childAt(element3, [3]), 1, 1);
          morphs[6] = dom.createMorphAt(dom.childAt(element2, [5, 1]), 1, 1);
          morphs[7] = dom.createAttrMorph(element4, 'title');
          morphs[8] = dom.createMorphAt(dom.childAt(element1, [5, 0]), 0, 0);
          morphs[9] = dom.createAttrMorph(element5, 'class');
          morphs[10] = dom.createMorphAt(dom.childAt(element5, [3, 1, 1, 1]), 1, 1);
          morphs[11] = dom.createMorphAt(dom.childAt(fragment, [6]), 1, 1);
          morphs[12] = dom.createMorphAt(dom.childAt(element6, [1]), 1, 1);
          morphs[13] = dom.createMorphAt(dom.childAt(element7, [1]), 1, 1);
          morphs[14] = dom.createMorphAt(element7, 3, 3);
          morphs[15] = dom.createMorphAt(dom.childAt(element8, [1]), 1, 1);
          morphs[16] = dom.createMorphAt(element8, 3, 3);
          morphs[17] = dom.createAttrMorph(element9, 'href');
          morphs[18] = dom.createAttrMorph(element9, 'title');
          morphs[19] = dom.createMorphAt(element9, 1, 1);
          dom.insertBoundary(fragment, 0);
          return morphs;
        },
        statements: [["block", "ui-sidebar", [], ["class", "inverted vertical main menu", "ui_context", ".ember-application > .ember-view", "closable", false, "dimPage", false, "onShow", ["subexpr", "action", ["updateWidth"], [], ["loc", [null, [12, 11], [12, 33]]]], "onHidden", ["subexpr", "action", ["updateWidth"], [], ["loc", [null, [13, 13], [13, 35]]]]], 0, null, ["loc", [null, [7, 2], [22, 17]]]], ["attribute", "title", ["subexpr", "t", ["forms.application.header.menu.sitemap-button.title"], [], ["loc", [null, [30, 20], [30, 78]]]]], ["element", "action", ["toggleSidebar"], [], ["loc", [null, [28, 15], [28, 41]]]], ["inline", "t", ["forms.application.header.menu.sitemap-button.caption"], [], ["loc", [null, [31, 14], [31, 74]]]], ["inline", "t", ["forms.application.header.menu.show-menu.caption"], [], ["loc", [null, [34, 18], [34, 73]]]], ["inline", "t", ["forms.application.header.menu.hide-menu.caption"], [], ["loc", [null, [37, 18], [37, 73]]]], ["inline", "t", ["forms.application.header.menu.hide-menu.caption"], [], ["loc", [null, [42, 18], [42, 73]]]], ["attribute", "title", ["subexpr", "t", ["forms.application.sitemap.application-name.title"], [], ["loc", [null, [52, 14], [52, 70]]]]], ["inline", "t", ["application-name"], [], ["loc", [null, [55, 78], [55, 102]]]], ["attribute", "class", ["concat", ["ui form ", ["get", "appState.state", ["loc", [null, [59, 26], [59, 40]]]]]]], ["content", "outlet", ["loc", [null, [65, 14], [65, 24]]]], ["inline", "outlet", ["modal"], [], ["loc", [null, [73, 4], [73, 22]]]], ["inline", "t", ["forms.application.footer.application-name"], [], ["loc", [null, [79, 10], [79, 59]]]], ["inline", "t", ["forms.application.header.menu.user-settings-service-checkbox.caption"], [], ["loc", [null, [83, 12], [83, 88]]]], ["inline", "flexberry-checkbox", [], ["class", "toggle", "value", ["subexpr", "@mut", [["get", "userSettingsService.isUserSettingsServiceEnabled", ["loc", [null, [87, 18], [87, 66]]]]], [], []]], ["loc", [null, [85, 10], [88, 12]]]], ["inline", "t", ["forms.application.header.menu.language-dropdown.caption"], [], ["loc", [null, [92, 12], [92, 75]]]], ["inline", "flexberry-dropdown", [], ["class", "compact", "items", ["subexpr", "@mut", [["get", "locales", ["loc", [null, [96, 18], [96, 25]]]]], [], []], "value", ["subexpr", "@mut", [["get", "i18n.locale", ["loc", [null, [97, 18], [97, 29]]]]], [], []], "placeholder", ["subexpr", "t", ["forms.application.header.menu.language-dropdown.placeholder"], [], ["loc", [null, [98, 24], [98, 89]]]], "direction", "upward"], ["loc", [null, [94, 10], [100, 12]]]], ["attribute", "href", ["get", "addonVersionHref", ["loc", [null, [104, 19], [104, 35]]]]], ["attribute", "title", ["subexpr", "t", ["forms.application.footer.application-version.title"], [], ["loc", [null, [106, 18], [106, 76]]]]], ["inline", "t", ["forms.application.footer.application-version.caption"], ["version", ["subexpr", "@mut", [["get", "addonVersion", ["loc", [null, [107, 81], [107, 93]]]]], [], []]], ["loc", [null, [107, 14], [107, 95]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 114,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/application.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "if", [["subexpr", "or", [["get", "isInAcceptanceTestMode", ["loc", [null, [1, 10], [1, 32]]]], ["get", "mapOnlyView", ["loc", [null, [1, 33], [1, 44]]]]], [], ["loc", [null, [1, 6], [1, 45]]]]], [], 0, 1, ["loc", [null, [1, 0], [113, 7]]]]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define("dummy/templates/colsconfig-dialog-content", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 10,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/colsconfig-dialog-content.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "colsconfig-dialog-content", [], ["model", ["subexpr", "@mut", [["get", "model", ["loc", [null, [2, 8], [2, 13]]]]], [], []], "close", "sortByColumnsConfig", "type", ["subexpr", "@mut", [["get", "message.type", ["loc", [null, [4, 7], [4, 19]]]]], [], []], "closeable", true, "visible", ["subexpr", "@mut", [["get", "message.visible", ["loc", [null, [6, 10], [6, 25]]]]], [], []], "caption", ["subexpr", "@mut", [["get", "message.caption", ["loc", [null, [7, 10], [7, 25]]]]], [], []], "message", ["subexpr", "@mut", [["get", "message.message", ["loc", [null, [8, 10], [8, 25]]]]], [], []]], ["loc", [null, [1, 0], [9, 2]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/colsconfig-dialog", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "fragmentReason": {
            "name": "missing-wrapper",
            "problems": ["wrong-type"]
          },
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 11,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/colsconfig-dialog.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "outlet", ["modal-content"], [], ["loc", [null, [10, 2], [10, 28]]]]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 12,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/colsconfig-dialog.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "modal-dialog", [], ["title", ["subexpr", "if", [["get", "model.exportParams.isExportExcel", ["loc", [null, [2, 12], [2, 44]]]], ["subexpr", "t", ["components.colsconfig-dialog-content.export-modal-dialog-title"], [], ["loc", [null, [2, 45], [2, 113]]]], ["subexpr", "t", ["components.colsconfig-dialog-content.title"], [], ["loc", [null, [2, 114], [2, 162]]]]], [], ["loc", [null, [2, 8], [2, 163]]]], "sizeClass", "small", "close", "removeModalDialog", "created", "createdModalDialog", "useOkButton", false, "useCloseButton", false, "componentName", ["subexpr", "@mut", [["get", "model.componentName", ["loc", [null, [8, 16], [8, 35]]]]], [], []]], 0, null, ["loc", [null, [1, 0], [11, 17]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define("dummy/templates/components-examples/flexberry-boundingbox/settings-example", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 12,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components-examples/flexberry-boundingbox/settings-example.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("h3");
        dom.setAttribute(el1, "class", "ui header");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("form");
        dom.setAttribute(el1, "class", "ui form flexberry-vertical-form");
        dom.setAttribute(el1, "role", "form");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]), 0, 0);
        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [2]), 1, 1);
        return morphs;
      },
      statements: [["inline", "t", ["forms.components-examples.flexberry-boundingbox.settings-example.caption"], [], ["loc", [null, [1, 22], [1, 102]]]], ["inline", "flexberry-boundingbox", [], ["mapModel", ["subexpr", "@mut", [["get", "model", ["loc", [null, [4, 13], [4, 18]]]]], [], []], "minLat", ["subexpr", "@mut", [["get", "minLat", ["loc", [null, [5, 11], [5, 17]]]]], [], []], "minLng", ["subexpr", "@mut", [["get", "minLng", ["loc", [null, [6, 11], [6, 17]]]]], [], []], "maxLat", ["subexpr", "@mut", [["get", "maxLat", ["loc", [null, [7, 11], [7, 17]]]]], [], []], "maxLng", ["subexpr", "@mut", [["get", "maxLng", ["loc", [null, [8, 11], [8, 17]]]]], [], []], "boundingBoxChange", ["subexpr", "action", ["onBoundingBoxChange"], [], ["loc", [null, [9, 22], [9, 52]]]]], ["loc", [null, [3, 2], [10, 4]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/components/advlimit-dialog-content", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 17,
              "column": 6
            },
            "end": {
              "line": 21,
              "column": 6
            }
          },
          "moduleName": "dummy/templates/components/advlimit-dialog-content.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var morphs = new Array(3);
          morphs[0] = dom.createAttrMorph(element0, 'class');
          morphs[1] = dom.createElementMorph(element0);
          morphs[2] = dom.createMorphAt(element0, 1, 1);
          return morphs;
        },
        statements: [["attribute", "class", ["concat", ["ui small button cols-config-save", ["subexpr", "unless", [["get", "model.advLimitName", ["loc", [null, [18, 61], [18, 79]]]], " disabled"], [], ["loc", [null, [18, 52], [18, 93]]]]]]], ["element", "action", ["saveAdvLimit"], [], ["loc", [null, [18, 95], [18, 120]]]], ["inline", "t", ["components.advlimit-dialog-content.save"], [], ["loc", [null, [19, 10], [19, 57]]]]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "triple-curlies"
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 38,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/advlimit-dialog-content.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "flexberry-colsconfig content");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "ui action input flexberry-advlimit-input");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "ui action input flexberry-advlimit-input");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "ui right floated button cols-config-apply");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "ui button cols-config-check");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element1 = dom.childAt(fragment, [0]);
        var element2 = dom.childAt(element1, [1]);
        var element3 = dom.childAt(element2, [3]);
        var element4 = dom.childAt(element3, [5]);
        var element5 = dom.childAt(element3, [7]);
        var morphs = new Array(9);
        morphs[0] = dom.createAttrMorph(element1, 'class');
        morphs[1] = dom.createMorphAt(dom.childAt(element2, [1]), 1, 1);
        morphs[2] = dom.createMorphAt(element3, 1, 1);
        morphs[3] = dom.createMorphAt(element3, 3, 3);
        morphs[4] = dom.createElementMorph(element4);
        morphs[5] = dom.createMorphAt(element4, 1, 1);
        morphs[6] = dom.createElementMorph(element5);
        morphs[7] = dom.createMorphAt(element5, 1, 1);
        morphs[8] = dom.createMorphAt(element2, 5, 5);
        return morphs;
      },
      statements: [["attribute", "class", ["concat", ["ui form ", ["get", "appState.state", ["loc", [null, [1, 22], [1, 36]]]]]]], ["inline", "flexberry-textarea", [], ["value", ["subexpr", "@mut", [["get", "model.advLimit", ["loc", [null, [5, 14], [5, 28]]]]], [], []], "class", ["subexpr", "@mut", [["get", "class", ["loc", [null, [6, 14], [6, 19]]]]], [], []], "rows", "10"], ["loc", [null, [4, 6], [8, 8]]]], ["inline", "input", [], ["type", "input", "class", "setting-name-input fluid", "value", ["subexpr", "@mut", [["get", "model.advLimitName", ["loc", [null, [14, 14], [14, 32]]]]], [], []], "placeholder", ["subexpr", "t", ["components.advlimit-dialog-content.enter-limit-name"], [], ["loc", [null, [15, 20], [15, 77]]]]], ["loc", [null, [11, 6], [16, 8]]]], ["block", "if", [["get", "advLimit.isAdvLimitServiceEnabled", ["loc", [null, [17, 12], [17, 45]]]]], [], 0, null, ["loc", [null, [17, 6], [21, 13]]]], ["element", "action", ["apply"], [], ["loc", [null, [22, 61], [22, 79]]]], ["inline", "t", ["components.advlimit-dialog-content.use"], [], ["loc", [null, [23, 8], [23, 54]]]], ["element", "action", ["check"], [], ["loc", [null, [25, 47], [25, 65]]]], ["inline", "t", ["components.advlimit-dialog-content.check"], [], ["loc", [null, [26, 8], [26, 56]]]], ["inline", "ui-message", [], ["type", ["subexpr", "@mut", [["get", "message.type", ["loc", [null, [30, 11], [30, 23]]]]], [], []], "visible", ["subexpr", "@mut", [["get", "message.visible", ["loc", [null, [31, 14], [31, 29]]]]], [], []], "caption", ["subexpr", "@mut", [["get", "message.caption", ["loc", [null, [32, 14], [32, 29]]]]], [], []], "message", ["subexpr", "@mut", [["get", "message.message", ["loc", [null, [33, 14], [33, 29]]]]], [], []], "closeable", ["subexpr", "@mut", [["get", "message.closeable", ["loc", [null, [34, 16], [34, 33]]]]], [], []]], ["loc", [null, [29, 4], [35, 6]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define("dummy/templates/components/colsconfig-dialog-content", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 29,
                "column": 12
              },
              "end": {
                "line": 29,
                "column": 115
              }
            },
            "moduleName": "dummy/templates/components/colsconfig-dialog-content.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [["inline", "input", [], ["class", ["subexpr", "if", [["get", "colDesc.hide", ["loc", [null, [29, 70], [29, 82]]]], "disabled"], [], ["loc", [null, [29, 66], [29, 94]]]], "value", ["subexpr", "@mut", [["get", "colDesc.name", ["loc", [null, [29, 101], [29, 113]]]]], [], []]], ["loc", [null, [29, 52], [29, 115]]]]],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 29,
                "column": 115
              },
              "end": {
                "line": 29,
                "column": 139
              }
            },
            "moduleName": "dummy/templates/components/colsconfig-dialog-content.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [["content", "colDesc.name", ["loc", [null, [29, 123], [29, 139]]]]],
          locals: [],
          templates: []
        };
      })();
      var child2 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 32,
                "column": 12
              },
              "end": {
                "line": 40,
                "column": 12
              }
            },
            "moduleName": "dummy/templates/components/colsconfig-dialog-content.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("              ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("i");
            dom.setAttribute(el1, "class", "dropdown icon");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n              ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1, "class", "default text");
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n              ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1, "class", "menu");
            var el2 = dom.createTextNode("\n                  ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("div");
            dom.setAttribute(el2, "class", "item");
            dom.setAttribute(el2, "data-value", "0");
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n                  ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("div");
            dom.setAttribute(el2, "class", "item");
            dom.setAttribute(el2, "data-value", "1");
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n                  ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("div");
            dom.setAttribute(el2, "class", "item");
            dom.setAttribute(el2, "data-value", "-1");
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n              ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element1 = dom.childAt(fragment, [5]);
            var morphs = new Array(4);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [3]), 0, 0);
            morphs[1] = dom.createMorphAt(dom.childAt(element1, [1]), 0, 0);
            morphs[2] = dom.createMorphAt(dom.childAt(element1, [3]), 0, 0);
            morphs[3] = dom.createMorphAt(dom.childAt(element1, [5]), 0, 0);
            return morphs;
          },
          statements: [["inline", "t", ["components.colsconfig-dialog-content.sort-direction-none"], [], ["loc", [null, [34, 40], [34, 104]]]], ["inline", "t", ["components.colsconfig-dialog-content.sort-direction-none"], [], ["loc", [null, [36, 51], [36, 115]]]], ["inline", "t", ["components.colsconfig-dialog-content.sort-direction-asc"], [], ["loc", [null, [37, 51], [37, 114]]]], ["inline", "t", ["components.colsconfig-dialog-content.sort-direction-desc"], [], ["loc", [null, [38, 52], [38, 116]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 15,
              "column": 6
            },
            "end": {
              "line": 60,
              "column": 6
            }
          },
          "moduleName": "dummy/templates/components/colsconfig-dialog-content.hbs"
        },
        isEmpty: false,
        arity: 2,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("tr");
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("td");
          var el3 = dom.createTextNode("\n            ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("i");
          dom.setAttribute(el3, "colsConfigHidden", "false");
          dom.setAttribute(el3, "style", "cursor:pointer");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("td");
          var el3 = dom.createTextNode("\n            ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("button");
          dom.setAttribute(el3, "type", "button");
          var el4 = dom.createTextNode("\n              ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("i");
          dom.setAttribute(el4, "class", "chevron up icon");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n            ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n            ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("button");
          dom.setAttribute(el3, "type", "button");
          var el4 = dom.createTextNode("\n              ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("i");
          dom.setAttribute(el4, "class", "chevron down icon");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n            ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("td");
          var el3 = dom.createTextNode("\n            ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("td");
          dom.setAttribute(el2, "class", "sort-direction-cell");
          var el3 = dom.createTextNode("\n");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("          ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("td");
          var el3 = dom.createTextNode("\n            ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("div");
          var el4 = dom.createTextNode("\n              ");
          dom.appendChild(el3, el4);
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n            ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("td");
          var el3 = dom.createTextNode("\n            ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("div");
          var el4 = dom.createTextNode("\n              ");
          dom.appendChild(el3, el4);
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n            ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element2 = dom.childAt(fragment, [1]);
          var element3 = dom.childAt(element2, [1, 1]);
          var element4 = dom.childAt(element2, [3]);
          var element5 = dom.childAt(element4, [1]);
          var element6 = dom.childAt(element4, [3]);
          var element7 = dom.childAt(element2, [5]);
          var element8 = dom.childAt(element2, [8]);
          var element9 = dom.childAt(element8, [1]);
          var element10 = dom.childAt(element2, [10]);
          var element11 = dom.childAt(element10, [1]);
          var morphs = new Array(16);
          morphs[0] = dom.createAttrMorph(element2, 'propName');
          morphs[1] = dom.createAttrMorph(element3, 'class');
          morphs[2] = dom.createElementMorph(element3);
          morphs[3] = dom.createAttrMorph(element5, 'class');
          morphs[4] = dom.createElementMorph(element5);
          morphs[5] = dom.createAttrMorph(element6, 'class');
          morphs[6] = dom.createElementMorph(element6);
          morphs[7] = dom.createAttrMorph(element7, 'class');
          morphs[8] = dom.createMorphAt(element7, 1, 1);
          morphs[9] = dom.createMorphAt(dom.childAt(element2, [7]), 1, 1);
          morphs[10] = dom.createAttrMorph(element8, 'class');
          morphs[11] = dom.createAttrMorph(element9, 'class');
          morphs[12] = dom.createMorphAt(element9, 1, 1);
          morphs[13] = dom.createAttrMorph(element10, 'class');
          morphs[14] = dom.createAttrMorph(element11, 'class');
          morphs[15] = dom.createMorphAt(element11, 1, 1);
          return morphs;
        },
        statements: [["attribute", "propName", ["concat", [["get", "colDesc.propName", ["loc", [null, [16, 24], [16, 40]]]]]]], ["attribute", "class", ["concat", ["large ", ["subexpr", "if", [["get", "colDesc.hide", ["loc", [null, [18, 33], [18, 45]]]], "hide", "unhide"], [], ["loc", [null, [18, 28], [18, 63]]]], " icon"]]], ["element", "action", ["invertVisibility", ["get", "n", ["loc", [null, [18, 121], [18, 122]]]]], [], ["loc", [null, [18, 93], [18, 124]]]], ["attribute", "class", ["concat", ["ui icon tiny button", ["subexpr", "if", [["subexpr", "eq", [["get", "n", ["loc", [null, [21, 90], [21, 91]]]], 0], [], ["loc", [null, [21, 86], [21, 94]]]], " disabled"], [], ["loc", [null, [21, 81], [21, 108]]]]]]], ["element", "action", ["rowUp", ["get", "n", ["loc", [null, [21, 37], [21, 38]]]]], [], ["loc", [null, [21, 20], [21, 40]]]], ["attribute", "class", ["concat", ["ui icon tiny button row-down-button no-margin", ["subexpr", "if", [["subexpr", "eq", [["get", "colDesc", ["loc", [null, [24, 118], [24, 125]]]], ["get", "model.colDescs.lastObject", ["loc", [null, [24, 126], [24, 151]]]]], [], ["loc", [null, [24, 114], [24, 152]]]], " disabled"], [], ["loc", [null, [24, 109], [24, 166]]]]]]], ["element", "action", ["rowDown", ["get", "n", ["loc", [null, [24, 39], [24, 40]]]]], [], ["loc", [null, [24, 20], [24, 42]]]], ["attribute", "class", ["concat", [["subexpr", "if", [["get", "colDesc.hide", ["loc", [null, [28, 26], [28, 38]]]], "disabled"], [], ["loc", [null, [28, 21], [28, 51]]]]]]], ["block", "if", [["get", "model.exportParams.isExportExcel", ["loc", [null, [29, 18], [29, 50]]]]], [], 0, 1, ["loc", [null, [29, 12], [29, 146]]]], ["block", "ui-dropdown", [], ["class", ["subexpr", "concat", ["ui compact selection dropdown sort-direction-dropdown", ["subexpr", "if", [["get", "colDesc.hide", ["loc", [null, [32, 101], [32, 113]]]], " disabled"], [], ["loc", [null, [32, 97], [32, 126]]]], ["subexpr", "if", [["get", "colDesc.isHasMany", ["loc", [null, [32, 131], [32, 148]]]], " hidden"], [], ["loc", [null, [32, 127], [32, 159]]]]], [], ["loc", [null, [32, 33], [32, 160]]]], "onChange", ["subexpr", "action", ["setSortOrder", ["get", "colDesc", ["loc", [null, [32, 193], [32, 200]]]]], [], ["loc", [null, [32, 170], [32, 201]]]]], 2, null, ["loc", [null, [32, 12], [40, 28]]]], ["attribute", "class", ["concat", [["subexpr", "if", [["get", "colDesc.hide", ["loc", [null, [41, 31], [41, 43]]]], "disabled"], [], ["loc", [null, [41, 26], [41, 56]]]]]]], ["attribute", "class", ["concat", ["ui input ", ["subexpr", "if", [["get", "colDesc.hide", ["loc", [null, [42, 38], [42, 50]]]], "disabled"], [], ["loc", [null, [42, 33], [42, 63]]]]]]], ["inline", "input", [], ["size", "2", "class", ["subexpr", "concat", ["sort-priority-input", ["subexpr", "unless", [["get", "colDesc.sortOrder", ["loc", [null, [45, 60], [45, 77]]]], " hidden"], [], ["loc", [null, [45, 52], [45, 88]]]]], [], ["loc", [null, [45, 22], [45, 89]]]], "value", ["subexpr", "@mut", [["get", "colDesc.sortPriority", ["loc", [null, [46, 22], [46, 42]]]]], [], []]], ["loc", [null, [43, 14], [47, 16]]]], ["attribute", "class", ["concat", [["subexpr", "if", [["get", "colDesc.hide", ["loc", [null, [50, 26], [50, 38]]]], "disabled"], [], ["loc", [null, [50, 21], [50, 51]]]]]]], ["attribute", "class", ["concat", ["ui input ", ["subexpr", "if", [["subexpr", "or", [["get", "colDesc.hide", ["loc", [null, [51, 42], [51, 54]]]], ["subexpr", "or", [["get", "model.exportParams.isExportExcel", ["loc", [null, [51, 59], [51, 91]]]], ["subexpr", "or", [["get", "colDesc.fixed", ["loc", [null, [51, 96], [51, 109]]]], ["subexpr", "not", [["get", "model.saveColWidthState", ["loc", [null, [51, 115], [51, 138]]]]], [], ["loc", [null, [51, 110], [51, 139]]]]], [], ["loc", [null, [51, 92], [51, 140]]]]], [], ["loc", [null, [51, 55], [51, 141]]]]], [], ["loc", [null, [51, 38], [51, 142]]]], "disabled"], [], ["loc", [null, [51, 33], [51, 155]]]]]]], ["inline", "input", [], ["size", "2", "class", "column-width-input", "value", ["subexpr", "@mut", [["get", "colDesc.columnWidth", ["loc", [null, [55, 22], [55, 41]]]]], [], []]], ["loc", [null, [52, 14], [56, 16]]]]],
        locals: ["colDesc", "n"],
        templates: [child0, child1, child2]
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 63,
              "column": 8
            },
            "end": {
              "line": 76,
              "column": 8
            }
          },
          "moduleName": "dummy/templates/components/colsconfig-dialog-content.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("tr");
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("th");
          dom.setAttribute(el2, "colspan", "6");
          var el3 = dom.createTextNode("\n            ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n            ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1, 1]);
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(element0, 1, 1);
          morphs[1] = dom.createMorphAt(element0, 3, 3);
          return morphs;
        },
        statements: [["inline", "flexberry-checkbox", [], ["label", ["subexpr", "t", ["components.colsconfig-dialog-content.det-separate-cols"], [], ["loc", [null, [67, 20], [67, 80]]]], "value", ["subexpr", "@mut", [["get", "model.exportParams.detSeparateCols", ["loc", [null, [68, 20], [68, 54]]]]], [], []]], ["loc", [null, [66, 12], [69, 14]]]], ["inline", "flexberry-checkbox", [], ["label", ["subexpr", "t", ["components.colsconfig-dialog-content.det-separate-rows"], [], ["loc", [null, [71, 20], [71, 80]]]], "value", ["subexpr", "@mut", [["get", "model.exportParams.detSeparateRows", ["loc", [null, [72, 20], [72, 54]]]]], [], []]], ["loc", [null, [70, 12], [73, 14]]]]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "triple-curlies"
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 128,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/colsconfig-dialog-content.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "flexberry-colsconfig content");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("table");
        dom.setAttribute(el3, "class", "ui unstackable fixed selectable celled table");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("thead");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("tr");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("th");
        dom.setAttribute(el6, "class", "show-columns");
        dom.setAttribute(el6, "style", "cursor:default");
        var el7 = dom.createElement("i");
        dom.setAttribute(el7, "class", "large hide icon");
        dom.appendChild(el6, el7);
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("th");
        dom.setAttribute(el6, "class", "columns-order");
        dom.setAttribute(el6, "style", "cursor:default");
        var el7 = dom.createElement("i");
        dom.setAttribute(el7, "class", "large sort icon");
        dom.appendChild(el6, el7);
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("th");
        dom.setAttribute(el6, "style", "cursor:default");
        var el7 = dom.createComment("");
        dom.appendChild(el6, el7);
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("th");
        dom.setAttribute(el6, "class", "sort-direction");
        dom.setAttribute(el6, "style", "cursor:default");
        var el7 = dom.createComment("");
        dom.appendChild(el6, el7);
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("th");
        dom.setAttribute(el6, "class", "sort-priority");
        dom.setAttribute(el6, "style", "cursor:default");
        var el7 = dom.createComment("");
        dom.appendChild(el6, el7);
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("th");
        dom.setAttribute(el6, "class", "column-width");
        dom.setAttribute(el6, "style", "cursor:default");
        var el7 = dom.createComment("");
        dom.appendChild(el6, el7);
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("tbody");
        var el5 = dom.createTextNode("\n");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("tfoot");
        dom.setAttribute(el4, "class", "full-width");
        var el5 = dom.createTextNode("\n");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("tr");
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("th");
        dom.setAttribute(el6, "colspan", "5");
        dom.setAttribute(el6, "style", "text-align:right");
        var el7 = dom.createComment("");
        dom.appendChild(el6, el7);
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("th");
        var el7 = dom.createTextNode("\n            ");
        dom.appendChild(el6, el7);
        var el7 = dom.createComment("");
        dom.appendChild(el6, el7);
        var el7 = dom.createTextNode("\n          ");
        dom.appendChild(el6, el7);
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("tr");
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("th");
        dom.setAttribute(el6, "colspan", "5");
        dom.setAttribute(el6, "style", "text-align:right");
        var el7 = dom.createComment("");
        dom.appendChild(el6, el7);
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("th");
        var el7 = dom.createTextNode("\n            ");
        dom.appendChild(el6, el7);
        var el7 = dom.createElement("div");
        dom.setAttribute(el7, "class", "ui input");
        var el8 = dom.createTextNode("\n              ");
        dom.appendChild(el7, el8);
        var el8 = dom.createComment("");
        dom.appendChild(el7, el8);
        var el8 = dom.createTextNode("\n            ");
        dom.appendChild(el7, el8);
        dom.appendChild(el6, el7);
        var el7 = dom.createTextNode("\n          ");
        dom.appendChild(el6, el7);
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("tr");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("th");
        dom.setAttribute(el6, "colspan", "4");
        var el7 = dom.createTextNode("\n            ");
        dom.appendChild(el6, el7);
        var el7 = dom.createElement("div");
        dom.setAttribute(el7, "class", "ui action input");
        var el8 = dom.createTextNode("\n              ");
        dom.appendChild(el7, el8);
        var el8 = dom.createComment("");
        dom.appendChild(el7, el8);
        var el8 = dom.createTextNode("\n              ");
        dom.appendChild(el7, el8);
        var el8 = dom.createElement("div");
        var el9 = dom.createTextNode("\n                ");
        dom.appendChild(el8, el9);
        var el9 = dom.createComment("");
        dom.appendChild(el8, el9);
        var el9 = dom.createTextNode("\n              ");
        dom.appendChild(el8, el9);
        dom.appendChild(el7, el8);
        var el8 = dom.createTextNode("\n            ");
        dom.appendChild(el7, el8);
        dom.appendChild(el6, el7);
        var el7 = dom.createTextNode("\n          ");
        dom.appendChild(el6, el7);
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("th");
        dom.setAttribute(el6, "colspan", "2");
        var el7 = dom.createTextNode("\n            ");
        dom.appendChild(el6, el7);
        var el7 = dom.createElement("button");
        dom.setAttribute(el7, "type", "button");
        dom.setAttribute(el7, "class", "ui right floated button cols-config-apply");
        var el8 = dom.createComment("");
        dom.appendChild(el7, el8);
        dom.appendChild(el6, el7);
        var el7 = dom.createTextNode("\n          ");
        dom.appendChild(el6, el7);
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("a");
        dom.setAttribute(el3, "class", "hidden download-anchor");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element12 = dom.childAt(fragment, [0]);
        var element13 = dom.childAt(element12, [1]);
        var element14 = dom.childAt(element13, [1]);
        var element15 = dom.childAt(element14, [1, 1]);
        var element16 = dom.childAt(element15, [1]);
        var element17 = dom.childAt(element15, [3, 0]);
        var element18 = dom.childAt(element15, [5]);
        var element19 = dom.childAt(element15, [7]);
        var element20 = dom.childAt(element15, [9]);
        var element21 = dom.childAt(element15, [11]);
        var element22 = dom.childAt(element14, [5]);
        var element23 = dom.childAt(element22, [3]);
        var element24 = dom.childAt(element22, [5]);
        var element25 = dom.childAt(element22, [7]);
        var element26 = dom.childAt(element25, [1, 1]);
        var element27 = dom.childAt(element26, [3]);
        var element28 = dom.childAt(element25, [3, 1]);
        var morphs = new Array(26);
        morphs[0] = dom.createAttrMorph(element12, 'class');
        morphs[1] = dom.createAttrMorph(element16, 'title');
        morphs[2] = dom.createAttrMorph(element17, 'title');
        morphs[3] = dom.createAttrMorph(element18, 'title');
        morphs[4] = dom.createMorphAt(element18, 0, 0);
        morphs[5] = dom.createAttrMorph(element19, 'title');
        morphs[6] = dom.createMorphAt(element19, 0, 0);
        morphs[7] = dom.createAttrMorph(element20, 'title');
        morphs[8] = dom.createMorphAt(element20, 0, 0);
        morphs[9] = dom.createAttrMorph(element21, 'title');
        morphs[10] = dom.createMorphAt(element21, 0, 0);
        morphs[11] = dom.createMorphAt(dom.childAt(element14, [3]), 1, 1);
        morphs[12] = dom.createMorphAt(element22, 1, 1);
        morphs[13] = dom.createAttrMorph(element23, 'class');
        morphs[14] = dom.createMorphAt(dom.childAt(element23, [1]), 0, 0);
        morphs[15] = dom.createMorphAt(dom.childAt(element23, [3]), 1, 1);
        morphs[16] = dom.createAttrMorph(element24, 'class');
        morphs[17] = dom.createMorphAt(dom.childAt(element24, [1]), 0, 0);
        morphs[18] = dom.createMorphAt(dom.childAt(element24, [3, 1]), 1, 1);
        morphs[19] = dom.createMorphAt(element26, 1, 1);
        morphs[20] = dom.createAttrMorph(element27, 'class');
        morphs[21] = dom.createElementMorph(element27);
        morphs[22] = dom.createMorphAt(element27, 1, 1);
        morphs[23] = dom.createElementMorph(element28);
        morphs[24] = dom.createMorphAt(element28, 0, 0);
        morphs[25] = dom.createMorphAt(element13, 3, 3);
        return morphs;
      },
      statements: [["attribute", "class", ["concat", ["ui form ", ["get", "appState.state", ["loc", [null, [1, 22], [1, 36]]]]]]], ["attribute", "title", ["concat", [["subexpr", "t", ["components.colsconfig-dialog-content.dont-show-columns"], [], ["loc", [null, [6, 42], [6, 104]]]]]]], ["attribute", "title", ["concat", [["subexpr", "t", ["components.colsconfig-dialog-content.columns-order"], [], ["loc", [null, [7, 93], [7, 151]]]]]]], ["attribute", "title", ["concat", [["subexpr", "t", ["components.colsconfig-dialog-content.column-name"], [], ["loc", [null, [8, 21], [8, 77]]]]]]], ["inline", "t", ["components.colsconfig-dialog-content.column-name"], [], ["loc", [null, [8, 102], [8, 158]]]], ["attribute", "title", ["concat", [["subexpr", "t", ["components.colsconfig-dialog-content.sort-direction"], [], ["loc", [null, [9, 44], [9, 103]]]]]]], ["inline", "t", ["components.colsconfig-dialog-content.sort-direction-caption"], [], ["loc", [null, [9, 128], [9, 195]]]], ["attribute", "title", ["concat", [["subexpr", "t", ["components.colsconfig-dialog-content.sort-priority"], [], ["loc", [null, [10, 43], [10, 101]]]]]]], ["inline", "t", ["components.colsconfig-dialog-content.sort-priority-caption"], [], ["loc", [null, [10, 126], [10, 192]]]], ["attribute", "title", ["concat", [["subexpr", "t", ["components.colsconfig-dialog-content.column-width"], [], ["loc", [null, [11, 42], [11, 99]]]]]]], ["inline", "t", ["components.colsconfig-dialog-content.column-width-caption"], [], ["loc", [null, [11, 124], [11, 189]]]], ["block", "each", [["get", "model.colDescs", ["loc", [null, [15, 14], [15, 28]]]]], [], 0, null, ["loc", [null, [15, 6], [60, 15]]]], ["block", "if", [["get", "model.exportParams.isExportExcel", ["loc", [null, [63, 14], [63, 46]]]]], [], 1, null, ["loc", [null, [63, 8], [76, 15]]]], ["attribute", "class", ["concat", [["subexpr", "if", [["get", "model.exportParams.isExportExcel", ["loc", [null, [77, 24], [77, 56]]]], "hidden"], [], ["loc", [null, [77, 19], [77, 67]]]]]]], ["inline", "t", ["components.colsconfig-dialog-content.col-width-on"], [], ["loc", [null, [78, 49], [78, 106]]]], ["inline", "flexberry-checkbox", [], ["class", "toggle", "value", ["subexpr", "@mut", [["get", "model.saveColWidthState", ["loc", [null, [82, 20], [82, 43]]]]], [], []]], ["loc", [null, [80, 12], [83, 14]]]], ["attribute", "class", ["concat", [["subexpr", "if", [["get", "model.exportParams.isExportExcel", ["loc", [null, [86, 24], [86, 56]]]], "hidden"], [], ["loc", [null, [86, 19], [86, 67]]]]]]], ["inline", "t", ["components.colsconfig-dialog-content.per-page"], [], ["loc", [null, [87, 49], [87, 102]]]], ["inline", "input", [], ["size", "2", "class", "per-page-input", "value", ["subexpr", "@mut", [["get", "model.perPageValue", ["loc", [null, [93, 22], [93, 40]]]]], [], []]], ["loc", [null, [90, 14], [94, 16]]]], ["inline", "input", [], ["type", "input", "class", "setting-name-input", "value", ["subexpr", "@mut", [["get", "model.settingName", ["loc", [null, [104, 22], [104, 39]]]]], [], []], "placeholder", ["subexpr", "t", ["components.colsconfig-dialog-content.enter-setting-name"], [], ["loc", [null, [105, 28], [105, 89]]]]], ["loc", [null, [101, 14], [106, 16]]]], ["attribute", "class", ["concat", ["ui small button cols-config-save", ["subexpr", "if", [["subexpr", "is-blank", [["get", "model.settingName", ["loc", [null, [107, 73], [107, 90]]]]], [], ["loc", [null, [107, 63], [107, 91]]]], " disabled"], [], ["loc", [null, [107, 58], [107, 105]]]]]]], ["element", "action", ["saveColsSetting"], [], ["loc", [null, [107, 107], [107, 135]]]], ["inline", "t", ["components.colsconfig-dialog-content.save"], [], ["loc", [null, [108, 16], [108, 65]]]], ["element", "action", ["apply"], [], ["loc", [null, [113, 84], [113, 102]]]], ["inline", "if", [["get", "model.exportParams.isExportExcel", ["loc", [null, [113, 108], [113, 140]]]], ["subexpr", "t", ["components.colsconfig-dialog-content.export"], [], ["loc", [null, [113, 141], [113, 190]]]], ["subexpr", "t", ["components.colsconfig-dialog-content.use"], [], ["loc", [null, [113, 191], [113, 237]]]]], [], ["loc", [null, [113, 103], [113, 239]]]], ["inline", "ui-message", [], ["type", ["subexpr", "@mut", [["get", "type", ["loc", [null, [119, 11], [119, 15]]]]], [], []], "closeable", ["subexpr", "@mut", [["get", "closeable", ["loc", [null, [120, 16], [120, 25]]]]], [], []], "visible", ["subexpr", "@mut", [["get", "visible", ["loc", [null, [121, 14], [121, 21]]]]], [], []], "caption", ["subexpr", "@mut", [["get", "caption", ["loc", [null, [122, 14], [122, 21]]]]], [], []], "message", ["subexpr", "@mut", [["get", "message", ["loc", [null, [123, 14], [123, 21]]]]], [], []]], ["loc", [null, [118, 4], [124, 6]]]]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define("dummy/templates/components/css-picker", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 6,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/css-picker.hbs"
        },
        isEmpty: false,
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("label");
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(element0, 1, 1);
          morphs[1] = dom.createMorphAt(dom.childAt(element0, [3]), 0, 0);
          return morphs;
        },
        statements: [["inline", "input", [], ["type", "checkbox", "name", ["subexpr", "@mut", [["get", "item.name", ["loc", [null, [3, 33], [3, 42]]]]], [], []], "checked", ["subexpr", "@mut", [["get", "item.checked", ["loc", [null, [3, 51], [3, 63]]]]], [], []], "change", ["subexpr", "action", ["onChange"], ["preventDefault", false], ["loc", [null, [3, 71], [3, 111]]]]], ["loc", [null, [3, 4], [3, 113]]]], ["content", "item.name", ["loc", [null, [4, 11], [4, 24]]]]],
        locals: ["item"],
        templates: []
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/css-picker.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "each", [["get", "_items", ["loc", [null, [1, 8], [1, 14]]]]], [], 0, null, ["loc", [null, [1, 0], [6, 9]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define("dummy/templates/components/filters-dialog-content", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 11,
                "column": 10
              },
              "end": {
                "line": 21,
                "column": 10
              }
            },
            "moduleName": "dummy/templates/components/filters-dialog-content.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("            ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "flexberry-dropdown", [], ["value", ["subexpr", "@mut", [["get", "column.filter.condition", ["loc", [null, [13, 20], [13, 43]]]]], [], []], "items", ["subexpr", "@mut", [["get", "column.filter.conditions", ["loc", [null, [14, 20], [14, 44]]]]], [], []], "displayCaptions", ["subexpr", "not", [["subexpr", "is-array", [["get", "column.filter.conditions", ["loc", [null, [15, 45], [15, 69]]]]], [], ["loc", [null, [15, 35], [15, 70]]]]], [], ["loc", [null, [15, 30], [15, 71]]]], "class", "compact fluid", "placeholder", ["subexpr", "t", ["components.object-list-view.filter-condition"], [], ["loc", [null, [17, 26], [17, 76]]]], "needChecksOnValue", false, "onChange", ["subexpr", "action", ["filterConditionChanged", ["get", "column.filter", ["loc", [null, [19, 56], [19, 69]]]]], [], ["loc", [null, [19, 23], [19, 70]]]]], ["loc", [null, [12, 12], [20, 14]]]]],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 24,
                "column": 10
              },
              "end": {
                "line": 33,
                "column": 10
              }
            },
            "moduleName": "dummy/templates/components/filters-dialog-content.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("            ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "component", [["get", "column.filter.component.name", ["loc", [null, [25, 24], [25, 52]]]]], ["value", ["subexpr", "@mut", [["get", "column.filter.pattern", ["loc", [null, [26, 20], [26, 41]]]]], [], []], "readonly", ["subexpr", "or", [["subexpr", "eq", [["get", "column.filter.condition", ["loc", [null, [28, 20], [28, 43]]]], "empty"], [], ["loc", [null, [28, 16], [28, 52]]]], ["subexpr", "eq", [["get", "column.filter.condition", ["loc", [null, [29, 20], [29, 43]]]], "nempty"], [], ["loc", [null, [29, 16], [29, 53]]]]], [], ["loc", [null, [27, 23], [30, 15]]]], "dynamicProperties", ["subexpr", "@mut", [["get", "column.filter.component.properties", ["loc", [null, [31, 32], [31, 66]]]]], [], []]], ["loc", [null, [25, 12], [32, 14]]]]],
          locals: [],
          templates: []
        };
      })();
      var child2 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 35,
                "column": 8
              },
              "end": {
                "line": 43,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/components/filters-dialog-content.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("button");
            dom.setAttribute(el1, "type", "button");
            dom.setAttribute(el1, "class", "ui basic icon button");
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("i");
            dom.setAttribute(el2, "class", "trash icon");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createAttrMorph(element0, 'title');
            morphs[1] = dom.createElementMorph(element0);
            return morphs;
          },
          statements: [["attribute", "title", ["subexpr", "t", ["components.filters-dialog-content.clear-this-filter"], [], ["loc", [null, [39, 18], [39, 77]]]]], ["element", "action", ["clearFilterField", ["get", "column.filter", ["loc", [null, [40, 40], [40, 53]]]]], [], ["loc", [null, [40, 12], [40, 55]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 3,
              "column": 4
            },
            "end": {
              "line": 45,
              "column": 4
            }
          },
          "moduleName": "dummy/templates/components/filters-dialog-content.hbs"
        },
        isEmpty: false,
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "fields object-list-view-filters");
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "field");
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "field");
          var el3 = dom.createTextNode("\n");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("        ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "field");
          var el3 = dom.createTextNode("\n");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("        ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element1 = dom.childAt(fragment, [1]);
          var morphs = new Array(4);
          morphs[0] = dom.createMorphAt(dom.childAt(element1, [1]), 1, 1);
          morphs[1] = dom.createMorphAt(dom.childAt(element1, [3]), 1, 1);
          morphs[2] = dom.createMorphAt(dom.childAt(element1, [5]), 1, 1);
          morphs[3] = dom.createMorphAt(element1, 7, 7);
          return morphs;
        },
        statements: [["inline", "flexberry-textbox", [], ["value", ["subexpr", "@mut", [["get", "column.header", ["loc", [null, [7, 18], [7, 31]]]]], [], []], "readonly", true], ["loc", [null, [6, 10], [9, 12]]]], ["block", "if", [["get", "column.filter.conditions", ["loc", [null, [11, 16], [11, 40]]]]], [], 0, null, ["loc", [null, [11, 10], [21, 17]]]], ["block", "if", [["get", "column.filter.component.name", ["loc", [null, [24, 16], [24, 44]]]]], [], 1, null, ["loc", [null, [24, 10], [33, 17]]]], ["block", "if", [["get", "column.filter.component.name", ["loc", [null, [35, 14], [35, 42]]]]], [], 2, null, ["loc", [null, [35, 8], [43, 15]]]]],
        locals: ["column"],
        templates: [child0, child1, child2]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "triple-curlies"
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 52,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/filters-dialog-content.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "ui equal width form");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "flexberry-colsconfig content");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "field");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("button");
        dom.setAttribute(el4, "type", "button");
        dom.setAttribute(el4, "class", "ui right floated primary button");
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("button");
        dom.setAttribute(el4, "type", "button");
        dom.setAttribute(el4, "class", "ui right floated basic button");
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element2 = dom.childAt(fragment, [0, 1]);
        var element3 = dom.childAt(element2, [3]);
        var element4 = dom.childAt(element3, [1]);
        var element5 = dom.childAt(element3, [3]);
        var morphs = new Array(5);
        morphs[0] = dom.createMorphAt(element2, 1, 1);
        morphs[1] = dom.createElementMorph(element4);
        morphs[2] = dom.createMorphAt(element4, 0, 0);
        morphs[3] = dom.createElementMorph(element5);
        morphs[4] = dom.createMorphAt(element5, 0, 0);
        return morphs;
      },
      statements: [["block", "each", [["get", "filterColumns", ["loc", [null, [3, 12], [3, 25]]]]], [], 0, null, ["loc", [null, [3, 4], [45, 13]]]], ["element", "action", ["applyFilters"], [], ["loc", [null, [47, 68], [47, 93]]]], ["inline", "t", ["components.filters-dialog-content.apply"], [], ["loc", [null, [47, 94], [47, 141]]]], ["element", "action", ["clearFiltersFields"], [], ["loc", [null, [48, 66], [48, 97]]]], ["inline", "t", ["components.filters-dialog-content.clear"], [], ["loc", [null, [48, 98], [48, 145]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define("dummy/templates/components/flexberry-button-dropdown", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 10,
              "column": 4
            },
            "end": {
              "line": 15,
              "column": 4
            }
          },
          "moduleName": "dummy/templates/components/flexberry-button-dropdown.hbs"
        },
        isEmpty: false,
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("li");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("i");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("label");
          dom.setAttribute(el2, "class", "dropdown-label");
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var element1 = dom.childAt(element0, [1]);
          var morphs = new Array(3);
          morphs[0] = dom.createAttrMorph(element0, 'onClick');
          morphs[1] = dom.createAttrMorph(element1, 'class');
          morphs[2] = dom.createMorphAt(dom.childAt(element0, [3]), 0, 0);
          return morphs;
        },
        statements: [["attribute", "onClick", ["subexpr", "action", ["click", ["get", "item.layerMode", ["loc", [null, [11, 33], [11, 47]]]]], [], ["loc", [null, [11, 16], [11, 49]]]]], ["attribute", "class", ["get", "item.iconClass", ["loc", [null, [12, 17], [12, 31]]]]], ["content", "item.tooltip", ["loc", [null, [13, 36], [13, 52]]]]],
        locals: ["item"],
        templates: []
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 17,
            "column": 6
          }
        },
        "moduleName": "dummy/templates/components/flexberry-button-dropdown.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "main-image");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("i");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "arrow");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("i");
        dom.setAttribute(el3, "class", "icon-guideline-navigate-arrow-down");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("ul");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element2 = dom.childAt(fragment, [0]);
        var element3 = dom.childAt(element2, [1, 1]);
        var element4 = dom.childAt(fragment, [2]);
        var morphs = new Array(5);
        morphs[0] = dom.createAttrMorph(element2, 'class');
        morphs[1] = dom.createAttrMorph(element2, 'onClick');
        morphs[2] = dom.createAttrMorph(element3, 'class');
        morphs[3] = dom.createAttrMorph(element4, 'class');
        morphs[4] = dom.createMorphAt(dom.childAt(element4, [1]), 1, 1);
        return morphs;
      },
      statements: [["attribute", "class", ["concat", ["flexberry-dropdown-button-selected ", ["subexpr", "if", [["get", "isOpen", ["loc", [null, [1, 52], [1, 58]]]], "active"], [], ["loc", [null, [1, 47], [1, 69]]]]]]], ["attribute", "onClick", ["subexpr", "action", ["dropdownOpen"], [], ["loc", [null, [1, 79], [1, 105]]]]], ["attribute", "class", ["get", "selectIcon", ["loc", [null, [3, 15], [3, 25]]]]], ["attribute", "class", ["concat", ["flexberry-dropdown-button-list ", ["subexpr", "if", [["get", "isOpen", ["loc", [null, [8, 48], [8, 54]]]], "show"], [], ["loc", [null, [8, 43], [8, 63]]]]]]], ["block", "each", [["get", "items", ["loc", [null, [10, 12], [10, 17]]]]], [], 0, null, ["loc", [null, [10, 4], [15, 13]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define("dummy/templates/components/flexberry-button", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "fragmentReason": {
            "name": "triple-curlies"
          },
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 3,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/flexberry-button.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("i");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var morphs = new Array(1);
          morphs[0] = dom.createAttrMorph(element0, 'class');
          return morphs;
        },
        statements: [["attribute", "class", ["concat", [["get", "iconClass", ["loc", [null, [2, 14], [2, 23]]]]]]]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 4,
              "column": 0
            },
            "end": {
              "line": 6,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/flexberry-button.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["content", "caption", ["loc", [null, [5, 2], [5, 13]]]]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type", "multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 8,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/flexberry-button.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(3);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(fragment, 1, 1, contextualElement);
        morphs[2] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["block", "if", [["get", "_hasIcon", ["loc", [null, [1, 6], [1, 14]]]]], [], 0, null, ["loc", [null, [1, 0], [3, 7]]]], ["block", "if", [["get", "_hasCaption", ["loc", [null, [4, 6], [4, 17]]]]], [], 1, null, ["loc", [null, [4, 0], [6, 7]]]], ["content", "yield", ["loc", [null, [7, 0], [7, 9]]]]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define("dummy/templates/components/flexberry-checkbox", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/flexberry-checkbox.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("input");
        dom.setAttribute(el1, "type", "checkbox");
        dom.setAttribute(el1, "class", "flexberry-checkbox-input");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("label");
        dom.setAttribute(el1, "class", "flexberry-checkbox-label");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [2]), 0, 0);
        return morphs;
      },
      statements: [["content", "label", ["loc", [null, [2, 40], [2, 49]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/components/flexberry-colorpicker", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 11,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/flexberry-colorpicker.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "input", [], ["class", ["subexpr", "@mut", [["get", "flexberryClassNames.input", ["loc", [null, [7, 8], [7, 33]]]]], [], []], "type", "hidden", "value", ["subexpr", "get", [["get", "this", ["loc", [null, [9, 13], [9, 17]]]], "value"], [], ["loc", [null, [9, 8], [9, 26]]]]], ["loc", [null, [6, 0], [10, 2]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/components/flexberry-datepicker", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type", "multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 9,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/flexberry-datepicker.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("i");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [2]);
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createAttrMorph(element0, 'class');
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "input", [], ["type", ["subexpr", "@mut", [["get", "type", ["loc", [null, [2, 7], [2, 11]]]]], [], []], "class", ["subexpr", "@mut", [["get", "classes", ["loc", [null, [3, 8], [3, 15]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonlyAttr", ["loc", [null, [4, 11], [4, 23]]]]], [], []], "required", ["subexpr", "@mut", [["get", "required", ["loc", [null, [5, 11], [5, 19]]]]], [], []], "placeholder", ["subexpr", "@mut", [["get", "placeholder", ["loc", [null, [6, 14], [6, 25]]]]], [], []]], ["loc", [null, [1, 0], [7, 2]]]], ["attribute", "class", ["concat", ["calendar ", ["subexpr", "unless", [["get", "readonly", ["loc", [null, [8, 28], [8, 36]]]], "link"], [], ["loc", [null, [8, 19], [8, 45]]]], " icon"]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/components/flexberry-ddau-checkbox", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type", "multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 14,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/flexberry-ddau-checkbox.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("label");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [2]);
        var morphs = new Array(3);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createAttrMorph(element0, 'class');
        morphs[2] = dom.createMorphAt(element0, 1, 1);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "input", [], ["class", ["subexpr", "@mut", [["get", "flexberryClassNames.checkboxInput", ["loc", [null, [7, 8], [7, 41]]]]], [], []], "type", "checkbox", "checked", ["subexpr", "get", [["get", "this", ["loc", [null, [9, 15], [9, 19]]]], "value"], [], ["loc", [null, [9, 10], [9, 28]]]]], ["loc", [null, [6, 0], [10, 2]]]], ["attribute", "class", ["get", "flexberryClassNames.checkboxCaption", ["loc", [null, [11, 15], [11, 50]]]]], ["content", "caption", ["loc", [null, [12, 2], [12, 13]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/components/flexberry-ddau-slider", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 16,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/flexberry-ddau-slider.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "ui-slider", [], ["value", ["subexpr", "get", [["get", "this", ["loc", [null, [7, 13], [7, 17]]]], "value"], [], ["loc", [null, [7, 8], [7, 26]]]], "defaultValue", ["subexpr", "@mut", [["get", "defaultValue", ["loc", [null, [8, 15], [8, 27]]]]], [], []], "min", ["subexpr", "@mut", [["get", "min", ["loc", [null, [9, 6], [9, 9]]]]], [], []], "max", ["subexpr", "@mut", [["get", "max", ["loc", [null, [10, 6], [10, 9]]]]], [], []], "step", ["subexpr", "@mut", [["get", "step", ["loc", [null, [11, 7], [11, 11]]]]], [], []], "disabled", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [12, 11], [12, 19]]]]], [], []], "immediateResponse", false, "tooltip", "hide"], ["loc", [null, [6, 0], [15, 2]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/components/flexberry-dialog", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 19,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/flexberry-dialog.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("i");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var element1 = dom.childAt(fragment, [2]);
        var element2 = dom.childAt(fragment, [4]);
        var element3 = dom.childAt(fragment, [6]);
        var morphs = new Array(9);
        morphs[0] = dom.createAttrMorph(element0, 'class');
        morphs[1] = dom.createAttrMorph(element1, 'class');
        morphs[2] = dom.createMorphAt(element1, 1, 1);
        morphs[3] = dom.createAttrMorph(element2, 'class');
        morphs[4] = dom.createMorphAt(element2, 1, 1);
        morphs[5] = dom.createMorphAt(element2, 3, 3);
        morphs[6] = dom.createAttrMorph(element3, 'class');
        morphs[7] = dom.createMorphAt(element3, 1, 1);
        morphs[8] = dom.createMorphAt(element3, 3, 3);
        return morphs;
      },
      statements: [["attribute", "class", ["concat", [["get", "flexberryClassNames.closeButton", ["loc", [null, [1, 12], [1, 43]]]], " close icon"]]], ["attribute", "class", ["concat", [["get", "flexberryClassNames.header", ["loc", [null, [2, 14], [2, 40]]]], " header"]]], ["content", "caption", ["loc", [null, [3, 2], [3, 13]]]], ["attribute", "class", ["concat", [["get", "flexberryClassNames.content", ["loc", [null, [5, 14], [5, 41]]]], " content ", ["get", "contentClass", ["loc", [null, [5, 54], [5, 66]]]]]]], ["content", "content", ["loc", [null, [6, 2], [6, 13]]]], ["content", "yield", ["loc", [null, [7, 2], [7, 11]]]], ["attribute", "class", ["concat", [["get", "flexberryClassNames.toolbar", ["loc", [null, [9, 14], [9, 41]]]], " actions"]]], ["inline", "flexberry-button", [], ["class", ["subexpr", "concat", [["get", "flexberryClassNames.approveButton", ["loc", [null, [11, 18], [11, 51]]]], " approve positive"], [], ["loc", [null, [11, 10], [11, 72]]]], "caption", ["subexpr", "@mut", [["get", "approveButtonCaption", ["loc", [null, [12, 12], [12, 32]]]]], [], []]], ["loc", [null, [10, 2], [13, 4]]]], ["inline", "flexberry-button", [], ["class", ["subexpr", "concat", [["get", "flexberryClassNames.cancelButton", ["loc", [null, [15, 18], [15, 50]]]], " deny negative"], [], ["loc", [null, [15, 10], [15, 68]]]], "caption", ["subexpr", "@mut", [["get", "denyButtonCaption", ["loc", [null, [16, 12], [16, 29]]]]], [], []]], ["loc", [null, [14, 2], [17, 4]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/components/flexberry-dropdown", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 27,
                "column": 2
              },
              "end": {
                "line": 29,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/components/flexberry-dropdown.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("input");
            dom.setAttribute(el1, "class", "search");
            dom.setAttribute(el1, "autocomplete", "off");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes() {
            return [];
          },
          statements: [],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 31,
                "column": 2
              },
              "end": {
                "line": 33,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/components/flexberry-dropdown.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("input");
            dom.setAttribute(el1, "class", "search");
            dom.setAttribute(el1, "autocomplete", "off");
            dom.setAttribute(el1, "readonly", "");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes() {
            return [];
          },
          statements: [],
          locals: [],
          templates: []
        };
      })();
      var child2 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 36,
                "column": 2
              },
              "end": {
                "line": 38,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/components/flexberry-dropdown.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1, "class", "default text");
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);
            return morphs;
          },
          statements: [["content", "placeholder", ["loc", [null, [37, 30], [37, 45]]]]],
          locals: [],
          templates: []
        };
      })();
      var child3 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 38,
                "column": 2
              },
              "end": {
                "line": 40,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/components/flexberry-dropdown.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1, "class", "text");
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);
            return morphs;
          },
          statements: [["content", "text", ["loc", [null, [39, 22], [39, 30]]]]],
          locals: [],
          templates: []
        };
      })();
      var child4 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 44,
                  "column": 6
                },
                "end": {
                  "line": 46,
                  "column": 6
                }
              },
              "moduleName": "dummy/templates/components/flexberry-dropdown.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("        ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "item");
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var element0 = dom.childAt(fragment, [1]);
              var morphs = new Array(2);
              morphs[0] = dom.createAttrMorph(element0, 'data-value');
              morphs[1] = dom.createMorphAt(element0, 0, 0);
              return morphs;
            },
            statements: [["attribute", "data-value", ["concat", [["subexpr", "if", [["get", "displayCaptions", ["loc", [null, [45, 43], [45, 58]]]], ["get", "key", ["loc", [null, [45, 59], [45, 62]]]], ["get", "value", ["loc", [null, [45, 63], [45, 68]]]]], [], ["loc", [null, [45, 38], [45, 70]]]]]]], ["content", "value", ["loc", [null, [45, 72], [45, 81]]]]],
            locals: [],
            templates: []
          };
        })();
        var child1 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 46,
                  "column": 6
                },
                "end": {
                  "line": 48,
                  "column": 6
                }
              },
              "moduleName": "dummy/templates/components/flexberry-dropdown.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("        ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "item");
              dom.setAttribute(el1, "data-value", "_");
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);
              return morphs;
            },
            statements: [["content", "value", ["loc", [null, [47, 41], [47, 50]]]]],
            locals: [],
            templates: []
          };
        })();
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 43,
                "column": 4
              },
              "end": {
                "line": 49,
                "column": 4
              }
            },
            "moduleName": "dummy/templates/components/flexberry-dropdown.hbs"
          },
          isEmpty: false,
          arity: 2,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [["block", "if", [["get", "value", ["loc", [null, [44, 12], [44, 17]]]]], [], 0, 1, ["loc", [null, [44, 6], [48, 13]]]]],
          locals: ["key", "value"],
          templates: [child0, child1]
        };
      })();
      return {
        meta: {
          "fragmentReason": {
            "name": "missing-wrapper",
            "problems": ["wrong-type", "multiple-nodes"]
          },
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 51,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/flexberry-dropdown.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("i");
          dom.setAttribute(el1, "class", "dropdown icon");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "menu");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element1 = dom.childAt(fragment, [8]);
          var morphs = new Array(5);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          morphs[1] = dom.createMorphAt(fragment, 2, 2, contextualElement);
          morphs[2] = dom.createMorphAt(fragment, 6, 6, contextualElement);
          morphs[3] = dom.createMorphAt(element1, 1, 1);
          morphs[4] = dom.createMorphAt(element1, 3, 3);
          dom.insertBoundary(fragment, 0);
          return morphs;
        },
        statements: [["block", "if", [["subexpr", "and", [["get", "isSearch", ["loc", [null, [27, 13], [27, 21]]]], ["get", "isSearchReadOnly", ["loc", [null, [27, 22], [27, 38]]]]], [], ["loc", [null, [27, 8], [27, 39]]]]], [], 0, null, ["loc", [null, [27, 2], [29, 9]]]], ["block", "if", [["subexpr", "and", [["get", "isSearch", ["loc", [null, [31, 13], [31, 21]]]], ["subexpr", "not", [["get", "isSearchReadOnly", ["loc", [null, [31, 27], [31, 43]]]]], [], ["loc", [null, [31, 22], [31, 44]]]]], [], ["loc", [null, [31, 8], [31, 45]]]]], [], 1, null, ["loc", [null, [31, 2], [33, 9]]]], ["block", "if", [["get", "showPlaceholder", ["loc", [null, [36, 8], [36, 23]]]]], [], 2, 3, ["loc", [null, [36, 2], [40, 9]]]], ["content", "yield", ["loc", [null, [42, 4], [42, 13]]]], ["block", "each-in", [["get", "_items", ["loc", [null, [43, 15], [43, 21]]]]], [], 4, null, ["loc", [null, [43, 4], [49, 16]]]]],
        locals: [],
        templates: [child0, child1, child2, child3, child4]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 52,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/flexberry-dropdown.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "ui-dropdown", [], ["class", ["subexpr", "concat", ["flexberry-dropdown ", ["get", "class", ["loc", [null, [2, 38], [2, 43]]]], " selection", ["subexpr", "if", [["get", "readonly", ["loc", [null, [2, 61], [2, 69]]]], " disabled", ""], [], ["loc", [null, [2, 57], [2, 85]]]]], [], ["loc", [null, [2, 8], [2, 86]]]], "onChange", ["subexpr", "action", ["onChange"], [], ["loc", [null, [3, 11], [3, 30]]]], "onHide", ["subexpr", "action", ["onShowHide"], [], ["loc", [null, [4, 9], [4, 30]]]], "onShow", ["subexpr", "action", ["onShowHide"], [], ["loc", [null, [5, 9], [5, 30]]]], "on", ["subexpr", "@mut", [["get", "on", ["loc", [null, [6, 5], [6, 7]]]]], [], []], "allowReselection", ["subexpr", "@mut", [["get", "allowReselection", ["loc", [null, [7, 19], [7, 35]]]]], [], []], "allowAdditions", ["subexpr", "@mut", [["get", "allowAdditions", ["loc", [null, [8, 17], [8, 31]]]]], [], []], "hideAdditions", ["subexpr", "@mut", [["get", "hideAdditions", ["loc", [null, [9, 16], [9, 29]]]]], [], []], "minCharacters", ["subexpr", "@mut", [["get", "minCharacters", ["loc", [null, [10, 16], [10, 29]]]]], [], []], "match", ["subexpr", "@mut", [["get", "match", ["loc", [null, [11, 8], [11, 13]]]]], [], []], "selectOnKeydown", ["subexpr", "@mut", [["get", "selectOnKeydown", ["loc", [null, [12, 18], [12, 33]]]]], [], []], "forceSelection", ["subexpr", "@mut", [["get", "forceSelection", ["loc", [null, [13, 17], [13, 31]]]]], [], []], "allowCategorySelection", ["subexpr", "@mut", [["get", "allowCategorySelection", ["loc", [null, [14, 25], [14, 47]]]]], [], []], "direction", ["subexpr", "@mut", [["get", "direction", ["loc", [null, [15, 12], [15, 21]]]]], [], []], "keepOnScreen", ["subexpr", "@mut", [["get", "keepOnScreen", ["loc", [null, [16, 15], [16, 27]]]]], [], []], "context", ["subexpr", "@mut", [["get", "context", ["loc", [null, [17, 10], [17, 17]]]]], [], []], "fullTextSearch", ["subexpr", "@mut", [["get", "fullTextSearch", ["loc", [null, [18, 17], [18, 31]]]]], [], []], "preserveHTML", ["subexpr", "@mut", [["get", "preserveHTML", ["loc", [null, [19, 15], [19, 27]]]]], [], []], "sortSelect", ["subexpr", "@mut", [["get", "sortSelect", ["loc", [null, [20, 13], [20, 23]]]]], [], []], "showOnFocus", ["subexpr", "@mut", [["get", "showOnFocus", ["loc", [null, [21, 14], [21, 25]]]]], [], []], "allowTab", ["subexpr", "@mut", [["get", "allowTab", ["loc", [null, [22, 11], [22, 19]]]]], [], []], "transition", ["subexpr", "@mut", [["get", "transition", ["loc", [null, [23, 13], [23, 23]]]]], [], []], "duration", ["subexpr", "@mut", [["get", "duration", ["loc", [null, [24, 11], [24, 19]]]]], [], []], "action", ["subexpr", "@mut", [["get", "action", ["loc", [null, [25, 9], [25, 15]]]]], [], []]], 0, null, ["loc", [null, [1, 0], [51, 16]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define("dummy/templates/components/flexberry-error", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        var child0 = (function () {
          var child0 = (function () {
            var child0 = (function () {
              var child0 = (function () {
                return {
                  meta: {
                    "fragmentReason": false,
                    "revision": "Ember@2.4.6",
                    "loc": {
                      "source": null,
                      "start": {
                        "line": 13,
                        "column": 14
                      },
                      "end": {
                        "line": 15,
                        "column": 14
                      }
                    },
                    "moduleName": "dummy/templates/components/flexberry-error.hbs"
                  },
                  isEmpty: false,
                  arity: 0,
                  cachedFragment: null,
                  hasRendered: false,
                  buildFragment: function buildFragment(dom) {
                    var el0 = dom.createDocumentFragment();
                    var el1 = dom.createTextNode("                ");
                    dom.appendChild(el0, el1);
                    var el1 = dom.createElement("div");
                    dom.setAttribute(el1, "class", "item");
                    var el2 = dom.createComment("");
                    dom.appendChild(el1, el2);
                    dom.appendChild(el0, el1);
                    var el1 = dom.createTextNode("\n");
                    dom.appendChild(el0, el1);
                    return el0;
                  },
                  buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                    var morphs = new Array(1);
                    morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);
                    return morphs;
                  },
                  statements: [["content", "err.reason.message", ["loc", [null, [14, 34], [14, 56]]]]],
                  locals: [],
                  templates: []
                };
              })();
              return {
                meta: {
                  "fragmentReason": false,
                  "revision": "Ember@2.4.6",
                  "loc": {
                    "source": null,
                    "start": {
                      "line": 12,
                      "column": 12
                    },
                    "end": {
                      "line": 16,
                      "column": 12
                    }
                  },
                  "moduleName": "dummy/templates/components/flexberry-error.hbs"
                },
                isEmpty: false,
                arity: 1,
                cachedFragment: null,
                hasRendered: false,
                buildFragment: function buildFragment(dom) {
                  var el0 = dom.createDocumentFragment();
                  var el1 = dom.createComment("");
                  dom.appendChild(el0, el1);
                  return el0;
                },
                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                  var morphs = new Array(1);
                  morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
                  dom.insertBoundary(fragment, 0);
                  dom.insertBoundary(fragment, null);
                  return morphs;
                },
                statements: [["block", "if", [["subexpr", "eq", [["get", "err.state", ["loc", [null, [13, 24], [13, 33]]]], "rejected"], [], ["loc", [null, [13, 20], [13, 45]]]]], [], 0, null, ["loc", [null, [13, 14], [15, 21]]]]],
                locals: ["err"],
                templates: [child0]
              };
            })();
            return {
              meta: {
                "fragmentReason": false,
                "revision": "Ember@2.4.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 10,
                    "column": 8
                  },
                  "end": {
                    "line": 18,
                    "column": 8
                  }
                },
                "moduleName": "dummy/templates/components/flexberry-error.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("          ");
                dom.appendChild(el0, el1);
                var el1 = dom.createElement("div");
                dom.setAttribute(el1, "class", "ui bulleted list");
                var el2 = dom.createTextNode("\n");
                dom.appendChild(el1, el2);
                var el2 = dom.createComment("");
                dom.appendChild(el1, el2);
                var el2 = dom.createTextNode("          ");
                dom.appendChild(el1, el2);
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var morphs = new Array(1);
                morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
                return morphs;
              },
              statements: [["block", "each", [["get", "error", ["loc", [null, [12, 20], [12, 25]]]]], [], 0, null, ["loc", [null, [12, 12], [16, 21]]]]],
              locals: [],
              templates: [child0]
            };
          })();
          var child1 = (function () {
            var child0 = (function () {
              return {
                meta: {
                  "fragmentReason": false,
                  "revision": "Ember@2.4.6",
                  "loc": {
                    "source": null,
                    "start": {
                      "line": 18,
                      "column": 8
                    },
                    "end": {
                      "line": 20,
                      "column": 8
                    }
                  },
                  "moduleName": "dummy/templates/components/flexberry-error.hbs"
                },
                isEmpty: false,
                arity: 0,
                cachedFragment: null,
                hasRendered: false,
                buildFragment: function buildFragment(dom) {
                  var el0 = dom.createDocumentFragment();
                  var el1 = dom.createTextNode("          ");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createComment("");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createTextNode("\n");
                  dom.appendChild(el0, el1);
                  return el0;
                },
                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                  var morphs = new Array(1);
                  morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
                  return morphs;
                },
                statements: [["inline", "t", [["get", "error.messageLocaleKey", ["loc", [null, [19, 14], [19, 36]]]]], [], ["loc", [null, [19, 10], [19, 38]]]]],
                locals: [],
                templates: []
              };
            })();
            var child1 = (function () {
              var child0 = (function () {
                return {
                  meta: {
                    "fragmentReason": false,
                    "revision": "Ember@2.4.6",
                    "loc": {
                      "source": null,
                      "start": {
                        "line": 20,
                        "column": 8
                      },
                      "end": {
                        "line": 22,
                        "column": 8
                      }
                    },
                    "moduleName": "dummy/templates/components/flexberry-error.hbs"
                  },
                  isEmpty: false,
                  arity: 0,
                  cachedFragment: null,
                  hasRendered: false,
                  buildFragment: function buildFragment(dom) {
                    var el0 = dom.createDocumentFragment();
                    var el1 = dom.createTextNode("          ");
                    dom.appendChild(el0, el1);
                    var el1 = dom.createComment("");
                    dom.appendChild(el0, el1);
                    var el1 = dom.createTextNode("\n");
                    dom.appendChild(el0, el1);
                    return el0;
                  },
                  buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                    var morphs = new Array(1);
                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
                    return morphs;
                  },
                  statements: [["content", "error.message", ["loc", [null, [21, 10], [21, 27]]]]],
                  locals: [],
                  templates: []
                };
              })();
              var child1 = (function () {
                return {
                  meta: {
                    "fragmentReason": false,
                    "revision": "Ember@2.4.6",
                    "loc": {
                      "source": null,
                      "start": {
                        "line": 22,
                        "column": 8
                      },
                      "end": {
                        "line": 24,
                        "column": 8
                      }
                    },
                    "moduleName": "dummy/templates/components/flexberry-error.hbs"
                  },
                  isEmpty: false,
                  arity: 0,
                  cachedFragment: null,
                  hasRendered: false,
                  buildFragment: function buildFragment(dom) {
                    var el0 = dom.createDocumentFragment();
                    var el1 = dom.createTextNode("          ");
                    dom.appendChild(el0, el1);
                    var el1 = dom.createComment("");
                    dom.appendChild(el0, el1);
                    var el1 = dom.createTextNode("\n        ");
                    dom.appendChild(el0, el1);
                    return el0;
                  },
                  buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                    var morphs = new Array(1);
                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
                    return morphs;
                  },
                  statements: [["inline", "t", ["components.flexberry-error.unknown-error"], [], ["loc", [null, [23, 10], [23, 58]]]]],
                  locals: [],
                  templates: []
                };
              })();
              return {
                meta: {
                  "fragmentReason": false,
                  "revision": "Ember@2.4.6",
                  "loc": {
                    "source": null,
                    "start": {
                      "line": 20,
                      "column": 8
                    },
                    "end": {
                      "line": 24,
                      "column": 8
                    }
                  },
                  "moduleName": "dummy/templates/components/flexberry-error.hbs"
                },
                isEmpty: false,
                arity: 0,
                cachedFragment: null,
                hasRendered: false,
                buildFragment: function buildFragment(dom) {
                  var el0 = dom.createDocumentFragment();
                  var el1 = dom.createComment("");
                  dom.appendChild(el0, el1);
                  return el0;
                },
                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                  var morphs = new Array(1);
                  morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
                  dom.insertBoundary(fragment, 0);
                  dom.insertBoundary(fragment, null);
                  return morphs;
                },
                statements: [["block", "if", [["get", "error.message", ["loc", [null, [20, 18], [20, 31]]]]], [], 0, 1, ["loc", [null, [20, 8], [24, 8]]]]],
                locals: [],
                templates: [child0, child1]
              };
            })();
            return {
              meta: {
                "fragmentReason": false,
                "revision": "Ember@2.4.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 18,
                    "column": 8
                  },
                  "end": {
                    "line": 24,
                    "column": 8
                  }
                },
                "moduleName": "dummy/templates/components/flexberry-error.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var morphs = new Array(1);
                morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
                dom.insertBoundary(fragment, 0);
                dom.insertBoundary(fragment, null);
                return morphs;
              },
              statements: [["block", "if", [["get", "error.messageLocaleKey", ["loc", [null, [18, 18], [18, 40]]]]], [], 0, 1, ["loc", [null, [18, 8], [24, 8]]]]],
              locals: [],
              templates: [child0, child1]
            };
          })();
          var child2 = (function () {
            var child0 = (function () {
              var child0 = (function () {
                var child0 = (function () {
                  return {
                    meta: {
                      "fragmentReason": false,
                      "revision": "Ember@2.4.6",
                      "loc": {
                        "source": null,
                        "start": {
                          "line": 32,
                          "column": 14
                        },
                        "end": {
                          "line": 34,
                          "column": 14
                        }
                      },
                      "moduleName": "dummy/templates/components/flexberry-error.hbs"
                    },
                    isEmpty: false,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: false,
                    buildFragment: function buildFragment(dom) {
                      var el0 = dom.createDocumentFragment();
                      var el1 = dom.createTextNode("                ");
                      dom.appendChild(el0, el1);
                      var el1 = dom.createComment("");
                      dom.appendChild(el0, el1);
                      var el1 = dom.createTextNode("\n");
                      dom.appendChild(el0, el1);
                      return el0;
                    },
                    buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                      var morphs = new Array(1);
                      morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
                      return morphs;
                    },
                    statements: [["inline", "t", [["get", "e.messageLocaleKey", ["loc", [null, [33, 20], [33, 38]]]]], [], ["loc", [null, [33, 16], [33, 40]]]]],
                    locals: [],
                    templates: []
                  };
                })();
                var child1 = (function () {
                  var child0 = (function () {
                    return {
                      meta: {
                        "fragmentReason": false,
                        "revision": "Ember@2.4.6",
                        "loc": {
                          "source": null,
                          "start": {
                            "line": 34,
                            "column": 14
                          },
                          "end": {
                            "line": 36,
                            "column": 14
                          }
                        },
                        "moduleName": "dummy/templates/components/flexberry-error.hbs"
                      },
                      isEmpty: false,
                      arity: 0,
                      cachedFragment: null,
                      hasRendered: false,
                      buildFragment: function buildFragment(dom) {
                        var el0 = dom.createDocumentFragment();
                        var el1 = dom.createTextNode("                ");
                        dom.appendChild(el0, el1);
                        var el1 = dom.createComment("");
                        dom.appendChild(el0, el1);
                        var el1 = dom.createTextNode("\n              ");
                        dom.appendChild(el0, el1);
                        return el0;
                      },
                      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                        var morphs = new Array(1);
                        morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
                        return morphs;
                      },
                      statements: [["content", "e.message", ["loc", [null, [35, 16], [35, 29]]]]],
                      locals: [],
                      templates: []
                    };
                  })();
                  return {
                    meta: {
                      "fragmentReason": false,
                      "revision": "Ember@2.4.6",
                      "loc": {
                        "source": null,
                        "start": {
                          "line": 34,
                          "column": 14
                        },
                        "end": {
                          "line": 36,
                          "column": 14
                        }
                      },
                      "moduleName": "dummy/templates/components/flexberry-error.hbs"
                    },
                    isEmpty: false,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: false,
                    buildFragment: function buildFragment(dom) {
                      var el0 = dom.createDocumentFragment();
                      var el1 = dom.createComment("");
                      dom.appendChild(el0, el1);
                      return el0;
                    },
                    buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                      var morphs = new Array(1);
                      morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
                      dom.insertBoundary(fragment, 0);
                      dom.insertBoundary(fragment, null);
                      return morphs;
                    },
                    statements: [["block", "if", [["get", "e.message", ["loc", [null, [34, 24], [34, 33]]]]], [], 0, null, ["loc", [null, [34, 14], [36, 14]]]]],
                    locals: [],
                    templates: [child0]
                  };
                })();
                return {
                  meta: {
                    "fragmentReason": false,
                    "revision": "Ember@2.4.6",
                    "loc": {
                      "source": null,
                      "start": {
                        "line": 30,
                        "column": 10
                      },
                      "end": {
                        "line": 39,
                        "column": 10
                      }
                    },
                    "moduleName": "dummy/templates/components/flexberry-error.hbs"
                  },
                  isEmpty: false,
                  arity: 1,
                  cachedFragment: null,
                  hasRendered: false,
                  buildFragment: function buildFragment(dom) {
                    var el0 = dom.createDocumentFragment();
                    var el1 = dom.createTextNode("            ");
                    dom.appendChild(el0, el1);
                    var el1 = dom.createElement("h3");
                    dom.setAttribute(el1, "class", "ui header");
                    var el2 = dom.createTextNode("\n");
                    dom.appendChild(el1, el2);
                    var el2 = dom.createComment("");
                    dom.appendChild(el1, el2);
                    var el2 = dom.createTextNode("            ");
                    dom.appendChild(el1, el2);
                    dom.appendChild(el0, el1);
                    var el1 = dom.createTextNode("\n            ");
                    dom.appendChild(el0, el1);
                    var el1 = dom.createElement("pre");
                    var el2 = dom.createComment("");
                    dom.appendChild(el1, el2);
                    dom.appendChild(el0, el1);
                    var el1 = dom.createTextNode("\n");
                    dom.appendChild(el0, el1);
                    return el0;
                  },
                  buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                    var morphs = new Array(2);
                    morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
                    morphs[1] = dom.createMorphAt(dom.childAt(fragment, [3]), 0, 0);
                    return morphs;
                  },
                  statements: [["block", "if", [["get", "e.messageLocaleKey", ["loc", [null, [32, 20], [32, 38]]]]], [], 0, 1, ["loc", [null, [32, 14], [36, 21]]]], ["content", "e.stack", ["loc", [null, [38, 17], [38, 28]]]]],
                  locals: ["e"],
                  templates: [child0, child1]
                };
              })();
              return {
                meta: {
                  "fragmentReason": false,
                  "revision": "Ember@2.4.6",
                  "loc": {
                    "source": null,
                    "start": {
                      "line": 27,
                      "column": 8
                    },
                    "end": {
                      "line": 40,
                      "column": 8
                    }
                  },
                  "moduleName": "dummy/templates/components/flexberry-error.hbs"
                },
                isEmpty: false,
                arity: 0,
                cachedFragment: null,
                hasRendered: false,
                buildFragment: function buildFragment(dom) {
                  var el0 = dom.createDocumentFragment();
                  var el1 = dom.createComment("");
                  dom.appendChild(el0, el1);
                  return el0;
                },
                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                  var morphs = new Array(1);
                  morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
                  dom.insertBoundary(fragment, 0);
                  dom.insertBoundary(fragment, null);
                  return morphs;
                },
                statements: [["block", "each", [["get", "error.errors", ["loc", [null, [30, 18], [30, 30]]]]], [], 0, null, ["loc", [null, [30, 10], [39, 19]]]]],
                locals: [],
                templates: [child0]
              };
            })();
            return {
              meta: {
                "fragmentReason": false,
                "revision": "Ember@2.4.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 26,
                    "column": 6
                  },
                  "end": {
                    "line": 41,
                    "column": 6
                  }
                },
                "moduleName": "dummy/templates/components/flexberry-error.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var morphs = new Array(1);
                morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
                dom.insertBoundary(fragment, 0);
                dom.insertBoundary(fragment, null);
                return morphs;
              },
              statements: [["block", "flexberry-toggler", [], ["caption", ["subexpr", "t", ["components.flexberry-error.show-more"], [], ["loc", [null, [28, 18], [28, 60]]]]], 0, null, ["loc", [null, [27, 8], [40, 30]]]]],
              locals: [],
              templates: [child0]
            };
          })();
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 3,
                  "column": 4
                },
                "end": {
                  "line": 42,
                  "column": 4
                }
              },
              "moduleName": "dummy/templates/components/flexberry-error.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("      ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("h2");
              dom.setAttribute(el1, "class", "ui header");
              var el2 = dom.createTextNode("\n");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("      ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(2);
              morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
              morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);
              dom.insertBoundary(fragment, null);
              return morphs;
            },
            statements: [["block", "if", [["subexpr", "and", [["get", "_errorIsArray", ["loc", [null, [10, 19], [10, 32]]]], ["get", "_messageIsNotSpecified", ["loc", [null, [10, 33], [10, 55]]]]], [], ["loc", [null, [10, 14], [10, 56]]]]], [], 0, 1, ["loc", [null, [10, 8], [24, 15]]]], ["block", "if", [["get", "error.errors", ["loc", [null, [26, 12], [26, 24]]]]], [], 2, null, ["loc", [null, [26, 6], [41, 13]]]]],
            locals: [],
            templates: [child0, child1, child2]
          };
        })();
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 2,
                "column": 2
              },
              "end": {
                "line": 43,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/components/flexberry-error.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [["block", "modal-dialog", [], ["title", ["subexpr", "t", ["components.flexberry-error.caption"], [], ["loc", [null, [4, 12], [4, 52]]]], "useOkButton", ["subexpr", "@mut", [["get", "useOkButton", ["loc", [null, [5, 18], [5, 29]]]]], [], []], "useCloseButton", ["subexpr", "@mut", [["get", "useCloseButton", ["loc", [null, [6, 21], [6, 35]]]]], [], []], "settings", ["subexpr", "hash", [], ["context", ["get", "modalContext", ["loc", [null, [7, 29], [7, 41]]]], "onHidden", ["subexpr", "action", ["close"], [], ["loc", [null, [7, 51], [7, 67]]]]], ["loc", [null, [7, 15], [7, 68]]]]], 0, null, ["loc", [null, [3, 4], [42, 21]]]]],
          locals: [],
          templates: [child0]
        };
      })();
      var child1 = (function () {
        var child0 = (function () {
          var child0 = (function () {
            return {
              meta: {
                "fragmentReason": false,
                "revision": "Ember@2.4.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 50,
                    "column": 8
                  },
                  "end": {
                    "line": 52,
                    "column": 8
                  }
                },
                "moduleName": "dummy/templates/components/flexberry-error.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("          ");
                dom.appendChild(el0, el1);
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var morphs = new Array(1);
                morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
                return morphs;
              },
              statements: [["inline", "t", [["get", "error.messageLocaleKey", ["loc", [null, [51, 14], [51, 36]]]]], [], ["loc", [null, [51, 10], [51, 38]]]]],
              locals: [],
              templates: []
            };
          })();
          var child1 = (function () {
            var child0 = (function () {
              return {
                meta: {
                  "fragmentReason": false,
                  "revision": "Ember@2.4.6",
                  "loc": {
                    "source": null,
                    "start": {
                      "line": 52,
                      "column": 8
                    },
                    "end": {
                      "line": 54,
                      "column": 8
                    }
                  },
                  "moduleName": "dummy/templates/components/flexberry-error.hbs"
                },
                isEmpty: false,
                arity: 0,
                cachedFragment: null,
                hasRendered: false,
                buildFragment: function buildFragment(dom) {
                  var el0 = dom.createDocumentFragment();
                  var el1 = dom.createTextNode("          ");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createComment("");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createTextNode("\n");
                  dom.appendChild(el0, el1);
                  return el0;
                },
                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                  var morphs = new Array(1);
                  morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
                  return morphs;
                },
                statements: [["content", "error.message", ["loc", [null, [53, 10], [53, 27]]]]],
                locals: [],
                templates: []
              };
            })();
            var child1 = (function () {
              return {
                meta: {
                  "fragmentReason": false,
                  "revision": "Ember@2.4.6",
                  "loc": {
                    "source": null,
                    "start": {
                      "line": 54,
                      "column": 8
                    },
                    "end": {
                      "line": 56,
                      "column": 8
                    }
                  },
                  "moduleName": "dummy/templates/components/flexberry-error.hbs"
                },
                isEmpty: false,
                arity: 0,
                cachedFragment: null,
                hasRendered: false,
                buildFragment: function buildFragment(dom) {
                  var el0 = dom.createDocumentFragment();
                  var el1 = dom.createTextNode("          ");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createComment("");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createTextNode("\n        ");
                  dom.appendChild(el0, el1);
                  return el0;
                },
                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                  var morphs = new Array(1);
                  morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
                  return morphs;
                },
                statements: [["inline", "t", ["components.flexberry-error.unknown-error"], [], ["loc", [null, [55, 10], [55, 58]]]]],
                locals: [],
                templates: []
              };
            })();
            return {
              meta: {
                "fragmentReason": false,
                "revision": "Ember@2.4.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 52,
                    "column": 8
                  },
                  "end": {
                    "line": 56,
                    "column": 8
                  }
                },
                "moduleName": "dummy/templates/components/flexberry-error.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var morphs = new Array(1);
                morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
                dom.insertBoundary(fragment, 0);
                dom.insertBoundary(fragment, null);
                return morphs;
              },
              statements: [["block", "if", [["get", "error.message", ["loc", [null, [52, 18], [52, 31]]]]], [], 0, 1, ["loc", [null, [52, 8], [56, 8]]]]],
              locals: [],
              templates: [child0, child1]
            };
          })();
          var child2 = (function () {
            var child0 = (function () {
              var child0 = (function () {
                var child0 = (function () {
                  return {
                    meta: {
                      "fragmentReason": false,
                      "revision": "Ember@2.4.6",
                      "loc": {
                        "source": null,
                        "start": {
                          "line": 64,
                          "column": 14
                        },
                        "end": {
                          "line": 66,
                          "column": 14
                        }
                      },
                      "moduleName": "dummy/templates/components/flexberry-error.hbs"
                    },
                    isEmpty: false,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: false,
                    buildFragment: function buildFragment(dom) {
                      var el0 = dom.createDocumentFragment();
                      var el1 = dom.createTextNode("                ");
                      dom.appendChild(el0, el1);
                      var el1 = dom.createComment("");
                      dom.appendChild(el0, el1);
                      var el1 = dom.createTextNode("\n");
                      dom.appendChild(el0, el1);
                      return el0;
                    },
                    buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                      var morphs = new Array(1);
                      morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
                      return morphs;
                    },
                    statements: [["inline", "t", [["get", "e.messageLocaleKey", ["loc", [null, [65, 20], [65, 38]]]]], [], ["loc", [null, [65, 16], [65, 40]]]]],
                    locals: [],
                    templates: []
                  };
                })();
                var child1 = (function () {
                  var child0 = (function () {
                    return {
                      meta: {
                        "fragmentReason": false,
                        "revision": "Ember@2.4.6",
                        "loc": {
                          "source": null,
                          "start": {
                            "line": 66,
                            "column": 14
                          },
                          "end": {
                            "line": 68,
                            "column": 14
                          }
                        },
                        "moduleName": "dummy/templates/components/flexberry-error.hbs"
                      },
                      isEmpty: false,
                      arity: 0,
                      cachedFragment: null,
                      hasRendered: false,
                      buildFragment: function buildFragment(dom) {
                        var el0 = dom.createDocumentFragment();
                        var el1 = dom.createTextNode("                ");
                        dom.appendChild(el0, el1);
                        var el1 = dom.createComment("");
                        dom.appendChild(el0, el1);
                        var el1 = dom.createTextNode("\n              ");
                        dom.appendChild(el0, el1);
                        return el0;
                      },
                      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                        var morphs = new Array(1);
                        morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
                        return morphs;
                      },
                      statements: [["content", "e.message", ["loc", [null, [67, 16], [67, 29]]]]],
                      locals: [],
                      templates: []
                    };
                  })();
                  return {
                    meta: {
                      "fragmentReason": false,
                      "revision": "Ember@2.4.6",
                      "loc": {
                        "source": null,
                        "start": {
                          "line": 66,
                          "column": 14
                        },
                        "end": {
                          "line": 68,
                          "column": 14
                        }
                      },
                      "moduleName": "dummy/templates/components/flexberry-error.hbs"
                    },
                    isEmpty: false,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: false,
                    buildFragment: function buildFragment(dom) {
                      var el0 = dom.createDocumentFragment();
                      var el1 = dom.createComment("");
                      dom.appendChild(el0, el1);
                      return el0;
                    },
                    buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                      var morphs = new Array(1);
                      morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
                      dom.insertBoundary(fragment, 0);
                      dom.insertBoundary(fragment, null);
                      return morphs;
                    },
                    statements: [["block", "if", [["get", "e.message", ["loc", [null, [66, 24], [66, 33]]]]], [], 0, null, ["loc", [null, [66, 14], [68, 14]]]]],
                    locals: [],
                    templates: [child0]
                  };
                })();
                return {
                  meta: {
                    "fragmentReason": false,
                    "revision": "Ember@2.4.6",
                    "loc": {
                      "source": null,
                      "start": {
                        "line": 62,
                        "column": 10
                      },
                      "end": {
                        "line": 71,
                        "column": 10
                      }
                    },
                    "moduleName": "dummy/templates/components/flexberry-error.hbs"
                  },
                  isEmpty: false,
                  arity: 1,
                  cachedFragment: null,
                  hasRendered: false,
                  buildFragment: function buildFragment(dom) {
                    var el0 = dom.createDocumentFragment();
                    var el1 = dom.createTextNode("            ");
                    dom.appendChild(el0, el1);
                    var el1 = dom.createElement("h3");
                    dom.setAttribute(el1, "class", "ui header");
                    var el2 = dom.createTextNode("\n");
                    dom.appendChild(el1, el2);
                    var el2 = dom.createComment("");
                    dom.appendChild(el1, el2);
                    var el2 = dom.createTextNode("            ");
                    dom.appendChild(el1, el2);
                    dom.appendChild(el0, el1);
                    var el1 = dom.createTextNode("\n            ");
                    dom.appendChild(el0, el1);
                    var el1 = dom.createElement("pre");
                    var el2 = dom.createComment("");
                    dom.appendChild(el1, el2);
                    dom.appendChild(el0, el1);
                    var el1 = dom.createTextNode("\n");
                    dom.appendChild(el0, el1);
                    return el0;
                  },
                  buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                    var morphs = new Array(2);
                    morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
                    morphs[1] = dom.createMorphAt(dom.childAt(fragment, [3]), 0, 0);
                    return morphs;
                  },
                  statements: [["block", "if", [["get", "e.messageLocaleKey", ["loc", [null, [64, 20], [64, 38]]]]], [], 0, 1, ["loc", [null, [64, 14], [68, 21]]]], ["content", "e.stack", ["loc", [null, [70, 17], [70, 28]]]]],
                  locals: ["e"],
                  templates: [child0, child1]
                };
              })();
              return {
                meta: {
                  "fragmentReason": false,
                  "revision": "Ember@2.4.6",
                  "loc": {
                    "source": null,
                    "start": {
                      "line": 59,
                      "column": 8
                    },
                    "end": {
                      "line": 72,
                      "column": 8
                    }
                  },
                  "moduleName": "dummy/templates/components/flexberry-error.hbs"
                },
                isEmpty: false,
                arity: 0,
                cachedFragment: null,
                hasRendered: false,
                buildFragment: function buildFragment(dom) {
                  var el0 = dom.createDocumentFragment();
                  var el1 = dom.createComment("");
                  dom.appendChild(el0, el1);
                  return el0;
                },
                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                  var morphs = new Array(1);
                  morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
                  dom.insertBoundary(fragment, 0);
                  dom.insertBoundary(fragment, null);
                  return morphs;
                },
                statements: [["block", "each", [["get", "error.errors", ["loc", [null, [62, 18], [62, 30]]]]], [], 0, null, ["loc", [null, [62, 10], [71, 19]]]]],
                locals: [],
                templates: [child0]
              };
            })();
            return {
              meta: {
                "fragmentReason": false,
                "revision": "Ember@2.4.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 58,
                    "column": 6
                  },
                  "end": {
                    "line": 73,
                    "column": 6
                  }
                },
                "moduleName": "dummy/templates/components/flexberry-error.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var morphs = new Array(1);
                morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
                dom.insertBoundary(fragment, 0);
                dom.insertBoundary(fragment, null);
                return morphs;
              },
              statements: [["block", "flexberry-toggler", [], ["caption", ["subexpr", "t", ["components.flexberry-error.show-more"], [], ["loc", [null, [60, 18], [60, 60]]]]], 0, null, ["loc", [null, [59, 8], [72, 30]]]]],
              locals: [],
              templates: [child0]
            };
          })();
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 44,
                  "column": 4
                },
                "end": {
                  "line": 74,
                  "column": 4
                }
              },
              "moduleName": "dummy/templates/components/flexberry-error.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("      ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("h2");
              dom.setAttribute(el1, "class", "ui header");
              var el2 = dom.createTextNode("\n");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("      ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(2);
              morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
              morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);
              dom.insertBoundary(fragment, null);
              return morphs;
            },
            statements: [["block", "if", [["get", "error.messageLocaleKey", ["loc", [null, [50, 14], [50, 36]]]]], [], 0, 1, ["loc", [null, [50, 8], [56, 15]]]], ["block", "if", [["get", "error.errors", ["loc", [null, [58, 12], [58, 24]]]]], [], 2, null, ["loc", [null, [58, 6], [73, 13]]]]],
            locals: [],
            templates: [child0, child1, child2]
          };
        })();
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 43,
                "column": 2
              },
              "end": {
                "line": 75,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/components/flexberry-error.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [["block", "ui-message", [], ["type", "negative", "onHide", "close", "closeable", true], 0, null, ["loc", [null, [44, 4], [74, 19]]]]],
          locals: [],
          templates: [child0]
        };
      })();
      return {
        meta: {
          "fragmentReason": {
            "name": "missing-wrapper",
            "problems": ["wrong-type"]
          },
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 76,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/flexberry-error.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "if", [["get", "modal", ["loc", [null, [2, 8], [2, 13]]]]], [], 0, 1, ["loc", [null, [2, 2], [75, 9]]]]],
        locals: [],
        templates: [child0, child1]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 77,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/flexberry-error.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "if", [["get", "error", ["loc", [null, [1, 6], [1, 11]]]]], [], 0, null, ["loc", [null, [1, 0], [76, 7]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define("dummy/templates/components/flexberry-field", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 3,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/flexberry-field.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createElement("label");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]), 0, 0);
          return morphs;
        },
        statements: [["content", "label", ["loc", [null, [2, 7], [2, 16]]]]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type", "multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 12,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/flexberry-field.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(fragment, 1, 1, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["block", "if", [["get", "label", ["loc", [null, [1, 6], [1, 11]]]]], [], 0, null, ["loc", [null, [1, 0], [3, 7]]]], ["inline", "flexberry-textbox", [], ["type", ["subexpr", "@mut", [["get", "type", ["loc", [null, [5, 7], [5, 11]]]]], [], []], "value", ["subexpr", "@mut", [["get", "value", ["loc", [null, [6, 8], [6, 13]]]]], [], []], "readonly", ["subexpr", "if", [["get", "readonly", ["loc", [null, [7, 15], [7, 23]]]], "readonly"], [], ["loc", [null, [7, 11], [7, 35]]]], "required", ["subexpr", "@mut", [["get", "required", ["loc", [null, [8, 11], [8, 19]]]]], [], []], "placeholder", ["subexpr", "@mut", [["get", "placeholder", ["loc", [null, [9, 14], [9, 25]]]]], [], []], "maxlength", ["subexpr", "@mut", [["get", "maxlength", ["loc", [null, [10, 12], [10, 21]]]]], [], []]], ["loc", [null, [4, 0], [11, 2]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define("dummy/templates/components/flexberry-file", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 12,
                "column": 4
              },
              "end": {
                "line": 20,
                "column": 4
              }
            },
            "moduleName": "dummy/templates/components/flexberry-file.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("label");
            var el2 = dom.createTextNode("\n        ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("i");
            dom.setAttribute(el2, "class", "add outline square icon");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n      ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element6 = dom.childAt(fragment, [1]);
            var morphs = new Array(4);
            morphs[0] = dom.createAttrMorph(element6, 'class');
            morphs[1] = dom.createAttrMorph(element6, 'title');
            morphs[2] = dom.createAttrMorph(element6, 'for');
            morphs[3] = dom.createElementMorph(element6);
            return morphs;
          },
          statements: [["attribute", "class", ["concat", ["flexberry-file-add-button ui icon ", ["get", "buttonClass", ["loc", [null, [14, 51], [14, 62]]]], " ", ["subexpr", "unless", [["get", "_addButtonIsEnabled", ["loc", [null, [14, 74], [14, 93]]]], "disabled"], [], ["loc", [null, [14, 65], [14, 106]]]], " button"]]], ["attribute", "title", ["subexpr", "t", ["components.flexberry-file.add-button-title"], [], ["loc", [null, [15, 14], [15, 64]]]]], ["attribute", "for", ["get", "_fileInputId", ["loc", [null, [16, 14], [16, 26]]]]], ["element", "action", ["addButtonClick"], ["on", "click", "preventDefault", false], ["loc", [null, [17, 8], [17, 67]]]]],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 21,
                "column": 4
              },
              "end": {
                "line": 28,
                "column": 4
              }
            },
            "moduleName": "dummy/templates/components/flexberry-file.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("label");
            var el2 = dom.createTextNode("\n        ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("i");
            dom.setAttribute(el2, "class", "trash outline icon");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n      ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element5 = dom.childAt(fragment, [1]);
            var morphs = new Array(3);
            morphs[0] = dom.createAttrMorph(element5, 'class');
            morphs[1] = dom.createAttrMorph(element5, 'title');
            morphs[2] = dom.createElementMorph(element5);
            return morphs;
          },
          statements: [["attribute", "class", ["concat", ["flexberry-file-remove-button ui icon ", ["get", "buttonClass", ["loc", [null, [23, 54], [23, 65]]]], " ", ["subexpr", "unless", [["get", "_removeButtonIsEnabled", ["loc", [null, [23, 77], [23, 99]]]], "disabled"], [], ["loc", [null, [23, 68], [23, 112]]]], " button"]]], ["attribute", "title", ["subexpr", "t", ["components.flexberry-file.remove-button-title"], [], ["loc", [null, [24, 14], [24, 67]]]]], ["element", "action", ["removeButtonClick"], ["on", "click", "preventDefault", false], ["loc", [null, [25, 8], [25, 70]]]]],
          locals: [],
          templates: []
        };
      })();
      var child2 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 29,
                "column": 4
              },
              "end": {
                "line": 36,
                "column": 4
              }
            },
            "moduleName": "dummy/templates/components/flexberry-file.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("label");
            var el2 = dom.createTextNode("\n        ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("i");
            dom.setAttribute(el2, "class", "upload outline icon");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n      ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element4 = dom.childAt(fragment, [1]);
            var morphs = new Array(3);
            morphs[0] = dom.createAttrMorph(element4, 'class');
            morphs[1] = dom.createAttrMorph(element4, 'title');
            morphs[2] = dom.createElementMorph(element4);
            return morphs;
          },
          statements: [["attribute", "class", ["concat", ["flexberry-file-upload-button ui icon ", ["get", "buttonClass", ["loc", [null, [31, 54], [31, 65]]]], " ", ["subexpr", "unless", [["get", "_uploadButtonIsEnabled", ["loc", [null, [31, 77], [31, 99]]]], "disabled"], [], ["loc", [null, [31, 68], [31, 112]]]], " ", ["subexpr", "if", [["get", "_uploadIsInProgress", ["loc", [null, [31, 118], [31, 137]]]], "loading"], [], ["loc", [null, [31, 113], [31, 149]]]], " button"]]], ["attribute", "title", ["subexpr", "t", ["components.flexberry-file.upload-button-title"], [], ["loc", [null, [32, 14], [32, 67]]]]], ["element", "action", ["uploadButtonClick"], ["on", "click", "preventDefault", false], ["loc", [null, [33, 8], [33, 70]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 11,
              "column": 2
            },
            "end": {
              "line": 37,
              "column": 2
            }
          },
          "moduleName": "dummy/templates/components/flexberry-file.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(3);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          morphs[1] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          morphs[2] = dom.createMorphAt(fragment, 2, 2, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "if", [["get", "_addButtonIsVisible", ["loc", [null, [12, 10], [12, 29]]]]], [], 0, null, ["loc", [null, [12, 4], [20, 11]]]], ["block", "if", [["get", "_removeButtonIsVisible", ["loc", [null, [21, 10], [21, 32]]]]], [], 1, null, ["loc", [null, [21, 4], [28, 11]]]], ["block", "if", [["get", "_uploadButtonIsVisible", ["loc", [null, [29, 10], [29, 32]]]]], [], 2, null, ["loc", [null, [29, 4], [36, 11]]]]],
        locals: [],
        templates: [child0, child1, child2]
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 38,
              "column": 2
            },
            "end": {
              "line": 45,
              "column": 2
            }
          },
          "moduleName": "dummy/templates/components/flexberry-file.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("label");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("i");
          dom.setAttribute(el2, "class", "download outline icon");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element3 = dom.childAt(fragment, [1]);
          var morphs = new Array(3);
          morphs[0] = dom.createAttrMorph(element3, 'class');
          morphs[1] = dom.createAttrMorph(element3, 'title');
          morphs[2] = dom.createElementMorph(element3);
          return morphs;
        },
        statements: [["attribute", "class", ["concat", ["flexberry-file-download-button ui icon ", ["get", "buttonClass", ["loc", [null, [40, 54], [40, 65]]]], " ", ["subexpr", "unless", [["get", "_downloadButtonIsEnabled", ["loc", [null, [40, 77], [40, 101]]]], "disabled"], [], ["loc", [null, [40, 68], [40, 114]]]], " button"]]], ["attribute", "title", ["subexpr", "t", ["components.flexberry-file.download-button-title"], [], ["loc", [null, [41, 12], [41, 67]]]]], ["element", "action", ["downloadButtonClick"], ["on", "click", "preventDefault", false], ["loc", [null, [42, 6], [42, 70]]]]],
        locals: [],
        templates: []
      };
    })();
    var child2 = (function () {
      var child0 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 50,
                  "column": 6
                },
                "end": {
                  "line": 55,
                  "column": 6
                }
              },
              "moduleName": "dummy/templates/components/flexberry-file.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("        ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("img");
              dom.setAttribute(el1, "class", "flexberry-file-image-preview ui small centered image");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var element0 = dom.childAt(fragment, [1]);
              var morphs = new Array(2);
              morphs[0] = dom.createAttrMorph(element0, 'src');
              morphs[1] = dom.createAttrMorph(element0, 'alt');
              return morphs;
            },
            statements: [["attribute", "src", ["get", "_previewImageAsBase64String", ["loc", [null, [53, 16], [53, 43]]]]], ["attribute", "alt", ["subexpr", "t", ["components.flexberry-file.preview-image-alternative-text"], [], ["loc", [null, [54, 14], [54, 78]]]]]],
            locals: [],
            templates: []
          };
        })();
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 48,
                "column": 2
              },
              "end": {
                "line": 58,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/components/flexberry-file.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1, "class", "flexberry-file-image-preview-wrapper ui segment");
            var el2 = dom.createTextNode("\n");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("      ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("div");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n    ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element1 = dom.childAt(fragment, [1]);
            var element2 = dom.childAt(element1, [3]);
            var morphs = new Array(3);
            morphs[0] = dom.createElementMorph(element1);
            morphs[1] = dom.createMorphAt(element1, 1, 1);
            morphs[2] = dom.createAttrMorph(element2, 'class');
            return morphs;
          },
          statements: [["element", "action", ["viewLoadedImage"], [], ["loc", [null, [49, 65], [49, 93]]]], ["block", "unless", [["get", "_previewDownloadIsInProgress", ["loc", [null, [50, 16], [50, 44]]]]], [], 0, null, ["loc", [null, [50, 6], [55, 17]]]], ["attribute", "class", ["concat", ["ui ", ["subexpr", "if", [["get", "_previewDownloadIsInProgress", ["loc", [null, [56, 26], [56, 54]]]], "active", "disabled"], [], ["loc", [null, [56, 21], [56, 76]]]], " loader"]]]],
          locals: [],
          templates: [child0]
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 58,
                "column": 2
              },
              "end": {
                "line": 60,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/components/flexberry-file.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("span");
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode(" ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("span");
            dom.setAttribute(el1, "style", "color:red");
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(2);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);
            morphs[1] = dom.createMorphAt(dom.childAt(fragment, [3]), 0, 0);
            return morphs;
          },
          statements: [["content", "_fileName", ["loc", [null, [59, 10], [59, 23]]]], ["content", "_errorPreviewCaption", ["loc", [null, [59, 61], [59, 85]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 47,
              "column": 0
            },
            "end": {
              "line": 61,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/flexberry-file.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "if", [["get", "_canLoadPreview", ["loc", [null, [48, 8], [48, 23]]]]], [], 0, 1, ["loc", [null, [48, 2], [60, 9]]]]],
        locals: [],
        templates: [child0, child1]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes", "wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 84,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/flexberry-file.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("input");
        dom.setAttribute(el2, "type", "file");
        dom.setAttribute(el2, "name", "files[]");
        dom.setAttribute(el2, "class", "flexberry-file-file-input");
        dom.setAttribute(el2, "style", "display:none");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "flexberry-file-download-iframes-container");
        dom.setAttribute(el1, "style", "display: none;");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "flexberry-file-error-modal-dialog ui small basic modal");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "ui icon header");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("i");
        dom.setAttribute(el3, "class", "file icon");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "content");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "flexberry-file-error-modal-dialog-content center aligned ui grid");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "flexberry-file-error-modal-dialog-button center aligned ui grid");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "actions");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "ui button flexberry-file-error-modal-dialog-ok-button approve");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("i");
        dom.setAttribute(el5, "class", "checkmark icon");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element7 = dom.childAt(fragment, [0]);
        var element8 = dom.childAt(element7, [1]);
        var element9 = dom.childAt(fragment, [5]);
        var morphs = new Array(10);
        morphs[0] = dom.createAttrMorph(element7, 'class');
        morphs[1] = dom.createAttrMorph(element8, 'accept');
        morphs[2] = dom.createAttrMorph(element8, 'id');
        morphs[3] = dom.createMorphAt(element7, 4, 4);
        morphs[4] = dom.createMorphAt(element7, 6, 6);
        morphs[5] = dom.createMorphAt(element7, 7, 7);
        morphs[6] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        morphs[7] = dom.createMorphAt(dom.childAt(element9, [1]), 3, 3);
        morphs[8] = dom.createMorphAt(dom.childAt(element9, [3, 1]), 1, 1);
        morphs[9] = dom.createMorphAt(dom.childAt(element9, [5, 1, 1]), 3, 3);
        return morphs;
      },
      statements: [["attribute", "class", ["concat", ["ui ", ["get", "inputClass", ["loc", [null, [1, 17], [1, 27]]]], " action input"]]], ["attribute", "accept", ["get", "accept", ["loc", [null, [2, 45], [2, 51]]]]], ["attribute", "id", ["get", "_fileInputId", ["loc", [null, [2, 59], [2, 71]]]]], ["inline", "input", [], ["type", "text", "class", "flexberry-file-filename-input", "readonly", "readonly", "placeholder", ["subexpr", "@mut", [["get", "placeholder", ["loc", [null, [8, 16], [8, 27]]]]], [], []], "value", ["subexpr", "get", [["get", "this", ["loc", [null, [9, 15], [9, 19]]]], "_fileName"], [], ["loc", [null, [9, 10], [9, 32]]]]], ["loc", [null, [4, 2], [10, 4]]]], ["block", "unless", [["get", "readonly", ["loc", [null, [11, 12], [11, 20]]]]], [], 0, null, ["loc", [null, [11, 2], [37, 13]]]], ["block", "if", [["get", "_downloadButtonIsVisible", ["loc", [null, [38, 8], [38, 32]]]]], [], 1, null, ["loc", [null, [38, 2], [45, 9]]]], ["block", "if", [["subexpr", "and", [["get", "showPreview", ["loc", [null, [47, 11], [47, 22]]]], ["get", "_hasFile", ["loc", [null, [47, 23], [47, 31]]]]], [], ["loc", [null, [47, 6], [47, 32]]]]], [], 2, null, ["loc", [null, [47, 0], [61, 7]]]], ["content", "_errorModalDialogCaption", ["loc", [null, [68, 4], [68, 32]]]], ["content", "_errorModalDialogContent", ["loc", [null, [72, 6], [72, 34]]]], ["inline", "t", ["components.flexberry-file.error-dialog-ok-button-caption"], [], ["loc", [null, [79, 8], [79, 72]]]]],
      locals: [],
      templates: [child0, child1, child2]
    };
  })());
});
define("dummy/templates/components/flexberry-groupedit", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type", "multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 60,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/flexberry-groupedit.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "groupedit-toolbar", [], ["componentName", ["subexpr", "@mut", [["get", "componentName", ["loc", [null, [2, 16], [2, 29]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [3, 11], [3, 19]]]]], [], []], "buttonClass", ["subexpr", "@mut", [["get", "buttonClass", ["loc", [null, [4, 14], [4, 25]]]]], [], []], "createNewButton", ["subexpr", "@mut", [["get", "createNewButton", ["loc", [null, [5, 18], [5, 33]]]]], [], []], "deleteButton", ["subexpr", "@mut", [["get", "deleteButton", ["loc", [null, [6, 15], [6, 27]]]]], [], []], "defaultSettingsButton", ["subexpr", "@mut", [["get", "defaultSettingsButton", ["loc", [null, [7, 24], [7, 45]]]]], [], []], "confirmDeleteRows", ["subexpr", "@mut", [["get", "confirmDeleteRows", ["loc", [null, [8, 20], [8, 37]]]]], [], []], "sorting", ["subexpr", "@mut", [["get", "sorting", ["loc", [null, [9, 10], [9, 17]]]]], [], []], "customButtonAction", "customButtonAction", "customButtons", ["subexpr", "@mut", [["get", "customButtons", ["loc", [null, [11, 16], [11, 29]]]]], [], []], "orderedProperty", ["subexpr", "@mut", [["get", "orderedProperty", ["loc", [null, [12, 18], [12, 33]]]]], [], []]], ["loc", [null, [1, 0], [13, 2]]]], ["inline", "object-list-view", [], ["class", "groupedit-container", "orderedProperty", ["subexpr", "@mut", [["get", "orderedProperty", ["loc", [null, [16, 18], [16, 33]]]]], [], []], "placeholder", ["subexpr", "@mut", [["get", "placeholder", ["loc", [null, [17, 14], [17, 25]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [18, 11], [18, 19]]]]], [], []], "buttonClass", ["subexpr", "@mut", [["get", "buttonClass", ["loc", [null, [19, 14], [19, 25]]]]], [], []], "tableStriped", ["subexpr", "@mut", [["get", "tableStriped", ["loc", [null, [20, 15], [20, 27]]]]], [], []], "columnsWidthAutoresize", ["subexpr", "@mut", [["get", "columnsWidthAutoresize", ["loc", [null, [21, 25], [21, 47]]]]], [], []], "minAutoColumnWidth", ["subexpr", "@mut", [["get", "minAutoColumnWidth", ["loc", [null, [22, 21], [22, 39]]]]], [], []], "customTableClass", ["subexpr", "@mut", [["get", "customTableClass", ["loc", [null, [23, 19], [23, 35]]]]], [], []], "cellComponent", ["subexpr", "@mut", [["get", "cellComponent", ["loc", [null, [24, 16], [24, 29]]]]], [], []], "singleColumnCellComponent", ["subexpr", "@mut", [["get", "singleColumnCellComponent", ["loc", [null, [25, 28], [25, 53]]]]], [], []], "singleColumnHeaderTitle", ["subexpr", "@mut", [["get", "singleColumnHeaderTitle", ["loc", [null, [26, 26], [26, 49]]]]], [], []], "showValidationMessagesInRow", ["subexpr", "@mut", [["get", "showValidationMessagesInRow", ["loc", [null, [27, 30], [27, 57]]]]], [], []], "showAsteriskInRow", ["subexpr", "@mut", [["get", "showAsteriskInRow", ["loc", [null, [28, 20], [28, 37]]]]], [], []], "showCheckBoxInRow", ["subexpr", "@mut", [["get", "showCheckBoxInRow", ["loc", [null, [29, 20], [29, 37]]]]], [], []], "showDeleteButtonInRow", ["subexpr", "@mut", [["get", "showDeleteButtonInRow", ["loc", [null, [30, 24], [30, 45]]]]], [], []], "showEditMenuItemInRow", ["subexpr", "@mut", [["get", "showEditMenuItemInRow", ["loc", [null, [31, 24], [31, 45]]]]], [], []], "showDeleteMenuItemInRow", ["subexpr", "@mut", [["get", "showDeleteMenuItemInRow", ["loc", [null, [32, 26], [32, 49]]]]], [], []], "sendMenuItemAction", ["subexpr", "action", ["sendMenuItemAction"], [], ["loc", [null, [33, 21], [33, 50]]]], "menuInRowAdditionalItems", ["subexpr", "@mut", [["get", "menuInRowAdditionalItems", ["loc", [null, [34, 27], [34, 51]]]]], [], []], "rowClickable", ["subexpr", "@mut", [["get", "rowClickable", ["loc", [null, [35, 15], [35, 27]]]]], [], []], "orderable", ["subexpr", "@mut", [["get", "orderable", ["loc", [null, [36, 12], [36, 21]]]]], [], []], "editOnSeparateRoute", ["subexpr", "@mut", [["get", "editOnSeparateRoute", ["loc", [null, [37, 22], [37, 41]]]]], [], []], "saveBeforeRouteLeave", ["subexpr", "@mut", [["get", "saveBeforeRouteLeave", ["loc", [null, [38, 23], [38, 43]]]]], [], []], "sorting", ["subexpr", "@mut", [["get", "sorting", ["loc", [null, [39, 10], [39, 17]]]]], [], []], "modelName", ["subexpr", "@mut", [["get", "modelName", ["loc", [null, [40, 12], [40, 21]]]]], [], []], "mainModelProjection", ["subexpr", "@mut", [["get", "mainModelProjection", ["loc", [null, [41, 22], [41, 41]]]]], [], []], "modelProjection", ["subexpr", "@mut", [["get", "modelProjection", ["loc", [null, [42, 18], [42, 33]]]]], [], []], "content", ["subexpr", "@mut", [["get", "content", ["loc", [null, [43, 10], [43, 17]]]]], [], []], "sortByColumn", ["subexpr", "action", [["subexpr", "if", [["get", "this.attrs.sortByColumn", ["loc", [null, [44, 27], [44, 50]]]], ["get", "this.attrs.sortByColumn", ["loc", [null, [44, 51], [44, 74]]]], "sortByColumn"], [], ["loc", [null, [44, 23], [44, 90]]]]], [], ["loc", [null, [44, 15], [44, 91]]]], "addColumnToSorting", ["subexpr", "action", [["subexpr", "if", [["get", "this.attrs.addColumnToSorting", ["loc", [null, [45, 33], [45, 62]]]], ["get", "this.attrs.addColumnToSorting", ["loc", [null, [45, 63], [45, 92]]]], "addColumnToSorting"], [], ["loc", [null, [45, 29], [45, 114]]]]], [], ["loc", [null, [45, 21], [45, 115]]]], "action", "groupEditRowClick", "componentName", ["subexpr", "@mut", [["get", "componentName", ["loc", [null, [47, 16], [47, 29]]]]], [], []], "allowColumnResize", ["subexpr", "@mut", [["get", "allowColumnResize", ["loc", [null, [48, 20], [48, 37]]]]], [], []], "configurateRow", ["subexpr", "@mut", [["get", "this.attrs.configurateRow", ["loc", [null, [49, 17], [49, 42]]]]], [], []], "confirmDeleteRow", ["subexpr", "@mut", [["get", "confirmDeleteRow", ["loc", [null, [50, 19], [50, 35]]]]], [], []], "configurateSelectedRows", ["subexpr", "@mut", [["get", "this.attrs.configurateSelectedRows", ["loc", [null, [51, 26], [51, 60]]]]], [], []], "beforeDeleteRecord", ["subexpr", "@mut", [["get", "beforeDeleteRecord", ["loc", [null, [52, 21], [52, 39]]]]], [], []], "searchForContentChange", ["subexpr", "@mut", [["get", "searchForContentChange", ["loc", [null, [53, 25], [53, 47]]]]], [], []], "immediateDelete", false, "notUseUserSettings", ["subexpr", "@mut", [["get", "notUseUserSettings", ["loc", [null, [55, 21], [55, 39]]]]], [], []], "defaultSortingButton", ["subexpr", "@mut", [["get", "defaultSortingButton", ["loc", [null, [56, 23], [56, 43]]]]], [], []], "overflowedComponents", ["subexpr", "@mut", [["get", "overflowedComponents", ["loc", [null, [57, 23], [57, 43]]]]], [], []], "fixedHeader", ["subexpr", "@mut", [["get", "fixedHeader", ["loc", [null, [58, 14], [58, 25]]]]], [], []]], ["loc", [null, [14, 0], [59, 2]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/components/flexberry-icon", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/flexberry-icon.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["content", "yield", ["loc", [null, [1, 0], [1, 9]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/components/flexberry-jsonarea", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "fragmentReason": {
            "name": "triple-curlies"
          },
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 15,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/flexberry-jsonarea.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "row");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "sexteen wide column");
          var el3 = dom.createTextNode("\n      ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n    ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1, 1]), 1, 1);
          return morphs;
        },
        statements: [["inline", "ui-message", [], ["type", "error", "closeable", true, "visible", ["subexpr", "@mut", [["get", "_showErrorMessage", ["loc", [null, [7, 16], [7, 33]]]]], [], []], "caption", ["subexpr", "@mut", [["get", "_errorMessageCaption", ["loc", [null, [8, 16], [8, 36]]]]], [], []], "message", ["subexpr", "@mut", [["get", "_errorMessage", ["loc", [null, [9, 16], [9, 29]]]]], [], []], "onShow", ["subexpr", "action", ["onErrorMessageShow"], [], ["loc", [null, [10, 15], [10, 44]]]], "onHide", ["subexpr", "action", ["onErrorMessageHide"], [], ["loc", [null, [11, 15], [11, 44]]]]], ["loc", [null, [4, 6], [12, 8]]]]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 17,
              "column": 0
            },
            "end": {
              "line": 27,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/flexberry-jsonarea.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "row");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "sexteen wide column");
          var el3 = dom.createTextNode("\n      ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n    ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1, 1]), 1, 1);
          return morphs;
        },
        statements: [["inline", "flexberry-button", [], ["class", ["subexpr", "concat", [["get", "flexberryClassNames.editButton", ["loc", [null, [21, 22], [21, 52]]]], " fluid", ["subexpr", "if", [["get", "_isEditing", ["loc", [null, [21, 66], [21, 76]]]], " positive"], [], ["loc", [null, [21, 62], [21, 89]]]]], [], ["loc", [null, [21, 14], [21, 90]]]], "iconClass", ["subexpr", "if", [["get", "_isEditing", ["loc", [null, [22, 22], [22, 32]]]], "checkmark icon", "edit icon"], [], ["loc", [null, [22, 18], [22, 62]]]], "click", ["subexpr", "action", ["onEditButtonClick"], [], ["loc", [null, [23, 14], [23, 42]]]]], ["loc", [null, [20, 6], [24, 8]]]]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type", "multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 39,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/flexberry-jsonarea.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "row");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "sexteen wide column");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(3);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        morphs[2] = dom.createMorphAt(dom.childAt(fragment, [4, 1]), 1, 1);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["block", "if", [["get", "_showErrorMessage", ["loc", [null, [1, 6], [1, 23]]]]], [], 0, null, ["loc", [null, [1, 0], [15, 7]]]], ["block", "if", [["subexpr", "not", [["get", "readonly", ["loc", [null, [17, 11], [17, 19]]]]], [], ["loc", [null, [17, 6], [17, 20]]]]], [], 1, null, ["loc", [null, [17, 0], [27, 7]]]], ["inline", "flexberry-textarea", [], ["class", ["subexpr", "concat", [["get", "flexberryClassNames.textarea", ["loc", [null, [32, 20], [32, 48]]]], " fluid"], [], ["loc", [null, [32, 12], [32, 58]]]], "placeholder", ["subexpr", "@mut", [["get", "placeholder", ["loc", [null, [33, 18], [33, 29]]]]], [], []], "value", ["subexpr", "@mut", [["get", "_jsonText", ["loc", [null, [34, 12], [34, 21]]]]], [], []], "readonly", ["subexpr", "not", [["get", "_isEditing", ["loc", [null, [35, 20], [35, 30]]]]], [], ["loc", [null, [35, 15], [35, 31]]]]], ["loc", [null, [31, 4], [36, 6]]]]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define("dummy/templates/components/flexberry-lookup", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "fragmentReason": {
            "name": "missing-wrapper",
            "problems": ["wrong-type"]
          },
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 11,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/flexberry-lookup.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "flexberry-dropdown", [], ["placeholder", ["subexpr", "@mut", [["get", "placeholder", ["loc", [null, [3, 16], [3, 27]]]]], [], []], "class", ["subexpr", "concat", ["search ", ["get", "dropdownClass", ["loc", [null, [4, 28], [4, 41]]]]], [], ["loc", [null, [4, 10], [4, 42]]]], "value", ["subexpr", "@mut", [["get", "displayValue", ["loc", [null, [5, 10], [5, 22]]]]], [], []], "readonly", ["subexpr", "if", [["get", "readonly", ["loc", [null, [6, 17], [6, 25]]]], "readonly"], [], ["loc", [null, [6, 13], [6, 37]]]], "needChecksOnValue", false, "isSearch", true, "isSearchReadOnly", ["subexpr", "@mut", [["get", "dropdownIsSearch", ["loc", [null, [9, 21], [9, 37]]]]], [], []]], ["loc", [null, [2, 2], [10, 4]]]]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      var child0 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 18,
                  "column": 10
                },
                "end": {
                  "line": 20,
                  "column": 10
                }
              },
              "moduleName": "dummy/templates/components/flexberry-lookup.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("            ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
              return morphs;
            },
            statements: [["content", "yield", ["loc", [null, [19, 12], [19, 21]]]]],
            locals: [],
            templates: []
          };
        })();
        var child1 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 20,
                  "column": 10
                },
                "end": {
                  "line": 22,
                  "column": 10
                }
              },
              "moduleName": "dummy/templates/components/flexberry-lookup.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("            ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
              return morphs;
            },
            statements: [["content", "placeholder", ["loc", [null, [21, 12], [21, 27]]]]],
            locals: [],
            templates: []
          };
        })();
        var child2 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 24,
                  "column": 8
                },
                "end": {
                  "line": 26,
                  "column": 8
                }
              },
              "moduleName": "dummy/templates/components/flexberry-lookup.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("          ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("i");
              dom.setAttribute(el1, "class", "chevron right icon");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes() {
              return [];
            },
            statements: [],
            locals: [],
            templates: []
          };
        })();
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 13,
                "column": 4
              },
              "end": {
                "line": 28,
                "column": 4
              }
            },
            "moduleName": "dummy/templates/components/flexberry-lookup.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            var el2 = dom.createTextNode("\n        ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("span");
            dom.setAttribute(el2, "class", "lookup-field");
            var el3 = dom.createTextNode("\n");
            dom.appendChild(el2, el3);
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("        ");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("      ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element2 = dom.childAt(fragment, [1]);
            var morphs = new Array(4);
            morphs[0] = dom.createAttrMorph(element2, 'class');
            morphs[1] = dom.createElementMorph(element2);
            morphs[2] = dom.createMorphAt(dom.childAt(element2, [1]), 1, 1);
            morphs[3] = dom.createMorphAt(element2, 3, 3);
            return morphs;
          },
          statements: [["attribute", "class", ["concat", ["ui transparent ", ["subexpr", "if", [["subexpr", "or", [["get", "readonly", ["loc", [null, [16, 39], [16, 47]]]], ["get", "isBlocked", ["loc", [null, [16, 48], [16, 57]]]]], [], ["loc", [null, [16, 35], [16, 58]]]], "disabled"], [], ["loc", [null, [16, 30], [16, 71]]]], " ", ["subexpr", "if", [["subexpr", "or", [["get", "modalIsBeforeToShow", ["loc", [null, [16, 81], [16, 100]]]], ["get", "modalIsStartToShow", ["loc", [null, [16, 101], [16, 119]]]]], [], ["loc", [null, [16, 77], [16, 120]]]], "loading"], [], ["loc", [null, [16, 72], [16, 132]]]], " icon input"]]], ["element", "action", ["choose", ["get", "chooseData", ["loc", [null, [15, 26], [15, 36]]]]], [], ["loc", [null, [15, 8], [15, 38]]]], ["block", "if", [["get", "value", ["loc", [null, [18, 16], [18, 21]]]]], [], 0, 1, ["loc", [null, [18, 10], [22, 17]]]], ["block", "unless", [["get", "readonly", ["loc", [null, [24, 18], [24, 26]]]]], [], 2, null, ["loc", [null, [24, 8], [26, 19]]]]],
          locals: [],
          templates: [child0, child1, child2]
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 28,
                "column": 4
              },
              "end": {
                "line": 37,
                "column": 4
              }
            },
            "moduleName": "dummy/templates/components/flexberry-lookup.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "input", [], ["type", "text", "class", ["subexpr", "concat", ["lookup-field ", ["subexpr", "if", [["get", "autocomplete", ["loc", [null, [31, 42], [31, 54]]]], "prompt"], [], ["loc", [null, [31, 38], [31, 64]]]]], [], ["loc", [null, [31, 14], [31, 65]]]], "placeholder", ["subexpr", "@mut", [["get", "placeholder", ["loc", [null, [32, 20], [32, 31]]]]], [], []], "value", ["subexpr", "@mut", [["get", "displayValue", ["loc", [null, [33, 14], [33, 26]]]]], [], []], "focusOut", ["subexpr", "action", ["onInputFocusOut"], [], ["loc", [null, [34, 17], [34, 43]]]], "readonly", ["subexpr", "if", [["subexpr", "or", [["get", "readonly", ["loc", [null, [35, 25], [35, 33]]]], ["subexpr", "not", [["get", "autocomplete", ["loc", [null, [35, 39], [35, 51]]]]], [], ["loc", [null, [35, 34], [35, 52]]]]], [], ["loc", [null, [35, 21], [35, 53]]]], "readonly"], [], ["loc", [null, [35, 17], [35, 65]]]]], ["loc", [null, [29, 6], [36, 8]]]]],
          locals: [],
          templates: []
        };
      })();
      var child2 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 39,
                  "column": 6
                },
                "end": {
                  "line": 48,
                  "column": 6
                }
              },
              "moduleName": "dummy/templates/components/flexberry-lookup.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("        ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("button");
              dom.setAttribute(el1, "data-test-lookup-preview", "");
              dom.setAttribute(el1, "type", "button");
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n        ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var element1 = dom.childAt(fragment, [1]);
              var morphs = new Array(4);
              morphs[0] = dom.createAttrMorph(element1, 'class');
              morphs[1] = dom.createAttrMorph(element1, 'title');
              morphs[2] = dom.createElementMorph(element1);
              morphs[3] = dom.createUnsafeMorphAt(element1, 1, 1);
              return morphs;
            },
            statements: [["attribute", "class", ["concat", ["ui ui-preview ", ["subexpr", "if", [["get", "isBlocked", ["loc", [null, [42, 36], [42, 45]]]], " disabled"], [], ["loc", [null, [42, 31], [42, 59]]]], " ", ["get", "previewButtonClass", ["loc", [null, [42, 62], [42, 80]]]], " button"]]], ["attribute", "title", ["subexpr", "t", ["components.flexberry-lookup.preview-button-text"], [], ["loc", [null, [43, 16], [43, 71]]]]], ["element", "action", ["preview"], [], ["loc", [null, [45, 10], [45, 30]]]], ["content", "previewText", ["loc", [null, [46, 10], [46, 27]]]]],
            locals: [],
            templates: []
          };
        })();
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 38,
                "column": 4
              },
              "end": {
                "line": 49,
                "column": 4
              }
            },
            "moduleName": "dummy/templates/components/flexberry-lookup.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [["block", "if", [["subexpr", "and", [["get", "previewFormRoute", ["loc", [null, [39, 17], [39, 33]]]], ["get", "value", ["loc", [null, [39, 34], [39, 39]]]]], [], ["loc", [null, [39, 12], [39, 40]]]]], [], 0, null, ["loc", [null, [39, 6], [48, 13]]]]],
          locals: [],
          templates: [child0]
        };
      })();
      var child3 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 50,
                "column": 4
              },
              "end": {
                "line": 59,
                "column": 4
              }
            },
            "moduleName": "dummy/templates/components/flexberry-lookup.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("button");
            dom.setAttribute(el1, "data-test-lookup-change", "");
            dom.setAttribute(el1, "type", "button");
            var el2 = dom.createTextNode("\n        ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n      ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1]);
            var morphs = new Array(4);
            morphs[0] = dom.createAttrMorph(element0, 'class');
            morphs[1] = dom.createAttrMorph(element0, 'title');
            morphs[2] = dom.createElementMorph(element0);
            morphs[3] = dom.createUnsafeMorphAt(element0, 1, 1);
            return morphs;
          },
          statements: [["attribute", "class", ["concat", ["ui ui-change ", ["subexpr", "if", [["subexpr", "or", [["get", "readonly", ["loc", [null, [53, 37], [53, 45]]]], ["get", "isBlocked", ["loc", [null, [53, 46], [53, 55]]]]], [], ["loc", [null, [53, 33], [53, 56]]]], " disabled"], [], ["loc", [null, [53, 28], [53, 70]]]], " ", ["get", "chooseButtonClass", ["loc", [null, [53, 73], [53, 90]]]], " ", ["subexpr", "if", [["subexpr", "or", [["get", "modalIsBeforeToShow", ["loc", [null, [53, 102], [53, 121]]]], ["get", "modalIsStartToShow", ["loc", [null, [53, 122], [53, 140]]]]], [], ["loc", [null, [53, 98], [53, 141]]]], " loading"], [], ["loc", [null, [53, 93], [53, 154]]]], " button"]]], ["attribute", "title", ["subexpr", "t", ["components.flexberry-lookup.choose-button-text"], [], ["loc", [null, [54, 14], [54, 68]]]]], ["element", "action", ["choose", ["get", "chooseData", ["loc", [null, [56, 26], [56, 36]]]]], [], ["loc", [null, [56, 8], [56, 38]]]], ["content", "chooseText", ["loc", [null, [57, 8], [57, 24]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 11,
              "column": 0
            },
            "end": {
              "line": 69,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/flexberry-lookup.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "data-test-lookup", "");
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("button");
          dom.setAttribute(el2, "data-test-lookup-clear", "");
          dom.setAttribute(el2, "type", "button");
          var el3 = dom.createTextNode("\n      ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n    ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element3 = dom.childAt(fragment, [1]);
          var element4 = dom.childAt(element3, [5]);
          var morphs = new Array(8);
          morphs[0] = dom.createAttrMorph(element3, 'class');
          morphs[1] = dom.createMorphAt(element3, 1, 1);
          morphs[2] = dom.createMorphAt(element3, 2, 2);
          morphs[3] = dom.createMorphAt(element3, 3, 3);
          morphs[4] = dom.createAttrMorph(element4, 'class');
          morphs[5] = dom.createAttrMorph(element4, 'title');
          morphs[6] = dom.createElementMorph(element4);
          morphs[7] = dom.createUnsafeMorphAt(element4, 1, 1);
          return morphs;
        },
        statements: [["attribute", "class", ["concat", ["ui ", ["subexpr", "unless", [["get", "hasBlock", ["loc", [null, [12, 43], [12, 51]]]], "fluid"], [], ["loc", [null, [12, 34], [12, 61]]]], " action input ", ["subexpr", "if", [["subexpr", "and", [["get", "readonly", ["loc", [null, [12, 85], [12, 93]]]], ["subexpr", "not", [["get", "hasBlock", ["loc", [null, [12, 99], [12, 107]]]]], [], ["loc", [null, [12, 94], [12, 108]]]]], [], ["loc", [null, [12, 80], [12, 109]]]], "disabled"], [], ["loc", [null, [12, 75], [12, 122]]]]]]], ["block", "if", [["get", "hasBlock", ["loc", [null, [13, 10], [13, 18]]]]], [], 0, 1, ["loc", [null, [13, 4], [37, 11]]]], ["block", "if", [["get", "showPreviewButton", ["loc", [null, [38, 10], [38, 27]]]]], [], 2, null, ["loc", [null, [38, 4], [49, 11]]]], ["block", "unless", [["get", "hasBlock", ["loc", [null, [50, 14], [50, 22]]]]], [], 3, null, ["loc", [null, [50, 4], [59, 15]]]], ["attribute", "class", ["concat", ["ui ui-clear ", ["subexpr", "if", [["subexpr", "or", [["get", "readonly", ["loc", [null, [62, 34], [62, 42]]]], ["get", "isBlocked", ["loc", [null, [62, 43], [62, 52]]]]], [], ["loc", [null, [62, 30], [62, 53]]]], " disabled"], [], ["loc", [null, [62, 25], [62, 67]]]], " ", ["get", "removeButtonClass", ["loc", [null, [62, 70], [62, 87]]]], " button"]]], ["attribute", "title", ["subexpr", "t", ["components.flexberry-lookup.remove-button-text"], [], ["loc", [null, [63, 12], [63, 66]]]]], ["element", "action", ["remove", ["get", "removeData", ["loc", [null, [65, 24], [65, 34]]]]], [], ["loc", [null, [65, 6], [65, 36]]]], ["content", "removeText", ["loc", [null, [66, 6], [66, 22]]]]],
        locals: [],
        templates: [child0, child1, child2, child3]
      };
    })();
    var child2 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 70,
              "column": 0
            },
            "end": {
              "line": 72,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/flexberry-lookup.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["content", "_hasBlockSetter", ["loc", [null, [71, 2], [71, 21]]]]],
        locals: [],
        templates: []
      };
    })();
    var child3 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 72,
                "column": 0
              },
              "end": {
                "line": 74,
                "column": 0
              }
            },
            "moduleName": "dummy/templates/components/flexberry-lookup.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("  ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1, "class", "results");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes() {
            return [];
          },
          statements: [],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 72,
              "column": 0
            },
            "end": {
              "line": 74,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/flexberry-lookup.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "if", [["get", "autocomplete", ["loc", [null, [72, 10], [72, 22]]]]], [], 0, null, ["loc", [null, [72, 0], [74, 0]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type", "multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 75,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/flexberry-lookup.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(fragment, 1, 1, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "if", [["get", "dropdown", ["loc", [null, [1, 6], [1, 14]]]]], [], 0, 1, ["loc", [null, [1, 0], [69, 7]]]], ["block", "if", [["get", "hasBlock", ["loc", [null, [70, 6], [70, 14]]]]], [], 2, 3, ["loc", [null, [70, 0], [74, 7]]]]],
      locals: [],
      templates: [child0, child1, child2, child3]
    };
  })());
});
define("dummy/templates/components/flexberry-menu", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "fragmentReason": {
            "name": "missing-wrapper",
            "problems": ["wrong-type"]
          },
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 7,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/flexberry-menu.hbs"
        },
        isEmpty: false,
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "flexberry-menuitem", [], ["tagName", "", "item", ["subexpr", "@mut", [["get", "item", ["loc", [null, [4, 9], [4, 13]]]]], [], []], "settings", ["subexpr", "@mut", [["get", "settings", ["loc", [null, [5, 13], [5, 21]]]]], [], []]], ["loc", [null, [2, 2], [6, 4]]]]],
        locals: ["item"],
        templates: []
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 9
          }
        },
        "moduleName": "dummy/templates/components/flexberry-menu.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "each", [["get", "items", ["loc", [null, [1, 8], [1, 13]]]]], [], 0, null, ["loc", [null, [1, 0], [7, 9]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define("dummy/templates/components/flexberry-menuitem", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 2,
                "column": 2
              },
              "end": {
                "line": 4,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/components/flexberry-menuitem.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("span");
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);
            return morphs;
          },
          statements: [["inline", "t", [["get", "item.localeKey", ["loc", [null, [3, 14], [3, 28]]]]], [], ["loc", [null, [3, 10], [3, 30]]]]],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 4,
                "column": 2
              },
              "end": {
                "line": 6,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/components/flexberry-menuitem.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("span");
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);
            return morphs;
          },
          statements: [["content", "item.title", ["loc", [null, [5, 10], [5, 24]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": {
            "name": "missing-wrapper",
            "problems": ["wrong-type"]
          },
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 7,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/flexberry-menuitem.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "if", [["get", "item.localeKey", ["loc", [null, [2, 8], [2, 22]]]]], [], 0, 1, ["loc", [null, [2, 2], [6, 9]]]]],
        locals: [],
        templates: [child0, child1]
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 8,
              "column": 0
            },
            "end": {
              "line": 10,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/flexberry-menuitem.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("i");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element3 = dom.childAt(fragment, [1]);
          var morphs = new Array(1);
          morphs[0] = dom.createAttrMorph(element3, 'class');
          return morphs;
        },
        statements: [["attribute", "class", ["concat", [["get", "item.icon", ["loc", [null, [9, 14], [9, 23]]]]]]]],
        locals: [],
        templates: []
      };
    })();
    var child2 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 12,
                "column": 2
              },
              "end": {
                "line": 14,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/components/flexberry-menuitem.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("span");
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);
            return morphs;
          },
          statements: [["inline", "t", [["get", "item.localeKey", ["loc", [null, [13, 14], [13, 28]]]]], [], ["loc", [null, [13, 10], [13, 30]]]]],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 14,
                "column": 2
              },
              "end": {
                "line": 16,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/components/flexberry-menuitem.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("span");
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);
            return morphs;
          },
          statements: [["content", "item.title", ["loc", [null, [15, 10], [15, 24]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 11,
              "column": 0
            },
            "end": {
              "line": 17,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/flexberry-menuitem.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "if", [["get", "item.localeKey", ["loc", [null, [12, 8], [12, 22]]]]], [], 0, 1, ["loc", [null, [12, 2], [16, 9]]]]],
        locals: [],
        templates: [child0, child1]
      };
    })();
    var child3 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 25,
                "column": 6
              },
              "end": {
                "line": 27,
                "column": 6
              }
            },
            "moduleName": "dummy/templates/components/flexberry-menuitem.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("i");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element1 = dom.childAt(fragment, [1]);
            var morphs = new Array(1);
            morphs[0] = dom.createAttrMorph(element1, 'class');
            return morphs;
          },
          statements: [["attribute", "class", ["concat", [["get", "button.iconClass", ["loc", [null, [26, 20], [26, 36]]]]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 18,
              "column": 0
            },
            "end": {
              "line": 30,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/flexberry-menuitem.hbs"
        },
        isEmpty: false,
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("button");
          dom.setAttribute(el1, "type", "button");
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element2 = dom.childAt(fragment, [1]);
          var morphs = new Array(6);
          morphs[0] = dom.createAttrMorph(element2, 'class');
          morphs[1] = dom.createAttrMorph(element2, 'title');
          morphs[2] = dom.createAttrMorph(element2, 'disabled');
          morphs[3] = dom.createElementMorph(element2);
          morphs[4] = dom.createMorphAt(element2, 1, 1);
          morphs[5] = dom.createMorphAt(element2, 3, 3);
          return morphs;
        },
        statements: [["attribute", "class", ["concat", ["ui ", ["get", "button.buttonClasses", ["loc", [null, [21, 16], [21, 36]]]], " button"]]], ["attribute", "title", ["get", "button.buttonTitle", ["loc", [null, [22, 12], [22, 30]]]]], ["attribute", "disabled", ["get", "button.disabled", ["loc", [null, [23, 15], [23, 30]]]]], ["element", "action", ["itemButtonAction", ["get", "button.buttonAction", ["loc", [null, [24, 32], [24, 51]]]]], ["bubbles", false], ["loc", [null, [24, 4], [24, 67]]]], ["block", "if", [["get", "button.iconClass", ["loc", [null, [25, 12], [25, 28]]]]], [], 0, null, ["loc", [null, [25, 6], [27, 13]]]], ["inline", "if", [["get", "button.buttonName", ["loc", [null, [28, 11], [28, 28]]]], ["get", "button.buttonName", ["loc", [null, [28, 29], [28, 46]]]]], [], ["loc", [null, [28, 6], [28, 48]]]]],
        locals: ["button"],
        templates: [child0]
      };
    })();
    var child4 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 33,
                "column": 4
              },
              "end": {
                "line": 35,
                "column": 4
              }
            },
            "moduleName": "dummy/templates/components/flexberry-menuitem.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "flexberry-menuitem", [], ["item", ["subexpr", "@mut", [["get", "item", ["loc", [null, [34, 32], [34, 36]]]]], [], []]], ["loc", [null, [34, 6], [34, 38]]]]],
          locals: ["item"],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 31,
              "column": 0
            },
            "end": {
              "line": 37,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/flexberry-menuitem.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var morphs = new Array(2);
          morphs[0] = dom.createAttrMorph(element0, 'class');
          morphs[1] = dom.createMorphAt(element0, 1, 1);
          return morphs;
        },
        statements: [["attribute", "class", ["concat", [["subexpr", "if", [["get", "item.itemsAlignment", ["loc", [null, [32, 19], [32, 38]]]], ["get", "item.itemsAlignment", ["loc", [null, [32, 39], [32, 58]]]]], [], ["loc", [null, [32, 14], [32, 60]]]], " menu"]]], ["block", "each", [["get", "item.items", ["loc", [null, [33, 12], [33, 22]]]]], [], 0, null, ["loc", [null, [33, 4], [35, 13]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type", "multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 39,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/flexberry-menuitem.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(6);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(fragment, 1, 1, contextualElement);
        morphs[2] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        morphs[3] = dom.createMorphAt(fragment, 3, 3, contextualElement);
        morphs[4] = dom.createMorphAt(fragment, 4, 4, contextualElement);
        morphs[5] = dom.createMorphAt(fragment, 5, 5, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["block", "if", [["get", "titleIsBeforeIcon", ["loc", [null, [1, 6], [1, 23]]]]], [], 0, null, ["loc", [null, [1, 0], [7, 7]]]], ["block", "if", [["get", "item.icon", ["loc", [null, [8, 6], [8, 15]]]]], [], 1, null, ["loc", [null, [8, 0], [10, 7]]]], ["block", "if", [["subexpr", "not", [["get", "titleIsBeforeIcon", ["loc", [null, [11, 11], [11, 28]]]]], [], ["loc", [null, [11, 6], [11, 29]]]]], [], 2, null, ["loc", [null, [11, 0], [17, 7]]]], ["block", "each", [["get", "item.buttons", ["loc", [null, [18, 8], [18, 20]]]]], [], 3, null, ["loc", [null, [18, 0], [30, 9]]]], ["block", "if", [["get", "hasSubitems", ["loc", [null, [31, 6], [31, 17]]]]], [], 4, null, ["loc", [null, [31, 0], [37, 7]]]], ["content", "yield", ["loc", [null, [38, 0], [38, 9]]]]],
      locals: [],
      templates: [child0, child1, child2, child3, child4]
    };
  })());
});
define("dummy/templates/components/flexberry-objectlistview", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 120,
                  "column": 8
                },
                "end": {
                  "line": 122,
                  "column": 8
                }
              },
              "moduleName": "dummy/templates/components/flexberry-objectlistview.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("          ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "ui button");
              var el2 = dom.createTextNode("...");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes() {
              return [];
            },
            statements: [],
            locals: [],
            templates: []
          };
        })();
        var child1 = (function () {
          var child0 = (function () {
            return {
              meta: {
                "fragmentReason": false,
                "revision": "Ember@2.4.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 122,
                    "column": 8
                  },
                  "end": {
                    "line": 124,
                    "column": 8
                  }
                },
                "moduleName": "dummy/templates/components/flexberry-objectlistview.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("          ");
                dom.appendChild(el0, el1);
                var el1 = dom.createElement("button");
                dom.setAttribute(el1, "type", "button");
                dom.setAttribute(el1, "class", "ui disabled active button");
                dom.setAttribute(el1, "disabled", "");
                var el2 = dom.createComment("");
                dom.appendChild(el1, el2);
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var morphs = new Array(1);
                morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);
                return morphs;
              },
              statements: [["content", "page.number", ["loc", [null, [123, 75], [123, 90]]]]],
              locals: [],
              templates: []
            };
          })();
          var child1 = (function () {
            return {
              meta: {
                "fragmentReason": false,
                "revision": "Ember@2.4.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 124,
                    "column": 8
                  },
                  "end": {
                    "line": 126,
                    "column": 8
                  }
                },
                "moduleName": "dummy/templates/components/flexberry-objectlistview.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("          ");
                dom.appendChild(el0, el1);
                var el1 = dom.createElement("button");
                dom.setAttribute(el1, "type", "button");
                dom.setAttribute(el1, "class", "ui button");
                var el2 = dom.createComment("");
                dom.appendChild(el1, el2);
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n        ");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var element1 = dom.childAt(fragment, [1]);
                var morphs = new Array(2);
                morphs[0] = dom.createElementMorph(element1);
                morphs[1] = dom.createMorphAt(element1, 0, 0);
                return morphs;
              },
              statements: [["element", "action", ["gotoPage", ["get", "this.attrs.gotoPage", ["loc", [null, [125, 70], [125, 89]]]], ["get", "page.number", ["loc", [null, [125, 90], [125, 101]]]]], [], ["loc", [null, [125, 50], [125, 103]]]], ["content", "page.number", ["loc", [null, [125, 104], [125, 119]]]]],
              locals: [],
              templates: []
            };
          })();
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 122,
                  "column": 8
                },
                "end": {
                  "line": 126,
                  "column": 8
                }
              },
              "moduleName": "dummy/templates/components/flexberry-objectlistview.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
              dom.insertBoundary(fragment, 0);
              dom.insertBoundary(fragment, null);
              return morphs;
            },
            statements: [["block", "if", [["get", "page.isCurrent", ["loc", [null, [122, 18], [122, 32]]]]], [], 0, 1, ["loc", [null, [122, 8], [126, 8]]]]],
            locals: [],
            templates: [child0, child1]
          };
        })();
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 119,
                "column": 6
              },
              "end": {
                "line": 127,
                "column": 6
              }
            },
            "moduleName": "dummy/templates/components/flexberry-objectlistview.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [["block", "if", [["get", "page.isEllipsis", ["loc", [null, [120, 14], [120, 29]]]]], [], 0, 1, ["loc", [null, [120, 8], [126, 15]]]]],
          locals: ["page"],
          templates: [child0, child1]
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 146,
                "column": 6
              },
              "end": {
                "line": 154,
                "column": 6
              }
            },
            "moduleName": "dummy/templates/components/flexberry-objectlistview.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("button");
            dom.setAttribute(el1, "type", "button");
            var el2 = dom.createTextNode("\n        ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1]);
            var morphs = new Array(4);
            morphs[0] = dom.createAttrMorph(element0, 'class');
            morphs[1] = dom.createAttrMorph(element0, 'title');
            morphs[2] = dom.createAttrMorph(element0, 'disabled');
            morphs[3] = dom.createElementMorph(element0);
            return morphs;
          },
          statements: [["attribute", "class", ["concat", ["ui ", ["get", "buttonClass", ["loc", [null, [149, 22], [149, 33]]]], " icon button ", ["subexpr", "if", [["get", "searchPageButtonReadonly", ["loc", [null, [149, 53], [149, 77]]]], "disabled", "primary"], [], ["loc", [null, [149, 48], [149, 100]]]], " goto-page-button small"]]], ["attribute", "title", ["subexpr", "t", ["components.flexberry-objectlistview.search-button-text"], [], ["loc", [null, [150, 16], [150, 78]]]]], ["attribute", "disabled", ["get", "searchPageButtonReadonly", ["loc", [null, [151, 21], [151, 45]]]]], ["element", "action", ["searchPageButtonAction", ["get", "this.attrs.gotoPage", ["loc", [null, [152, 44], [152, 63]]]]], [], ["loc", [null, [152, 10], [152, 65]]]]],
          locals: [],
          templates: []
        };
      })();
      var child2 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 159,
                  "column": 10
                },
                "end": {
                  "line": 163,
                  "column": 10
                }
              },
              "moduleName": "dummy/templates/components/flexberry-objectlistview.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("            ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
              return morphs;
            },
            statements: [["inline", "concat", [["subexpr", "t", ["components.flexberry-objectlistview.showing-entries.showing"], [], ["loc", [null, [161, 14], [161, 79]]]], ["get", "currentIntervalRecords", ["loc", [null, [161, 80], [161, 102]]]], ["subexpr", "t", ["components.flexberry-objectlistview.showing-entries.of"], [], ["loc", [null, [161, 103], [161, 163]]]], ["get", "recordsTotalCount", ["loc", [null, [161, 164], [161, 181]]]], ["subexpr", "t", ["components.flexberry-objectlistview.showing-entries.entries"], [], ["loc", [null, [161, 182], [161, 247]]]]], [], ["loc", [null, [160, 12], [162, 14]]]]],
            locals: [],
            templates: []
          };
        })();
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 157,
                "column": 6
              },
              "end": {
                "line": 165,
                "column": 6
              }
            },
            "moduleName": "dummy/templates/components/flexberry-objectlistview.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1, "class", "showing-entries");
            var el2 = dom.createTextNode("\n");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("        ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
            return morphs;
          },
          statements: [["block", "if", [["subexpr", "and", [["get", "currentIntervalRecords", ["loc", [null, [159, 21], [159, 43]]]], ["get", "recordsTotalCount", ["loc", [null, [159, 44], [159, 61]]]]], [], ["loc", [null, [159, 16], [159, 62]]]]], [], 0, null, ["loc", [null, [159, 10], [163, 17]]]]],
          locals: [],
          templates: [child0]
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 110,
              "column": 0
            },
            "end": {
              "line": 169,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/flexberry-objectlistview.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "ui secondary menu no-margin nav-bar");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "ui basic buttons");
          var el3 = dom.createTextNode("\n      ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("button");
          dom.setAttribute(el3, "type", "button");
          var el4 = dom.createTextNode("\n      ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("      ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("button");
          dom.setAttribute(el3, "type", "button");
          var el4 = dom.createTextNode("\n      ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n    ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          var el3 = dom.createTextNode("\n      ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("      ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("    ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "right menu");
          var el3 = dom.createTextNode("\n");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("      ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n    ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element2 = dom.childAt(fragment, [1]);
          var element3 = dom.childAt(element2, [1]);
          var element4 = dom.childAt(element3, [1]);
          var element5 = dom.childAt(element3, [5]);
          var element6 = dom.childAt(element2, [3]);
          var element7 = dom.childAt(element2, [5]);
          var morphs = new Array(13);
          morphs[0] = dom.createAttrMorph(element4, 'class');
          morphs[1] = dom.createAttrMorph(element4, 'disabled');
          morphs[2] = dom.createElementMorph(element4);
          morphs[3] = dom.createMorphAt(element3, 3, 3);
          morphs[4] = dom.createAttrMorph(element5, 'class');
          morphs[5] = dom.createAttrMorph(element5, 'disabled');
          morphs[6] = dom.createElementMorph(element5);
          morphs[7] = dom.createAttrMorph(element6, 'class');
          morphs[8] = dom.createMorphAt(element6, 1, 1);
          morphs[9] = dom.createMorphAt(element6, 4, 4);
          morphs[10] = dom.createMorphAt(element6, 6, 6);
          morphs[11] = dom.createMorphAt(element7, 1, 1);
          morphs[12] = dom.createMorphAt(element7, 3, 3);
          return morphs;
        },
        statements: [["attribute", "class", ["concat", ["ui ", ["subexpr", "unless", [["get", "hasPreviousPage", ["loc", [null, [115, 27], [115, 42]]]], "disabled"], [], ["loc", [null, [115, 18], [115, 55]]]], " button prev-page-button"]]], ["attribute", "disabled", ["subexpr", "not", [["get", "hasPreviousPage", ["loc", [null, [116, 23], [116, 38]]]]], [], ["loc", [null, [116, 17], [116, 40]]]]], ["element", "action", ["previousPage", ["get", "this.attrs.previousPage", ["loc", [null, [117, 32], [117, 55]]]]], [], ["loc", [null, [117, 8], [117, 57]]]], ["block", "each", [["get", "pages", ["loc", [null, [119, 14], [119, 19]]]]], [], 0, null, ["loc", [null, [119, 6], [127, 15]]]], ["attribute", "class", ["concat", ["ui ", ["subexpr", "unless", [["get", "hasNextPage", ["loc", [null, [130, 27], [130, 38]]]], "disabled"], [], ["loc", [null, [130, 18], [130, 51]]]], " button next-page-button"]]], ["attribute", "disabled", ["subexpr", "not", [["get", "hasNextPage", ["loc", [null, [131, 23], [131, 34]]]]], [], ["loc", [null, [131, 17], [131, 36]]]]], ["element", "action", ["nextPage", ["get", "this.attrs.nextPage", ["loc", [null, [132, 28], [132, 47]]]]], [], ["loc", [null, [132, 8], [132, 49]]]], ["attribute", "class", ["concat", ["ui input nav-bar-search-page ", ["subexpr", "if", [["subexpr", "and", [["get", "searchPageValue", ["loc", [null, [135, 55], [135, 70]]]], ["get", "searchPageButtonReadonly", ["loc", [null, [135, 71], [135, 95]]]]], [], ["loc", [null, [135, 50], [135, 96]]]], "error"], [], ["loc", [null, [135, 45], [135, 107]]]]]]], ["inline", "input", [], ["type", "number", "min", ["subexpr", "@mut", [["get", "_pages.firstObject.number", ["loc", [null, [138, 12], [138, 37]]]]], [], []], "max", ["subexpr", "@mut", [["get", "_pages.lastObject.number", ["loc", [null, [139, 12], [139, 36]]]]], [], []], "placeholder", ["subexpr", "t", ["components.flexberry-objectlistview.search-page-placeholder"], [], ["loc", [null, [140, 20], [140, 85]]]], "value", ["subexpr", "@mut", [["get", "searchPageValue", ["loc", [null, [141, 14], [141, 29]]]]], [], []], "enter", ["subexpr", "action", ["searchPageButtonAction", ["get", "this.attrs.gotoPage", ["loc", [null, [142, 47], [142, 66]]]]], [], ["loc", [null, [142, 14], [142, 67]]]]], ["loc", [null, [136, 6], [143, 8]]]], ["inline", "input", [], ["classNames", ["subexpr", "array", ["hidden"], [], ["loc", [null, [145, 25], [145, 41]]]]], ["loc", [null, [145, 6], [145, 43]]]], ["block", "if", [["get", "searchPageValue", ["loc", [null, [146, 12], [146, 27]]]]], [], 1, null, ["loc", [null, [146, 6], [154, 13]]]], ["block", "if", [["get", "showShowingEntries", ["loc", [null, [157, 12], [157, 30]]]]], [], 2, null, ["loc", [null, [157, 6], [165, 13]]]], ["inline", "flexberry-dropdown", [], ["items", ["subexpr", "@mut", [["get", "perPageValues", ["loc", [null, [166, 33], [166, 46]]]]], [], []], "value", ["subexpr", "@mut", [["get", "perPageValue", ["loc", [null, [166, 53], [166, 65]]]]], [], []], "class", "compact selection", "onChange", ["subexpr", "action", ["perPageClick"], [], ["loc", [null, [166, 101], [166, 124]]]], "needChecksOnValue", false, "direction", "upward"], ["loc", [null, [166, 6], [166, 169]]]]],
        locals: [],
        templates: [child0, child1, child2]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type", "multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 169,
            "column": 7
          }
        },
        "moduleName": "dummy/templates/components/flexberry-objectlistview.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(3);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        morphs[2] = dom.createMorphAt(fragment, 4, 4, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["inline", "olv-toolbar", [], ["class", "ui secondary menu no-margin", "createNewButton", ["subexpr", "@mut", [["get", "createNewButton", ["loc", [null, [3, 18], [3, 33]]]]], [], []], "enableCreateNewButton", ["subexpr", "not", [["get", "readonly", ["loc", [null, [4, 29], [4, 37]]]]], [], ["loc", [null, [4, 24], [4, 38]]]], "refreshButton", ["subexpr", "@mut", [["get", "refreshButton", ["loc", [null, [5, 16], [5, 29]]]]], [], []], "deleteButton", ["subexpr", "@mut", [["get", "deleteButton", ["loc", [null, [6, 15], [6, 27]]]]], [], []], "colsConfigButton", ["subexpr", "@mut", [["get", "colsConfigButton", ["loc", [null, [7, 19], [7, 35]]]]], [], []], "advLimitButton", ["subexpr", "@mut", [["get", "advLimitButton", ["loc", [null, [8, 17], [8, 31]]]]], [], []], "enableFilters", ["subexpr", "@mut", [["get", "enableFilters", ["loc", [null, [9, 16], [9, 29]]]]], [], []], "exportExcelButton", ["subexpr", "@mut", [["get", "exportExcelButton", ["loc", [null, [10, 20], [10, 37]]]]], [], []], "showFilters", ["subexpr", "@mut", [["get", "_showFilters", ["loc", [null, [11, 14], [11, 26]]]]], [], []], "showFiltersInModal", ["subexpr", "@mut", [["get", "showFiltersInModal", ["loc", [null, [12, 21], [12, 39]]]]], [], []], "filters", ["subexpr", "@mut", [["get", "filters", ["loc", [null, [13, 10], [13, 17]]]]], [], []], "toggleStateFilters", ["subexpr", "action", ["toggleStateFilters"], [], ["loc", [null, [14, 21], [14, 50]]]], "resetFilters", ["subexpr", "action", ["resetFilters", ["get", "this.attrs.resetFilters", ["loc", [null, [15, 38], [15, 61]]]]], [], ["loc", [null, [15, 15], [15, 62]]]], "filterButton", ["subexpr", "@mut", [["get", "filterButton", ["loc", [null, [16, 15], [16, 27]]]]], [], []], "filterText", ["subexpr", "@mut", [["get", "filterText", ["loc", [null, [17, 13], [17, 23]]]]], [], []], "buttonClass", ["subexpr", "@mut", [["get", "buttonClass", ["loc", [null, [18, 14], [18, 25]]]]], [], []], "enableDeleteButton", ["subexpr", "not", [["get", "readonly", ["loc", [null, [19, 26], [19, 34]]]]], [], ["loc", [null, [19, 21], [19, 35]]]], "inLookup", ["subexpr", "eq", [["get", "componentMode", ["loc", [null, [20, 15], [20, 28]]]], "lookupform"], [], ["loc", [null, [20, 11], [20, 42]]]], "componentName", ["subexpr", "@mut", [["get", "componentName", ["loc", [null, [21, 16], [21, 29]]]]], [], []], "lookupComponentName", ["subexpr", "@mut", [["get", "lookupComponentName", ["loc", [null, [22, 22], [22, 41]]]]], [], []], "modelController", ["subexpr", "@mut", [["get", "currentController", ["loc", [null, [23, 18], [23, 35]]]]], [], []], "customButtonAction", "customButtonAction", "customButtons", ["subexpr", "@mut", [["get", "customButtons", ["loc", [null, [25, 16], [25, 29]]]]], [], []], "editFormRoute", ["subexpr", "@mut", [["get", "editFormRoute", ["loc", [null, [26, 16], [26, 29]]]]], [], []], "showConfigDialog", "showConfigDialog", "showAdvLimitDialog", "showConfigDialog", "confirmDeleteRows", ["subexpr", "@mut", [["get", "confirmDeleteRows", ["loc", [null, [29, 20], [29, 37]]]]], [], []], "inHierarchicalMode", ["subexpr", "@mut", [["get", "inHierarchicalMode", ["loc", [null, [30, 21], [30, 39]]]]], [], []], "inExpandMode", ["subexpr", "@mut", [["get", "inExpandMode", ["loc", [null, [31, 15], [31, 27]]]]], [], []], "availableHierarchicalMode", ["subexpr", "@mut", [["get", "_availableHierarchicalMode", ["loc", [null, [32, 28], [32, 54]]]]], [], []], "availableCollExpandMode", ["subexpr", "@mut", [["get", "availableCollExpandMode", ["loc", [null, [33, 26], [33, 49]]]]], [], []], "switchHierarchicalMode", ["subexpr", "action", ["switchHierarchicalMode"], [], ["loc", [null, [34, 25], [34, 58]]]], "switchExpandMode", ["subexpr", "action", ["switchExpandMode"], [], ["loc", [null, [35, 19], [35, 46]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [36, 11], [36, 19]]]]], [], []]], ["loc", [null, [1, 0], [37, 2]]]], ["inline", "object-list-view", [], ["placeholder", ["subexpr", "@mut", [["get", "placeholder", ["loc", [null, [39, 14], [39, 25]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [40, 11], [40, 19]]]]], [], []], "columnsWidthAutoresize", ["subexpr", "@mut", [["get", "columnsWidthAutoresize", ["loc", [null, [41, 25], [41, 47]]]]], [], []], "minAutoColumnWidth", ["subexpr", "@mut", [["get", "minAutoColumnWidth", ["loc", [null, [42, 21], [42, 39]]]]], [], []], "buttonClass", ["subexpr", "@mut", [["get", "buttonClass", ["loc", [null, [43, 14], [43, 25]]]]], [], []], "tableStriped", ["subexpr", "@mut", [["get", "tableStriped", ["loc", [null, [44, 15], [44, 27]]]]], [], []], "customTableClass", ["subexpr", "@mut", [["get", "customTableClass", ["loc", [null, [45, 19], [45, 35]]]]], [], []], "cellComponent", ["subexpr", "@mut", [["get", "cellComponent", ["loc", [null, [46, 16], [46, 29]]]]], [], []], "singleColumnCellComponent", ["subexpr", "@mut", [["get", "singleColumnCellComponent", ["loc", [null, [47, 28], [47, 53]]]]], [], []], "singleColumnHeaderTitle", ["subexpr", "@mut", [["get", "singleColumnHeaderTitle", ["loc", [null, [48, 26], [48, 49]]]]], [], []], "createNewByPrototype", ["subexpr", "action", ["createNewByPrototype"], [], ["loc", [null, [49, 23], [49, 54]]]], "showValidationMessagesInRow", ["subexpr", "and", [["subexpr", "not", [["get", "readonly", ["loc", [null, [50, 40], [50, 48]]]]], [], ["loc", [null, [50, 35], [50, 49]]]], ["get", "showValidationMessagesInRow", ["loc", [null, [50, 50], [50, 77]]]]], [], ["loc", [null, [50, 30], [50, 78]]]], "showAsteriskInRow", ["subexpr", "@mut", [["get", "showAsteriskInRow", ["loc", [null, [51, 20], [51, 37]]]]], [], []], "showCheckBoxInRow", ["subexpr", "@mut", [["get", "showCheckBoxInRow", ["loc", [null, [52, 20], [52, 37]]]]], [], []], "showEditButtonInRow", ["subexpr", "@mut", [["get", "showEditButtonInRow", ["loc", [null, [53, 22], [53, 41]]]]], [], []], "showPrototypeButtonInRow", ["subexpr", "@mut", [["get", "showPrototypeButtonInRow", ["loc", [null, [54, 27], [54, 51]]]]], [], []], "showDeleteButtonInRow", ["subexpr", "@mut", [["get", "showDeleteButtonInRow", ["loc", [null, [55, 24], [55, 45]]]]], [], []], "showEditMenuItemInRow", ["subexpr", "@mut", [["get", "showEditMenuItemInRow", ["loc", [null, [56, 24], [56, 45]]]]], [], []], "showPrototypeMenuItemInRow", ["subexpr", "@mut", [["get", "showPrototypeMenuItemInRow", ["loc", [null, [57, 29], [57, 55]]]]], [], []], "showDeleteMenuItemInRow", ["subexpr", "@mut", [["get", "showDeleteMenuItemInRow", ["loc", [null, [58, 26], [58, 49]]]]], [], []], "sendMenuItemAction", ["subexpr", "action", ["sendMenuItemAction"], [], ["loc", [null, [59, 21], [59, 50]]]], "menuInRowAdditionalItems", ["subexpr", "@mut", [["get", "menuInRowAdditionalItems", ["loc", [null, [60, 27], [60, 51]]]]], [], []], "rowClickable", ["subexpr", "and", [["subexpr", "not", [["get", "readonly", ["loc", [null, [61, 25], [61, 33]]]]], [], ["loc", [null, [61, 20], [61, 34]]]], ["get", "rowClickable", ["loc", [null, [61, 35], [61, 47]]]]], [], ["loc", [null, [61, 15], [61, 48]]]], "orderable", ["subexpr", "@mut", [["get", "orderable", ["loc", [null, [62, 12], [62, 21]]]]], [], []], "sorting", ["subexpr", "@mut", [["get", "sorting", ["loc", [null, [63, 10], [63, 17]]]]], [], []], "immediateDelete", true, "modelName", ["subexpr", "@mut", [["get", "modelName", ["loc", [null, [65, 12], [65, 21]]]]], [], []], "modelProjection", ["subexpr", "@mut", [["get", "modelProjection", ["loc", [null, [66, 18], [66, 33]]]]], [], []], "content", ["subexpr", "@mut", [["get", "content", ["loc", [null, [67, 10], [67, 17]]]]], [], []], "sortByColumn", ["subexpr", "action", [["subexpr", "if", [["get", "this.attrs.sortByColumn", ["loc", [null, [68, 27], [68, 50]]]], ["get", "this.attrs.sortByColumn", ["loc", [null, [68, 51], [68, 74]]]], "sortByColumn"], [], ["loc", [null, [68, 23], [68, 90]]]]], [], ["loc", [null, [68, 15], [68, 91]]]], "addColumnToSorting", ["subexpr", "action", [["subexpr", "if", [["get", "this.attrs.addColumnToSorting", ["loc", [null, [69, 33], [69, 62]]]], ["get", "this.attrs.addColumnToSorting", ["loc", [null, [69, 63], [69, 92]]]], "addColumnToSorting"], [], ["loc", [null, [69, 29], [69, 114]]]]], [], ["loc", [null, [69, 21], [69, 115]]]], "enableFilters", ["subexpr", "@mut", [["get", "enableFilters", ["loc", [null, [70, 16], [70, 29]]]]], [], []], "showFilters", ["subexpr", "@mut", [["get", "_showFilters", ["loc", [null, [71, 14], [71, 26]]]]], [], []], "showFiltersInModal", ["subexpr", "@mut", [["get", "showFiltersInModal", ["loc", [null, [72, 21], [72, 39]]]]], [], []], "filters", ["subexpr", "@mut", [["get", "filters", ["loc", [null, [73, 10], [73, 17]]]]], [], []], "applyFilters", ["subexpr", "action", [["subexpr", "if", [["get", "applyFilters", ["loc", [null, [74, 27], [74, 39]]]], ["get", "applyFilters", ["loc", [null, [74, 40], [74, 52]]]], "applyFilters"], [], ["loc", [null, [74, 23], [74, 68]]]]], [], ["loc", [null, [74, 15], [74, 69]]]], "componentForFilter", ["subexpr", "@mut", [["get", "componentForFilter", ["loc", [null, [75, 21], [75, 39]]]]], [], []], "componentForFilterByCondition", ["subexpr", "@mut", [["get", "componentForFilterByCondition", ["loc", [null, [76, 32], [76, 61]]]]], [], []], "conditionsByType", ["subexpr", "@mut", [["get", "conditionsByType", ["loc", [null, [77, 19], [77, 35]]]]], [], []], "filterByAnyMatch", ["subexpr", "action", [["subexpr", "if", [["get", "this.attrs.filterByAnyMatch", ["loc", [null, [78, 31], [78, 58]]]], ["get", "this.attrs.filterByAnyMatch", ["loc", [null, [78, 59], [78, 86]]]], "filterByAnyMatch"], [], ["loc", [null, [78, 27], [78, 106]]]]], [], ["loc", [null, [78, 19], [78, 107]]]], "filterByAnyWord", ["subexpr", "@mut", [["get", "filterByAnyWord", ["loc", [null, [79, 18], [79, 33]]]]], [], []], "filterByAllWords", ["subexpr", "@mut", [["get", "filterByAllWords", ["loc", [null, [80, 19], [80, 35]]]]], [], []], "configurateRow", ["subexpr", "@mut", [["get", "this.attrs.configurateRow", ["loc", [null, [81, 17], [81, 42]]]]], [], []], "configurateSelectedRows", ["subexpr", "@mut", [["get", "this.attrs.configurateSelectedRows", ["loc", [null, [82, 26], [82, 60]]]]], [], []], "confirmDeleteRow", ["subexpr", "@mut", [["get", "confirmDeleteRow", ["loc", [null, [83, 19], [83, 35]]]]], [], []], "beforeDeleteRecord", ["subexpr", "@mut", [["get", "beforeDeleteRecord", ["loc", [null, [84, 21], [84, 39]]]]], [], []], "beforeDeleteAllRecords", ["subexpr", "@mut", [["get", "beforeDeleteAllRecords", ["loc", [null, [85, 25], [85, 47]]]]], [], []], "action", "objectListViewRowClick", "componentName", ["subexpr", "@mut", [["get", "componentName", ["loc", [null, [87, 16], [87, 29]]]]], [], []], "allowColumnResize", ["subexpr", "@mut", [["get", "allowColumnResize", ["loc", [null, [88, 20], [88, 37]]]]], [], []], "selectedRecord", ["subexpr", "@mut", [["get", "selectedRecord", ["loc", [null, [89, 17], [89, 31]]]]], [], []], "notUseUserSettings", ["subexpr", "@mut", [["get", "notUseUserSettings", ["loc", [null, [90, 21], [90, 39]]]]], [], []], "isParentRecordPropertyName", ["subexpr", "@mut", [["get", "isParentRecordPropertyName", ["loc", [null, [91, 29], [91, 55]]]]], [], []], "hierarchicalIndent", ["subexpr", "@mut", [["get", "hierarchicalIndent", ["loc", [null, [92, 21], [92, 39]]]]], [], []], "inHierarchicalMode", ["subexpr", "@mut", [["get", "inHierarchicalMode", ["loc", [null, [93, 21], [93, 39]]]]], [], []], "inExpandMode", ["subexpr", "@mut", [["get", "inExpandMode", ["loc", [null, [94, 15], [94, 27]]]]], [], []], "disableHierarchicalMode", ["subexpr", "if", [["get", "hierarchyByAttribute", ["loc", [null, [95, 30], [95, 50]]]], true, ["get", "disableHierarchicalMode", ["loc", [null, [95, 56], [95, 79]]]]], [], ["loc", [null, [95, 26], [95, 80]]]], "loadRecords", ["subexpr", "action", ["loadRecords"], [], ["loc", [null, [96, 14], [96, 36]]]], "availableHierarchicalMode", ["subexpr", "action", ["availableHierarchicalMode"], [], ["loc", [null, [97, 28], [97, 64]]]], "hierarchyAttribute", ["subexpr", "@mut", [["get", "hierarchyAttribute", ["loc", [null, [98, 21], [98, 39]]]]], [], []], "useRowByRowLoading", ["subexpr", "@mut", [["get", "useRowByRowLoading", ["loc", [null, [99, 21], [99, 39]]]]], [], []], "useRowByRowLoadingProgress", ["subexpr", "@mut", [["get", "useRowByRowLoadingProgress", ["loc", [null, [100, 29], [100, 55]]]]], [], []], "eventsBus", ["subexpr", "@mut", [["get", "eventsBus", ["loc", [null, [101, 12], [101, 21]]]]], [], []], "onEditForm", ["subexpr", "@mut", [["get", "onEditForm", ["loc", [null, [102, 13], [102, 23]]]]], [], []], "customButtonInRowAction", "customButtonInRowAction", "customButtonsInRow", ["subexpr", "@mut", [["get", "customButtonsInRow", ["loc", [null, [104, 21], [104, 39]]]]], [], []], "defaultSortingButton", ["subexpr", "@mut", [["get", "defaultSortingButton", ["loc", [null, [105, 23], [105, 43]]]]], [], []], "defaultLeftPadding", ["subexpr", "@mut", [["get", "defaultLeftPadding", ["loc", [null, [106, 21], [106, 39]]]]], [], []], "overflowedComponents", ["subexpr", "@mut", [["get", "overflowedComponents", ["loc", [null, [107, 23], [107, 43]]]]], [], []], "fixedHeader", ["subexpr", "@mut", [["get", "fixedHeader", ["loc", [null, [108, 14], [108, 25]]]]], [], []]], ["loc", [null, [38, 0], [109, 2]]]], ["block", "if", [["subexpr", "or", [["subexpr", "not", [["get", "inHierarchicalMode", ["loc", [null, [110, 15], [110, 33]]]]], [], ["loc", [null, [110, 10], [110, 34]]]], ["get", "hierarchyPaging", ["loc", [null, [110, 35], [110, 50]]]]], [], ["loc", [null, [110, 6], [110, 51]]]]], [], 0, null, ["loc", [null, [110, 0], [169, 7]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define("dummy/templates/components/flexberry-simpledatetime", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "fragmentReason": {
            "name": "missing-wrapper",
            "problems": ["wrong-type"]
          },
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 3,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/flexberry-simpledatetime.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "input", [], ["type", ["subexpr", "@mut", [["get", "type", ["loc", [null, [2, 15], [2, 19]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonlyAttr", ["loc", [null, [2, 29], [2, 41]]]]], [], []], "value", ["subexpr", "@mut", [["get", "_valueAsString", ["loc", [null, [2, 48], [2, 62]]]]], [], []], "min", ["subexpr", "@mut", [["get", "_minAsString", ["loc", [null, [2, 67], [2, 79]]]]], [], []], "max", ["subexpr", "@mut", [["get", "_maxAsString", ["loc", [null, [2, 84], [2, 96]]]]], [], []], "placeholder", ["subexpr", "@mut", [["get", "placeholder", ["loc", [null, [2, 109], [2, 120]]]]], [], []]], ["loc", [null, [2, 2], [2, 122]]]]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 6,
                "column": 4
              },
              "end": {
                "line": 15,
                "column": 4
              }
            },
            "moduleName": "dummy/templates/components/flexberry-simpledatetime.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("button");
            dom.setAttribute(el1, "type", "button");
            var el2 = dom.createTextNode("\n        ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("i");
            dom.setAttribute(el2, "class", "remove icon");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n      ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1]);
            var morphs = new Array(4);
            morphs[0] = dom.createAttrMorph(element0, 'class');
            morphs[1] = dom.createAttrMorph(element0, 'title');
            morphs[2] = dom.createAttrMorph(element0, 'disabled');
            morphs[3] = dom.createElementMorph(element0);
            return morphs;
          },
          statements: [["attribute", "class", ["concat", ["ui ui-clear ", ["subexpr", "if", [["get", "readonlyAttr", ["loc", [null, [8, 32], [8, 44]]]], "disabled"], [], ["loc", [null, [8, 27], [8, 57]]]], " button"]]], ["attribute", "title", ["subexpr", "t", ["components.flexberry-lookup.remove-button-text"], [], ["loc", [null, [9, 14], [9, 68]]]]], ["attribute", "disabled", ["get", "readonlyAttr", ["loc", [null, [10, 19], [10, 31]]]]], ["element", "action", ["remove"], ["bubbles", false], ["loc", [null, [12, 8], [12, 41]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 17,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/flexberry-simpledatetime.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "ui fluid action input flatpickr");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("input");
          dom.setAttribute(el2, "type", "text");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element1 = dom.childAt(fragment, [1]);
          var element2 = dom.childAt(element1, [1]);
          var morphs = new Array(2);
          morphs[0] = dom.createAttrMorph(element2, 'placeholder');
          morphs[1] = dom.createMorphAt(element1, 3, 3);
          return morphs;
        },
        statements: [["attribute", "placeholder", ["get", "placeholder", ["loc", [null, [5, 37], [5, 48]]]]], ["block", "if", [["get", "removeButton", ["loc", [null, [6, 10], [6, 22]]]]], [], 0, null, ["loc", [null, [6, 4], [15, 11]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 18,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/flexberry-simpledatetime.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "if", [["subexpr", "and", [["get", "currentTypeSupported", ["loc", [null, [1, 11], [1, 31]]]], ["get", "useBrowserInput", ["loc", [null, [1, 32], [1, 47]]]]], [], ["loc", [null, [1, 6], [1, 48]]]]], [], 0, 1, ["loc", [null, [1, 0], [17, 7]]]]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define("dummy/templates/components/flexberry-simpleolv",["exports"],function(exports){exports["default"] = Ember.HTMLBars.template((function(){var child0=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":2,"column":2},"end":{"line":11,"column":2}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("    ");dom.appendChild(el0,el1);var el1=dom.createElement("button");dom.setAttribute(el1,"type","button");var el2=dom.createTextNode("\n        ");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n        ");dom.appendChild(el1,el2);var el2=dom.createElement("i");dom.setAttribute(el2,"class","refresh icon");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n    ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element52=dom.childAt(fragment,[1]);var morphs=new Array(4);morphs[0] = dom.createAttrMorph(element52,'class');morphs[1] = dom.createAttrMorph(element52,'title');morphs[2] = dom.createElementMorph(element52);morphs[3] = dom.createMorphAt(element52,1,1);return morphs;},statements:[["attribute","class",["concat",["ui refresh-button ",["get","buttonClass",["loc",[null,[5,33],[5,44]]]]," button"]]],["attribute","title",["subexpr","t",["components.olv-toolbar.refresh-button-text"],[],["loc",[null,[6,12],[6,62]]]]],["element","action",["refresh"],[],["loc",[null,[7,6],[7,26]]]],["inline","t",["components.olv-toolbar.refresh-button-text"],[],["loc",[null,[8,8],[8,58]]]]],locals:[],templates:[]};})();var child1=(function(){var child0=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":13,"column":4},"end":{"line":22,"column":4}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("      ");dom.appendChild(el0,el1);var el1=dom.createElement("button");dom.setAttribute(el1,"type","button");dom.setAttribute(el1,"disabled","disabled");var el2=dom.createTextNode("\n          ");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n      ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element51=dom.childAt(fragment,[1]);var morphs=new Array(4);morphs[0] = dom.createAttrMorph(element51,'class');morphs[1] = dom.createAttrMorph(element51,'title');morphs[2] = dom.createElementMorph(element51);morphs[3] = dom.createMorphAt(element51,1,1);return morphs;},statements:[["attribute","class",["concat",["ui create-button ",["get","buttonClass",["loc",[null,[16,34],[16,45]]]]," disabled button"]]],["attribute","title",["subexpr","t",["components.olv-toolbar.add-button-text"],[],["loc",[null,[17,14],[17,60]]]]],["element","action",["createNew"],[],["loc",[null,[19,8],[19,30]]]],["inline","t",["components.olv-toolbar.add-button-text"],[],["loc",[null,[20,10],[20,56]]]]],locals:[],templates:[]};})();var child1=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":22,"column":4},"end":{"line":30,"column":4}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("      ");dom.appendChild(el0,el1);var el1=dom.createElement("button");dom.setAttribute(el1,"type","button");var el2=dom.createTextNode("\n          ");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n      ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element50=dom.childAt(fragment,[1]);var morphs=new Array(4);morphs[0] = dom.createAttrMorph(element50,'class');morphs[1] = dom.createAttrMorph(element50,'title');morphs[2] = dom.createElementMorph(element50);morphs[3] = dom.createMorphAt(element50,1,1);return morphs;},statements:[["attribute","class",["concat",["ui create-button ",["get","buttonClass",["loc",[null,[25,34],[25,45]]]]," button"]]],["attribute","title",["subexpr","t",["components.olv-toolbar.add-button-text"],[],["loc",[null,[26,14],[26,60]]]]],["element","action",["createNew"],[],["loc",[null,[27,8],[27,30]]]],["inline","t",["components.olv-toolbar.add-button-text"],[],["loc",[null,[28,10],[28,56]]]]],locals:[],templates:[]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":12,"column":2},"end":{"line":31,"column":2}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createComment("");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);dom.insertBoundary(fragment,0);dom.insertBoundary(fragment,null);return morphs;},statements:[["block","if",[["subexpr","or",[["get","readonly",["loc",[null,[13,14],[13,22]]]],["subexpr","not",[["get","enableCreateNewButton",["loc",[null,[13,28],[13,49]]]]],[],["loc",[null,[13,23],[13,50]]]]],[],["loc",[null,[13,10],[13,51]]]]],[],0,1,["loc",[null,[13,4],[30,11]]]]],locals:[],templates:[child0,child1]};})();var child2=(function(){var child0=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":33,"column":4},"end":{"line":43,"column":4}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("      ");dom.appendChild(el0,el1);var el1=dom.createElement("button");dom.setAttribute(el1,"type","button");dom.setAttribute(el1,"disabled","disabled");var el2=dom.createTextNode("\n          ");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n          ");dom.appendChild(el1,el2);var el2=dom.createElement("i");dom.setAttribute(el2,"class","delete icon");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n      ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element49=dom.childAt(fragment,[1]);var morphs=new Array(4);morphs[0] = dom.createAttrMorph(element49,'class');morphs[1] = dom.createAttrMorph(element49,'title');morphs[2] = dom.createElementMorph(element49);morphs[3] = dom.createMorphAt(element49,1,1);return morphs;},statements:[["attribute","class",["concat",["ui delete-button ",["get","buttonClass",["loc",[null,[36,34],[36,45]]]]," disabled button"]]],["attribute","title",["subexpr","t",["components.olv-toolbar.delete-button-text"],[],["loc",[null,[37,14],[37,63]]]]],["element","action",["delete"],[],["loc",[null,[39,8],[39,27]]]],["inline","t",["components.olv-toolbar.delete-button-text"],[],["loc",[null,[40,10],[40,59]]]]],locals:[],templates:[]};})();var child1=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":43,"column":4},"end":{"line":52,"column":4}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("      ");dom.appendChild(el0,el1);var el1=dom.createElement("button");dom.setAttribute(el1,"type","button");var el2=dom.createTextNode("\n          ");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n          ");dom.appendChild(el1,el2);var el2=dom.createElement("i");dom.setAttribute(el2,"class","delete icon");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n      ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element48=dom.childAt(fragment,[1]);var morphs=new Array(4);morphs[0] = dom.createAttrMorph(element48,'class');morphs[1] = dom.createAttrMorph(element48,'title');morphs[2] = dom.createElementMorph(element48);morphs[3] = dom.createMorphAt(element48,1,1);return morphs;},statements:[["attribute","class",["concat",["ui delete-button ",["get","buttonClass",["loc",[null,[46,34],[46,45]]]]," button"]]],["attribute","title",["subexpr","t",["components.olv-toolbar.delete-button-text"],[],["loc",[null,[47,14],[47,63]]]]],["element","action",["delete"],[],["loc",[null,[48,8],[48,27]]]],["inline","t",["components.olv-toolbar.delete-button-text"],[],["loc",[null,[49,10],[49,59]]]]],locals:[],templates:[]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":32,"column":2},"end":{"line":53,"column":2}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createComment("");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);dom.insertBoundary(fragment,0);dom.insertBoundary(fragment,null);return morphs;},statements:[["block","if",[["subexpr","or",[["get","readonly",["loc",[null,[33,14],[33,22]]]],["subexpr","not",[["get","isDeleteButtonEnabled",["loc",[null,[33,28],[33,49]]]]],[],["loc",[null,[33,23],[33,50]]]]],[],["loc",[null,[33,10],[33,51]]]]],[],0,1,["loc",[null,[33,4],[52,11]]]]],locals:[],templates:[child0,child1]};})();var child3=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":54,"column":2},"end":{"line":62,"column":2}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("    ");dom.appendChild(el0,el1);var el1=dom.createElement("button");dom.setAttribute(el1,"type","button");var el2=dom.createTextNode("\n        ");dom.appendChild(el1,el2);var el2=dom.createElement("i");dom.setAttribute(el2,"class","sitemap icon");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n    ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element47=dom.childAt(fragment,[1]);var morphs=new Array(3);morphs[0] = dom.createAttrMorph(element47,'class');morphs[1] = dom.createAttrMorph(element47,'title');morphs[2] = dom.createElementMorph(element47);return morphs;},statements:[["attribute","class",["concat",["ui button icon hierarchical-button ",["get","buttonClass",["loc",[null,[57,50],[57,61]]]]," ",["subexpr","if",[["get","inHierarchicalMode",["loc",[null,[57,69],[57,87]]]],"active"],[],["loc",[null,[57,64],[57,98]]]]]]],["attribute","title",["subexpr","t",["components.olv-toolbar.hierarchy-button-text"],[],["loc",[null,[58,12],[58,64]]]]],["element","action",["switchHierarchicalMode"],[],["loc",[null,[59,6],[59,41]]]]],locals:[],templates:[]};})();var child4=(function(){var child0=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":72,"column":6},"end":{"line":81,"column":6}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("        ");dom.appendChild(el0,el1);var el1=dom.createElement("div");dom.setAttribute(el1,"class","or");dom.setAttribute(el1,"data-text","•");dom.appendChild(el0,el1);var el1=dom.createTextNode("\n        ");dom.appendChild(el0,el1);var el1=dom.createElement("button");dom.setAttribute(el1,"type","button");var el2=dom.createTextNode("\n            ");dom.appendChild(el1,el2);var el2=dom.createElement("i");dom.setAttribute(el2,"class","remove icon");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n        ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element44=dom.childAt(fragment,[3]);var morphs=new Array(3);morphs[0] = dom.createAttrMorph(element44,'class');morphs[1] = dom.createAttrMorph(element44,'title');morphs[2] = dom.createElementMorph(element44);return morphs;},statements:[["attribute","class",["concat",["ui button removeFilter-button ",["get","buttonClass",["loc",[null,[76,49],[76,60]]]]]]],["attribute","title",["subexpr","t",["components.olv-toolbar.remove-filter-button-text"],[],["loc",[null,[77,16],[77,72]]]]],["element","action",["resetFilters",["get","this.attrs.resetFilters",["loc",[null,[78,34],[78,57]]]]],[],["loc",[null,[78,10],[78,59]]]]],locals:[],templates:[]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":63,"column":2},"end":{"line":83,"column":2}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("    ");dom.appendChild(el0,el1);var el1=dom.createElement("div");dom.setAttribute(el1,"class","ui icon buttons filter-active");var el2=dom.createTextNode("\n      ");dom.appendChild(el1,el2);var el2=dom.createElement("button");dom.setAttribute(el2,"type","button");var el3=dom.createTextNode("\n          ");dom.appendChild(el2,el3);var el3=dom.createElement("i");dom.setAttribute(el3,"class","filter icon");dom.appendChild(el2,el3);var el3=dom.createTextNode("\n      ");dom.appendChild(el2,el3);dom.appendChild(el1,el2);var el2=dom.createTextNode("\n");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("    ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element45=dom.childAt(fragment,[1]);var element46=dom.childAt(element45,[1]);var morphs=new Array(4);morphs[0] = dom.createAttrMorph(element46,'class');morphs[1] = dom.createAttrMorph(element46,'title');morphs[2] = dom.createElementMorph(element46);morphs[3] = dom.createMorphAt(element45,3,3);return morphs;},statements:[["attribute","class",["concat",["ui button ",["get","buttonClass",["loc",[null,[67,27],[67,38]]]]," ",["subexpr","if",[["get","showFilters",["loc",[null,[67,46],[67,57]]]],"active"],[],["loc",[null,[67,41],[67,68]]]]]]],["attribute","title",["subexpr","t",["components.olv-toolbar.filter-button-text"],[],["loc",[null,[68,14],[68,63]]]]],["element","action",["toggleStateFilters"],[],["loc",[null,[69,8],[69,39]]]],["block","if",[["get","filters",["loc",[null,[72,12],[72,19]]]]],[],0,null,["loc",[null,[72,6],[81,13]]]]],locals:[],templates:[child0]};})();var child5=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":84,"column":2},"end":{"line":109,"column":2}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("    ");dom.appendChild(el0,el1);var el1=dom.createElement("div");dom.setAttribute(el1,"class","ui action input");var el2=dom.createTextNode("\n      ");dom.appendChild(el1,el2);var el2=dom.createElement("div");dom.setAttribute(el2,"class","block-action-input");var el3=dom.createTextNode("\n        ");dom.appendChild(el2,el3);var el3=dom.createElement("input");dom.setAttribute(el3,"type","text");dom.appendChild(el2,el3);var el3=dom.createTextNode("\n      ");dom.appendChild(el2,el3);dom.appendChild(el1,el2);var el2=dom.createTextNode("\n      ");dom.appendChild(el1,el2);var el2=dom.createElement("button");dom.setAttribute(el2,"type","button");var el3=dom.createTextNode("\n          ");dom.appendChild(el2,el3);var el3=dom.createElement("i");dom.setAttribute(el3,"class","search icon");dom.appendChild(el2,el3);var el3=dom.createTextNode("\n      ");dom.appendChild(el2,el3);dom.appendChild(el1,el2);var el2=dom.createTextNode("\n      ");dom.appendChild(el1,el2);var el2=dom.createElement("button");dom.setAttribute(el2,"type","button");var el3=dom.createTextNode("\n          ");dom.appendChild(el2,el3);var el3=dom.createElement("i");dom.setAttribute(el3,"class","remove icon");dom.appendChild(el2,el3);var el3=dom.createTextNode("\n      ");dom.appendChild(el2,el3);dom.appendChild(el1,el2);var el2=dom.createTextNode("\n    ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element40=dom.childAt(fragment,[1]);var element41=dom.childAt(element40,[1,1]);var element42=dom.childAt(element40,[3]);var element43=dom.childAt(element40,[5]);var morphs=new Array(9);morphs[0] = dom.createAttrMorph(element41,'value');morphs[1] = dom.createAttrMorph(element41,'placeholder');morphs[2] = dom.createAttrMorph(element41,'onkeyup');morphs[3] = dom.createAttrMorph(element42,'class');morphs[4] = dom.createAttrMorph(element42,'title');morphs[5] = dom.createElementMorph(element42);morphs[6] = dom.createAttrMorph(element43,'class');morphs[7] = dom.createAttrMorph(element43,'title');morphs[8] = dom.createElementMorph(element43);return morphs;},statements:[["attribute","value",["get","filterByAnyMatchText",["loc",[null,[89,18],[89,38]]]]],["attribute","placeholder",["subexpr","t",["components.olv-toolbar.filter-by-any-match-placeholder"],[],["loc",[null,[90,22],[90,84]]]]],["attribute","onkeyup",["subexpr","action",["filterByAnyMatch"],[],["loc",[null,[91,18],[91,47]]]]],["attribute","class",["concat",["ui ",["get","buttonClass",["loc",[null,[96,20],[96,31]]]]," icon button search-button"]]],["attribute","title",["subexpr","t",["components.olv-toolbar.search-button-text"],[],["loc",[null,[97,14],[97,63]]]]],["element","action",["filterByAnyMatch"],[],["loc",[null,[98,8],[98,37]]]],["attribute","class",["concat",["ui ",["get","buttonClass",["loc",[null,[103,20],[103,31]]]]," icon button clear-search-button"]]],["attribute","title",["subexpr","t",["components.olv-toolbar.clear-search-button-text"],[],["loc",[null,[104,14],[104,69]]]]],["element","action",["removeFilter"],[],["loc",[null,[105,8],[105,33]]]]],locals:[],templates:[]};})();var child6=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":110,"column":2},"end":{"line":124,"column":2}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("    ");dom.appendChild(el0,el1);var el1=dom.createElement("div");dom.setAttribute(el1,"class","ui buttons export-config");var el2=dom.createTextNode("\n      ");dom.appendChild(el1,el2);var el2=dom.createElement("button");dom.setAttribute(el2,"type","button");var el3=dom.createTextNode("\n          ");dom.appendChild(el2,el3);var el3=dom.createElement("i");dom.setAttribute(el3,"class","large file excel outline icon");dom.appendChild(el2,el3);var el3=dom.createTextNode("\n      ");dom.appendChild(el2,el3);dom.appendChild(el1,el2);var el2=dom.createTextNode("\n      ");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n    ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element38=dom.childAt(fragment,[1]);var element39=dom.childAt(element38,[1]);var morphs=new Array(4);morphs[0] = dom.createAttrMorph(element39,'class');morphs[1] = dom.createAttrMorph(element39,'title');morphs[2] = dom.createElementMorph(element39);morphs[3] = dom.createMorphAt(element38,3,3);return morphs;},statements:[["attribute","class",["concat",["ui button icon export-button ",["get","buttonClass",["loc",[null,[114,46],[114,57]]]]]]],["attribute","title",["subexpr","t",["components.olv-toolbar.export-excel-button-text"],[],["loc",[null,[115,14],[115,69]]]]],["element","action",["showExportDialog"],[],["loc",[null,[116,8],[116,37]]]],["inline","flexberry-menu",[],["items",["subexpr","@mut",[["get","exportExcelItems",["loc",[null,[120,14],[120,30]]]]],[],[]],"onItemClick",["subexpr","action",["onExportMenuItemClick"],[],["loc",[null,[121,20],[121,52]]]]],["loc",[null,[119,6],[122,8]]]]],locals:[],templates:[]};})();var child7=(function(){var child0=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":134,"column":6},"end":{"line":139,"column":6}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("        ");dom.appendChild(el0,el1);var el1=dom.createComment("");dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);return morphs;},statements:[["inline","flexberry-menu",[],["items",["subexpr","@mut",[["get","colsSettingsItems",["loc",[null,[136,16],[136,33]]]]],[],[]],"onItemClick",["subexpr","action",["onMenuItemClick"],[],["loc",[null,[137,22],[137,48]]]]],["loc",[null,[135,8],[138,10]]]]],locals:[],templates:[]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":125,"column":2},"end":{"line":141,"column":2}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("    ");dom.appendChild(el0,el1);var el1=dom.createElement("div");dom.setAttribute(el1,"class","ui buttons cols-config");var el2=dom.createTextNode("\n      ");dom.appendChild(el1,el2);var el2=dom.createElement("button");dom.setAttribute(el2,"type","button");dom.setAttribute(el2,"class","ui icon button config-button");var el3=dom.createTextNode("\n          ");dom.appendChild(el2,el3);var el3=dom.createElement("i");dom.setAttribute(el3,"class","large table icon");dom.appendChild(el2,el3);var el3=dom.createTextNode("\n      ");dom.appendChild(el2,el3);dom.appendChild(el1,el2);var el2=dom.createTextNode("\n");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("    ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element36=dom.childAt(fragment,[1]);var element37=dom.childAt(element36,[1]);var morphs=new Array(3);morphs[0] = dom.createAttrMorph(element37,'title');morphs[1] = dom.createElementMorph(element37);morphs[2] = dom.createMorphAt(element36,3,3);return morphs;},statements:[["attribute","title",["subexpr","t",["components.colsconfig-dialog-content.title"],[],["loc",[null,[130,14],[130,64]]]]],["element","action",["showConfigDialog"],[],["loc",[null,[131,8],[131,37]]]],["block","if",[["get","colsSettingsItems",["loc",[null,[134,12],[134,29]]]]],[],0,null,["loc",[null,[134,6],[139,13]]]]],locals:[],templates:[child0]};})();var child8=(function(){var child0=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":149,"column":6},"end":{"line":152,"column":6}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("        ");dom.appendChild(el0,el1);var el1=dom.createElement("i");dom.appendChild(el0,el1);var el1=dom.createTextNode("\n        ");dom.appendChild(el0,el1);var el1=dom.createComment("");dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element34=dom.childAt(fragment,[1]);var morphs=new Array(2);morphs[0] = dom.createAttrMorph(element34,'class');morphs[1] = dom.createMorphAt(fragment,3,3,contextualElement);return morphs;},statements:[["attribute","class",["get","customButton.iconClasses",["loc",[null,[150,19],[150,43]]]]],["content","customButton.buttonName",["loc",[null,[151,8],[151,35]]]]],locals:[],templates:[]};})();var child1=(function(){var child0=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":152,"column":6},"end":{"line":154,"column":6}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("        ");dom.appendChild(el0,el1);var el1=dom.createComment("");dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);return morphs;},statements:[["content","customButton.buttonName",["loc",[null,[153,8],[153,35]]]]],locals:[],templates:[]};})();var child1=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":154,"column":6},"end":{"line":156,"column":6}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("        ");dom.appendChild(el0,el1);var el1=dom.createComment("");dom.appendChild(el0,el1);var el1=dom.createTextNode("\n      ");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);return morphs;},statements:[["inline","t",["components.olv-toolbar.custom-button-text"],[],["loc",[null,[155,8],[155,57]]]]],locals:[],templates:[]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":152,"column":6},"end":{"line":156,"column":6}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createComment("");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);dom.insertBoundary(fragment,0);dom.insertBoundary(fragment,null);return morphs;},statements:[["block","if",[["get","customButton.buttonName",["loc",[null,[152,16],[152,39]]]]],[],0,1,["loc",[null,[152,6],[156,6]]]]],locals:[],templates:[child0,child1]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":142,"column":2},"end":{"line":158,"column":2}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:1,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("    ");dom.appendChild(el0,el1);var el1=dom.createElement("button");dom.setAttribute(el1,"type","button");var el2=dom.createTextNode("\n");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("    ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element35=dom.childAt(fragment,[1]);var morphs=new Array(5);morphs[0] = dom.createAttrMorph(element35,'class');morphs[1] = dom.createAttrMorph(element35,'title');morphs[2] = dom.createAttrMorph(element35,'disabled');morphs[3] = dom.createElementMorph(element35);morphs[4] = dom.createMorphAt(element35,1,1);return morphs;},statements:[["attribute","class",["concat",["ui ",["subexpr","if",[["get","customButton.buttonClasses",["loc",[null,[145,21],[145,47]]]],["get","customButton.buttonClasses",["loc",[null,[145,48],[145,74]]]]],[],["loc",[null,[145,16],[145,76]]]]," button"]]],["attribute","title",["subexpr","if",[["get","customButton.buttonTitle",["loc",[null,[146,17],[146,41]]]],["get","customButton.buttonTitle",["loc",[null,[146,42],[146,66]]]]],[],["loc",[null,[146,12],[146,68]]]]],["attribute","disabled",["get","customButton.disabled",["loc",[null,[147,17],[147,38]]]]],["element","action",["customButtonAction",["get","customButton.buttonAction",["loc",[null,[148,36],[148,61]]]]],[],["loc",[null,[148,6],[148,63]]]],["block","if",[["get","customButton.iconClasses",["loc",[null,[149,12],[149,36]]]]],[],0,1,["loc",[null,[149,6],[156,13]]]]],locals:["customButton"],templates:[child0,child1]};})();var child9=(function(){var child0=(function(){var child0=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":195,"column":14},"end":{"line":204,"column":14}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                ");dom.appendChild(el0,el1);var el1=dom.createElement("button");dom.setAttribute(el1,"type","button");dom.setAttribute(el1,"disabled","disabled");var el2=dom.createTextNode("\n                    ");dom.appendChild(el1,el2);var el2=dom.createElement("i");dom.setAttribute(el2,"class","check-square-o icon");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n                ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element33=dom.childAt(fragment,[1]);var morphs=new Array(3);morphs[0] = dom.createAttrMorph(element33,'class');morphs[1] = dom.createAttrMorph(element33,'title');morphs[2] = dom.createElementMorph(element33);return morphs;},statements:[["attribute","class",["concat",["ui check-all-at-page-button ",["get","buttonClass",["loc",[null,[198,55],[198,66]]]]," disabled button"]]],["attribute","title",["subexpr","t",["components.olv-toolbar.check-all-at-page-button-text"],[],["loc",[null,[199,24],[199,84]]]]],["element","action",["checkAllAtPage"],[],["loc",[null,[201,18],[201,45]]]]],locals:[],templates:[]};})();var child1=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":204,"column":14},"end":{"line":212,"column":14}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                ");dom.appendChild(el0,el1);var el1=dom.createElement("button");dom.setAttribute(el1,"type","button");var el2=dom.createTextNode("\n                    ");dom.appendChild(el1,el2);var el2=dom.createElement("i");dom.setAttribute(el2,"class","check-square-o icon");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n                ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element32=dom.childAt(fragment,[1]);var morphs=new Array(3);morphs[0] = dom.createAttrMorph(element32,'class');morphs[1] = dom.createAttrMorph(element32,'title');morphs[2] = dom.createElementMorph(element32);return morphs;},statements:[["attribute","class",["concat",["ui check-all-at-page-button ",["get","buttonClass",["loc",[null,[207,55],[207,66]]]]," button"]]],["attribute","title",["subexpr","t",["components.olv-toolbar.check-all-at-page-button-text"],[],["loc",[null,[208,24],[208,84]]]]],["element","action",["checkAllAtPage"],[],["loc",[null,[209,18],[209,45]]]]],locals:[],templates:[]};})();var child2=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":213,"column":14},"end":{"line":222,"column":14}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                ");dom.appendChild(el0,el1);var el1=dom.createElement("button");dom.setAttribute(el1,"type","button");dom.setAttribute(el1,"disabled","disabled");var el2=dom.createTextNode("\n                    ");dom.appendChild(el1,el2);var el2=dom.createElement("i");dom.setAttribute(el2,"class","check-all-square-o icon");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n                ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element31=dom.childAt(fragment,[1]);var morphs=new Array(3);morphs[0] = dom.createAttrMorph(element31,'class');morphs[1] = dom.createAttrMorph(element31,'title');morphs[2] = dom.createElementMorph(element31);return morphs;},statements:[["attribute","class",["concat",["ui check-all-button ",["get","buttonClass",["loc",[null,[216,47],[216,58]]]]," ",["subexpr","if",[["get","allSelect",["loc",[null,[216,66],[216,75]]]],"activated"],[],["loc",[null,[216,61],[216,89]]]]," disabled button"]]],["attribute","title",["subexpr","t",["components.olv-toolbar.check-all-button-text"],[],["loc",[null,[217,24],[217,76]]]]],["element","action",["checkAll"],[],["loc",[null,[219,18],[219,39]]]]],locals:[],templates:[]};})();var child3=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":222,"column":14},"end":{"line":230,"column":14}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                ");dom.appendChild(el0,el1);var el1=dom.createElement("button");dom.setAttribute(el1,"type","button");var el2=dom.createTextNode("\n                    ");dom.appendChild(el1,el2);var el2=dom.createElement("i");dom.setAttribute(el2,"class","check-all-square-o icon");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n                ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element30=dom.childAt(fragment,[1]);var morphs=new Array(3);morphs[0] = dom.createAttrMorph(element30,'class');morphs[1] = dom.createAttrMorph(element30,'title');morphs[2] = dom.createElementMorph(element30);return morphs;},statements:[["attribute","class",["concat",["ui check-all-button ",["get","buttonClass",["loc",[null,[225,47],[225,58]]]]," ",["subexpr","if",[["get","allSelect",["loc",[null,[225,66],[225,75]]]],"activated"],[],["loc",[null,[225,61],[225,89]]]]," button"]]],["attribute","title",["subexpr","t",["components.olv-toolbar.check-all-button-text"],[],["loc",[null,[226,24],[226,76]]]]],["element","action",["checkAll"],[],["loc",[null,[227,18],[227,39]]]]],locals:[],templates:[]};})();var child4=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":231,"column":14},"end":{"line":239,"column":14}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                ");dom.appendChild(el0,el1);var el1=dom.createElement("button");dom.setAttribute(el1,"type","button");var el2=dom.createTextNode("\n                    ");dom.appendChild(el1,el2);var el2=dom.createElement("i");dom.setAttribute(el2,"class","sort icon");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n                ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element29=dom.childAt(fragment,[1]);var morphs=new Array(3);morphs[0] = dom.createAttrMorph(element29,'class');morphs[1] = dom.createAttrMorph(element29,'title');morphs[2] = dom.createElementMorph(element29);return morphs;},statements:[["attribute","class",["concat",["ui clear-sorting-button ",["get","buttonClass",["loc",[null,[234,51],[234,62]]]]," button"]]],["attribute","title",["subexpr","t",["components.olv-toolbar.clear-sorting-button-text"],[],["loc",[null,[235,24],[235,80]]]]],["element","action",["clearSorting"],[],["loc",[null,[236,18],[236,43]]]]],locals:[],templates:[]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":194,"column":12},"end":{"line":240,"column":12}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createComment("");dom.appendChild(el0,el1);var el1=dom.createComment("");dom.appendChild(el0,el1);var el1=dom.createComment("");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(3);morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);morphs[1] = dom.createMorphAt(fragment,1,1,contextualElement);morphs[2] = dom.createMorphAt(fragment,2,2,contextualElement);dom.insertBoundary(fragment,0);dom.insertBoundary(fragment,null);return morphs;},statements:[["block","if",[["subexpr","or",[["get","readonly",["loc",[null,[195,24],[195,32]]]],["get","allSelect",["loc",[null,[195,33],[195,42]]]]],[],["loc",[null,[195,20],[195,43]]]]],[],0,1,["loc",[null,[195,14],[212,21]]]],["block","if",[["get","readonly",["loc",[null,[213,20],[213,28]]]]],[],2,3,["loc",[null,[213,14],[230,21]]]],["block","if",[["get","defaultSortingButton",["loc",[null,[231,20],[231,40]]]]],[],4,null,["loc",[null,[231,14],[239,21]]]]],locals:[],templates:[child0,child1,child2,child3,child4]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":192,"column":8},"end":{"line":242,"column":8}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("          ");dom.appendChild(el0,el1);var el1=dom.createElement("th");dom.setAttribute(el1,"class","object-list-view-operations collapsing");dom.setAttribute(el1,"data-olv-header-property-name","OlvRowToolbar");var el2=dom.createTextNode("\n");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("          ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(dom.childAt(fragment,[1]),1,1);return morphs;},statements:[["block","if",[["get","showCheckBoxInRow",["loc",[null,[194,18],[194,35]]]]],[],0,null,["loc",[null,[194,12],[240,19]]]]],locals:[],templates:[child0]};})();var child10=(function(){var child0=(function(){var child0=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":248,"column":16},"end":{"line":250,"column":16}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                  ");dom.appendChild(el0,el1);var el1=dom.createComment("");dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);return morphs;},statements:[["inline","t",[["get","column.keyLocale",["loc",[null,[249,22],[249,38]]]]],[],["loc",[null,[249,18],[249,40]]]]],locals:[],templates:[]};})();var child1=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":250,"column":16},"end":{"line":252,"column":16}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                  ");dom.appendChild(el0,el1);var el1=dom.createComment("");dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);return morphs;},statements:[["content","column.header",["loc",[null,[251,18],[251,35]]]]],locals:[],templates:[]};})();var child2=(function(){var child0=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":256,"column":20},"end":{"line":260,"column":20}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                      ");dom.appendChild(el0,el1);var el1=dom.createElement("div");var el2=dom.createTextNode("\n                      ▲");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n                      ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element26=dom.childAt(fragment,[1]);var morphs=new Array(2);morphs[0] = dom.createAttrMorph(element26,'title');morphs[1] = dom.createMorphAt(element26,1,1);return morphs;},statements:[["attribute","title",["concat",[["subexpr","t",["components.object-list-view.sort-ascending"],[],["loc",[null,[257,34],[257,84]]]]]]],["content","column.sortNumber",["loc",[null,[258,23],[258,44]]]]],locals:[],templates:[]};})();var child1=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":260,"column":20},"end":{"line":264,"column":20}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                      ");dom.appendChild(el0,el1);var el1=dom.createElement("div");var el2=dom.createTextNode("\n                      ▼");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n                      ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element25=dom.childAt(fragment,[1]);var morphs=new Array(2);morphs[0] = dom.createAttrMorph(element25,'title');morphs[1] = dom.createMorphAt(element25,1,1);return morphs;},statements:[["attribute","title",["concat",[["subexpr","t",["components.object-list-view.sort-descending"],[],["loc",[null,[261,34],[261,85]]]]]]],["content","column.sortNumber",["loc",[null,[262,23],[262,44]]]]],locals:[],templates:[]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":254,"column":16},"end":{"line":266,"column":16}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                  ");dom.appendChild(el0,el1);var el1=dom.createElement("div");dom.setAttribute(el1,"style","float:right;");var el2=dom.createTextNode("\n");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("                  ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(dom.childAt(fragment,[1]),1,1);return morphs;},statements:[["block","if",[["get","column.sortAscending",["loc",[null,[256,26],[256,46]]]]],[],0,1,["loc",[null,[256,20],[264,27]]]]],locals:[],templates:[child0,child1]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":244,"column":10},"end":{"line":269,"column":10}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("            ");dom.appendChild(el0,el1);var el1=dom.createElement("th");dom.setAttribute(el1,"class","dt-head-left me class");var el2=dom.createTextNode("\n              ");dom.appendChild(el1,el2);var el2=dom.createElement("div");var el3=dom.createTextNode("\n                ");dom.appendChild(el2,el3);var el3=dom.createElement("span");var el4=dom.createTextNode("\n");dom.appendChild(el3,el4);var el4=dom.createComment("");dom.appendChild(el3,el4);var el4=dom.createTextNode("                ");dom.appendChild(el3,el4);dom.appendChild(el2,el3);var el3=dom.createTextNode("\n");dom.appendChild(el2,el3);var el3=dom.createComment("");dom.appendChild(el2,el3);var el3=dom.createTextNode("              ");dom.appendChild(el2,el3);dom.appendChild(el1,el2);var el2=dom.createTextNode("\n            ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element27=dom.childAt(fragment,[1]);var element28=dom.childAt(element27,[1]);var morphs=new Array(5);morphs[0] = dom.createAttrMorph(element27,'onclick');morphs[1] = dom.createAttrMorph(element28,'data-olv-header-property-name');morphs[2] = dom.createAttrMorph(element28,'title');morphs[3] = dom.createMorphAt(dom.childAt(element28,[1]),1,1);morphs[4] = dom.createMorphAt(element28,3,3);return morphs;},statements:[["attribute","onclick",["subexpr","action",["headerCellClick",["get","column",["loc",[null,[245,82],[245,88]]]]],[],["loc",[null,[245,54],[245,91]]]]],["attribute","data-olv-header-property-name",["get","column.propName",["loc",[null,[246,51],[246,66]]]]],["attribute","title",["get","sortTitleCompute",["loc",[null,[246,77],[246,93]]]]],["block","if",[["get","column.keyLocale",["loc",[null,[248,22],[248,38]]]]],[],0,1,["loc",[null,[248,16],[252,23]]]],["block","if",[["get","column.sorted",["loc",[null,[254,22],[254,35]]]]],[],2,null,["loc",[null,[254,16],[266,23]]]]],locals:[],templates:[child0,child1,child2]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":243,"column":8},"end":{"line":270,"column":8}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:1,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createComment("");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);dom.insertBoundary(fragment,0);dom.insertBoundary(fragment,null);return morphs;},statements:[["block","unless",[["get","column.hide",["loc",[null,[244,20],[244,31]]]]],[],0,null,["loc",[null,[244,10],[269,21]]]]],locals:["column"],templates:[child0]};})();var child11=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":271,"column":8},"end":{"line":273,"column":8}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("          ");dom.appendChild(el0,el1);var el1=dom.createElement("th");dom.setAttribute(el1,"class","object-list-view-menu collapsing");dom.setAttribute(el1,"data-olv-header-property-name","OlvRowMenu");dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(){return [];},statements:[],locals:[],templates:[]};})();var child12=(function(){var child0=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":279,"column":10},"end":{"line":281,"column":10}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("            ");dom.appendChild(el0,el1);var el1=dom.createElement("td");dom.setAttribute(el1,"rowspan","1");dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(){return [];},statements:[],locals:[],templates:[]};})();var child1=(function(){var child0=(function(){var child0=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":285,"column":16},"end":{"line":295,"column":16}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                  ");dom.appendChild(el0,el1);var el1=dom.createComment("");dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);return morphs;},statements:[["inline","flexberry-dropdown",[],["value",["subexpr","@mut",[["get","column.filter.condition",["loc",[null,[287,26],[287,49]]]]],[],[]],"items",["subexpr","@mut",[["get","column.filter.conditions",["loc",[null,[288,26],[288,50]]]]],[],[]],"displayCaptions",["subexpr","not",[["subexpr","is-array",[["get","column.filter.conditions",["loc",[null,[289,51],[289,75]]]]],[],["loc",[null,[289,41],[289,76]]]]],[],["loc",[null,[289,36],[289,77]]]],"class","compact fluid","placeholder",["subexpr","t",["components.object-list-view.filter-condition"],[],["loc",[null,[291,32],[291,82]]]],"needChecksOnValue",false,"onChange",["subexpr","action",["filterConditionChanged",["get","column.filter",["loc",[null,[293,62],[293,75]]]]],[],["loc",[null,[293,29],[293,76]]]]],["loc",[null,[286,18],[294,20]]]]],locals:[],templates:[]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":283,"column":12},"end":{"line":297,"column":12}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("              ");dom.appendChild(el0,el1);var el1=dom.createElement("td");dom.setAttribute(el1,"class","overflowed-cell");var el2=dom.createTextNode("\n");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("              ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element22=dom.childAt(fragment,[1]);var morphs=new Array(2);morphs[0] = dom.createAttrMorph(element22,'style');morphs[1] = dom.createMorphAt(element22,1,1);return morphs;},statements:[["attribute","style",["get","defaultPaddingStyle",["loc",[null,[284,26],[284,45]]]]],["block","if",[["get","column.filter.conditions",["loc",[null,[285,22],[285,46]]]]],[],0,null,["loc",[null,[285,16],[295,23]]]]],locals:[],templates:[child0]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":282,"column":10},"end":{"line":298,"column":10}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:1,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createComment("");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);dom.insertBoundary(fragment,0);dom.insertBoundary(fragment,null);return morphs;},statements:[["block","unless",[["get","column.hide",["loc",[null,[283,22],[283,33]]]]],[],0,null,["loc",[null,[283,12],[297,23]]]]],locals:["column"],templates:[child0]};})();var child2=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":299,"column":10},"end":{"line":301,"column":10}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("            ");dom.appendChild(el0,el1);var el1=dom.createElement("td");dom.setAttribute(el1,"rowspan","1");dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(){return [];},statements:[],locals:[],templates:[]};})();var child3=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":304,"column":10},"end":{"line":306,"column":10}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("            ");dom.appendChild(el0,el1);var el1=dom.createElement("td");dom.setAttribute(el1,"rowspan","1");dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(){return [];},statements:[],locals:[],templates:[]};})();var child4=(function(){var child0=(function(){var child0=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":310,"column":16},"end":{"line":329,"column":16}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                  ");dom.appendChild(el0,el1);var el1=dom.createElement("div");dom.setAttribute(el1,"class","fluid action input ui");var el2=dom.createTextNode("\n                    ");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n                    ");dom.appendChild(el1,el2);var el2=dom.createElement("button");dom.setAttribute(el2,"type","button");dom.setAttribute(el2,"class","ui clear-filter button");var el3=dom.createTextNode("\n                      ");dom.appendChild(el2,el3);var el3=dom.createElement("i");dom.setAttribute(el3,"class","remove icon");dom.appendChild(el2,el3);var el3=dom.createTextNode("\n                    ");dom.appendChild(el2,el3);dom.appendChild(el1,el2);var el2=dom.createTextNode("\n                  ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element19=dom.childAt(fragment,[1]);var element20=dom.childAt(element19,[3]);var morphs=new Array(3);morphs[0] = dom.createMorphAt(element19,1,1);morphs[1] = dom.createAttrMorph(element20,'title');morphs[2] = dom.createElementMorph(element20);return morphs;},statements:[["inline","component",[["get","column.filter.component.name",["loc",[null,[312,32],[312,60]]]]],["value",["subexpr","@mut",[["get","column.filter.pattern",["loc",[null,[313,28],[313,49]]]]],[],[]],"readonly",["subexpr","or",[["subexpr","eq",[["get","column.filter.condition",["loc",[null,[315,28],[315,51]]]],"empty"],[],["loc",[null,[315,24],[315,60]]]],["subexpr","eq",[["get","column.filter.condition",["loc",[null,[316,28],[316,51]]]],"nempty"],[],["loc",[null,[316,24],[316,61]]]]],[],["loc",[null,[314,31],[317,23]]]],"dynamicProperties",["subexpr","@mut",[["get","column.filter.component.properties",["loc",[null,[318,40],[318,74]]]]],[],[]]],["loc",[null,[312,20],[319,22]]]],["attribute","title",["subexpr","t",["components.object-list-view.clear-filter-in-column"],[],["loc",[null,[323,28],[323,86]]]]],["element","action",["clearFilterForColumn",["get","column.filter",["loc",[null,[324,54],[324,67]]]]],[],["loc",[null,[324,22],[324,69]]]]],locals:[],templates:[]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":308,"column":12},"end":{"line":331,"column":12}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("              ");dom.appendChild(el0,el1);var el1=dom.createElement("td");var el2=dom.createTextNode("\n");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("              ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element21=dom.childAt(fragment,[1]);var morphs=new Array(3);morphs[0] = dom.createAttrMorph(element21,'style');morphs[1] = dom.createAttrMorph(element21,'class');morphs[2] = dom.createMorphAt(element21,1,1);return morphs;},statements:[["attribute","style",["get","defaultPaddingStyle",["loc",[null,[309,26],[309,45]]]]],["attribute","class",["concat",[["subexpr","if",[["subexpr","array-contains",[["get","overflowedComponents",["loc",[null,[309,76],[309,96]]]],["get","column.filter.component.name",["loc",[null,[309,97],[309,125]]]]],[],["loc",[null,[309,60],[309,126]]]],"overflowed-cell"],[],["loc",[null,[309,55],[309,146]]]]]]],["block","if",[["get","column.filter.component.name",["loc",[null,[310,22],[310,50]]]]],[],0,null,["loc",[null,[310,16],[329,23]]]]],locals:[],templates:[child0]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":307,"column":10},"end":{"line":332,"column":10}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:1,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createComment("");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);dom.insertBoundary(fragment,0);dom.insertBoundary(fragment,null);return morphs;},statements:[["block","unless",[["get","column.hide",["loc",[null,[308,22],[308,33]]]]],[],0,null,["loc",[null,[308,12],[331,23]]]]],locals:["column"],templates:[child0]};})();var child5=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":333,"column":10},"end":{"line":335,"column":10}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("            ");dom.appendChild(el0,el1);var el1=dom.createElement("td");dom.setAttribute(el1,"rowspan","1");dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(){return [];},statements:[],locals:[],templates:[]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":277,"column":6},"end":{"line":337,"column":6}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("        ");dom.appendChild(el0,el1);var el1=dom.createElement("tr");dom.setAttribute(el1,"class","object-list-view-filters");var el2=dom.createTextNode("\n");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("        ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n        ");dom.appendChild(el0,el1);var el1=dom.createElement("tr");dom.setAttribute(el1,"class","object-list-view-filters");var el2=dom.createTextNode("\n");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("        ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element23=dom.childAt(fragment,[1]);var element24=dom.childAt(fragment,[3]);var morphs=new Array(7);morphs[0] = dom.createMorphAt(element23,1,1);morphs[1] = dom.createMorphAt(element23,2,2);morphs[2] = dom.createMorphAt(element23,3,3);morphs[3] = dom.createAttrMorph(element24,'onkeydown');morphs[4] = dom.createMorphAt(element24,1,1);morphs[5] = dom.createMorphAt(element24,2,2);morphs[6] = dom.createMorphAt(element24,3,3);return morphs;},statements:[["block","if",[["get","showHelperColumn",["loc",[null,[279,16],[279,32]]]]],[],0,null,["loc",[null,[279,10],[281,17]]]],["block","each",[["get","columns",["loc",[null,[282,18],[282,25]]]]],[],1,null,["loc",[null,[282,10],[298,19]]]],["block","if",[["get","showMenuColumn",["loc",[null,[299,16],[299,30]]]]],[],2,null,["loc",[null,[299,10],[301,17]]]],["attribute","onkeydown",["subexpr","action",["applyFiltersByEnter"],[],["loc",[null,[303,55],[303,87]]]]],["block","if",[["get","showHelperColumn",["loc",[null,[304,16],[304,32]]]]],[],3,null,["loc",[null,[304,10],[306,17]]]],["block","each",[["get","columns",["loc",[null,[307,18],[307,25]]]]],[],4,null,["loc",[null,[307,10],[332,19]]]],["block","if",[["get","showMenuColumn",["loc",[null,[333,16],[333,30]]]]],[],5,null,["loc",[null,[333,10],[335,17]]]]],locals:[],templates:[child0,child1,child2,child3,child4,child5]};})();var child13=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":338,"column":6},"end":{"line":344,"column":6}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("        ");dom.appendChild(el0,el1);var el1=dom.createElement("tr");var el2=dom.createTextNode("\n          ");dom.appendChild(el1,el2);var el2=dom.createElement("td");dom.setAttribute(el2,"style","text-align:center;");var el3=dom.createTextNode("\n              ");dom.appendChild(el2,el3);var el3=dom.createComment("");dom.appendChild(el2,el3);var el3=dom.createTextNode("\n          ");dom.appendChild(el2,el3);dom.appendChild(el1,el2);var el2=dom.createTextNode("\n        ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element18=dom.childAt(fragment,[1,1]);var morphs=new Array(2);morphs[0] = dom.createAttrMorph(element18,'colspan');morphs[1] = dom.createMorphAt(element18,1,1);return morphs;},statements:[["attribute","colspan",["concat",[["get","colspan",["loc",[null,[340,25],[340,32]]]]]]],["content","placeholder",["loc",[null,[341,14],[341,29]]]]],locals:[],templates:[]};})();var child14=(function(){var child0=(function(){var child0=(function(){var child0=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":351,"column":20},"end":{"line":355,"column":20}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                      ");dom.appendChild(el0,el1);var el1=dom.createElement("div");dom.setAttribute(el1,"class","cell");var el2=dom.createTextNode("\n                        ");dom.appendChild(el1,el2);var el2=dom.createElement("i");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n                      ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element14=dom.childAt(fragment,[1,1]);var morphs=new Array(1);morphs[0] = dom.createAttrMorph(element14,'class');return morphs;},statements:[["attribute","class",["concat",["asterisk small red icon ",["subexpr","unless",[["get","record.data.hasDirtyAttributes",["loc",[null,[353,67],[353,97]]]],"transparent"],[],["loc",[null,[353,58],[353,113]]]]]]]],locals:[],templates:[]};})();var child1=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":356,"column":20},"end":{"line":364,"column":20}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                      ");dom.appendChild(el0,el1);var el1=dom.createElement("div");dom.setAttribute(el1,"class","cell");var el2=dom.createTextNode("\n                        ");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n                      ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(dom.childAt(fragment,[1]),1,1);return morphs;},statements:[["inline","flexberry-checkbox",[],["readonly",["subexpr","or",[["get","readonly",["loc",[null,[359,39],[359,47]]]],["subexpr","not",[["get","record.rowConfig.canBeSelected",["loc",[null,[359,53],[359,83]]]]],[],["loc",[null,[359,48],[359,84]]]],["get","allSelect",["loc",[null,[359,85],[359,94]]]]],[],["loc",[null,[359,35],[359,95]]]],"onChange",["subexpr","action",["selectRow",["get","record",["loc",[null,[360,55],[360,61]]]]],[],["loc",[null,[360,35],[360,62]]]],"value",["subexpr","@mut",[["get","record.selected",["loc",[null,[361,32],[361,47]]]]],[],[]]],["loc",[null,[358,24],[362,26]]]]],locals:[],templates:[]};})();var child2=(function(){var child0=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":367,"column":24},"end":{"line":376,"column":24}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                          ");dom.appendChild(el0,el1);var el1=dom.createElement("button");dom.setAttribute(el1,"type","button");dom.setAttribute(el1,"disabled","disabled");var el2=dom.createTextNode("\n                            ");dom.appendChild(el1,el2);var el2=dom.createElement("i");dom.setAttribute(el2,"class","minus icon");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n                          ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element13=dom.childAt(fragment,[1]);var morphs=new Array(3);morphs[0] = dom.createAttrMorph(element13,'class');morphs[1] = dom.createAttrMorph(element13,'title');morphs[2] = dom.createElementMorph(element13);return morphs;},statements:[["attribute","class",["concat",["ui ui-delete object-list-view-row-delete-button ",["get","buttonClass",["loc",[null,[370,85],[370,96]]]]," disabled button"]]],["attribute","title",["subexpr","t",["components.object-list-view.menu-in-row.delete-menu-item-title"],[],["loc",[null,[371,34],[371,104]]]]],["element","action",["deleteRow",["get","record",["loc",[null,[373,49],[373,55]]]]],[],["loc",[null,[373,28],[373,57]]]]],locals:[],templates:[]};})();var child1=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":376,"column":24},"end":{"line":384,"column":24}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                          ");dom.appendChild(el0,el1);var el1=dom.createElement("button");dom.setAttribute(el1,"type","button");var el2=dom.createTextNode("\n                            ");dom.appendChild(el1,el2);var el2=dom.createElement("i");dom.setAttribute(el2,"class","minus icon");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n                          ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element12=dom.childAt(fragment,[1]);var morphs=new Array(3);morphs[0] = dom.createAttrMorph(element12,'class');morphs[1] = dom.createAttrMorph(element12,'title');morphs[2] = dom.createElementMorph(element12);return morphs;},statements:[["attribute","class",["concat",["ui ui-delete object-list-view-row-delete-button ",["get","buttonClass",["loc",[null,[379,85],[379,96]]]]," button"]]],["attribute","title",["subexpr","t",["components.object-list-view.menu-in-row.delete-menu-item-title"],[],["loc",[null,[380,34],[380,104]]]]],["element","action",["deleteRow",["get","record",["loc",[null,[381,49],[381,55]]]]],[],["loc",[null,[381,28],[381,57]]]]],locals:[],templates:[]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":365,"column":20},"end":{"line":386,"column":20}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                      ");dom.appendChild(el0,el1);var el1=dom.createElement("div");dom.setAttribute(el1,"class","cell");var el2=dom.createTextNode("\n");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("                      ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(dom.childAt(fragment,[1]),1,1);return morphs;},statements:[["block","if",[["subexpr","or",[["get","readonly",["loc",[null,[367,34],[367,42]]]],["subexpr","not",[["get","record.rowConfig.canBeDeleted",["loc",[null,[367,48],[367,77]]]]],[],["loc",[null,[367,43],[367,78]]]]],[],["loc",[null,[367,30],[367,79]]]]],[],0,1,["loc",[null,[367,24],[384,31]]]]],locals:[],templates:[child0,child1]};})();var child3=(function(){var child0=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":389,"column":24},"end":{"line":398,"column":24}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                          ");dom.appendChild(el0,el1);var el1=dom.createElement("button");dom.setAttribute(el1,"type","button");dom.setAttribute(el1,"disabled","disabled");var el2=dom.createTextNode("\n                            ");dom.appendChild(el1,el2);var el2=dom.createElement("i");dom.setAttribute(el2,"class","edit icon");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n                          ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element11=dom.childAt(fragment,[1]);var morphs=new Array(3);morphs[0] = dom.createAttrMorph(element11,'class');morphs[1] = dom.createAttrMorph(element11,'title');morphs[2] = dom.createElementMorph(element11);return morphs;},statements:[["attribute","class",["concat",["ui ui-edit object-list-view-row-edit-button ",["get","buttonClass",["loc",[null,[392,81],[392,92]]]]," disabled button"]]],["attribute","title",["subexpr","t",["components.object-list-view.menu-in-row.edit-menu-item-title"],[],["loc",[null,[393,34],[393,102]]]]],["element","action",["objectListViewRowClick",["get","record",["loc",[null,[395,62],[395,68]]]],["subexpr","hash",[],["column",null,"columnIndex",null,"rowEdit",true],["loc",[null,[395,69],[395,117]]]]],[],["loc",[null,[395,28],[395,119]]]]],locals:[],templates:[]};})();var child1=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":398,"column":24},"end":{"line":406,"column":24}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                          ");dom.appendChild(el0,el1);var el1=dom.createElement("button");dom.setAttribute(el1,"type","button");var el2=dom.createTextNode("\n                            ");dom.appendChild(el1,el2);var el2=dom.createElement("i");dom.setAttribute(el2,"class","edit icon");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n                          ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element10=dom.childAt(fragment,[1]);var morphs=new Array(3);morphs[0] = dom.createAttrMorph(element10,'class');morphs[1] = dom.createAttrMorph(element10,'title');morphs[2] = dom.createElementMorph(element10);return morphs;},statements:[["attribute","class",["concat",["ui ui-edit object-list-view-row-edit-button ",["get","buttonClass",["loc",[null,[401,81],[401,92]]]]," button"]]],["attribute","title",["subexpr","t",["components.object-list-view.menu-in-row.edit-menu-item-title"],[],["loc",[null,[402,34],[402,102]]]]],["element","action",["objectListViewRowClick",["get","record",["loc",[null,[403,62],[403,68]]]],["subexpr","hash",[],["column",null,"columnIndex",null,"rowEdit",true],["loc",[null,[403,69],[403,117]]]]],[],["loc",[null,[403,28],[403,119]]]]],locals:[],templates:[]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":387,"column":20},"end":{"line":408,"column":20}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                      ");dom.appendChild(el0,el1);var el1=dom.createElement("div");dom.setAttribute(el1,"class","cell");var el2=dom.createTextNode("\n");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("                      ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(dom.childAt(fragment,[1]),1,1);return morphs;},statements:[["block","if",[["get","readonly",["loc",[null,[389,30],[389,38]]]]],[],0,1,["loc",[null,[389,24],[406,31]]]]],locals:[],templates:[child0,child1]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":349,"column":16},"end":{"line":410,"column":16}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                  ");dom.appendChild(el0,el1);var el1=dom.createElement("div");dom.setAttribute(el1,"class","object-list-view-helper-column-cell");var el2=dom.createTextNode("\n");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("                  ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element15=dom.childAt(fragment,[1]);var morphs=new Array(4);morphs[0] = dom.createMorphAt(element15,1,1);morphs[1] = dom.createMorphAt(element15,2,2);morphs[2] = dom.createMorphAt(element15,3,3);morphs[3] = dom.createMorphAt(element15,4,4);return morphs;},statements:[["block","if",[["get","showAsteriskInRow",["loc",[null,[351,26],[351,43]]]]],[],0,null,["loc",[null,[351,20],[355,27]]]],["block","if",[["get","showCheckBoxInRow",["loc",[null,[356,26],[356,43]]]]],[],1,null,["loc",[null,[356,20],[364,27]]]],["block","if",[["get","showDeleteButtonInRow",["loc",[null,[365,26],[365,47]]]]],[],2,null,["loc",[null,[365,20],[386,27]]]],["block","if",[["get","showEditButtonInRow",["loc",[null,[387,26],[387,45]]]]],[],3,null,["loc",[null,[387,20],[408,27]]]]],locals:[],templates:[child0,child1,child2,child3]};})();var child1=(function(){var child0=(function(){var child0=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":416,"column":20},"end":{"line":424,"column":20}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                      ");dom.appendChild(el0,el1);var el1=dom.createComment("");dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);return morphs;},statements:[["inline","component",[["get","column.cellComponent.componentName",["loc",[null,[417,34],[417,68]]]]],["dynamicProperties",["subexpr","@mut",[["get","column.cellComponent.componentProperties",["loc",[null,[418,42],[418,82]]]]],[],[]],"relatedModel",["subexpr","@mut",[["get","record.data",["loc",[null,[419,37],[419,48]]]]],[],[]],"value",["subexpr","mut",[["subexpr","get",[["get","record.data",["loc",[null,[420,40],[420,51]]]],["get","column.propName",["loc",[null,[420,52],[420,67]]]]],[],["loc",[null,[420,35],[420,68]]]]],[],["loc",[null,[420,30],[420,69]]]],"readonly",["subexpr","readonly-cell",[["get","record.rowConfig.readonlyColumns",["loc",[null,[421,48],[421,80]]]],["get","column.propName",["loc",[null,[421,81],[421,96]]]],["get","readonly",["loc",[null,[421,97],[421,105]]]],["get","column.cellComponent.componentProperties.readonly",["loc",[null,[421,106],[421,155]]]]],[],["loc",[null,[421,33],[421,156]]]],"required",["subexpr","@mut",[["get","required",["loc",[null,[422,33],[422,41]]]]],[],[]]],["loc",[null,[417,22],[423,24]]]]],locals:[],templates:[]};})();var child1=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":424,"column":20},"end":{"line":431,"column":20}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                      ");dom.appendChild(el0,el1);var el1=dom.createElement("div");dom.setAttribute(el1,"class","oveflow-text");var el2=dom.createTextNode("\n                        ");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n                      ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(dom.childAt(fragment,[1]),1,1);return morphs;},statements:[["inline","get-formatted",[["get","record.data",["loc",[null,[426,40],[426,51]]]],["get","column.propName",["loc",[null,[426,52],[426,67]]]]],["dateFormat",["subexpr","@mut",[["get","dateFormat",["loc",[null,[427,37],[427,47]]]]],[],[]],"moment",["subexpr","@mut",[["get","moment",["loc",[null,[428,33],[428,39]]]]],[],[]]],["loc",[null,[426,24],[429,26]]]]],locals:[],templates:[]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":413,"column":16},"end":{"line":433,"column":16}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                  ");dom.appendChild(el0,el1);var el1=dom.createElement("td");var el2=dom.createTextNode("\n");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("                  ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element9=dom.childAt(fragment,[1]);var morphs=new Array(4);morphs[0] = dom.createAttrMorph(element9,'class');morphs[1] = dom.createAttrMorph(element9,'style');morphs[2] = dom.createElementMorph(element9);morphs[3] = dom.createMorphAt(element9,1,1);return morphs;},statements:[["attribute","class",["concat",[["subexpr","if",[["subexpr","array-contains",[["get","overflowedComponents",["loc",[null,[414,50],[414,70]]]],["get","column.cellComponent.componentName",["loc",[null,[414,71],[414,105]]]]],[],["loc",[null,[414,34],[414,106]]]]," overflowed-cell"],[],["loc",[null,[414,29],[414,127]]]]]]],["attribute","style",["get","defaultPaddingStyle",["loc",[null,[415,92],[415,111]]]]],["element","action",["objectListViewRowClick",["get","record",["loc",[null,[415,54],[415,60]]]]],["preventDefault",false],["loc",[null,[415,20],[415,83]]]],["block","if",[["get","column.cellComponent.componentName",["loc",[null,[416,26],[416,60]]]]],[],0,1,["loc",[null,[416,20],[431,27]]]]],locals:[],templates:[child0,child1]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":412,"column":14},"end":{"line":434,"column":14}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:1,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createComment("");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);dom.insertBoundary(fragment,0);dom.insertBoundary(fragment,null);return morphs;},statements:[["block","unless",[["get","column.hide",["loc",[null,[413,26],[413,37]]]]],[],0,null,["loc",[null,[413,16],[433,27]]]]],locals:["column"],templates:[child0]};})();var child2=(function(){var child0=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":440,"column":22},"end":{"line":445,"column":22}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                        ");dom.appendChild(el0,el1);var el1=dom.createElement("div");var el2=dom.createTextNode("\n                          ");dom.appendChild(el1,el2);var el2=dom.createElement("i");dom.setAttribute(el2,"class","edit icon");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n                          ");dom.appendChild(el1,el2);var el2=dom.createElement("span");var el3=dom.createComment("");dom.appendChild(el2,el3);dom.appendChild(el1,el2);var el2=dom.createTextNode("\n                        ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element6=dom.childAt(fragment,[1]);var morphs=new Array(3);morphs[0] = dom.createAttrMorph(element6,'class');morphs[1] = dom.createElementMorph(element6);morphs[2] = dom.createMorphAt(dom.childAt(element6,[3]),0,0);return morphs;},statements:[["attribute","class",["concat",["item ",["subexpr","if",[["get","readonly",["loc",[null,[441,46],[441,54]]]],"disabled"],[],["loc",[null,[441,41],[441,67]]]]]]],["element","action",["objectListViewRowClick",["get","record",["loc",[null,[441,104],[441,110]]]],["subexpr","hash",[],["rowEdit",true],["loc",[null,[441,111],[441,130]]]]],[],["loc",[null,[441,69],[441,133]]]],["inline","t",["components.object-list-view.menu-in-row.edit-menu-item-title"],[],["loc",[null,[443,32],[443,100]]]]],locals:[],templates:[]};})();var child1=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":446,"column":22},"end":{"line":451,"column":22}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                        ");dom.appendChild(el0,el1);var el1=dom.createElement("div");var el2=dom.createTextNode("\n                          ");dom.appendChild(el1,el2);var el2=dom.createElement("i");dom.setAttribute(el2,"class","trash icon");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n                          ");dom.appendChild(el1,el2);var el2=dom.createElement("span");var el3=dom.createComment("");dom.appendChild(el2,el3);dom.appendChild(el1,el2);var el2=dom.createTextNode("\n                        ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element5=dom.childAt(fragment,[1]);var morphs=new Array(3);morphs[0] = dom.createAttrMorph(element5,'class');morphs[1] = dom.createElementMorph(element5);morphs[2] = dom.createMorphAt(dom.childAt(element5,[3]),0,0);return morphs;},statements:[["attribute","class",["concat",["item ",["subexpr","if",[["get","readonly",["loc",[null,[447,46],[447,54]]]],"disabled"],[],["loc",[null,[447,41],[447,67]]]]]]],["element","action",["deleteRow",["get","record",["loc",[null,[447,91],[447,97]]]]],[],["loc",[null,[447,69],[447,100]]]],["inline","t",["components.object-list-view.menu-in-row.delete-menu-item-title"],[],["loc",[null,[449,32],[449,102]]]]],locals:[],templates:[]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":435,"column":14},"end":{"line":455,"column":14}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                ");dom.appendChild(el0,el1);var el1=dom.createElement("td");dom.setAttribute(el1,"class","object-list-view-menu");var el2=dom.createTextNode("\n                  ");dom.appendChild(el1,el2);var el2=dom.createElement("div");dom.setAttribute(el2,"class","right pointing ui icon dropdown button");var el3=dom.createTextNode("\n                    ");dom.appendChild(el2,el3);var el3=dom.createElement("i");dom.setAttribute(el3,"class","list layout icon");dom.appendChild(el2,el3);var el3=dom.createTextNode("\n                    ");dom.appendChild(el2,el3);var el3=dom.createElement("div");dom.setAttribute(el3,"class","left menu");var el4=dom.createTextNode("\n");dom.appendChild(el3,el4);var el4=dom.createComment("");dom.appendChild(el3,el4);var el4=dom.createComment("");dom.appendChild(el3,el4);var el4=dom.createTextNode("                    ");dom.appendChild(el3,el4);dom.appendChild(el2,el3);var el3=dom.createTextNode("\n                  ");dom.appendChild(el2,el3);dom.appendChild(el1,el2);var el2=dom.createTextNode("\n                ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element7=dom.childAt(fragment,[1]);var element8=dom.childAt(element7,[1,3]);var morphs=new Array(3);morphs[0] = dom.createAttrMorph(element7,'style');morphs[1] = dom.createMorphAt(element8,1,1);morphs[2] = dom.createMorphAt(element8,2,2);return morphs;},statements:[["attribute","style",["get","defaultPaddingStyle",["loc",[null,[436,58],[436,77]]]]],["block","if",[["subexpr","and",[["get","showEditMenuItemInRow",["loc",[null,[440,33],[440,54]]]],["get","record.rowConfig.canBeSelected",["loc",[null,[440,55],[440,85]]]]],[],["loc",[null,[440,28],[440,86]]]]],[],0,null,["loc",[null,[440,22],[445,29]]]],["block","if",[["subexpr","and",[["get","showDeleteMenuItemInRow",["loc",[null,[446,33],[446,56]]]],["get","record.rowConfig.canBeDeleted",["loc",[null,[446,57],[446,86]]]]],[],["loc",[null,[446,28],[446,87]]]]],[],1,null,["loc",[null,[446,22],[451,29]]]]],locals:[],templates:[child0,child1]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":345,"column":8},"end":{"line":457,"column":8}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:1,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("            ");dom.appendChild(el0,el1);var el1=dom.createElement("tr");var el2=dom.createTextNode("\n              ");dom.appendChild(el1,el2);var el2=dom.createElement("td");var el3=dom.createTextNode("\n                ");dom.appendChild(el2,el3);var el3=dom.createElement("div");dom.setAttribute(el3,"class","hidden");var el4=dom.createComment("");dom.appendChild(el3,el4);dom.appendChild(el2,el3);var el3=dom.createTextNode("\n");dom.appendChild(el2,el3);var el3=dom.createComment("");dom.appendChild(el2,el3);var el3=dom.createTextNode("              ");dom.appendChild(el2,el3);dom.appendChild(el1,el2);var el2=dom.createTextNode("\n");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("            ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element16=dom.childAt(fragment,[1]);var element17=dom.childAt(element16,[1]);var morphs=new Array(7);morphs[0] = dom.createAttrMorph(element16,'class');morphs[1] = dom.createAttrMorph(element17,'class');morphs[2] = dom.createAttrMorph(element17,'style');morphs[3] = dom.createMorphAt(dom.childAt(element17,[1]),0,0);morphs[4] = dom.createMorphAt(element17,3,3);morphs[5] = dom.createMorphAt(element16,3,3);morphs[6] = dom.createMorphAt(element16,4,4);return morphs;},statements:[["attribute","class",["concat",[["get","record.rowConfig.customClass",["loc",[null,[346,25],[346,53]]]]]]],["attribute","class",["concat",["object-list-view-helper-column ",["subexpr","unless",[["get","showHelperColumn",["loc",[null,[347,65],[347,81]]]],"hidden"],[],["loc",[null,[347,56],[347,92]]]]]]],["attribute","style",["get","defaultPaddingStyle",["loc",[null,[347,102],[347,121]]]]],["content","record.key",["loc",[null,[348,36],[348,50]]]],["block","if",[["get","showHelperColumn",["loc",[null,[349,22],[349,38]]]]],[],0,null,["loc",[null,[349,16],[410,23]]]],["block","each",[["get","columns",["loc",[null,[412,22],[412,29]]]]],[],1,null,["loc",[null,[412,14],[434,23]]]],["block","if",[["get","showMenuColumn",["loc",[null,[435,20],[435,34]]]]],[],2,null,["loc",[null,[435,14],[455,21]]]]],locals:["record"],templates:[child0,child1,child2]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":344,"column":6},"end":{"line":458,"column":6}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createComment("");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);dom.insertBoundary(fragment,0);dom.insertBoundary(fragment,null);return morphs;},statements:[["block","each",[["get","contentWithKeys",["loc",[null,[345,16],[345,31]]]]],["key","key"],0,null,["loc",[null,[345,8],[457,17]]]]],locals:[],templates:[child0]};})();var child15=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":464,"column":4},"end":{"line":467,"column":4}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("      ");dom.appendChild(el0,el1);var el1=dom.createElement("button");dom.setAttribute(el1,"type","button");dom.setAttribute(el1,"class","ui button prev-page-button");var el2=dom.createTextNode("\n      ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element4=dom.childAt(fragment,[1]);var morphs=new Array(1);morphs[0] = dom.createElementMorph(element4);return morphs;},statements:[["element","action",["previousPage",["get","this.attrs.previousPage",["loc",[null,[465,87],[465,110]]]]],[],["loc",[null,[465,63],[465,112]]]]],locals:[],templates:[]};})();var child16=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":467,"column":4},"end":{"line":470,"column":4}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("      ");dom.appendChild(el0,el1);var el1=dom.createElement("button");dom.setAttribute(el1,"type","button");dom.setAttribute(el1,"class","ui disabled button prev-page-button");dom.setAttribute(el1,"disabled","disabled");var el2=dom.createTextNode("\n      ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element3=dom.childAt(fragment,[1]);var morphs=new Array(1);morphs[0] = dom.createElementMorph(element3);return morphs;},statements:[["element","action",["previousPage",["get","this.attrs.previousPage",["loc",[null,[468,96],[468,119]]]]],[],["loc",[null,[468,72],[468,121]]]]],locals:[],templates:[]};})();var child17=(function(){var child0=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":472,"column":6},"end":{"line":474,"column":6}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("        ");dom.appendChild(el0,el1);var el1=dom.createElement("div");dom.setAttribute(el1,"class","ui button");var el2=dom.createTextNode("...");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(){return [];},statements:[],locals:[],templates:[]};})();var child1=(function(){var child0=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":475,"column":8},"end":{"line":477,"column":8}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("          ");dom.appendChild(el0,el1);var el1=dom.createElement("div");dom.setAttribute(el1,"class","ui active button");var el2=dom.createComment("");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(dom.childAt(fragment,[1]),0,0);return morphs;},statements:[["content","page.number",["loc",[null,[476,40],[476,55]]]]],locals:[],templates:[]};})();var child1=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":477,"column":8},"end":{"line":479,"column":8}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("          ");dom.appendChild(el0,el1);var el1=dom.createElement("button");dom.setAttribute(el1,"type","button");dom.setAttribute(el1,"class","ui button");var el2=dom.createComment("");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element2=dom.childAt(fragment,[1]);var morphs=new Array(2);morphs[0] = dom.createElementMorph(element2);morphs[1] = dom.createMorphAt(element2,0,0);return morphs;},statements:[["element","action",["gotoPage",["get","this.attrs.gotoPage",["loc",[null,[478,70],[478,89]]]],["get","page.number",["loc",[null,[478,90],[478,101]]]]],[],["loc",[null,[478,50],[478,103]]]],["content","page.number",["loc",[null,[478,104],[478,119]]]]],locals:[],templates:[]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":474,"column":6},"end":{"line":480,"column":6}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createComment("");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);dom.insertBoundary(fragment,0);dom.insertBoundary(fragment,null);return morphs;},statements:[["block","if",[["get","page.isCurrent",["loc",[null,[475,14],[475,28]]]]],[],0,1,["loc",[null,[475,8],[479,15]]]]],locals:[],templates:[child0,child1]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":471,"column":4},"end":{"line":481,"column":4}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:1,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createComment("");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);dom.insertBoundary(fragment,0);dom.insertBoundary(fragment,null);return morphs;},statements:[["block","if",[["get","page.isEllipsis",["loc",[null,[472,12],[472,27]]]]],[],0,1,["loc",[null,[472,6],[480,13]]]]],locals:["page"],templates:[child0,child1]};})();var child18=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":482,"column":4},"end":{"line":485,"column":4}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("      ");dom.appendChild(el0,el1);var el1=dom.createElement("button");dom.setAttribute(el1,"type","button");dom.setAttribute(el1,"class","ui button next-page-button");var el2=dom.createTextNode("\n      ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element1=dom.childAt(fragment,[1]);var morphs=new Array(1);morphs[0] = dom.createElementMorph(element1);return morphs;},statements:[["element","action",["nextPage",["get","this.attrs.nextPage",["loc",[null,[483,83],[483,102]]]]],[],["loc",[null,[483,63],[483,104]]]]],locals:[],templates:[]};})();var child19=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":485,"column":4},"end":{"line":488,"column":4}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("      ");dom.appendChild(el0,el1);var el1=dom.createElement("button");dom.setAttribute(el1,"type","button");dom.setAttribute(el1,"class","ui disabled button next-page-button");dom.setAttribute(el1,"disabled","disabled");var el2=dom.createTextNode("\n      ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element0=dom.childAt(fragment,[1]);var morphs=new Array(1);morphs[0] = dom.createElementMorph(element0);return morphs;},statements:[["element","action",["nextPage",["get","this.attrs.nextPage",["loc",[null,[486,92],[486,111]]]]],[],["loc",[null,[486,72],[486,113]]]]],locals:[],templates:[]};})();var child20=(function(){var child0=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":493,"column":8},"end":{"line":497,"column":8}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("          ");dom.appendChild(el0,el1);var el1=dom.createComment("");dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);return morphs;},statements:[["inline","concat",[["subexpr","t",["components.flexberry-objectlistview.showing-entries.showing"],[],["loc",[null,[495,12],[495,77]]]],["get","currentIntervalRecords",["loc",[null,[495,78],[495,100]]]],["subexpr","t",["components.flexberry-objectlistview.showing-entries.of"],[],["loc",[null,[495,101],[495,161]]]],["get","recordsTotalCount",["loc",[null,[495,162],[495,179]]]],["subexpr","t",["components.flexberry-objectlistview.showing-entries.entries"],[],["loc",[null,[495,180],[495,245]]]]],[],["loc",[null,[494,10],[496,12]]]]],locals:[],templates:[]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":491,"column":4},"end":{"line":499,"column":4}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("      ");dom.appendChild(el0,el1);var el1=dom.createElement("div");dom.setAttribute(el1,"class","showing-entries");var el2=dom.createTextNode("\n");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("      ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(dom.childAt(fragment,[1]),1,1);return morphs;},statements:[["block","if",[["subexpr","and",[["get","currentIntervalRecords",["loc",[null,[493,19],[493,41]]]],["get","recordsTotalCount",["loc",[null,[493,42],[493,59]]]]],[],["loc",[null,[493,14],[493,60]]]]],[],0,null,["loc",[null,[493,8],[497,15]]]]],locals:[],templates:[child0]};})();return {meta:{"fragmentReason":{"name":"missing-wrapper","problems":["multiple-nodes"]},"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":1,"column":0},"end":{"line":503,"column":0}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createElement("div");dom.setAttribute(el1,"class","ui secondary menu no-margin ");var el2=dom.createTextNode("\n");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("  ");dom.appendChild(el1,el2);var el2=dom.createElement("div");dom.setAttribute(el2,"class","olv-toolbar-info-modal-dialog ui small basic modal");var el3=dom.createTextNode("\n    ");dom.appendChild(el2,el3);var el3=dom.createElement("div");dom.setAttribute(el3,"class","ui icon header");var el4=dom.createTextNode("\n      ");dom.appendChild(el3,el4);var el4=dom.createElement("i");dom.setAttribute(el4,"class","olvt icon");dom.appendChild(el3,el4);var el4=dom.createTextNode("\n      ");dom.appendChild(el3,el4);var el4=dom.createComment("");dom.appendChild(el3,el4);var el4=dom.createTextNode("\n    ");dom.appendChild(el3,el4);dom.appendChild(el2,el3);var el3=dom.createTextNode("\n    ");dom.appendChild(el2,el3);var el3=dom.createElement("div");dom.setAttribute(el3,"class","center aligned ui grid");var el4=dom.createTextNode("\n    ");dom.appendChild(el3,el4);var el4=dom.createElement("button");dom.setAttribute(el4,"type","button");dom.setAttribute(el4,"class","ui icon button olv-toolbar-info-modal-dialog-copy-button");var el5=dom.createTextNode("\n        ");dom.appendChild(el4,el5);var el5=dom.createElement("i");dom.setAttribute(el5,"class","copy icon");dom.appendChild(el4,el5);var el5=dom.createTextNode("\n        ");dom.appendChild(el4,el5);var el5=dom.createComment("");dom.appendChild(el4,el5);var el5=dom.createTextNode("\n    ");dom.appendChild(el4,el5);dom.appendChild(el3,el4);var el4=dom.createTextNode("\n    ");dom.appendChild(el3,el4);var el4=dom.createElement("div");dom.setAttribute(el4,"class","actions");var el5=dom.createTextNode("\n      ");dom.appendChild(el4,el5);var el5=dom.createElement("div");dom.setAttribute(el5,"class","olv-toolbar-info-modal-dialog-ok-button ui approve green inverted button");var el6=dom.createTextNode("\n        ");dom.appendChild(el5,el6);var el6=dom.createElement("i");dom.setAttribute(el6,"class","remove icon");dom.appendChild(el5,el6);var el6=dom.createTextNode("\n        ");dom.appendChild(el5,el6);var el6=dom.createComment("");dom.appendChild(el5,el6);var el6=dom.createTextNode("\n      ");dom.appendChild(el5,el6);dom.appendChild(el4,el5);var el5=dom.createTextNode("\n    ");dom.appendChild(el4,el5);dom.appendChild(el3,el4);var el4=dom.createTextNode("\n    ");dom.appendChild(el3,el4);dom.appendChild(el2,el3);var el3=dom.createTextNode("\n    ");dom.appendChild(el2,el3);var el3=dom.createElement("div");dom.setAttribute(el3,"class","ui form");var el4=dom.createTextNode("\n      ");dom.appendChild(el3,el4);var el4=dom.createElement("div");dom.setAttribute(el4,"class","olv-toolbar-info-modal-dialog-content center aligned ui field");var el5=dom.createTextNode("\n        ");dom.appendChild(el4,el5);var el5=dom.createElement("textarea");dom.setAttribute(el5,"cols","80");dom.setAttribute(el5,"rows","20");var el6=dom.createComment("");dom.appendChild(el5,el6);dom.appendChild(el4,el5);var el5=dom.createTextNode("\n      ");dom.appendChild(el4,el5);dom.appendChild(el3,el4);var el4=dom.createTextNode("\n    ");dom.appendChild(el3,el4);dom.appendChild(el2,el3);var el3=dom.createTextNode("\n  ");dom.appendChild(el2,el3);dom.appendChild(el1,el2);var el2=dom.createTextNode("\n");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n\n");dom.appendChild(el0,el1);var el1=dom.createElement("div");dom.setAttribute(el1,"class","object-list-view-container");var el2=dom.createTextNode("\n  ");dom.appendChild(el1,el2);var el2=dom.createElement("table");var el3=dom.createTextNode("\n    ");dom.appendChild(el2,el3);var el3=dom.createElement("thead");var el4=dom.createTextNode("\n      ");dom.appendChild(el3,el4);var el4=dom.createElement("tr");var el5=dom.createTextNode("\n");dom.appendChild(el4,el5);var el5=dom.createComment("");dom.appendChild(el4,el5);var el5=dom.createComment("");dom.appendChild(el4,el5);var el5=dom.createComment("");dom.appendChild(el4,el5);var el5=dom.createTextNode("      ");dom.appendChild(el4,el5);dom.appendChild(el3,el4);var el4=dom.createTextNode("\n    ");dom.appendChild(el3,el4);dom.appendChild(el2,el3);var el3=dom.createTextNode("\n    ");dom.appendChild(el2,el3);var el3=dom.createElement("tbody");var el4=dom.createTextNode("\n");dom.appendChild(el3,el4);var el4=dom.createComment("");dom.appendChild(el3,el4);var el4=dom.createComment("");dom.appendChild(el3,el4);var el4=dom.createTextNode("    ");dom.appendChild(el3,el4);dom.appendChild(el2,el3);var el3=dom.createTextNode("\n  ");dom.appendChild(el2,el3);dom.appendChild(el1,el2);var el2=dom.createTextNode("\n");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);var el1=dom.createElement("div");dom.setAttribute(el1,"class","ui secondary menu no-margin nav-bar");var el2=dom.createTextNode("\n  ");dom.appendChild(el1,el2);var el2=dom.createElement("div");dom.setAttribute(el2,"class","ui basic buttons");var el3=dom.createTextNode("\n");dom.appendChild(el2,el3);var el3=dom.createComment("");dom.appendChild(el2,el3);var el3=dom.createComment("");dom.appendChild(el2,el3);var el3=dom.createComment("");dom.appendChild(el2,el3);var el3=dom.createTextNode("  ");dom.appendChild(el2,el3);dom.appendChild(el1,el2);var el2=dom.createTextNode("\n  ");dom.appendChild(el1,el2);var el2=dom.createElement("div");dom.setAttribute(el2,"class","right menu");var el3=dom.createTextNode("\n");dom.appendChild(el2,el3);var el3=dom.createComment("");dom.appendChild(el2,el3);var el3=dom.createTextNode("    ");dom.appendChild(el2,el3);var el3=dom.createComment("");dom.appendChild(el2,el3);var el3=dom.createTextNode("\n  ");dom.appendChild(el2,el3);dom.appendChild(el1,el2);var el2=dom.createTextNode("\n");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element53=dom.childAt(fragment,[0]);var element54=dom.childAt(element53,[11]);var element55=dom.childAt(element54,[3]);var element56=dom.childAt(element55,[1]);var element57=dom.childAt(fragment,[2,1]);var element58=dom.childAt(element57,[1,1]);var element59=dom.childAt(element57,[3]);var element60=dom.childAt(fragment,[4]);var element61=dom.childAt(element60,[1]);var element62=dom.childAt(element60,[3]);var morphs=new Array(26);morphs[0] = dom.createMorphAt(element53,1,1);morphs[1] = dom.createMorphAt(element53,2,2);morphs[2] = dom.createMorphAt(element53,3,3);morphs[3] = dom.createMorphAt(element53,4,4);morphs[4] = dom.createMorphAt(element53,5,5);morphs[5] = dom.createMorphAt(element53,6,6);morphs[6] = dom.createMorphAt(element53,7,7);morphs[7] = dom.createMorphAt(element53,8,8);morphs[8] = dom.createMorphAt(element53,9,9);morphs[9] = dom.createMorphAt(dom.childAt(element54,[1]),3,3);morphs[10] = dom.createAttrMorph(element56,'title');morphs[11] = dom.createElementMorph(element56);morphs[12] = dom.createMorphAt(element56,3,3);morphs[13] = dom.createMorphAt(dom.childAt(element55,[3,1]),3,3);morphs[14] = dom.createMorphAt(dom.childAt(element54,[5,1,1]),0,0);morphs[15] = dom.createAttrMorph(element57,'class');morphs[16] = dom.createMorphAt(element58,1,1);morphs[17] = dom.createMorphAt(element58,2,2);morphs[18] = dom.createMorphAt(element58,3,3);morphs[19] = dom.createMorphAt(element59,1,1);morphs[20] = dom.createMorphAt(element59,2,2);morphs[21] = dom.createMorphAt(element61,1,1);morphs[22] = dom.createMorphAt(element61,2,2);morphs[23] = dom.createMorphAt(element61,3,3);morphs[24] = dom.createMorphAt(element62,1,1);morphs[25] = dom.createMorphAt(element62,3,3);return morphs;},statements:[["block","if",[["get","refreshButton",["loc",[null,[2,8],[2,21]]]]],[],0,null,["loc",[null,[2,2],[11,9]]]],["block","if",[["get","createNewButton",["loc",[null,[12,8],[12,23]]]]],[],1,null,["loc",[null,[12,2],[31,9]]]],["block","if",[["get","deleteButton",["loc",[null,[32,8],[32,20]]]]],[],2,null,["loc",[null,[32,2],[53,9]]]],["block","if",[["get","availableHierarchicalMode",["loc",[null,[54,8],[54,33]]]]],[],3,null,["loc",[null,[54,2],[62,9]]]],["block","if",[["get","enableFilters",["loc",[null,[63,8],[63,21]]]]],[],4,null,["loc",[null,[63,2],[83,9]]]],["block","if",[["get","filterButton",["loc",[null,[84,8],[84,20]]]]],[],5,null,["loc",[null,[84,2],[109,9]]]],["block","if",[["get","exportExcelButton",["loc",[null,[110,8],[110,25]]]]],[],6,null,["loc",[null,[110,2],[124,9]]]],["block","if",[["get","colsConfigButton",["loc",[null,[125,8],[125,24]]]]],[],7,null,["loc",[null,[125,2],[141,9]]]],["block","each",[["get","customButtons",["loc",[null,[142,10],[142,23]]]]],[],8,null,["loc",[null,[142,2],[158,11]]]],["content","_infoModalDialogCaption",["loc",[null,[162,6],[162,33]]]],["attribute","title",["subexpr","t",["components.olv-toolbar.copy"],[],["loc",[null,[168,12],[168,47]]]]],["element","action",["copyJSONContent"],[],["loc",[null,[169,6],[169,34]]]],["inline","t",["components.olv-toolbar.copy"],[],["loc",[null,[171,8],[171,43]]]],["inline","t",["components.olv-toolbar.close"],[],["loc",[null,[176,8],[176,44]]]],["content","_infoModalDialogContent",["loc",[null,[182,38],[182,65]]]],["attribute","class",["concat",["object-list-view ui unstackable celled ",["subexpr","if",[["get","readonly",["loc",[null,[189,60],[189,68]]]],"readonly"],[],["loc",[null,[189,55],[189,81]]]]," ",["get","tableClass",["loc",[null,[189,84],[189,94]]]]," table"]]],["block","if",[["get","showHelperColumn",["loc",[null,[192,14],[192,30]]]]],[],9,null,["loc",[null,[192,8],[242,15]]]],["block","each",[["get","columns",["loc",[null,[243,16],[243,23]]]]],[],10,null,["loc",[null,[243,8],[270,17]]]],["block","if",[["get","showMenuColumn",["loc",[null,[271,14],[271,28]]]]],[],11,null,["loc",[null,[271,8],[273,15]]]],["block","if",[["get","showFilters",["loc",[null,[277,12],[277,23]]]]],[],12,null,["loc",[null,[277,6],[337,13]]]],["block","unless",[["get","content",["loc",[null,[338,16],[338,23]]]]],[],13,14,["loc",[null,[338,6],[458,17]]]],["block","if",[["get","hasPreviousPage",["loc",[null,[464,10],[464,25]]]]],[],15,16,["loc",[null,[464,4],[470,11]]]],["block","each",[["get","pages",["loc",[null,[471,12],[471,17]]]]],[],17,null,["loc",[null,[471,4],[481,13]]]],["block","if",[["get","hasNextPage",["loc",[null,[482,10],[482,21]]]]],[],18,19,["loc",[null,[482,4],[488,11]]]],["block","if",[["get","showShowingEntries",["loc",[null,[491,10],[491,28]]]]],[],20,null,["loc",[null,[491,4],[499,11]]]],["inline","flexberry-dropdown",[],["items",["subexpr","@mut",[["get","perPageValues",["loc",[null,[500,31],[500,44]]]]],[],[]],"value",["subexpr","@mut",[["get","perPageValue",["loc",[null,[500,51],[500,63]]]]],[],[]],"class","compact selection","onChange",["subexpr","action",["perPageClick"],[],["loc",[null,[500,99],[500,122]]]],"needChecksOnValue",false,"direction","upward"],["loc",[null,[500,4],[500,167]]]]],locals:[],templates:[child0,child1,child2,child3,child4,child5,child6,child7,child8,child9,child10,child11,child12,child13,child14,child15,child16,child17,child18,child19,child20]};})());});
define("dummy/templates/components/flexberry-tab-bar", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 6,
                "column": 4
              },
              "end": {
                "line": 8,
                "column": 4
              }
            },
            "moduleName": "dummy/templates/components/flexberry-tab-bar.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("i");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1]);
            var morphs = new Array(1);
            morphs[0] = dom.createAttrMorph(element0, 'class');
            return morphs;
          },
          statements: [["attribute", "class", ["concat", [["subexpr", "concat", [["get", "flexberryClassNames.tabIcon", ["loc", [null, [7, 25], [7, 52]]]], " ", ["get", "item.iconClass", ["loc", [null, [7, 57], [7, 71]]]]], [], ["loc", [null, [7, 16], [7, 73]]]]]]]],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 8,
                "column": 4
              },
              "end": {
                "line": 10,
                "column": 4
              }
            },
            "moduleName": "dummy/templates/components/flexberry-tab-bar.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["content", "item.caption", ["loc", [null, [9, 6], [9, 22]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": {
            "name": "modifiers",
            "modifiers": ["action"]
          },
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 12,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/flexberry-tab-bar.hbs"
        },
        isEmpty: false,
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("a");
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element1 = dom.childAt(fragment, [1]);
          var morphs = new Array(5);
          morphs[0] = dom.createAttrMorph(element1, 'class');
          morphs[1] = dom.createAttrMorph(element1, 'title');
          morphs[2] = dom.createAttrMorph(element1, 'data-tab');
          morphs[3] = dom.createElementMorph(element1);
          morphs[4] = dom.createMorphAt(element1, 1, 1);
          return morphs;
        },
        statements: [["attribute", "class", ["concat", [["subexpr", "concat", [["get", "flexberryClassNames.tab", ["loc", [null, [2, 21], [2, 44]]]], " ", "tab", " ", "item", " ", ["get", "item.class", ["loc", [null, [2, 70], [2, 80]]]]], [], ["loc", [null, [2, 12], [2, 82]]]]]]], ["attribute", "title", ["concat", [["get", "item.caption", ["loc", [null, [3, 13], [3, 25]]]]]]], ["attribute", "data-tab", ["concat", [["get", "item.selector", ["loc", [null, [4, 16], [4, 29]]]]]]], ["element", "action", ["change", ["get", "item.selector", ["loc", [null, [5, 22], [5, 35]]]]], ["on", "click"], ["loc", [null, [5, 4], [5, 48]]]], ["block", "if", [["get", "item._hasIcon", ["loc", [null, [6, 10], [6, 23]]]]], [], 0, 1, ["loc", [null, [6, 4], [10, 11]]]]],
        locals: ["item"],
        templates: [child0, child1]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 13,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/flexberry-tab-bar.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "each", [["get", "tabs", ["loc", [null, [1, 8], [1, 12]]]]], [], 0, null, ["loc", [null, [1, 0], [12, 9]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define("dummy/templates/components/flexberry-text-cell", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "triple-curlies"
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/flexberry-text-cell.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "flexberry-text-cell oveflow-text");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var morphs = new Array(3);
        morphs[0] = dom.createAttrMorph(element0, 'title');
        morphs[1] = dom.createMorphAt(element0, 0, 0);
        morphs[2] = dom.createMorphAt(element0, 1, 1);
        return morphs;
      },
      statements: [["attribute", "title", ["get", "titleValue", ["loc", [null, [1, 54], [1, 64]]]]], ["content", "yield", ["loc", [null, [1, 67], [1, 76]]]], ["content", "displayValue", ["loc", [null, [1, 76], [1, 92]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/components/flexberry-textarea", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 17,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/flexberry-textarea.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "textarea", [], ["value", ["subexpr", "@mut", [["get", "value", ["loc", [null, [2, 8], [2, 13]]]]], [], []], "readonly", ["subexpr", "if", [["get", "readonly", ["loc", [null, [3, 15], [3, 23]]]], "readonly"], [], ["loc", [null, [3, 11], [3, 35]]]], "required", ["subexpr", "if", [["get", "required", ["loc", [null, [4, 15], [4, 23]]]], "required"], [], ["loc", [null, [4, 11], [4, 35]]]], "placeholder", ["subexpr", "@mut", [["get", "placeholder", ["loc", [null, [5, 14], [5, 25]]]]], [], []], "rows", ["subexpr", "@mut", [["get", "rows", ["loc", [null, [6, 7], [6, 11]]]]], [], []], "cols", ["subexpr", "@mut", [["get", "cols", ["loc", [null, [7, 7], [7, 11]]]]], [], []], "disabled", ["subexpr", "if", [["get", "disabled", ["loc", [null, [8, 15], [8, 23]]]], "disabled"], [], ["loc", [null, [8, 11], [8, 35]]]], "maxlength", ["subexpr", "@mut", [["get", "maxlength", ["loc", [null, [9, 12], [9, 21]]]]], [], []], "selectionEnd", ["subexpr", "@mut", [["get", "selectionEnd", ["loc", [null, [10, 15], [10, 27]]]]], [], []], "selectionStart", ["subexpr", "@mut", [["get", "selectionStart", ["loc", [null, [11, 17], [11, 31]]]]], [], []], "selectionDirection", ["subexpr", "@mut", [["get", "selectionDirection", ["loc", [null, [12, 21], [12, 39]]]]], [], []], "wrap", ["subexpr", "@mut", [["get", "wrap", ["loc", [null, [13, 7], [13, 11]]]]], [], []], "autofocus", ["subexpr", "if", [["get", "autofocus", ["loc", [null, [14, 16], [14, 25]]]], "autofocus"], [], ["loc", [null, [14, 12], [14, 38]]]], "spellcheck", ["subexpr", "if", [["get", "spellcheck", ["loc", [null, [15, 17], [15, 27]]]], "spellcheck"], [], ["loc", [null, [15, 13], [15, 41]]]]], ["loc", [null, [1, 0], [16, 2]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/components/flexberry-textbox", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "fragmentReason": {
            "name": "missing-wrapper",
            "problems": ["wrong-type"]
          },
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 10,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/flexberry-textbox.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "input", [], ["type", ["subexpr", "@mut", [["get", "type", ["loc", [null, [3, 9], [3, 13]]]]], [], []], "value", ["subexpr", "get", [["get", "this", ["loc", [null, [4, 15], [4, 19]]]], "value"], [], ["loc", [null, [4, 10], [4, 28]]]], "readonly", "readonly", "required", ["subexpr", "@mut", [["get", "required", ["loc", [null, [6, 13], [6, 21]]]]], [], []], "placeholder", ["subexpr", "@mut", [["get", "placeholder", ["loc", [null, [7, 16], [7, 27]]]]], [], []], "maxlength", ["subexpr", "@mut", [["get", "maxlength", ["loc", [null, [8, 14], [8, 23]]]]], [], []]], ["loc", [null, [2, 2], [9, 4]]]]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 10,
              "column": 0
            },
            "end": {
              "line": 18,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/flexberry-textbox.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "input", [], ["type", ["subexpr", "@mut", [["get", "type", ["loc", [null, [12, 9], [12, 13]]]]], [], []], "value", ["subexpr", "@mut", [["get", "value", ["loc", [null, [13, 10], [13, 15]]]]], [], []], "required", ["subexpr", "@mut", [["get", "required", ["loc", [null, [14, 13], [14, 21]]]]], [], []], "placeholder", ["subexpr", "@mut", [["get", "placeholder", ["loc", [null, [15, 16], [15, 27]]]]], [], []], "maxlength", ["subexpr", "@mut", [["get", "maxlength", ["loc", [null, [16, 14], [16, 23]]]]], [], []]], ["loc", [null, [11, 2], [17, 4]]]]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 19,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/flexberry-textbox.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "if", [["get", "readonly", ["loc", [null, [1, 6], [1, 14]]]]], [], 0, 1, ["loc", [null, [1, 0], [18, 7]]]]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define("dummy/templates/components/flexberry-toggler", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/flexberry-toggler.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("i");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("span");
        dom.setAttribute(el2, "class", "flexberry-toggler-caption");
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var element1 = dom.childAt(element0, [1]);
        var element2 = dom.childAt(fragment, [2]);
        var morphs = new Array(5);
        morphs[0] = dom.createAttrMorph(element0, 'class');
        morphs[1] = dom.createAttrMorph(element1, 'class');
        morphs[2] = dom.createMorphAt(dom.childAt(element0, [2]), 0, 0);
        morphs[3] = dom.createAttrMorph(element2, 'class');
        morphs[4] = dom.createMorphAt(element2, 0, 0);
        return morphs;
      },
      statements: [["attribute", "class", ["concat", ["title ", ["subexpr", "if", [["get", "expanded", ["loc", [null, [1, 23], [1, 31]]]], "active"], [], ["loc", [null, [1, 18], [1, 42]]]]]]], ["attribute", "class", ["concat", [["subexpr", "if", [["get", "iconClass", ["loc", [null, [2, 17], [2, 26]]]], ["get", "iconClass", ["loc", [null, [2, 27], [2, 36]]]], "dropdown icon"], [], ["loc", [null, [2, 12], [2, 55]]]]]]], ["content", "currentCaption", ["loc", [null, [2, 101], [2, 119]]]], ["attribute", "class", ["concat", ["content flexberry-toggler-content ", ["subexpr", "if", [["get", "expanded", ["loc", [null, [4, 51], [4, 59]]]], "active"], [], ["loc", [null, [4, 46], [4, 70]]]]]]], ["content", "yield", ["loc", [null, [4, 72], [4, 81]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/components/flexberry-tree", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 8,
                "column": 2
              },
              "end": {
                "line": 12,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/components/flexberry-tree.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            var el2 = dom.createTextNode("\n      ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n    ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element2 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createAttrMorph(element2, 'class');
            morphs[1] = dom.createMorphAt(element2, 1, 1);
            return morphs;
          },
          statements: [["attribute", "class", ["concat", [["get", "flexberryClassNames.header", ["loc", [null, [9, 18], [9, 44]]]]]]], ["content", "yield", ["loc", [null, [10, 6], [10, 15]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 7,
              "column": 0
            },
            "end": {
              "line": 13,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/flexberry-tree.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "if", [["get", "_hasHeader", ["loc", [null, [8, 8], [8, 18]]]]], [], 0, null, ["loc", [null, [8, 2], [12, 9]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child1 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 15,
                "column": 2
              },
              "end": {
                "line": 22,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/components/flexberry-tree.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "flexberry-treenode", [], ["caption", ["subexpr", "@mut", [["get", "node.caption", ["loc", [null, [17, 14], [17, 26]]]]], [], []], "nodes", ["subexpr", "@mut", [["get", "node.nodes", ["loc", [null, [18, 12], [18, 22]]]]], [], []], "dynamicProperties", ["subexpr", "@mut", [["get", "node.dynamicProperties", ["loc", [null, [19, 24], [19, 46]]]]], [], []], "dynamicActions", ["subexpr", "@mut", [["get", "node.dynamicActions", ["loc", [null, [20, 21], [20, 40]]]]], [], []]], ["loc", [null, [16, 4], [21, 6]]]]],
          locals: ["node"],
          templates: []
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 23,
                "column": 2
              },
              "end": {
                "line": 25,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/components/flexberry-tree.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["content", "yield", ["loc", [null, [24, 4], [24, 13]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 14,
              "column": 0
            },
            "end": {
              "line": 26,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/flexberry-tree.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          morphs[1] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "each", [["get", "nodes", ["loc", [null, [15, 10], [15, 15]]]]], [], 0, null, ["loc", [null, [15, 2], [22, 11]]]], ["block", "yield-slot", ["content"], [], 1, null, ["loc", [null, [23, 2], [25, 17]]]]],
        locals: [],
        templates: [child0, child1]
      };
    })();
    var child2 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 26,
                "column": 0
              },
              "end": {
                "line": 30,
                "column": 0
              }
            },
            "moduleName": "dummy/templates/components/flexberry-tree.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("  ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            var el2 = dom.createTextNode("\n    ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n  ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element1 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createAttrMorph(element1, 'class');
            morphs[1] = dom.createMorphAt(element1, 1, 1);
            return morphs;
          },
          statements: [["attribute", "class", ["concat", [["get", "flexberryClassNames.placeholder", ["loc", [null, [27, 16], [27, 47]]]], " title"]]], ["content", "placeholder", ["loc", [null, [28, 4], [28, 19]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 26,
              "column": 0
            },
            "end": {
              "line": 30,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/flexberry-tree.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "if", [["get", "_isRoot", ["loc", [null, [26, 10], [26, 17]]]]], [], 0, null, ["loc", [null, [26, 0], [30, 0]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child3 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 32,
                "column": 2
              },
              "end": {
                "line": 36,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/components/flexberry-tree.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            var el2 = dom.createTextNode("\n      ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n    ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createAttrMorph(element0, 'class');
            morphs[1] = dom.createMorphAt(element0, 1, 1);
            return morphs;
          },
          statements: [["attribute", "class", ["concat", [["get", "flexberryClassNames.footer", ["loc", [null, [33, 18], [33, 44]]]]]]], ["content", "yield", ["loc", [null, [34, 6], [34, 15]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 31,
              "column": 0
            },
            "end": {
              "line": 37,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/flexberry-tree.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "if", [["get", "_hasFooter", ["loc", [null, [32, 8], [32, 18]]]]], [], 0, null, ["loc", [null, [32, 2], [36, 9]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type", "multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 38,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/flexberry-tree.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(4);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        morphs[2] = dom.createMorphAt(fragment, 3, 3, contextualElement);
        morphs[3] = dom.createMorphAt(fragment, 4, 4, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["content", "yield", ["loc", [null, [5, 0], [5, 9]]]], ["block", "yield-slot", ["header"], [], 0, null, ["loc", [null, [7, 0], [13, 15]]]], ["block", "if", [["get", "_hasContent", ["loc", [null, [14, 6], [14, 17]]]]], [], 1, 2, ["loc", [null, [14, 0], [30, 7]]]], ["block", "yield-slot", ["footer"], [], 3, null, ["loc", [null, [31, 0], [37, 15]]]]],
      locals: [],
      templates: [child0, child1, child2, child3]
    };
  })());
});
define("dummy/templates/components/flexberry-treenode", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 10,
              "column": 4
            },
            "end": {
              "line": 12,
              "column": 4
            }
          },
          "moduleName": "dummy/templates/components/flexberry-treenode.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("i");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element1 = dom.childAt(fragment, [1]);
          var morphs = new Array(1);
          morphs[0] = dom.createAttrMorph(element1, 'class');
          return morphs;
        },
        statements: [["attribute", "class", ["concat", [["get", "flexberryClassNames.expandCollapseIcon", ["loc", [null, [11, 18], [11, 56]]]], " dropdown icon"]]]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 12,
              "column": 4
            },
            "end": {
              "line": 15,
              "column": 4
            }
          },
          "moduleName": "dummy/templates/components/flexberry-treenode.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("i");
          dom.setAttribute(el1, "style", "visibility: hidden;");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var morphs = new Array(1);
          morphs[0] = dom.createAttrMorph(element0, 'class');
          return morphs;
        },
        statements: [["attribute", "class", ["concat", [["get", "flexberryClassNames.expandCollapseIcon", ["loc", [null, [14, 18], [14, 56]]]], " dropdown icon"]]]],
        locals: [],
        templates: []
      };
    })();
    var child2 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 17,
              "column": 4
            },
            "end": {
              "line": 19,
              "column": 4
            }
          },
          "moduleName": "dummy/templates/components/flexberry-treenode.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["content", "yield", ["loc", [null, [18, 6], [18, 15]]]]],
        locals: [],
        templates: []
      };
    })();
    var child3 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 22,
              "column": 2
            },
            "end": {
              "line": 26,
              "column": 2
            }
          },
          "moduleName": "dummy/templates/components/flexberry-treenode.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "flexberry-tree", [], ["nodes", ["subexpr", "@mut", [["get", "nodes", ["loc", [null, [24, 12], [24, 17]]]]], [], []]], ["loc", [null, [23, 4], [25, 6]]]]],
        locals: [],
        templates: []
      };
    })();
    var child4 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 27,
              "column": 2
            },
            "end": {
              "line": 29,
              "column": 2
            }
          },
          "moduleName": "dummy/templates/components/flexberry-treenode.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["content", "yield", ["loc", [null, [28, 4], [28, 13]]]]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type", "multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 31,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/flexberry-treenode.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("    ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element2 = dom.childAt(fragment, [2]);
        var element3 = dom.childAt(fragment, [4]);
        var morphs = new Array(9);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createAttrMorph(element2, 'class');
        morphs[2] = dom.createAttrMorph(element2, 'onclick');
        morphs[3] = dom.createMorphAt(element2, 1, 1);
        morphs[4] = dom.createMorphAt(element2, 3, 3);
        morphs[5] = dom.createMorphAt(element2, 5, 5);
        morphs[6] = dom.createAttrMorph(element3, 'class');
        morphs[7] = dom.createMorphAt(element3, 1, 1);
        morphs[8] = dom.createMorphAt(element3, 2, 2);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["content", "yield", ["loc", [null, [5, 0], [5, 9]]]], ["attribute", "class", ["concat", [["get", "flexberryClassNames.header", ["loc", [null, [8, 11], [8, 37]]]], " title"]]], ["attribute", "onclick", ["subexpr", "action", ["onHeaderClick"], ["preventDefault", false], ["loc", [null, [9, 10], [9, 57]]]]], ["block", "if", [["get", "_hasContent", ["loc", [null, [10, 10], [10, 21]]]]], [], 0, 1, ["loc", [null, [10, 4], [15, 11]]]], ["content", "caption", ["loc", [null, [16, 4], [16, 15]]]], ["block", "yield-slot", ["header"], [], 2, null, ["loc", [null, [17, 4], [19, 19]]]], ["attribute", "class", ["concat", [["get", "flexberryClassNames.content", ["loc", [null, [21, 14], [21, 41]]]], " content"]]], ["block", "if", [["get", "_hasNodes", ["loc", [null, [22, 8], [22, 17]]]]], [], 3, null, ["loc", [null, [22, 2], [26, 9]]]], ["block", "yield-slot", ["content"], [], 4, null, ["loc", [null, [27, 2], [29, 17]]]]],
      locals: [],
      templates: [child0, child1, child2, child3, child4]
    };
  })());
});
define("dummy/templates/components/flexberry-validationmessage", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/flexberry-validationmessage.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["content", "error", ["loc", [null, [1, 0], [1, 9]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/components/flexberry-validationsummary", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 3,
              "column": 2
            },
            "end": {
              "line": 5,
              "column": 2
            }
          },
          "moduleName": "dummy/templates/components/flexberry-validationsummary.hbs"
        },
        isEmpty: false,
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("li");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);
          return morphs;
        },
        statements: [["content", "message", ["loc", [null, [4, 8], [4, 19]]]]],
        locals: ["message"],
        templates: []
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type", "multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/flexberry-validationsummary.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("ul");
        dom.setAttribute(el1, "class", "list");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [2]), 1, 1);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["content", "headerText", ["loc", [null, [1, 0], [1, 14]]]], ["block", "each", [["get", "messages", ["loc", [null, [3, 10], [3, 18]]]]], [], 0, null, ["loc", [null, [3, 2], [5, 11]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define("dummy/templates/components/form-load-time-tracker", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type", "multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/form-load-time-tracker.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode(": ");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("br");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode(": ");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("br");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(5);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        morphs[2] = dom.createMorphAt(fragment, 5, 5, contextualElement);
        morphs[3] = dom.createMorphAt(fragment, 7, 7, contextualElement);
        morphs[4] = dom.createMorphAt(fragment, 10, 10, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "t", ["components.form-load-time-tracker.load-time"], [], ["loc", [null, [1, 0], [1, 51]]]], ["content", "loadTime", ["loc", [null, [1, 53], [1, 65]]]], ["inline", "t", ["components.form-load-time-tracker.render-time"], [], ["loc", [null, [2, 0], [2, 53]]]], ["content", "renderTime", ["loc", [null, [2, 55], [2, 69]]]], ["content", "yield", ["loc", [null, [3, 0], [3, 9]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/components/groupedit-toolbar", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "fragmentReason": {
            "name": "modifiers",
            "modifiers": ["action"]
          },
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 9,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/groupedit-toolbar.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("button");
          dom.setAttribute(el1, "type", "button");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("i");
          dom.setAttribute(el2, "class", "plus icon");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element6 = dom.childAt(fragment, [1]);
          var morphs = new Array(4);
          morphs[0] = dom.createAttrMorph(element6, 'class');
          morphs[1] = dom.createAttrMorph(element6, 'title');
          morphs[2] = dom.createAttrMorph(element6, 'disabled');
          morphs[3] = dom.createElementMorph(element6);
          return morphs;
        },
        statements: [["attribute", "class", ["concat", ["ui ui-add ", ["get", "buttonClass", ["loc", [null, [4, 23], [4, 34]]]], " button"]]], ["attribute", "title", ["subexpr", "t", ["components.groupedit-toolbar.add-button-text"], [], ["loc", [null, [5, 10], [5, 62]]]]], ["attribute", "disabled", ["get", "readonly", ["loc", [null, [6, 15], [6, 23]]]]], ["element", "action", ["addRow"], [], ["loc", [null, [6, 26], [6, 45]]]]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 10,
              "column": 0
            },
            "end": {
              "line": 18,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/groupedit-toolbar.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("button");
          dom.setAttribute(el1, "type", "button");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("i");
          dom.setAttribute(el2, "class", "minus icon");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element5 = dom.childAt(fragment, [1]);
          var morphs = new Array(4);
          morphs[0] = dom.createAttrMorph(element5, 'class');
          morphs[1] = dom.createAttrMorph(element5, 'title');
          morphs[2] = dom.createAttrMorph(element5, 'disabled');
          morphs[3] = dom.createElementMorph(element5);
          return morphs;
        },
        statements: [["attribute", "class", ["concat", ["ui ui-delete ", ["subexpr", "unless", [["get", "_hasSelectedRows", ["loc", [null, [13, 33], [13, 49]]]], "disabled"], [], ["loc", [null, [13, 24], [13, 62]]]], " ", ["get", "buttonClass", ["loc", [null, [13, 65], [13, 76]]]], " button"]]], ["attribute", "title", ["subexpr", "t", ["components.groupedit-toolbar.delete-button-text"], [], ["loc", [null, [14, 10], [14, 65]]]]], ["attribute", "disabled", ["subexpr", "or", [["subexpr", "not", [["get", "_hasSelectedRows", ["loc", [null, [15, 23], [15, 39]]]]], [], ["loc", [null, [15, 18], [15, 40]]]], ["get", "readonly", ["loc", [null, [15, 41], [15, 49]]]]], [], ["loc", [null, [15, 13], [15, 51]]]]], ["element", "action", ["deleteRows"], [], ["loc", [null, [15, 52], [15, 75]]]]],
        locals: [],
        templates: []
      };
    })();
    var child2 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 19,
              "column": 0
            },
            "end": {
              "line": 27,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/groupedit-toolbar.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("button");
          dom.setAttribute(el1, "type", "button");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("i");
          dom.setAttribute(el2, "class", "configure icon");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element4 = dom.childAt(fragment, [1]);
          var morphs = new Array(3);
          morphs[0] = dom.createAttrMorph(element4, 'class');
          morphs[1] = dom.createAttrMorph(element4, 'title');
          morphs[2] = dom.createElementMorph(element4);
          return morphs;
        },
        statements: [["attribute", "class", ["concat", ["ui ui-clear-settings ", ["get", "buttonClass", ["loc", [null, [22, 34], [22, 45]]]], " button"]]], ["attribute", "title", ["subexpr", "t", ["components.groupedit-toolbar.clear-settings-button-text"], [], ["loc", [null, [23, 10], [23, 73]]]]], ["element", "action", ["setDefaultSettings"], [], ["loc", [null, [24, 4], [24, 35]]]]],
        locals: [],
        templates: []
      };
    })();
    var child3 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 29,
              "column": 0
            },
            "end": {
              "line": 47,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/groupedit-toolbar.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("button");
          dom.setAttribute(el1, "type", "button");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("i");
          dom.setAttribute(el2, "class", "arrow up icon");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("button");
          dom.setAttribute(el1, "type", "button");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("i");
          dom.setAttribute(el2, "class", "arrow down icon");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element2 = dom.childAt(fragment, [1]);
          var element3 = dom.childAt(fragment, [3]);
          var morphs = new Array(8);
          morphs[0] = dom.createAttrMorph(element2, 'class');
          morphs[1] = dom.createAttrMorph(element2, 'title');
          morphs[2] = dom.createAttrMorph(element2, 'disabled');
          morphs[3] = dom.createElementMorph(element2);
          morphs[4] = dom.createAttrMorph(element3, 'class');
          morphs[5] = dom.createAttrMorph(element3, 'title');
          morphs[6] = dom.createAttrMorph(element3, 'disabled');
          morphs[7] = dom.createElementMorph(element3);
          return morphs;
        },
        statements: [["attribute", "class", ["concat", ["ui ui-move-up ", ["get", "buttonClass", ["loc", [null, [32, 27], [32, 38]]]], " button"]]], ["attribute", "title", ["subexpr", "t", ["components.groupedit-toolbar.move-up-button-text"], [], ["loc", [null, [33, 10], [33, 66]]]]], ["attribute", "disabled", ["subexpr", "or", [["subexpr", "not", [["get", "_hasSelectedRows", ["loc", [null, [34, 23], [34, 39]]]]], [], ["loc", [null, [34, 18], [34, 40]]]], ["get", "_disableMoveUpButton", ["loc", [null, [34, 41], [34, 61]]]], ["get", "readonly", ["loc", [null, [34, 62], [34, 70]]]]], [], ["loc", [null, [34, 13], [34, 72]]]]], ["element", "action", ["moveRow", -1], [], ["loc", [null, [35, 4], [35, 27]]]], ["attribute", "class", ["concat", ["ui ui-move-down ", ["get", "buttonClass", ["loc", [null, [41, 29], [41, 40]]]], " button"]]], ["attribute", "title", ["subexpr", "t", ["components.groupedit-toolbar.move-down-button-text"], [], ["loc", [null, [42, 10], [42, 68]]]]], ["attribute", "disabled", ["subexpr", "or", [["subexpr", "not", [["get", "_hasSelectedRows", ["loc", [null, [43, 23], [43, 39]]]]], [], ["loc", [null, [43, 18], [43, 40]]]], ["get", "_disableMoveDownButton", ["loc", [null, [43, 41], [43, 63]]]], ["get", "readonly", ["loc", [null, [43, 64], [43, 72]]]]], [], ["loc", [null, [43, 13], [43, 74]]]]], ["element", "action", ["moveRow", 1], [], ["loc", [null, [44, 4], [44, 26]]]]],
        locals: [],
        templates: []
      };
    })();
    var child4 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 56,
                "column": 2
              },
              "end": {
                "line": 58,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/components/groupedit-toolbar.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("			");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("i");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1]);
            var morphs = new Array(1);
            morphs[0] = dom.createAttrMorph(element0, 'class');
            return morphs;
          },
          statements: [["attribute", "class", ["concat", [["get", "customButton.iconClasses", ["loc", [null, [57, 15], [57, 39]]]], " icon"]]]],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 58,
                "column": 2
              },
              "end": {
                "line": 60,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/components/groupedit-toolbar.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("			");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "if", [["get", "customButton.buttonName", ["loc", [null, [59, 8], [59, 31]]]], ["get", "customButton.buttonName", ["loc", [null, [59, 32], [59, 55]]]], ["subexpr", "t", ["components.groupedit-toolbar.custom-button-text"], [], ["loc", [null, [59, 56], [59, 109]]]]], [], ["loc", [null, [59, 3], [59, 111]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 49,
              "column": 0
            },
            "end": {
              "line": 62,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/groupedit-toolbar.hbs"
        },
        isEmpty: false,
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("button");
          dom.setAttribute(el1, "type", "button");
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element1 = dom.childAt(fragment, [1]);
          var morphs = new Array(5);
          morphs[0] = dom.createAttrMorph(element1, 'class');
          morphs[1] = dom.createAttrMorph(element1, 'title');
          morphs[2] = dom.createAttrMorph(element1, 'disabled');
          morphs[3] = dom.createElementMorph(element1);
          morphs[4] = dom.createMorphAt(element1, 1, 1);
          return morphs;
        },
        statements: [["attribute", "class", ["concat", ["ui ", ["subexpr", "if", [["get", "customButton.buttonClasses", ["loc", [null, [52, 19], [52, 45]]]], ["get", "customButton.buttonClasses", ["loc", [null, [52, 46], [52, 72]]]]], [], ["loc", [null, [52, 14], [52, 74]]]], " ", ["subexpr", "if", [["get", "customButton.iconClasses", ["loc", [null, [52, 80], [52, 104]]]], "icon"], [], ["loc", [null, [52, 75], [52, 113]]]], " custom button"]]], ["attribute", "title", ["subexpr", "if", [["get", "customButton.buttonTitle", ["loc", [null, [53, 15], [53, 39]]]], ["get", "customButton.buttonTitle", ["loc", [null, [53, 40], [53, 64]]]]], [], ["loc", [null, [53, 10], [53, 66]]]]], ["attribute", "disabled", ["get", "customButton.disabled", ["loc", [null, [54, 15], [54, 36]]]]], ["element", "action", ["customButtonAction", ["get", "customButton.buttonAction", ["loc", [null, [55, 34], [55, 59]]]]], [], ["loc", [null, [55, 4], [55, 61]]]], ["block", "if", [["get", "customButton.iconClasses", ["loc", [null, [56, 8], [56, 32]]]]], [], 0, 1, ["loc", [null, [56, 2], [60, 9]]]]],
        locals: ["customButton"],
        templates: [child0, child1]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type", "multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 63,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/groupedit-toolbar.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(5);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(fragment, 1, 1, contextualElement);
        morphs[2] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        morphs[3] = dom.createMorphAt(fragment, 4, 4, contextualElement);
        morphs[4] = dom.createMorphAt(fragment, 6, 6, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "if", [["get", "createNewButton", ["loc", [null, [1, 6], [1, 21]]]]], [], 0, null, ["loc", [null, [1, 0], [9, 7]]]], ["block", "if", [["get", "deleteButton", ["loc", [null, [10, 6], [10, 18]]]]], [], 1, null, ["loc", [null, [10, 0], [18, 7]]]], ["block", "if", [["subexpr", "and", [["get", "defaultSettingsButton", ["loc", [null, [19, 11], [19, 32]]]], ["subexpr", "not", [["get", "orderedProperty", ["loc", [null, [19, 38], [19, 53]]]]], [], ["loc", [null, [19, 33], [19, 54]]]]], [], ["loc", [null, [19, 6], [19, 55]]]]], [], 2, null, ["loc", [null, [19, 0], [27, 7]]]], ["block", "if", [["get", "arrowsButtons", ["loc", [null, [29, 6], [29, 19]]]]], [], 3, null, ["loc", [null, [29, 0], [47, 7]]]], ["block", "each", [["get", "customButtons", ["loc", [null, [49, 8], [49, 21]]]]], [], 4, null, ["loc", [null, [49, 0], [62, 9]]]]],
      locals: [],
      templates: [child0, child1, child2, child3, child4]
    };
  })());
});
define("dummy/templates/components/help-popup", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "triple-curlies"
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 45
          }
        },
        "moduleName": "dummy/templates/components/help-popup.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("i");
        dom.setAttribute(el1, "class", "icon-guideline-circle-problem");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes() {
        return [];
      },
      statements: [],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/components/modal-dialog", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 7,
                "column": 4
              },
              "end": {
                "line": 11,
                "column": 4
              }
            },
            "moduleName": "dummy/templates/components/modal-dialog.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1, "class", "ui centered image");
            var el2 = dom.createTextNode("\n        ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n      ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
            return morphs;
          },
          statements: [["content", "yield", ["loc", [null, [9, 8], [9, 17]]]]],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 11,
                "column": 4
              },
              "end": {
                "line": 15,
                "column": 4
              }
            },
            "moduleName": "dummy/templates/components/modal-dialog.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1, "class", "description");
            var el2 = dom.createTextNode("\n        ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n      ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
            return morphs;
          },
          statements: [["content", "yield", ["loc", [null, [13, 8], [13, 17]]]]],
          locals: [],
          templates: []
        };
      })();
      var child2 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 19,
                  "column": 6
                },
                "end": {
                  "line": 23,
                  "column": 6
                }
              },
              "moduleName": "dummy/templates/components/modal-dialog.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("        ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("button");
              dom.setAttribute(el1, "type", "button");
              dom.setAttribute(el1, "class", "ui cancel button");
              dom.setAttribute(el1, "data-dismiss", "modal");
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n        ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var element1 = dom.childAt(fragment, [1]);
              var morphs = new Array(2);
              morphs[0] = dom.createAttrMorph(element1, 'title');
              morphs[1] = dom.createMorphAt(element1, 1, 1);
              return morphs;
            },
            statements: [["attribute", "title", ["subexpr", "t", ["components.modal-dialog.close-button-text"], [], ["loc", [null, [20, 82], [20, 131]]]]], ["inline", "t", ["components.modal-dialog.close-button-text"], [], ["loc", [null, [21, 10], [21, 59]]]]],
            locals: [],
            templates: []
          };
        })();
        var child1 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 24,
                  "column": 6
                },
                "end": {
                  "line": 28,
                  "column": 6
                }
              },
              "moduleName": "dummy/templates/components/modal-dialog.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("        ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("button");
              dom.setAttribute(el1, "type", "button");
              dom.setAttribute(el1, "class", "ui positive button");
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n        ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var element0 = dom.childAt(fragment, [1]);
              var morphs = new Array(2);
              morphs[0] = dom.createAttrMorph(element0, 'title');
              morphs[1] = dom.createMorphAt(element0, 1, 1);
              return morphs;
            },
            statements: [["attribute", "title", ["subexpr", "t", ["components.modal-dialog.ok-button-text"], [], ["loc", [null, [25, 63], [25, 109]]]]], ["inline", "t", ["components.modal-dialog.ok-button-text"], [], ["loc", [null, [26, 10], [26, 56]]]]],
            locals: [],
            templates: []
          };
        })();
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 17,
                "column": 2
              },
              "end": {
                "line": 30,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/components/modal-dialog.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1, "class", "actions");
            var el2 = dom.createTextNode("\n");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("    ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element2 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createMorphAt(element2, 1, 1);
            morphs[1] = dom.createMorphAt(element2, 2, 2);
            return morphs;
          },
          statements: [["block", "if", [["get", "useCloseButton", ["loc", [null, [19, 12], [19, 26]]]]], [], 0, null, ["loc", [null, [19, 6], [23, 13]]]], ["block", "if", [["get", "useOkButton", ["loc", [null, [24, 12], [24, 23]]]]], [], 1, null, ["loc", [null, [24, 6], [28, 13]]]]],
          locals: [],
          templates: [child0, child1]
        };
      })();
      return {
        meta: {
          "fragmentReason": {
            "name": "missing-wrapper",
            "problems": ["multiple-nodes", "wrong-type"]
          },
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 31,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/modal-dialog.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("i");
          dom.setAttribute(el1, "class", "close icon");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "header");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element3 = dom.childAt(fragment, [5]);
          var morphs = new Array(4);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [3]), 1, 1);
          morphs[1] = dom.createAttrMorph(element3, 'class');
          morphs[2] = dom.createMorphAt(element3, 1, 1);
          morphs[3] = dom.createMorphAt(fragment, 7, 7, contextualElement);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["content", "title", ["loc", [null, [4, 4], [4, 13]]]], ["attribute", "class", ["concat", [["subexpr", "if", [["get", "viewImageContent", ["loc", [null, [6, 19], [6, 35]]]], "image", ""], [], ["loc", [null, [6, 14], [6, 48]]]], " content"]]], ["block", "if", [["get", "viewImageContent", ["loc", [null, [7, 10], [7, 26]]]]], [], 0, 1, ["loc", [null, [7, 4], [15, 11]]]], ["block", "if", [["get", "toolbarVisible", ["loc", [null, [17, 8], [17, 22]]]]], [], 2, null, ["loc", [null, [17, 2], [30, 9]]]]],
        locals: [],
        templates: [child0, child1, child2]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 32,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/modal-dialog.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "ui-modal", [], ["class", ["subexpr", "concat", ["flexberry-modal ", ["get", "sizeClass", ["loc", [null, [1, 45], [1, 54]]]]], [], ["loc", [null, [1, 18], [1, 55]]]]], 0, null, ["loc", [null, [1, 0], [31, 13]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define("dummy/templates/components/number-input", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 40
          }
        },
        "moduleName": "dummy/templates/components/number-input.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["inline", "input", [], ["type", "number", "value", ["subexpr", "@mut", [["get", "inputValue", ["loc", [null, [1, 28], [1, 38]]]]], [], []]], ["loc", [null, [1, 0], [1, 40]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/components/object-list-view-cell", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "triple-curlies"
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/object-list-view-cell.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "oveflow-text");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var morphs = new Array(3);
        morphs[0] = dom.createAttrMorph(element0, 'title');
        morphs[1] = dom.createMorphAt(element0, 0, 0);
        morphs[2] = dom.createMorphAt(element0, 1, 1);
        return morphs;
      },
      statements: [["attribute", "title", ["get", "titleValue", ["loc", [null, [1, 34], [1, 44]]]]], ["content", "yield", ["loc", [null, [1, 47], [1, 56]]]], ["content", "displayValue", ["loc", [null, [1, 56], [1, 72]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/components/object-list-view-row", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 5,
                "column": 6
              },
              "end": {
                "line": 13,
                "column": 6
              }
            },
            "moduleName": "dummy/templates/components/object-list-view-row.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("button");
            dom.setAttribute(el1, "type", "button");
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("i");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element21 = dom.childAt(fragment, [1]);
            var element22 = dom.childAt(element21, [1]);
            var morphs = new Array(4);
            morphs[0] = dom.createAttrMorph(element21, 'class');
            morphs[1] = dom.createAttrMorph(element21, 'title');
            morphs[2] = dom.createElementMorph(element21);
            morphs[3] = dom.createAttrMorph(element22, 'class');
            return morphs;
          },
          statements: [["attribute", "class", ["concat", ["ui ", ["get", "customButtonInRow.buttonClasses", ["loc", [null, [8, 24], [8, 55]]]], " button"]]], ["attribute", "title", ["subexpr", "if", [["get", "customButtonInRow.buttonTitle", ["loc", [null, [9, 23], [9, 52]]]], ["get", "customButtonInRow.buttonTitle", ["loc", [null, [9, 53], [9, 82]]]]], [], ["loc", [null, [9, 18], [9, 84]]]]], ["element", "action", ["customButtonInRowAction", ["get", "customButtonInRow.buttonAction", ["loc", [null, [10, 47], [10, 77]]]], ["get", "record.data", ["loc", [null, [10, 78], [10, 89]]]]], [], ["loc", [null, [10, 12], [10, 91]]]], ["attribute", "class", ["get", "customButtonInRow.buttonIcon", ["loc", [null, [11, 23], [11, 51]]]]]],
          locals: ["customButtonInRow"],
          templates: []
        };
      })();
      var child1 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 16,
                  "column": 10
                },
                "end": {
                  "line": 20,
                  "column": 10
                }
              },
              "moduleName": "dummy/templates/components/object-list-view-row.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("            ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "cell asterisk-cell");
              var el2 = dom.createTextNode("\n              ");
              dom.appendChild(el1, el2);
              var el2 = dom.createElement("i");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n            ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var element19 = dom.childAt(fragment, [1, 1]);
              var morphs = new Array(1);
              morphs[0] = dom.createAttrMorph(element19, 'class');
              return morphs;
            },
            statements: [["attribute", "class", ["concat", ["asterisk small red icon ", ["subexpr", "unless", [["get", "record.data.hasDirtyAttributes", ["loc", [null, [18, 57], [18, 87]]]], "transparent"], [], ["loc", [null, [18, 48], [18, 103]]]]]]]],
            locals: [],
            templates: []
          };
        })();
        var child1 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 21,
                  "column": 10
                },
                "end": {
                  "line": 29,
                  "column": 10
                }
              },
              "moduleName": "dummy/templates/components/object-list-view-row.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("            ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "cell");
              var el2 = dom.createTextNode("\n              ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n            ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
              return morphs;
            },
            statements: [["inline", "flexberry-checkbox", [], ["readonly", ["subexpr", "or", [["get", "readonly", ["loc", [null, [24, 29], [24, 37]]]], ["subexpr", "not", [["get", "record.rowConfig.canBeSelected", ["loc", [null, [24, 43], [24, 73]]]]], [], ["loc", [null, [24, 38], [24, 74]]]], ["get", "allSelect", ["loc", [null, [24, 75], [24, 84]]]]], [], ["loc", [null, [24, 25], [24, 85]]]], "onChange", ["subexpr", "action", [["get", "selectRow", ["loc", [null, [25, 33], [25, 42]]]], ["get", "record", ["loc", [null, [25, 43], [25, 49]]]]], [], ["loc", [null, [25, 25], [25, 50]]]], "value", ["subexpr", "@mut", [["get", "record.selected", ["loc", [null, [26, 22], [26, 37]]]]], [], []]], ["loc", [null, [23, 14], [27, 16]]]]],
            locals: [],
            templates: []
          };
        })();
        var child2 = (function () {
          var child0 = (function () {
            return {
              meta: {
                "fragmentReason": false,
                "revision": "Ember@2.4.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 32,
                    "column": 14
                  },
                  "end": {
                    "line": 40,
                    "column": 14
                  }
                },
                "moduleName": "dummy/templates/components/object-list-view-row.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("                ");
                dom.appendChild(el0, el1);
                var el1 = dom.createElement("button");
                dom.setAttribute(el1, "type", "button");
                dom.setAttribute(el1, "disabled", "disabled");
                var el2 = dom.createTextNode("\n                  ");
                dom.appendChild(el1, el2);
                var el2 = dom.createElement("i");
                dom.setAttribute(el2, "class", "edit icon");
                dom.appendChild(el1, el2);
                var el2 = dom.createTextNode("\n                ");
                dom.appendChild(el1, el2);
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var element18 = dom.childAt(fragment, [1]);
                var morphs = new Array(2);
                morphs[0] = dom.createAttrMorph(element18, 'class');
                morphs[1] = dom.createAttrMorph(element18, 'title');
                return morphs;
              },
              statements: [["attribute", "class", ["concat", ["ui ui-edit object-list-view-row-edit-button ", ["get", "buttonClass", ["loc", [null, [35, 71], [35, 82]]]], " disabled button"]]], ["attribute", "title", ["subexpr", "t", ["components.object-list-view.menu-in-row.edit-menu-item-title"], [], ["loc", [null, [36, 24], [36, 92]]]]]],
              locals: [],
              templates: []
            };
          })();
          var child1 = (function () {
            return {
              meta: {
                "fragmentReason": false,
                "revision": "Ember@2.4.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 40,
                    "column": 14
                  },
                  "end": {
                    "line": 48,
                    "column": 14
                  }
                },
                "moduleName": "dummy/templates/components/object-list-view-row.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("                ");
                dom.appendChild(el0, el1);
                var el1 = dom.createElement("button");
                dom.setAttribute(el1, "type", "button");
                var el2 = dom.createTextNode("\n                  ");
                dom.appendChild(el1, el2);
                var el2 = dom.createElement("i");
                dom.setAttribute(el2, "class", "edit icon");
                dom.appendChild(el1, el2);
                var el2 = dom.createTextNode("\n                ");
                dom.appendChild(el1, el2);
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var element17 = dom.childAt(fragment, [1]);
                var morphs = new Array(3);
                morphs[0] = dom.createAttrMorph(element17, 'class');
                morphs[1] = dom.createAttrMorph(element17, 'title');
                morphs[2] = dom.createElementMorph(element17);
                return morphs;
              },
              statements: [["attribute", "class", ["concat", ["ui ui-edit object-list-view-row-edit-button ", ["get", "buttonClass", ["loc", [null, [43, 71], [43, 82]]]], " button"]]], ["attribute", "title", ["subexpr", "t", ["components.object-list-view.menu-in-row.edit-menu-item-title"], [], ["loc", [null, [44, 24], [44, 92]]]]], ["element", "action", ["onRowClick", ["get", "record", ["loc", [null, [45, 40], [45, 46]]]], ["subexpr", "hash", [], ["column", null, "columnIndex", null, "rowEdit", true], ["loc", [null, [45, 47], [45, 95]]]]], [], ["loc", [null, [45, 18], [45, 97]]]]],
              locals: [],
              templates: []
            };
          })();
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 30,
                  "column": 10
                },
                "end": {
                  "line": 50,
                  "column": 10
                }
              },
              "moduleName": "dummy/templates/components/object-list-view-row.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("            ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "cell");
              var el2 = dom.createTextNode("\n");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("            ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
              return morphs;
            },
            statements: [["block", "if", [["get", "readonly", ["loc", [null, [32, 20], [32, 28]]]]], [], 0, 1, ["loc", [null, [32, 14], [48, 21]]]]],
            locals: [],
            templates: [child0, child1]
          };
        })();
        var child3 = (function () {
          var child0 = (function () {
            return {
              meta: {
                "fragmentReason": false,
                "revision": "Ember@2.4.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 53,
                    "column": 14
                  },
                  "end": {
                    "line": 61,
                    "column": 14
                  }
                },
                "moduleName": "dummy/templates/components/object-list-view-row.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("                ");
                dom.appendChild(el0, el1);
                var el1 = dom.createElement("button");
                dom.setAttribute(el1, "type", "button");
                dom.setAttribute(el1, "disabled", "disabled");
                var el2 = dom.createTextNode("\n                  ");
                dom.appendChild(el1, el2);
                var el2 = dom.createElement("i");
                dom.setAttribute(el2, "class", "copy icon");
                dom.appendChild(el1, el2);
                var el2 = dom.createTextNode("\n                ");
                dom.appendChild(el1, el2);
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var element16 = dom.childAt(fragment, [1]);
                var morphs = new Array(2);
                morphs[0] = dom.createAttrMorph(element16, 'class');
                morphs[1] = dom.createAttrMorph(element16, 'title');
                return morphs;
              },
              statements: [["attribute", "class", ["concat", ["ui ui-edit object-list-view-row-prototype-button ", ["get", "buttonClass", ["loc", [null, [56, 76], [56, 87]]]], " disabled button"]]], ["attribute", "title", ["subexpr", "t", ["components.object-list-view.menu-in-row.prototype-menu-item-title"], [], ["loc", [null, [57, 24], [57, 97]]]]]],
              locals: [],
              templates: []
            };
          })();
          var child1 = (function () {
            return {
              meta: {
                "fragmentReason": false,
                "revision": "Ember@2.4.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 61,
                    "column": 14
                  },
                  "end": {
                    "line": 69,
                    "column": 14
                  }
                },
                "moduleName": "dummy/templates/components/object-list-view-row.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("                ");
                dom.appendChild(el0, el1);
                var el1 = dom.createElement("button");
                dom.setAttribute(el1, "type", "button");
                var el2 = dom.createTextNode("\n                  ");
                dom.appendChild(el1, el2);
                var el2 = dom.createElement("i");
                dom.setAttribute(el2, "class", "copy icon");
                dom.appendChild(el1, el2);
                var el2 = dom.createTextNode("\n                ");
                dom.appendChild(el1, el2);
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var element15 = dom.childAt(fragment, [1]);
                var morphs = new Array(3);
                morphs[0] = dom.createAttrMorph(element15, 'class');
                morphs[1] = dom.createAttrMorph(element15, 'title');
                morphs[2] = dom.createElementMorph(element15);
                return morphs;
              },
              statements: [["attribute", "class", ["concat", ["ui ui-edit object-list-view-row-prototype-button ", ["get", "buttonClass", ["loc", [null, [64, 76], [64, 87]]]], " button"]]], ["attribute", "title", ["subexpr", "t", ["components.object-list-view.menu-in-row.prototype-menu-item-title"], [], ["loc", [null, [65, 24], [65, 97]]]]], ["element", "action", [["get", "createNewByPrototype", ["loc", [null, [66, 27], [66, 47]]]], ["subexpr", "get", [["get", "record", ["loc", [null, [66, 53], [66, 59]]]], "data.id"], [], ["loc", [null, [66, 48], [66, 70]]]]], [], ["loc", [null, [66, 18], [66, 72]]]]],
              locals: [],
              templates: []
            };
          })();
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 51,
                  "column": 10
                },
                "end": {
                  "line": 71,
                  "column": 10
                }
              },
              "moduleName": "dummy/templates/components/object-list-view-row.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("            ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "cell");
              var el2 = dom.createTextNode("\n");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("            ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
              return morphs;
            },
            statements: [["block", "if", [["get", "readonly", ["loc", [null, [53, 20], [53, 28]]]]], [], 0, 1, ["loc", [null, [53, 14], [69, 21]]]]],
            locals: [],
            templates: [child0, child1]
          };
        })();
        var child4 = (function () {
          var child0 = (function () {
            return {
              meta: {
                "fragmentReason": false,
                "revision": "Ember@2.4.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 74,
                    "column": 14
                  },
                  "end": {
                    "line": 82,
                    "column": 14
                  }
                },
                "moduleName": "dummy/templates/components/object-list-view-row.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("                ");
                dom.appendChild(el0, el1);
                var el1 = dom.createElement("button");
                dom.setAttribute(el1, "type", "button");
                dom.setAttribute(el1, "disabled", "disabled");
                var el2 = dom.createTextNode("\n                  ");
                dom.appendChild(el1, el2);
                var el2 = dom.createElement("i");
                dom.setAttribute(el2, "class", "minus icon");
                dom.appendChild(el1, el2);
                var el2 = dom.createTextNode("\n                ");
                dom.appendChild(el1, el2);
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var element14 = dom.childAt(fragment, [1]);
                var morphs = new Array(2);
                morphs[0] = dom.createAttrMorph(element14, 'class');
                morphs[1] = dom.createAttrMorph(element14, 'title');
                return morphs;
              },
              statements: [["attribute", "class", ["concat", ["ui ui-delete object-list-view-row-delete-button ", ["get", "buttonClass", ["loc", [null, [77, 75], [77, 86]]]], " disabled button"]]], ["attribute", "title", ["subexpr", "t", ["components.object-list-view.menu-in-row.delete-menu-item-title"], [], ["loc", [null, [78, 24], [78, 94]]]]]],
              locals: [],
              templates: []
            };
          })();
          var child1 = (function () {
            return {
              meta: {
                "fragmentReason": false,
                "revision": "Ember@2.4.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 82,
                    "column": 14
                  },
                  "end": {
                    "line": 90,
                    "column": 14
                  }
                },
                "moduleName": "dummy/templates/components/object-list-view-row.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("                ");
                dom.appendChild(el0, el1);
                var el1 = dom.createElement("button");
                dom.setAttribute(el1, "type", "button");
                var el2 = dom.createTextNode("\n                  ");
                dom.appendChild(el1, el2);
                var el2 = dom.createElement("i");
                dom.setAttribute(el2, "class", "minus icon");
                dom.appendChild(el1, el2);
                var el2 = dom.createTextNode("\n                ");
                dom.appendChild(el1, el2);
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var element13 = dom.childAt(fragment, [1]);
                var morphs = new Array(3);
                morphs[0] = dom.createAttrMorph(element13, 'class');
                morphs[1] = dom.createAttrMorph(element13, 'title');
                morphs[2] = dom.createElementMorph(element13);
                return morphs;
              },
              statements: [["attribute", "class", ["concat", ["ui ui-delete object-list-view-row-delete-button ", ["get", "buttonClass", ["loc", [null, [85, 75], [85, 86]]]], " button"]]], ["attribute", "title", ["subexpr", "t", ["components.object-list-view.menu-in-row.delete-menu-item-title"], [], ["loc", [null, [86, 24], [86, 94]]]]], ["element", "action", [["get", "deleteRow", ["loc", [null, [87, 27], [87, 36]]]], ["get", "record", ["loc", [null, [87, 37], [87, 43]]]]], [], ["loc", [null, [87, 18], [87, 45]]]]],
              locals: [],
              templates: []
            };
          })();
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 72,
                  "column": 10
                },
                "end": {
                  "line": 92,
                  "column": 10
                }
              },
              "moduleName": "dummy/templates/components/object-list-view-row.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("            ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "cell");
              var el2 = dom.createTextNode("\n");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("            ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
              return morphs;
            },
            statements: [["block", "if", [["subexpr", "or", [["get", "readonly", ["loc", [null, [74, 24], [74, 32]]]], ["subexpr", "not", [["get", "record.rowConfig.canBeDeleted", ["loc", [null, [74, 38], [74, 67]]]]], [], ["loc", [null, [74, 33], [74, 68]]]]], [], ["loc", [null, [74, 20], [74, 69]]]]], [], 0, 1, ["loc", [null, [74, 14], [90, 21]]]]],
            locals: [],
            templates: [child0, child1]
          };
        })();
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 14,
                "column": 6
              },
              "end": {
                "line": 94,
                "column": 6
              }
            },
            "moduleName": "dummy/templates/components/object-list-view-row.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1, "class", "object-list-view-helper-column-cell");
            var el2 = dom.createTextNode("\n");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("        ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element20 = dom.childAt(fragment, [1]);
            var morphs = new Array(5);
            morphs[0] = dom.createMorphAt(element20, 1, 1);
            morphs[1] = dom.createMorphAt(element20, 2, 2);
            morphs[2] = dom.createMorphAt(element20, 3, 3);
            morphs[3] = dom.createMorphAt(element20, 4, 4);
            morphs[4] = dom.createMorphAt(element20, 5, 5);
            return morphs;
          },
          statements: [["block", "if", [["get", "showAsteriskInRow", ["loc", [null, [16, 16], [16, 33]]]]], [], 0, null, ["loc", [null, [16, 10], [20, 17]]]], ["block", "if", [["get", "showCheckBoxInRow", ["loc", [null, [21, 16], [21, 33]]]]], [], 1, null, ["loc", [null, [21, 10], [29, 17]]]], ["block", "if", [["get", "showEditButtonInRow", ["loc", [null, [30, 16], [30, 35]]]]], [], 2, null, ["loc", [null, [30, 10], [50, 17]]]], ["block", "if", [["get", "showPrototypeButtonInRow", ["loc", [null, [51, 16], [51, 40]]]]], [], 3, null, ["loc", [null, [51, 10], [71, 17]]]], ["block", "if", [["get", "showDeleteButtonInRow", ["loc", [null, [72, 16], [72, 37]]]]], [], 4, null, ["loc", [null, [72, 10], [92, 17]]]]],
          locals: [],
          templates: [child0, child1, child2, child3, child4]
        };
      })();
      var child2 = (function () {
        var child0 = (function () {
          var child0 = (function () {
            var child0 = (function () {
              var child0 = (function () {
                return {
                  meta: {
                    "fragmentReason": false,
                    "revision": "Ember@2.4.6",
                    "loc": {
                      "source": null,
                      "start": {
                        "line": 111,
                        "column": 14
                      },
                      "end": {
                        "line": 120,
                        "column": 14
                      }
                    },
                    "moduleName": "dummy/templates/components/object-list-view-row.hbs"
                  },
                  isEmpty: false,
                  arity: 0,
                  cachedFragment: null,
                  hasRendered: false,
                  buildFragment: function buildFragment(dom) {
                    var el0 = dom.createDocumentFragment();
                    var el1 = dom.createTextNode("                ");
                    dom.appendChild(el0, el1);
                    var el1 = dom.createElement("button");
                    dom.setAttribute(el1, "type", "button");
                    var el2 = dom.createTextNode("\n                  ");
                    dom.appendChild(el1, el2);
                    var el2 = dom.createElement("i");
                    dom.appendChild(el1, el2);
                    var el2 = dom.createTextNode("\n                ");
                    dom.appendChild(el1, el2);
                    dom.appendChild(el0, el1);
                    var el1 = dom.createTextNode("\n");
                    dom.appendChild(el0, el1);
                    return el0;
                  },
                  buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                    var element10 = dom.childAt(fragment, [1]);
                    var element11 = dom.childAt(element10, [1]);
                    var morphs = new Array(4);
                    morphs[0] = dom.createAttrMorph(element10, 'class');
                    morphs[1] = dom.createAttrMorph(element10, 'title');
                    morphs[2] = dom.createElementMorph(element10);
                    morphs[3] = dom.createAttrMorph(element11, 'class');
                    return morphs;
                  },
                  statements: [["attribute", "class", ["concat", ["ui button hierarchy-expand icon mini compact ", ["subexpr", "if", [["get", "_recordsIsLoading", ["loc", [null, [114, 75], [114, 92]]]], "loading"], [], ["loc", [null, [114, 70], [114, 104]]]], " ", ["get", "buttonClass", ["loc", [null, [114, 107], [114, 118]]]]]]], ["attribute", "title", ["subexpr", "t", [["subexpr", "concat", ["components.object-list-view.hierarchy-buttons.", ["subexpr", "if", [["get", "_expanded", ["loc", [null, [115, 89], [115, 98]]]], "minus", "plus"], [], ["loc", [null, [115, 85], [115, 114]]]], "-button-title"], [], ["loc", [null, [115, 28], [115, 131]]]]], [], ["loc", [null, [115, 24], [115, 133]]]]], ["element", "action", [["subexpr", "if", [["get", "recordsLoaded", ["loc", [null, [116, 31], [116, 44]]]], "expand", "loadChildRecords"], [], ["loc", [null, [116, 27], [116, 73]]]]], ["bubbles", false], ["loc", [null, [116, 18], [116, 89]]]], ["attribute", "class", ["concat", [["subexpr", "if", [["get", "_expanded", ["loc", [null, [118, 33], [118, 42]]]], "minus", "plus"], [], ["loc", [null, [118, 28], [118, 59]]]], " hierarchy-expand icon"]]]],
                  locals: [],
                  templates: []
                };
              })();
              return {
                meta: {
                  "fragmentReason": false,
                  "revision": "Ember@2.4.6",
                  "loc": {
                    "source": null,
                    "start": {
                      "line": 103,
                      "column": 12
                    },
                    "end": {
                      "line": 121,
                      "column": 12
                    }
                  },
                  "moduleName": "dummy/templates/components/object-list-view-row.hbs"
                },
                isEmpty: false,
                arity: 0,
                cachedFragment: null,
                hasRendered: false,
                buildFragment: function buildFragment(dom) {
                  var el0 = dom.createDocumentFragment();
                  var el1 = dom.createComment("");
                  dom.appendChild(el0, el1);
                  return el0;
                },
                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                  var morphs = new Array(1);
                  morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
                  dom.insertBoundary(fragment, 0);
                  dom.insertBoundary(fragment, null);
                  return morphs;
                },
                statements: [["block", "if", [["subexpr", "and", [["subexpr", "not", [["get", "index", ["loc", [null, [111, 30], [111, 35]]]]], [], ["loc", [null, [111, 25], [111, 36]]]], ["get", "inHierarchicalMode", ["loc", [null, [111, 37], [111, 55]]]], ["subexpr", "or", [["get", "isParentRecord", ["loc", [null, [111, 60], [111, 74]]]], ["get", "hasRecords", ["loc", [null, [111, 75], [111, 85]]]]], [], ["loc", [null, [111, 56], [111, 86]]]]], [], ["loc", [null, [111, 20], [111, 87]]]]], [], 0, null, ["loc", [null, [111, 14], [120, 21]]]]],
                locals: [],
                templates: [child0]
              };
            })();
            return {
              meta: {
                "fragmentReason": false,
                "revision": "Ember@2.4.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 102,
                    "column": 10
                  },
                  "end": {
                    "line": 122,
                    "column": 10
                  }
                },
                "moduleName": "dummy/templates/components/object-list-view-row.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var morphs = new Array(1);
                morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
                dom.insertBoundary(fragment, 0);
                dom.insertBoundary(fragment, null);
                return morphs;
              },
              statements: [["block", "component", [["get", "column.cellComponent.componentName", ["loc", [null, [103, 25], [103, 59]]]]], ["dynamicProperties", ["subexpr", "@mut", [["get", "column.cellComponent.componentProperties", ["loc", [null, [104, 32], [104, 72]]]]], [], []], "relatedModel", ["subexpr", "@mut", [["get", "record.data", ["loc", [null, [105, 27], [105, 38]]]]], [], []], "value", ["subexpr", "mut", [["subexpr", "get", [["get", "record.data", ["loc", [null, [106, 30], [106, 41]]]], ["get", "column.propName", ["loc", [null, [106, 42], [106, 57]]]]], [], ["loc", [null, [106, 25], [106, 58]]]]], [], ["loc", [null, [106, 20], [106, 59]]]], "readonly", ["subexpr", "readonly-cell", [["get", "record.rowConfig.readonlyColumns", ["loc", [null, [107, 38], [107, 70]]]], ["get", "column.propName", ["loc", [null, [107, 71], [107, 86]]]], ["get", "readonly", ["loc", [null, [107, 87], [107, 95]]]], ["get", "column.cellComponent.componentProperties.readonly", ["loc", [null, [107, 96], [107, 145]]]]], [], ["loc", [null, [107, 23], [107, 146]]]], "required", ["subexpr", "@mut", [["get", "required", ["loc", [null, [108, 23], [108, 31]]]]], [], []], "componentName", ["subexpr", "concat", ["(", ["get", "folvComponentName", ["loc", [null, [109, 40], [109, 57]]]], "_", ["get", "column.cellComponent.componentName", ["loc", [null, [109, 62], [109, 96]]]], "_", ["get", "column.propName", ["loc", [null, [109, 101], [109, 116]]]], ")"], [], ["loc", [null, [109, 28], [109, 121]]]]], 0, null, ["loc", [null, [103, 12], [121, 26]]]]],
              locals: [],
              templates: [child0]
            };
          })();
          var child1 = (function () {
            var child0 = (function () {
              return {
                meta: {
                  "fragmentReason": false,
                  "revision": "Ember@2.4.6",
                  "loc": {
                    "source": null,
                    "start": {
                      "line": 131,
                      "column": 12
                    },
                    "end": {
                      "line": 136,
                      "column": 12
                    }
                  },
                  "moduleName": "dummy/templates/components/object-list-view-row.hbs"
                },
                isEmpty: false,
                arity: 0,
                cachedFragment: null,
                hasRendered: false,
                buildFragment: function buildFragment(dom) {
                  var el0 = dom.createDocumentFragment();
                  var el1 = dom.createTextNode("              ");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createComment("");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createTextNode("\n");
                  dom.appendChild(el0, el1);
                  return el0;
                },
                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                  var morphs = new Array(1);
                  morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
                  return morphs;
                },
                statements: [["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "get", [["get", "record.data", ["loc", [null, [133, 27], [133, 38]]]], ["subexpr", "concat", ["errors.", ["get", "column.propName", ["loc", [null, [133, 57], [133, 72]]]]], [], ["loc", [null, [133, 39], [133, 73]]]]], [], ["loc", [null, [133, 22], [133, 74]]]], "pointing", "pointing"], ["loc", [null, [132, 14], [135, 16]]]]],
                locals: [],
                templates: []
              };
            })();
            return {
              meta: {
                "fragmentReason": false,
                "revision": "Ember@2.4.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 122,
                    "column": 10
                  },
                  "end": {
                    "line": 137,
                    "column": 10
                  }
                },
                "moduleName": "dummy/templates/components/object-list-view-row.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("            ");
                dom.appendChild(el0, el1);
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var morphs = new Array(2);
                morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
                morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);
                dom.insertBoundary(fragment, null);
                return morphs;
              },
              statements: [["inline", "component", [["get", "column.cellComponent.componentName", ["loc", [null, [123, 24], [123, 58]]]]], ["dynamicProperties", ["subexpr", "@mut", [["get", "column.cellComponent.componentProperties", ["loc", [null, [124, 32], [124, 72]]]]], [], []], "relatedModel", ["subexpr", "@mut", [["get", "record.data", ["loc", [null, [125, 27], [125, 38]]]]], [], []], "value", ["subexpr", "mut", [["subexpr", "get", [["get", "record.data", ["loc", [null, [126, 30], [126, 41]]]], ["get", "column.propName", ["loc", [null, [126, 42], [126, 57]]]]], [], ["loc", [null, [126, 25], [126, 58]]]]], [], ["loc", [null, [126, 20], [126, 59]]]], "readonly", ["subexpr", "readonly-cell", [["get", "record.rowConfig.readonlyColumns", ["loc", [null, [127, 38], [127, 70]]]], ["get", "column.propName", ["loc", [null, [127, 71], [127, 86]]]], ["get", "readonly", ["loc", [null, [127, 87], [127, 95]]]], ["get", "column.cellComponent.componentProperties.readonly", ["loc", [null, [127, 96], [127, 145]]]]], [], ["loc", [null, [127, 23], [127, 146]]]], "required", ["subexpr", "@mut", [["get", "required", ["loc", [null, [128, 23], [128, 31]]]]], [], []], "componentName", ["subexpr", "concat", ["(", ["get", "folvComponentName", ["loc", [null, [129, 40], [129, 57]]]], "_", ["get", "column.cellComponent.componentName", ["loc", [null, [129, 62], [129, 96]]]], "_", ["get", "column.propName", ["loc", [null, [129, 101], [129, 116]]]], ")"], [], ["loc", [null, [129, 28], [129, 121]]]]], ["loc", [null, [123, 12], [130, 14]]]], ["block", "if", [["get", "showValidationMessages", ["loc", [null, [131, 18], [131, 40]]]]], [], 0, null, ["loc", [null, [131, 12], [136, 19]]]]],
              locals: [],
              templates: [child0]
            };
          })();
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 101,
                  "column": 8
                },
                "end": {
                  "line": 138,
                  "column": 8
                }
              },
              "moduleName": "dummy/templates/components/object-list-view-row.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
              dom.insertBoundary(fragment, 0);
              dom.insertBoundary(fragment, null);
              return morphs;
            },
            statements: [["block", "if", [["get", "inHierarchicalMode", ["loc", [null, [102, 16], [102, 34]]]]], [], 0, 1, ["loc", [null, [102, 10], [137, 17]]]]],
            locals: [],
            templates: [child0, child1]
          };
        })();
        var child1 = (function () {
          var child0 = (function () {
            return {
              meta: {
                "fragmentReason": false,
                "revision": "Ember@2.4.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 140,
                    "column": 12
                  },
                  "end": {
                    "line": 149,
                    "column": 12
                  }
                },
                "moduleName": "dummy/templates/components/object-list-view-row.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("              ");
                dom.appendChild(el0, el1);
                var el1 = dom.createElement("button");
                dom.setAttribute(el1, "type", "button");
                var el2 = dom.createTextNode("\n                ");
                dom.appendChild(el1, el2);
                var el2 = dom.createElement("i");
                dom.appendChild(el1, el2);
                var el2 = dom.createTextNode("\n              ");
                dom.appendChild(el1, el2);
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var element7 = dom.childAt(fragment, [1]);
                var element8 = dom.childAt(element7, [1]);
                var morphs = new Array(4);
                morphs[0] = dom.createAttrMorph(element7, 'class');
                morphs[1] = dom.createAttrMorph(element7, 'title');
                morphs[2] = dom.createElementMorph(element7);
                morphs[3] = dom.createAttrMorph(element8, 'class');
                return morphs;
              },
              statements: [["attribute", "class", ["concat", ["ui button hierarchy-expand icon mini compact ", ["subexpr", "if", [["get", "_recordsIsLoading", ["loc", [null, [143, 73], [143, 90]]]], "loading"], [], ["loc", [null, [143, 68], [143, 102]]]], " ", ["get", "buttonClass", ["loc", [null, [143, 105], [143, 116]]]]]]], ["attribute", "title", ["subexpr", "t", [["subexpr", "concat", ["components.object-list-view.hierarchy-buttons.", ["subexpr", "if", [["get", "_expanded", ["loc", [null, [144, 87], [144, 96]]]], "minus", "plus"], [], ["loc", [null, [144, 83], [144, 112]]]], "-button-title"], [], ["loc", [null, [144, 26], [144, 129]]]]], [], ["loc", [null, [144, 22], [144, 131]]]]], ["element", "action", [["subexpr", "if", [["get", "recordsLoaded", ["loc", [null, [145, 29], [145, 42]]]], "expand", "loadChildRecords"], [], ["loc", [null, [145, 25], [145, 71]]]]], ["bubbles", false], ["loc", [null, [145, 16], [145, 87]]]], ["attribute", "class", ["concat", [["subexpr", "if", [["get", "_expanded", ["loc", [null, [147, 31], [147, 40]]]], "minus", "plus"], [], ["loc", [null, [147, 26], [147, 57]]]], " hierarchy-expand icon"]]]],
              locals: [],
              templates: []
            };
          })();
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 138,
                  "column": 8
                },
                "end": {
                  "line": 155,
                  "column": 8
                }
              },
              "moduleName": "dummy/templates/components/object-list-view-row.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("          ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "oveflow-text");
              var el2 = dom.createTextNode("\n");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("            ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var element9 = dom.childAt(fragment, [1]);
              var morphs = new Array(2);
              morphs[0] = dom.createMorphAt(element9, 1, 1);
              morphs[1] = dom.createMorphAt(element9, 3, 3);
              return morphs;
            },
            statements: [["block", "if", [["subexpr", "and", [["subexpr", "not", [["get", "index", ["loc", [null, [140, 28], [140, 33]]]]], [], ["loc", [null, [140, 23], [140, 34]]]], ["get", "inHierarchicalMode", ["loc", [null, [140, 35], [140, 53]]]], ["subexpr", "or", [["get", "isParentRecord", ["loc", [null, [140, 58], [140, 72]]]], ["get", "hasRecords", ["loc", [null, [140, 73], [140, 83]]]]], [], ["loc", [null, [140, 54], [140, 84]]]]], [], ["loc", [null, [140, 18], [140, 85]]]]], [], 0, null, ["loc", [null, [140, 12], [149, 19]]]], ["inline", "get-formatted", [["get", "record.data", ["loc", [null, [150, 28], [150, 39]]]], ["get", "column.propName", ["loc", [null, [150, 40], [150, 55]]]]], ["dateFormat", ["subexpr", "@mut", [["get", "dateFormat", ["loc", [null, [151, 25], [151, 35]]]]], [], []], "moment", ["subexpr", "@mut", [["get", "moment", ["loc", [null, [152, 21], [152, 27]]]]], [], []]], ["loc", [null, [150, 12], [153, 14]]]]],
            locals: [],
            templates: [child0]
          };
        })();
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 96,
                "column": 4
              },
              "end": {
                "line": 157,
                "column": 4
              }
            },
            "moduleName": "dummy/templates/components/object-list-view-row.hbs"
          },
          isEmpty: false,
          arity: 2,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("td");
            var el2 = dom.createTextNode("\n");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("      ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element12 = dom.childAt(fragment, [1]);
            var morphs = new Array(4);
            morphs[0] = dom.createAttrMorph(element12, 'class');
            morphs[1] = dom.createAttrMorph(element12, 'style');
            morphs[2] = dom.createElementMorph(element12);
            morphs[3] = dom.createMorphAt(element12, 1, 1);
            return morphs;
          },
          statements: [["attribute", "class", ["concat", ["field ", ["subexpr", "if", [["subexpr", "and", [["get", "showValidationMessages", ["loc", [null, [99, 31], [99, 53]]]], ["subexpr", "get", [["get", "record.data", ["loc", [null, [99, 59], [99, 70]]]], ["subexpr", "concat", ["errors.", ["get", "column.propName", ["loc", [null, [99, 89], [99, 104]]]], ".length"], [], ["loc", [null, [99, 71], [99, 115]]]]], [], ["loc", [null, [99, 54], [99, 116]]]]], [], ["loc", [null, [99, 26], [99, 117]]]], "error"], [], ["loc", [null, [99, 21], [99, 127]]]], " ", ["subexpr", "if", [["subexpr", "array-contains", [["get", "overflowedComponents", ["loc", [null, [99, 149], [99, 169]]]], ["get", "column.cellComponent.componentName", ["loc", [null, [99, 170], [99, 204]]]]], [], ["loc", [null, [99, 133], [99, 205]]]], " overflowed-cell"], [], ["loc", [null, [99, 128], [99, 226]]]]]]], ["attribute", "style", ["subexpr", "if", [["subexpr", "and", [["subexpr", "not", [["get", "index", ["loc", [null, [100, 29], [100, 34]]]]], [], ["loc", [null, [100, 24], [100, 35]]]], ["get", "inHierarchicalMode", ["loc", [null, [100, 36], [100, 54]]]]], [], ["loc", [null, [100, 19], [100, 55]]]], ["get", "hierarchicalIndentStyle", ["loc", [null, [100, 56], [100, 79]]]], ["get", "defaultPaddingStyle", ["loc", [null, [100, 80], [100, 99]]]]], [], ["loc", [null, [100, 14], [100, 101]]]]], ["element", "action", ["onRowClick", ["get", "record", ["loc", [null, [98, 30], [98, 36]]]], ["subexpr", "hash", [], ["column", ["get", "column", ["loc", [null, [98, 50], [98, 56]]]], "columnIndex", ["get", "index", ["loc", [null, [98, 69], [98, 74]]]]], ["loc", [null, [98, 37], [98, 75]]]]], ["preventDefault", false], ["loc", [null, [98, 8], [98, 98]]]], ["block", "if", [["get", "column.cellComponent.componentName", ["loc", [null, [101, 14], [101, 48]]]]], [], 0, 1, ["loc", [null, [101, 8], [155, 15]]]]],
          locals: ["column", "index"],
          templates: [child0, child1]
        };
      })();
      var child3 = (function () {
        var child0 = (function () {
          var child0 = (function () {
            return {
              meta: {
                "fragmentReason": false,
                "revision": "Ember@2.4.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 164,
                    "column": 14
                  },
                  "end": {
                    "line": 169,
                    "column": 14
                  }
                },
                "moduleName": "dummy/templates/components/object-list-view-row.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("                ");
                dom.appendChild(el0, el1);
                var el1 = dom.createElement("div");
                dom.setAttribute(el1, "class", "item disabled edit-menu");
                var el2 = dom.createTextNode("\n                  ");
                dom.appendChild(el1, el2);
                var el2 = dom.createElement("i");
                dom.setAttribute(el2, "class", "edit icon");
                dom.appendChild(el1, el2);
                var el2 = dom.createTextNode("\n                  ");
                dom.appendChild(el1, el2);
                var el2 = dom.createElement("span");
                var el3 = dom.createComment("");
                dom.appendChild(el2, el3);
                dom.appendChild(el1, el2);
                var el2 = dom.createTextNode("\n                ");
                dom.appendChild(el1, el2);
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var morphs = new Array(1);
                morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1, 3]), 0, 0);
                return morphs;
              },
              statements: [["inline", "t", ["components.object-list-view.menu-in-row.edit-menu-item-title"], [], ["loc", [null, [167, 24], [167, 92]]]]],
              locals: [],
              templates: []
            };
          })();
          var child1 = (function () {
            return {
              meta: {
                "fragmentReason": false,
                "revision": "Ember@2.4.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 169,
                    "column": 14
                  },
                  "end": {
                    "line": 174,
                    "column": 14
                  }
                },
                "moduleName": "dummy/templates/components/object-list-view-row.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("                ");
                dom.appendChild(el0, el1);
                var el1 = dom.createElement("div");
                dom.setAttribute(el1, "class", "item edit-menu");
                var el2 = dom.createTextNode("\n                  ");
                dom.appendChild(el1, el2);
                var el2 = dom.createElement("i");
                dom.setAttribute(el2, "class", "edit icon");
                dom.appendChild(el1, el2);
                var el2 = dom.createTextNode("\n                  ");
                dom.appendChild(el1, el2);
                var el2 = dom.createElement("span");
                var el3 = dom.createComment("");
                dom.appendChild(el2, el3);
                dom.appendChild(el1, el2);
                var el2 = dom.createTextNode("\n                ");
                dom.appendChild(el1, el2);
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var element4 = dom.childAt(fragment, [1]);
                var morphs = new Array(2);
                morphs[0] = dom.createElementMorph(element4);
                morphs[1] = dom.createMorphAt(dom.childAt(element4, [3]), 0, 0);
                return morphs;
              },
              statements: [["element", "action", ["onRowClick", ["get", "record", ["loc", [null, [170, 66], [170, 72]]]], ["subexpr", "hash", [], ["column", null, "columnIndex", null, "rowEdit", true], ["loc", [null, [170, 73], [170, 121]]]]], [], ["loc", [null, [170, 44], [170, 123]]]], ["inline", "t", ["components.object-list-view.menu-in-row.edit-menu-item-title"], [], ["loc", [null, [172, 24], [172, 92]]]]],
              locals: [],
              templates: []
            };
          })();
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 163,
                  "column": 12
                },
                "end": {
                  "line": 175,
                  "column": 12
                }
              },
              "moduleName": "dummy/templates/components/object-list-view-row.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
              dom.insertBoundary(fragment, 0);
              dom.insertBoundary(fragment, null);
              return morphs;
            },
            statements: [["block", "if", [["get", "readonly", ["loc", [null, [164, 20], [164, 28]]]]], [], 0, 1, ["loc", [null, [164, 14], [174, 21]]]]],
            locals: [],
            templates: [child0, child1]
          };
        })();
        var child1 = (function () {
          var child0 = (function () {
            return {
              meta: {
                "fragmentReason": false,
                "revision": "Ember@2.4.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 177,
                    "column": 14
                  },
                  "end": {
                    "line": 182,
                    "column": 14
                  }
                },
                "moduleName": "dummy/templates/components/object-list-view-row.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("                ");
                dom.appendChild(el0, el1);
                var el1 = dom.createElement("div");
                dom.setAttribute(el1, "class", "item disabled prototype-menu");
                var el2 = dom.createTextNode("\n                  ");
                dom.appendChild(el1, el2);
                var el2 = dom.createElement("i");
                dom.setAttribute(el2, "class", "copy icon");
                dom.appendChild(el1, el2);
                var el2 = dom.createTextNode("\n                  ");
                dom.appendChild(el1, el2);
                var el2 = dom.createElement("span");
                var el3 = dom.createComment("");
                dom.appendChild(el2, el3);
                dom.appendChild(el1, el2);
                var el2 = dom.createTextNode("\n                ");
                dom.appendChild(el1, el2);
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var morphs = new Array(1);
                morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1, 3]), 0, 0);
                return morphs;
              },
              statements: [["inline", "t", ["components.object-list-view.menu-in-row.prototype-menu-item-title"], [], ["loc", [null, [180, 24], [180, 97]]]]],
              locals: [],
              templates: []
            };
          })();
          var child1 = (function () {
            return {
              meta: {
                "fragmentReason": false,
                "revision": "Ember@2.4.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 182,
                    "column": 14
                  },
                  "end": {
                    "line": 187,
                    "column": 14
                  }
                },
                "moduleName": "dummy/templates/components/object-list-view-row.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("                ");
                dom.appendChild(el0, el1);
                var el1 = dom.createElement("div");
                dom.setAttribute(el1, "class", "item prototype-menu");
                var el2 = dom.createTextNode("\n                  ");
                dom.appendChild(el1, el2);
                var el2 = dom.createElement("i");
                dom.setAttribute(el2, "class", "copy icon");
                dom.appendChild(el1, el2);
                var el2 = dom.createTextNode("\n                  ");
                dom.appendChild(el1, el2);
                var el2 = dom.createElement("span");
                var el3 = dom.createComment("");
                dom.appendChild(el2, el3);
                dom.appendChild(el1, el2);
                var el2 = dom.createTextNode("\n                ");
                dom.appendChild(el1, el2);
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var element3 = dom.childAt(fragment, [1]);
                var morphs = new Array(2);
                morphs[0] = dom.createElementMorph(element3);
                morphs[1] = dom.createMorphAt(dom.childAt(element3, [3]), 0, 0);
                return morphs;
              },
              statements: [["element", "action", [["get", "createNewByPrototype", ["loc", [null, [183, 58], [183, 78]]]], ["subexpr", "get", [["get", "record", ["loc", [null, [183, 84], [183, 90]]]], "data.id"], [], ["loc", [null, [183, 79], [183, 101]]]]], [], ["loc", [null, [183, 49], [183, 103]]]], ["inline", "t", ["components.object-list-view.menu-in-row.prototype-menu-item-title"], [], ["loc", [null, [185, 24], [185, 97]]]]],
              locals: [],
              templates: []
            };
          })();
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 176,
                  "column": 12
                },
                "end": {
                  "line": 188,
                  "column": 12
                }
              },
              "moduleName": "dummy/templates/components/object-list-view-row.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
              dom.insertBoundary(fragment, 0);
              dom.insertBoundary(fragment, null);
              return morphs;
            },
            statements: [["block", "if", [["get", "readonly", ["loc", [null, [177, 20], [177, 28]]]]], [], 0, 1, ["loc", [null, [177, 14], [187, 21]]]]],
            locals: [],
            templates: [child0, child1]
          };
        })();
        var child2 = (function () {
          var child0 = (function () {
            return {
              meta: {
                "fragmentReason": false,
                "revision": "Ember@2.4.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 190,
                    "column": 14
                  },
                  "end": {
                    "line": 195,
                    "column": 14
                  }
                },
                "moduleName": "dummy/templates/components/object-list-view-row.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("                ");
                dom.appendChild(el0, el1);
                var el1 = dom.createElement("div");
                dom.setAttribute(el1, "class", "item disabled delete-menu");
                var el2 = dom.createTextNode("\n                  ");
                dom.appendChild(el1, el2);
                var el2 = dom.createElement("i");
                dom.setAttribute(el2, "class", "trash icon");
                dom.appendChild(el1, el2);
                var el2 = dom.createTextNode("\n                  ");
                dom.appendChild(el1, el2);
                var el2 = dom.createElement("span");
                var el3 = dom.createComment("");
                dom.appendChild(el2, el3);
                dom.appendChild(el1, el2);
                var el2 = dom.createTextNode("\n                ");
                dom.appendChild(el1, el2);
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var morphs = new Array(1);
                morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1, 3]), 0, 0);
                return morphs;
              },
              statements: [["inline", "t", ["components.object-list-view.menu-in-row.delete-menu-item-title"], [], ["loc", [null, [193, 24], [193, 94]]]]],
              locals: [],
              templates: []
            };
          })();
          var child1 = (function () {
            return {
              meta: {
                "fragmentReason": false,
                "revision": "Ember@2.4.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 195,
                    "column": 14
                  },
                  "end": {
                    "line": 200,
                    "column": 14
                  }
                },
                "moduleName": "dummy/templates/components/object-list-view-row.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("                ");
                dom.appendChild(el0, el1);
                var el1 = dom.createElement("div");
                dom.setAttribute(el1, "class", "item delete-menu");
                var el2 = dom.createTextNode("\n                  ");
                dom.appendChild(el1, el2);
                var el2 = dom.createElement("i");
                dom.setAttribute(el2, "class", "trash icon");
                dom.appendChild(el1, el2);
                var el2 = dom.createTextNode("\n                  ");
                dom.appendChild(el1, el2);
                var el2 = dom.createElement("span");
                var el3 = dom.createComment("");
                dom.appendChild(el2, el3);
                dom.appendChild(el1, el2);
                var el2 = dom.createTextNode("\n                ");
                dom.appendChild(el1, el2);
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var element2 = dom.childAt(fragment, [1]);
                var morphs = new Array(2);
                morphs[0] = dom.createElementMorph(element2);
                morphs[1] = dom.createMorphAt(dom.childAt(element2, [3]), 0, 0);
                return morphs;
              },
              statements: [["element", "action", [["get", "deleteRow", ["loc", [null, [196, 55], [196, 64]]]], ["get", "record", ["loc", [null, [196, 65], [196, 71]]]]], [], ["loc", [null, [196, 46], [196, 73]]]], ["inline", "t", ["components.object-list-view.menu-in-row.delete-menu-item-title"], [], ["loc", [null, [198, 24], [198, 94]]]]],
              locals: [],
              templates: []
            };
          })();
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 189,
                  "column": 12
                },
                "end": {
                  "line": 201,
                  "column": 12
                }
              },
              "moduleName": "dummy/templates/components/object-list-view-row.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
              dom.insertBoundary(fragment, 0);
              dom.insertBoundary(fragment, null);
              return morphs;
            },
            statements: [["block", "if", [["subexpr", "or", [["get", "readonly", ["loc", [null, [190, 24], [190, 32]]]], ["subexpr", "not", [["get", "record.rowConfig.canBeDeleted", ["loc", [null, [190, 38], [190, 67]]]]], [], ["loc", [null, [190, 33], [190, 68]]]]], [], ["loc", [null, [190, 20], [190, 69]]]]], [], 0, 1, ["loc", [null, [190, 14], [200, 21]]]]],
            locals: [],
            templates: [child0, child1]
          };
        })();
        var child3 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 202,
                  "column": 12
                },
                "end": {
                  "line": 207,
                  "column": 12
                }
              },
              "moduleName": "dummy/templates/components/object-list-view-row.hbs"
            },
            isEmpty: false,
            arity: 1,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("              ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "item");
              var el2 = dom.createTextNode("\n                ");
              dom.appendChild(el1, el2);
              var el2 = dom.createElement("i");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n                ");
              dom.appendChild(el1, el2);
              var el2 = dom.createElement("span");
              var el3 = dom.createComment("");
              dom.appendChild(el2, el3);
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n              ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var element0 = dom.childAt(fragment, [1]);
              var element1 = dom.childAt(element0, [1]);
              var morphs = new Array(3);
              morphs[0] = dom.createElementMorph(element0);
              morphs[1] = dom.createAttrMorph(element1, 'class');
              morphs[2] = dom.createMorphAt(dom.childAt(element0, [3]), 0, 0);
              return morphs;
            },
            statements: [["element", "action", [["get", "sendMenuItemAction", ["loc", [null, [203, 41], [203, 59]]]], ["get", "menuItem.actionName", ["loc", [null, [203, 60], [203, 79]]]], ["get", "record.data", ["loc", [null, [203, 80], [203, 91]]]]], [], ["loc", [null, [203, 32], [203, 93]]]], ["attribute", "class", ["concat", [["get", "menuItem.icon", ["loc", [null, [204, 28], [204, 41]]]]]]], ["content", "menuItem.title", ["loc", [null, [205, 22], [205, 40]]]]],
            locals: ["menuItem"],
            templates: []
          };
        })();
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 158,
                "column": 4
              },
              "end": {
                "line": 211,
                "column": 4
              }
            },
            "moduleName": "dummy/templates/components/object-list-view-row.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("td");
            dom.setAttribute(el1, "class", "object-list-view-menu");
            var el2 = dom.createTextNode("\n        ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("div");
            dom.setAttribute(el2, "class", "right pointing ui icon dropdown button");
            var el3 = dom.createTextNode("\n          ");
            dom.appendChild(el2, el3);
            var el3 = dom.createElement("i");
            dom.setAttribute(el3, "class", "list layout icon");
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("\n          ");
            dom.appendChild(el2, el3);
            var el3 = dom.createElement("div");
            dom.setAttribute(el3, "class", "left menu");
            var el4 = dom.createTextNode("\n");
            dom.appendChild(el3, el4);
            var el4 = dom.createComment("");
            dom.appendChild(el3, el4);
            var el4 = dom.createComment("");
            dom.appendChild(el3, el4);
            var el4 = dom.createComment("");
            dom.appendChild(el3, el4);
            var el4 = dom.createComment("");
            dom.appendChild(el3, el4);
            var el4 = dom.createTextNode("          ");
            dom.appendChild(el3, el4);
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("\n        ");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n      ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element5 = dom.childAt(fragment, [1]);
            var element6 = dom.childAt(element5, [1, 3]);
            var morphs = new Array(5);
            morphs[0] = dom.createAttrMorph(element5, 'style');
            morphs[1] = dom.createMorphAt(element6, 1, 1);
            morphs[2] = dom.createMorphAt(element6, 2, 2);
            morphs[3] = dom.createMorphAt(element6, 3, 3);
            morphs[4] = dom.createMorphAt(element6, 4, 4);
            return morphs;
          },
          statements: [["attribute", "style", ["get", "defaultPaddingStyle", ["loc", [null, [159, 48], [159, 67]]]]], ["block", "if", [["get", "showEditMenuItemInRow", ["loc", [null, [163, 18], [163, 39]]]]], [], 0, null, ["loc", [null, [163, 12], [175, 19]]]], ["block", "if", [["get", "showPrototypeMenuItemInRow", ["loc", [null, [176, 18], [176, 44]]]]], [], 1, null, ["loc", [null, [176, 12], [188, 19]]]], ["block", "if", [["get", "showDeleteMenuItemInRow", ["loc", [null, [189, 18], [189, 41]]]]], [], 2, null, ["loc", [null, [189, 12], [201, 19]]]], ["block", "each", [["get", "menuInRowAdditionalItems", ["loc", [null, [202, 20], [202, 44]]]]], [], 3, null, ["loc", [null, [202, 12], [207, 21]]]]],
          locals: [],
          templates: [child0, child1, child2, child3]
        };
      })();
      var child4 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 214,
                  "column": 4
                },
                "end": {
                  "line": 248,
                  "column": 4
                }
              },
              "moduleName": "dummy/templates/components/object-list-view-row.hbs"
            },
            isEmpty: false,
            arity: 1,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("      ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
              return morphs;
            },
            statements: [["inline", "object-list-view-row", [], ["record", ["subexpr", "@mut", [["get", "record", ["loc", [null, [216, 15], [216, 21]]]]], [], []], "columns", ["subexpr", "@mut", [["get", "columns", ["loc", [null, [217, 16], [217, 23]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [218, 17], [218, 25]]]]], [], []], "required", ["subexpr", "@mut", [["get", "required", ["loc", [null, [219, 17], [219, 25]]]]], [], []], "showMenuColumn", ["subexpr", "@mut", [["get", "showMenuColumn", ["loc", [null, [220, 23], [220, 37]]]]], [], []], "sendMenuItemAction", ["subexpr", "@mut", [["get", "sendMenuItemAction", ["loc", [null, [221, 27], [221, 45]]]]], [], []], "menuInRowAdditionalItems", ["subexpr", "@mut", [["get", "menuInRowAdditionalItems", ["loc", [null, [222, 33], [222, 57]]]]], [], []], "showHelperColumn", ["subexpr", "@mut", [["get", "showHelperColumn", ["loc", [null, [223, 25], [223, 41]]]]], [], []], "defaultRowConfig", ["subexpr", "@mut", [["get", "defaultRowConfig", ["loc", [null, [224, 25], [224, 41]]]]], [], []], "showValidationMessages", ["subexpr", "@mut", [["get", "showValidationMessages", ["loc", [null, [225, 31], [225, 53]]]]], [], []], "showAsteriskInRow", ["subexpr", "@mut", [["get", "showAsteriskInRow", ["loc", [null, [226, 26], [226, 43]]]]], [], []], "showCheckBoxInRow", ["subexpr", "@mut", [["get", "showCheckBoxInRow", ["loc", [null, [227, 26], [227, 43]]]]], [], []], "showEditButtonInRow", ["subexpr", "@mut", [["get", "showEditButtonInRow", ["loc", [null, [228, 28], [228, 47]]]]], [], []], "showPrototypeButtonInRow", ["subexpr", "@mut", [["get", "showPrototypeButtonInRow", ["loc", [null, [229, 33], [229, 57]]]]], [], []], "showDeleteButtonInRow", ["subexpr", "@mut", [["get", "showDeleteButtonInRow", ["loc", [null, [230, 30], [230, 51]]]]], [], []], "isParentRecordPropertyName", ["subexpr", "@mut", [["get", "isParentRecordPropertyName", ["loc", [null, [231, 35], [231, 61]]]]], [], []], "inHierarchicalMode", ["subexpr", "@mut", [["get", "inHierarchicalMode", ["loc", [null, [232, 27], [232, 45]]]]], [], []], "inExpandMode", ["subexpr", "unbound", [["get", "inExpandMode", ["loc", [null, [233, 30], [233, 42]]]]], [], ["loc", [null, [233, 21], [233, 43]]]], "loadRecords", ["subexpr", "@mut", [["get", "loadRecords", ["loc", [null, [234, 20], [234, 31]]]]], [], []], "doRenderData", ["subexpr", "@mut", [["get", "record.doRenderData", ["loc", [null, [235, 21], [235, 40]]]]], [], []], "rowClick", ["subexpr", "@mut", [["get", "rowClick", ["loc", [null, [236, 17], [236, 25]]]]], [], []], "selectRow", ["subexpr", "@mut", [["get", "selectRow", ["loc", [null, [237, 18], [237, 27]]]]], [], []], "createNewByPrototype", ["subexpr", "@mut", [["get", "createNewByPrototype", ["loc", [null, [238, 29], [238, 49]]]]], [], []], "deleteRow", ["subexpr", "@mut", [["get", "deleteRow", ["loc", [null, [239, 18], [239, 27]]]]], [], []], "_currentLevel", ["subexpr", "@mut", [["get", "_currentLevel", ["loc", [null, [240, 22], [240, 35]]]]], [], []], "hierarchicalIndent", ["subexpr", "@mut", [["get", "_hierarchicalIndent", ["loc", [null, [241, 27], [241, 46]]]]], [], []], "defaultLeftPadding", ["subexpr", "@mut", [["get", "defaultLeftPadding", ["loc", [null, [242, 27], [242, 45]]]]], [], []], "overflowedComponents", ["subexpr", "@mut", [["get", "overflowedComponents", ["loc", [null, [243, 29], [243, 49]]]]], [], []], "folvComponentName", ["subexpr", "@mut", [["get", "folvComponentName", ["loc", [null, [244, 26], [244, 43]]]]], [], []], "hierarchyLoadedLevel", ["subexpr", "@mut", [["get", "hierarchyLoadedLevel", ["loc", [null, [245, 29], [245, 49]]]]], [], []], "configurateRow", ["subexpr", "@mut", [["get", "configurateRow", ["loc", [null, [246, 23], [246, 37]]]]], [], []]], ["loc", [null, [215, 6], [247, 8]]]]],
            locals: ["record"],
            templates: []
          };
        })();
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 213,
                "column": 2
              },
              "end": {
                "line": 249,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/components/object-list-view-row.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [["block", "each", [["get", "records", ["loc", [null, [214, 12], [214, 19]]]]], ["key", "key"], 0, null, ["loc", [null, [214, 4], [248, 13]]]]],
          locals: [],
          templates: [child0]
        };
      })();
      return {
        meta: {
          "fragmentReason": {
            "name": "missing-wrapper",
            "problems": ["multiple-nodes", "wrong-type"]
          },
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 250,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/object-list-view-row.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("tr");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("td");
          var el3 = dom.createTextNode("\n      ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("div");
          dom.setAttribute(el3, "class", "hidden");
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("    ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element23 = dom.childAt(fragment, [1]);
          var element24 = dom.childAt(element23, [1]);
          var morphs = new Array(9);
          morphs[0] = dom.createAttrMorph(element23, 'class');
          morphs[1] = dom.createAttrMorph(element24, 'class');
          morphs[2] = dom.createAttrMorph(element24, 'style');
          morphs[3] = dom.createMorphAt(dom.childAt(element24, [1]), 0, 0);
          morphs[4] = dom.createMorphAt(element24, 3, 3);
          morphs[5] = dom.createMorphAt(element24, 4, 4);
          morphs[6] = dom.createMorphAt(element23, 3, 3);
          morphs[7] = dom.createMorphAt(element23, 4, 4);
          morphs[8] = dom.createMorphAt(fragment, 3, 3, contextualElement);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["attribute", "class", ["concat", [["get", "record.rowConfig.customClass", ["loc", [null, [2, 15], [2, 43]]]]]]], ["attribute", "class", ["concat", ["object-list-view-helper-column ", ["subexpr", "unless", [["get", "showHelperColumn", ["loc", [null, [3, 55], [3, 71]]]], "hidden"], [], ["loc", [null, [3, 46], [3, 82]]]]]]], ["attribute", "style", ["get", "defaultPaddingStyle", ["loc", [null, [3, 92], [3, 111]]]]], ["content", "record.key", ["loc", [null, [4, 26], [4, 40]]]], ["block", "each", [["get", "customButtonsInRow", ["loc", [null, [5, 14], [5, 32]]]]], [], 0, null, ["loc", [null, [5, 6], [13, 15]]]], ["block", "if", [["get", "showHelperColumn", ["loc", [null, [14, 12], [14, 28]]]]], [], 1, null, ["loc", [null, [14, 6], [94, 13]]]], ["block", "each", [["get", "columns", ["loc", [null, [96, 12], [96, 19]]]]], [], 2, null, ["loc", [null, [96, 4], [157, 13]]]], ["block", "if", [["get", "showMenuColumn", ["loc", [null, [158, 10], [158, 24]]]]], [], 3, null, ["loc", [null, [158, 4], [211, 11]]]], ["block", "if", [["subexpr", "and", [["get", "_expanded", ["loc", [null, [213, 13], [213, 22]]]], ["get", "inHierarchicalMode", ["loc", [null, [213, 23], [213, 41]]]]], [], ["loc", [null, [213, 8], [213, 42]]]]], [], 4, null, ["loc", [null, [213, 2], [249, 9]]]]],
        locals: [],
        templates: [child0, child1, child2, child3, child4]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 251,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/object-list-view-row.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "if", [["get", "doRenderData", ["loc", [null, [1, 6], [1, 18]]]]], [], 0, null, ["loc", [null, [1, 0], [250, 7]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define("dummy/templates/components/object-list-view-single-column-cell", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 5,
                "column": 6
              },
              "end": {
                "line": 13,
                "column": 6
              }
            },
            "moduleName": "dummy/templates/components/object-list-view-single-column-cell.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "component", [["get", "column.cellComponent.componentName", ["loc", [null, [6, 20], [6, 54]]]]], ["dynamicProperties", ["subexpr", "@mut", [["get", "column.cellComponent.componentProperties", ["loc", [null, [7, 28], [7, 68]]]]], [], []], "relatedModel", ["subexpr", "@mut", [["get", "model", ["loc", [null, [8, 23], [8, 28]]]]], [], []], "value", ["subexpr", "mut", [["subexpr", "get", [["get", "model", ["loc", [null, [9, 26], [9, 31]]]], ["get", "column.propName", ["loc", [null, [9, 32], [9, 47]]]]], [], ["loc", [null, [9, 21], [9, 48]]]]], [], ["loc", [null, [9, 16], [9, 49]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [10, 19], [10, 27]]]]], [], []], "required", ["subexpr", "@mut", [["get", "required", ["loc", [null, [11, 19], [11, 27]]]]], [], []]], ["loc", [null, [6, 8], [12, 10]]]]],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 13,
                "column": 6
              },
              "end": {
                "line": 20,
                "column": 6
              }
            },
            "moduleName": "dummy/templates/components/object-list-view-single-column-cell.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1, "class", "oveflow-text");
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n        ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
            return morphs;
          },
          statements: [["inline", "get-formatted", [["get", "model", ["loc", [null, [15, 26], [15, 31]]]], ["get", "column.propName", ["loc", [null, [15, 32], [15, 47]]]]], ["dateFormat", ["subexpr", "@mut", [["get", "dateFormat", ["loc", [null, [16, 23], [16, 33]]]]], [], []], "moment", ["subexpr", "@mut", [["get", "moment", ["loc", [null, [17, 19], [17, 25]]]]], [], []]], ["loc", [null, [15, 10], [18, 12]]]]],
          locals: [],
          templates: []
        };
      })();
      var child2 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 21,
                "column": 6
              },
              "end": {
                "line": 26,
                "column": 6
              }
            },
            "moduleName": "dummy/templates/components/object-list-view-single-column-cell.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "get", [["get", "model", ["loc", [null, [23, 21], [23, 26]]]], ["subexpr", "concat", ["errors.", ["get", "column.propName", ["loc", [null, [23, 45], [23, 60]]]]], [], ["loc", [null, [23, 27], [23, 61]]]]], [], ["loc", [null, [23, 16], [23, 62]]]], "pointing", "left pointing"], ["loc", [null, [22, 8], [25, 10]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": {
            "name": "triple-curlies"
          },
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 29,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/object-list-view-single-column-cell.hbs"
        },
        isEmpty: false,
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("label");
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode(":");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          var el3 = dom.createTextNode("\n");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("    ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var element1 = dom.childAt(element0, [3]);
          var morphs = new Array(5);
          morphs[0] = dom.createAttrMorph(element0, 'class');
          morphs[1] = dom.createMorphAt(dom.childAt(element0, [1]), 0, 0);
          morphs[2] = dom.createAttrMorph(element1, 'class');
          morphs[3] = dom.createMorphAt(element1, 1, 1);
          morphs[4] = dom.createMorphAt(element1, 2, 2);
          return morphs;
        },
        statements: [["attribute", "class", ["concat", ["field ", ["subexpr", "if", [["subexpr", "and", [["get", "showValidationMessages", ["loc", [null, [2, 30], [2, 52]]]], ["subexpr", "get", [["get", "model", ["loc", [null, [2, 58], [2, 63]]]], ["subexpr", "concat", ["errors.", ["get", "column.propName", ["loc", [null, [2, 82], [2, 97]]]], ".length"], [], ["loc", [null, [2, 64], [2, 108]]]]], [], ["loc", [null, [2, 53], [2, 109]]]]], [], ["loc", [null, [2, 25], [2, 110]]]], "error"], [], ["loc", [null, [2, 20], [2, 120]]]]]]], ["content", "column.header", ["loc", [null, [3, 11], [3, 28]]]], ["attribute", "class", ["concat", ["inline fields ", ["subexpr", "if", [["subexpr", "not", [["get", "hasEditableValues", ["loc", [null, [4, 40], [4, 57]]]]], [], ["loc", [null, [4, 35], [4, 58]]]], "readonly"], [], ["loc", [null, [4, 30], [4, 71]]]]]]], ["block", "if", [["get", "column.cellComponent.componentName", ["loc", [null, [5, 12], [5, 46]]]]], [], 0, 1, ["loc", [null, [5, 6], [20, 13]]]], ["block", "if", [["get", "showValidationMessages", ["loc", [null, [21, 12], [21, 34]]]]], [], 2, null, ["loc", [null, [21, 6], [26, 13]]]]],
        locals: ["column"],
        templates: [child0, child1, child2]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 30,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/object-list-view-single-column-cell.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "each", [["get", "columns", ["loc", [null, [1, 8], [1, 15]]]]], [], 0, null, ["loc", [null, [1, 0], [29, 9]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define("dummy/templates/components/object-list-view", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 7,
                  "column": 12
                },
                "end": {
                  "line": 16,
                  "column": 12
                }
              },
              "moduleName": "dummy/templates/components/object-list-view.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("              ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("button");
              dom.setAttribute(el1, "type", "button");
              dom.setAttribute(el1, "disabled", "disabled");
              var el2 = dom.createTextNode("\n                  ");
              dom.appendChild(el1, el2);
              var el2 = dom.createElement("i");
              dom.setAttribute(el2, "class", "check-square-o icon");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n              ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var element16 = dom.childAt(fragment, [1]);
              var morphs = new Array(3);
              morphs[0] = dom.createAttrMorph(element16, 'class');
              morphs[1] = dom.createAttrMorph(element16, 'title');
              morphs[2] = dom.createElementMorph(element16);
              return morphs;
            },
            statements: [["attribute", "class", ["concat", ["ui check-all-at-page-button ", ["get", "buttonClass", ["loc", [null, [10, 53], [10, 64]]]], " disabled button"]]], ["attribute", "title", ["subexpr", "t", ["components.olv-toolbar.check-all-at-page-button-text"], [], ["loc", [null, [11, 22], [11, 82]]]]], ["element", "action", ["checkAllAtPage"], [], ["loc", [null, [13, 16], [13, 43]]]]],
            locals: [],
            templates: []
          };
        })();
        var child1 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 16,
                  "column": 12
                },
                "end": {
                  "line": 24,
                  "column": 12
                }
              },
              "moduleName": "dummy/templates/components/object-list-view.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("              ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("button");
              dom.setAttribute(el1, "type", "button");
              var el2 = dom.createTextNode("\n                  ");
              dom.appendChild(el1, el2);
              var el2 = dom.createElement("i");
              dom.setAttribute(el2, "class", "check-square-o icon");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n              ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var element15 = dom.childAt(fragment, [1]);
              var morphs = new Array(3);
              morphs[0] = dom.createAttrMorph(element15, 'class');
              morphs[1] = dom.createAttrMorph(element15, 'title');
              morphs[2] = dom.createElementMorph(element15);
              return morphs;
            },
            statements: [["attribute", "class", ["concat", ["ui check-all-at-page-button ", ["get", "buttonClass", ["loc", [null, [19, 53], [19, 64]]]], " button"]]], ["attribute", "title", ["subexpr", "t", ["components.olv-toolbar.check-all-at-page-button-text"], [], ["loc", [null, [20, 22], [20, 82]]]]], ["element", "action", ["checkAllAtPage"], [], ["loc", [null, [21, 16], [21, 43]]]]],
            locals: [],
            templates: []
          };
        })();
        var child2 = (function () {
          var child0 = (function () {
            return {
              meta: {
                "fragmentReason": false,
                "revision": "Ember@2.4.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 26,
                    "column": 14
                  },
                  "end": {
                    "line": 35,
                    "column": 14
                  }
                },
                "moduleName": "dummy/templates/components/object-list-view.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("                ");
                dom.appendChild(el0, el1);
                var el1 = dom.createElement("button");
                dom.setAttribute(el1, "type", "button");
                dom.setAttribute(el1, "disabled", "disabled");
                var el2 = dom.createTextNode("\n                    ");
                dom.appendChild(el1, el2);
                var el2 = dom.createElement("i");
                dom.setAttribute(el2, "class", "check-all-square-o icon");
                dom.appendChild(el1, el2);
                var el2 = dom.createTextNode("\n                ");
                dom.appendChild(el1, el2);
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var element14 = dom.childAt(fragment, [1]);
                var morphs = new Array(3);
                morphs[0] = dom.createAttrMorph(element14, 'class');
                morphs[1] = dom.createAttrMorph(element14, 'title');
                morphs[2] = dom.createElementMorph(element14);
                return morphs;
              },
              statements: [["attribute", "class", ["concat", ["ui check-all-button ", ["get", "buttonClass", ["loc", [null, [29, 47], [29, 58]]]], " ", ["subexpr", "if", [["get", "allSelect", ["loc", [null, [29, 66], [29, 75]]]], "activated"], [], ["loc", [null, [29, 61], [29, 89]]]], " disabled button"]]], ["attribute", "title", ["subexpr", "t", ["components.olv-toolbar.check-all-button-text"], [], ["loc", [null, [30, 24], [30, 76]]]]], ["element", "action", ["checkAll"], [], ["loc", [null, [32, 18], [32, 39]]]]],
              locals: [],
              templates: []
            };
          })();
          var child1 = (function () {
            return {
              meta: {
                "fragmentReason": false,
                "revision": "Ember@2.4.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 35,
                    "column": 14
                  },
                  "end": {
                    "line": 43,
                    "column": 14
                  }
                },
                "moduleName": "dummy/templates/components/object-list-view.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("                ");
                dom.appendChild(el0, el1);
                var el1 = dom.createElement("button");
                dom.setAttribute(el1, "type", "button");
                var el2 = dom.createTextNode("\n                    ");
                dom.appendChild(el1, el2);
                var el2 = dom.createElement("i");
                dom.setAttribute(el2, "class", "check-all-square-o icon");
                dom.appendChild(el1, el2);
                var el2 = dom.createTextNode("\n                ");
                dom.appendChild(el1, el2);
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var element13 = dom.childAt(fragment, [1]);
                var morphs = new Array(3);
                morphs[0] = dom.createAttrMorph(element13, 'class');
                morphs[1] = dom.createAttrMorph(element13, 'title');
                morphs[2] = dom.createElementMorph(element13);
                return morphs;
              },
              statements: [["attribute", "class", ["concat", ["ui check-all-button ", ["get", "buttonClass", ["loc", [null, [38, 47], [38, 58]]]], " ", ["subexpr", "if", [["get", "allSelect", ["loc", [null, [38, 66], [38, 75]]]], "activated"], [], ["loc", [null, [38, 61], [38, 89]]]], " button"]]], ["attribute", "title", ["subexpr", "t", ["components.olv-toolbar.check-all-button-text"], [], ["loc", [null, [39, 24], [39, 76]]]]], ["element", "action", ["checkAll"], [], ["loc", [null, [40, 18], [40, 39]]]]],
              locals: [],
              templates: []
            };
          })();
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 25,
                  "column": 12
                },
                "end": {
                  "line": 44,
                  "column": 12
                }
              },
              "moduleName": "dummy/templates/components/object-list-view.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
              dom.insertBoundary(fragment, 0);
              dom.insertBoundary(fragment, null);
              return morphs;
            },
            statements: [["block", "if", [["get", "readonly", ["loc", [null, [26, 20], [26, 28]]]]], [], 0, 1, ["loc", [null, [26, 14], [43, 21]]]]],
            locals: [],
            templates: [child0, child1]
          };
        })();
        var child3 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 45,
                  "column": 12
                },
                "end": {
                  "line": 53,
                  "column": 12
                }
              },
              "moduleName": "dummy/templates/components/object-list-view.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("              ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("button");
              dom.setAttribute(el1, "type", "button");
              var el2 = dom.createTextNode("\n                  ");
              dom.appendChild(el1, el2);
              var el2 = dom.createElement("i");
              dom.setAttribute(el2, "class", "sort icon");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n              ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var element12 = dom.childAt(fragment, [1]);
              var morphs = new Array(3);
              morphs[0] = dom.createAttrMorph(element12, 'class');
              morphs[1] = dom.createAttrMorph(element12, 'title');
              morphs[2] = dom.createElementMorph(element12);
              return morphs;
            },
            statements: [["attribute", "class", ["concat", ["ui clear-sorting-button ", ["get", "buttonClass", ["loc", [null, [48, 49], [48, 60]]]], " button"]]], ["attribute", "title", ["subexpr", "t", ["components.olv-toolbar.clear-sorting-button-text"], [], ["loc", [null, [49, 22], [49, 78]]]]], ["element", "action", ["clearSorting"], [], ["loc", [null, [50, 16], [50, 41]]]]],
            locals: [],
            templates: []
          };
        })();
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 6,
                "column": 10
              },
              "end": {
                "line": 54,
                "column": 10
              }
            },
            "moduleName": "dummy/templates/components/object-list-view.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(3);
            morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
            morphs[1] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            morphs[2] = dom.createMorphAt(fragment, 2, 2, contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [["block", "if", [["subexpr", "or", [["get", "readonly", ["loc", [null, [7, 22], [7, 30]]]], ["get", "allSelect", ["loc", [null, [7, 31], [7, 40]]]]], [], ["loc", [null, [7, 18], [7, 41]]]]], [], 0, 1, ["loc", [null, [7, 12], [24, 19]]]], ["block", "if", [["subexpr", "not-eq", [["get", "class", ["loc", [null, [25, 26], [25, 31]]]], "groupedit-container"], [], ["loc", [null, [25, 18], [25, 54]]]]], [], 2, null, ["loc", [null, [25, 12], [44, 19]]]], ["block", "if", [["subexpr", "and", [["get", "defaultSortingButton", ["loc", [null, [45, 23], [45, 43]]]], ["subexpr", "not", [["get", "orderedProperty", ["loc", [null, [45, 49], [45, 64]]]]], [], ["loc", [null, [45, 44], [45, 65]]]]], [], ["loc", [null, [45, 18], [45, 66]]]]], [], 3, null, ["loc", [null, [45, 12], [53, 19]]]]],
          locals: [],
          templates: [child0, child1, child2, child3]
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 4,
              "column": 6
            },
            "end": {
              "line": 56,
              "column": 6
            }
          },
          "moduleName": "dummy/templates/components/object-list-view.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("th");
          dom.setAttribute(el1, "class", "object-list-view-operations collapsing");
          dom.setAttribute(el1, "data-olv-header-property-name", "OlvRowToolbar");
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("        ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["block", "if", [["get", "showCheckBoxInRow", ["loc", [null, [6, 16], [6, 33]]]]], [], 0, null, ["loc", [null, [6, 10], [54, 17]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child1 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 61,
                "column": 12
              },
              "end": {
                "line": 63,
                "column": 12
              }
            },
            "moduleName": "dummy/templates/components/object-list-view.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("              ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "t", [["get", "column.keyLocale", ["loc", [null, [62, 18], [62, 34]]]]], [], ["loc", [null, [62, 14], [62, 36]]]]],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 63,
                "column": 12
              },
              "end": {
                "line": 65,
                "column": 12
              }
            },
            "moduleName": "dummy/templates/components/object-list-view.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("              ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["content", "column.header", ["loc", [null, [64, 14], [64, 31]]]]],
          locals: [],
          templates: []
        };
      })();
      var child2 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 69,
                  "column": 16
                },
                "end": {
                  "line": 73,
                  "column": 16
                }
              },
              "moduleName": "dummy/templates/components/object-list-view.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("                  ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              var el2 = dom.createTextNode("\n                  ▲");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n                  ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var element9 = dom.childAt(fragment, [1]);
              var morphs = new Array(2);
              morphs[0] = dom.createAttrMorph(element9, 'title');
              morphs[1] = dom.createMorphAt(element9, 1, 1);
              return morphs;
            },
            statements: [["attribute", "title", ["concat", [["subexpr", "t", ["components.object-list-view.sort-ascending"], [], ["loc", [null, [70, 30], [70, 80]]]]]]], ["content", "column.sortNumber", ["loc", [null, [71, 19], [71, 40]]]]],
            locals: [],
            templates: []
          };
        })();
        var child1 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 73,
                  "column": 16
                },
                "end": {
                  "line": 77,
                  "column": 16
                }
              },
              "moduleName": "dummy/templates/components/object-list-view.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("                  ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              var el2 = dom.createTextNode("\n                  ▼");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n                  ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var element8 = dom.childAt(fragment, [1]);
              var morphs = new Array(2);
              morphs[0] = dom.createAttrMorph(element8, 'title');
              morphs[1] = dom.createMorphAt(element8, 1, 1);
              return morphs;
            },
            statements: [["attribute", "title", ["concat", [["subexpr", "t", ["components.object-list-view.sort-descending"], [], ["loc", [null, [74, 30], [74, 81]]]]]]], ["content", "column.sortNumber", ["loc", [null, [75, 19], [75, 40]]]]],
            locals: [],
            templates: []
          };
        })();
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 67,
                "column": 12
              },
              "end": {
                "line": 79,
                "column": 12
              }
            },
            "moduleName": "dummy/templates/components/object-list-view.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("              ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1, "class", "object-list-view-order-icon");
            dom.setAttribute(el1, "style", "float:right;");
            var el2 = dom.createTextNode("\n");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("              ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
            return morphs;
          },
          statements: [["block", "if", [["get", "column.sortAscending", ["loc", [null, [69, 22], [69, 42]]]]], [], 0, 1, ["loc", [null, [69, 16], [77, 23]]]]],
          locals: [],
          templates: [child0, child1]
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 57,
              "column": 6
            },
            "end": {
              "line": 82,
              "column": 6
            }
          },
          "moduleName": "dummy/templates/components/object-list-view.hbs"
        },
        isEmpty: false,
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("th");
          dom.setAttribute(el1, "class", "dt-head-left me class");
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          var el3 = dom.createTextNode("\n            ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("span");
          var el4 = dom.createTextNode("\n");
          dom.appendChild(el3, el4);
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("            ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("          ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element10 = dom.childAt(fragment, [1]);
          var element11 = dom.childAt(element10, [1]);
          var morphs = new Array(6);
          morphs[0] = dom.createAttrMorph(element10, 'onclick');
          morphs[1] = dom.createAttrMorph(element10, 'width');
          morphs[2] = dom.createAttrMorph(element11, 'data-olv-header-property-name');
          morphs[3] = dom.createAttrMorph(element11, 'title');
          morphs[4] = dom.createMorphAt(dom.childAt(element11, [1]), 1, 1);
          morphs[5] = dom.createMorphAt(element11, 3, 3);
          return morphs;
        },
        statements: [["attribute", "onclick", ["subexpr", "action", ["headerCellClick", ["get", "column", ["loc", [null, [58, 77], [58, 83]]]]], [], ["loc", [null, [58, 50], [58, 86]]]]], ["attribute", "width", ["get", "column.width", ["loc", [null, [58, 95], [58, 107]]]]], ["attribute", "data-olv-header-property-name", ["get", "column.propName", ["loc", [null, [59, 47], [59, 62]]]]], ["attribute", "title", ["get", "sortTitleCompute", ["loc", [null, [59, 73], [59, 89]]]]], ["block", "if", [["get", "column.keyLocale", ["loc", [null, [61, 18], [61, 34]]]]], [], 0, 1, ["loc", [null, [61, 12], [65, 19]]]], ["block", "if", [["get", "column.sorted", ["loc", [null, [67, 18], [67, 31]]]]], [], 2, null, ["loc", [null, [67, 12], [79, 19]]]]],
        locals: ["column"],
        templates: [child0, child1, child2]
      };
    })();
    var child2 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 83,
              "column": 6
            },
            "end": {
              "line": 85,
              "column": 6
            }
          },
          "moduleName": "dummy/templates/components/object-list-view.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("th");
          dom.setAttribute(el1, "class", "object-list-view-menu collapsing");
          dom.setAttribute(el1, "data-olv-header-property-name", "OlvRowMenu");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes() {
          return [];
        },
        statements: [],
        locals: [],
        templates: []
      };
    })();
    var child3 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 91,
                "column": 8
              },
              "end": {
                "line": 93,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/components/object-list-view.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("td");
            dom.setAttribute(el1, "rowspan", "1");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes() {
            return [];
          },
          statements: [],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 96,
                  "column": 12
                },
                "end": {
                  "line": 106,
                  "column": 12
                }
              },
              "moduleName": "dummy/templates/components/object-list-view.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("              ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
              return morphs;
            },
            statements: [["inline", "flexberry-dropdown", [], ["value", ["subexpr", "@mut", [["get", "column.filter.condition", ["loc", [null, [98, 22], [98, 45]]]]], [], []], "items", ["subexpr", "@mut", [["get", "column.filter.conditions", ["loc", [null, [99, 22], [99, 46]]]]], [], []], "displayCaptions", ["subexpr", "not", [["subexpr", "is-array", [["get", "column.filter.conditions", ["loc", [null, [100, 47], [100, 71]]]]], [], ["loc", [null, [100, 37], [100, 72]]]]], [], ["loc", [null, [100, 32], [100, 73]]]], "class", "compact fluid", "placeholder", ["subexpr", "t", ["components.object-list-view.filter-condition"], [], ["loc", [null, [102, 28], [102, 78]]]], "needChecksOnValue", false, "onChange", ["subexpr", "action", ["filterConditionChanged", ["get", "column.filter", ["loc", [null, [104, 58], [104, 71]]]]], [], ["loc", [null, [104, 25], [104, 72]]]]], ["loc", [null, [97, 14], [105, 16]]]]],
            locals: [],
            templates: []
          };
        })();
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 94,
                "column": 8
              },
              "end": {
                "line": 108,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/components/object-list-view.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("td");
            dom.setAttribute(el1, "class", "overflowed-cell");
            var el2 = dom.createTextNode("\n");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("          ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element5 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createAttrMorph(element5, 'style');
            morphs[1] = dom.createMorphAt(element5, 1, 1);
            return morphs;
          },
          statements: [["attribute", "style", ["get", "defaultPaddingStyle", ["loc", [null, [95, 22], [95, 41]]]]], ["block", "if", [["get", "column.filter.conditions", ["loc", [null, [96, 18], [96, 42]]]]], [], 0, null, ["loc", [null, [96, 12], [106, 19]]]]],
          locals: ["column"],
          templates: [child0]
        };
      })();
      var child2 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 109,
                "column": 8
              },
              "end": {
                "line": 111,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/components/object-list-view.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("td");
            dom.setAttribute(el1, "rowspan", "1");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes() {
            return [];
          },
          statements: [],
          locals: [],
          templates: []
        };
      })();
      var child3 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 114,
                "column": 8
              },
              "end": {
                "line": 116,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/components/object-list-view.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("td");
            dom.setAttribute(el1, "rowspan", "1");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes() {
            return [];
          },
          statements: [],
          locals: [],
          templates: []
        };
      })();
      var child4 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 119,
                  "column": 12
                },
                "end": {
                  "line": 138,
                  "column": 12
                }
              },
              "moduleName": "dummy/templates/components/object-list-view.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("              ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "fluid action input ui");
              var el2 = dom.createTextNode("\n                ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n                ");
              dom.appendChild(el1, el2);
              var el2 = dom.createElement("button");
              dom.setAttribute(el2, "type", "button");
              dom.setAttribute(el2, "class", "ui clear-filter button");
              var el3 = dom.createTextNode("\n                  ");
              dom.appendChild(el2, el3);
              var el3 = dom.createElement("i");
              dom.setAttribute(el3, "class", "remove icon");
              dom.appendChild(el2, el3);
              var el3 = dom.createTextNode("\n                ");
              dom.appendChild(el2, el3);
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n              ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var element2 = dom.childAt(fragment, [1]);
              var element3 = dom.childAt(element2, [3]);
              var morphs = new Array(3);
              morphs[0] = dom.createMorphAt(element2, 1, 1);
              morphs[1] = dom.createAttrMorph(element3, 'title');
              morphs[2] = dom.createElementMorph(element3);
              return morphs;
            },
            statements: [["inline", "component", [["get", "column.filter.component.name", ["loc", [null, [121, 28], [121, 56]]]]], ["value", ["subexpr", "@mut", [["get", "column.filter.pattern", ["loc", [null, [122, 24], [122, 45]]]]], [], []], "readonly", ["subexpr", "or", [["subexpr", "eq", [["get", "column.filter.condition", ["loc", [null, [124, 24], [124, 47]]]], "empty"], [], ["loc", [null, [124, 20], [124, 56]]]], ["subexpr", "eq", [["get", "column.filter.condition", ["loc", [null, [125, 24], [125, 47]]]], "nempty"], [], ["loc", [null, [125, 20], [125, 57]]]]], [], ["loc", [null, [123, 27], [126, 19]]]], "dynamicProperties", ["subexpr", "@mut", [["get", "column.filter.component.properties", ["loc", [null, [127, 36], [127, 70]]]]], [], []]], ["loc", [null, [121, 16], [128, 18]]]], ["attribute", "title", ["subexpr", "t", ["components.object-list-view.clear-filter-in-column"], [], ["loc", [null, [132, 24], [132, 82]]]]], ["element", "action", ["clearFilterForColumn", ["get", "column.filter", ["loc", [null, [133, 50], [133, 63]]]]], [], ["loc", [null, [133, 18], [133, 65]]]]],
            locals: [],
            templates: []
          };
        })();
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 117,
                "column": 8
              },
              "end": {
                "line": 140,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/components/object-list-view.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("td");
            var el2 = dom.createTextNode("\n");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("          ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element4 = dom.childAt(fragment, [1]);
            var morphs = new Array(3);
            morphs[0] = dom.createAttrMorph(element4, 'style');
            morphs[1] = dom.createAttrMorph(element4, 'class');
            morphs[2] = dom.createMorphAt(element4, 1, 1);
            return morphs;
          },
          statements: [["attribute", "style", ["get", "defaultPaddingStyle", ["loc", [null, [118, 22], [118, 41]]]]], ["attribute", "class", ["concat", [["subexpr", "if", [["subexpr", "array-contains", [["get", "overflowedComponents", ["loc", [null, [118, 72], [118, 92]]]], ["get", "column.filter.component.name", ["loc", [null, [118, 93], [118, 121]]]]], [], ["loc", [null, [118, 56], [118, 122]]]], "overflowed-cell"], [], ["loc", [null, [118, 51], [118, 142]]]]]]], ["block", "if", [["get", "column.filter.component.name", ["loc", [null, [119, 18], [119, 46]]]]], [], 0, null, ["loc", [null, [119, 12], [138, 19]]]]],
          locals: ["column"],
          templates: [child0]
        };
      })();
      var child5 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 141,
                "column": 8
              },
              "end": {
                "line": 143,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/components/object-list-view.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("td");
            dom.setAttribute(el1, "rowspan", "1");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes() {
            return [];
          },
          statements: [],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 89,
              "column": 4
            },
            "end": {
              "line": 145,
              "column": 4
            }
          },
          "moduleName": "dummy/templates/components/object-list-view.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("tr");
          dom.setAttribute(el1, "class", "object-list-view-filters");
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("tr");
          dom.setAttribute(el1, "class", "object-list-view-filters");
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element6 = dom.childAt(fragment, [1]);
          var element7 = dom.childAt(fragment, [3]);
          var morphs = new Array(7);
          morphs[0] = dom.createMorphAt(element6, 1, 1);
          morphs[1] = dom.createMorphAt(element6, 2, 2);
          morphs[2] = dom.createMorphAt(element6, 3, 3);
          morphs[3] = dom.createAttrMorph(element7, 'onkeydown');
          morphs[4] = dom.createMorphAt(element7, 1, 1);
          morphs[5] = dom.createMorphAt(element7, 2, 2);
          morphs[6] = dom.createMorphAt(element7, 3, 3);
          return morphs;
        },
        statements: [["block", "if", [["get", "showHelperColumn", ["loc", [null, [91, 14], [91, 30]]]]], [], 0, null, ["loc", [null, [91, 8], [93, 15]]]], ["block", "each", [["get", "columns", ["loc", [null, [94, 16], [94, 23]]]]], [], 1, null, ["loc", [null, [94, 8], [108, 17]]]], ["block", "if", [["get", "showMenuColumn", ["loc", [null, [109, 14], [109, 28]]]]], [], 2, null, ["loc", [null, [109, 8], [111, 15]]]], ["attribute", "onkeydown", ["subexpr", "action", ["applyFiltersByEnter"], [], ["loc", [null, [113, 53], [113, 85]]]]], ["block", "if", [["get", "showHelperColumn", ["loc", [null, [114, 14], [114, 30]]]]], [], 3, null, ["loc", [null, [114, 8], [116, 15]]]], ["block", "each", [["get", "columns", ["loc", [null, [117, 16], [117, 23]]]]], [], 4, null, ["loc", [null, [117, 8], [140, 17]]]], ["block", "if", [["get", "showMenuColumn", ["loc", [null, [141, 14], [141, 28]]]]], [], 5, null, ["loc", [null, [141, 8], [143, 15]]]]],
        locals: [],
        templates: [child0, child1, child2, child3, child4, child5]
      };
    })();
    var child4 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 146,
              "column": 4
            },
            "end": {
              "line": 152,
              "column": 4
            }
          },
          "moduleName": "dummy/templates/components/object-list-view.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("tr");
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("td");
          dom.setAttribute(el2, "style", "text-align:center;");
          var el3 = dom.createTextNode("\n            ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element1 = dom.childAt(fragment, [1, 1]);
          var morphs = new Array(2);
          morphs[0] = dom.createAttrMorph(element1, 'colspan');
          morphs[1] = dom.createMorphAt(element1, 1, 1);
          return morphs;
        },
        statements: [["attribute", "colspan", ["concat", [["get", "colspan", ["loc", [null, [148, 23], [148, 30]]]]]]], ["content", "placeholder", ["loc", [null, [149, 12], [149, 27]]]]],
        locals: [],
        templates: []
      };
    })();
    var child5 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 153,
                "column": 6
              },
              "end": {
                "line": 192,
                "column": 6
              }
            },
            "moduleName": "dummy/templates/components/object-list-view.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "object-list-view-row", [], ["record", ["subexpr", "@mut", [["get", "record", ["loc", [null, [155, 17], [155, 23]]]]], [], []], "columns", ["subexpr", "@mut", [["get", "columns", ["loc", [null, [156, 18], [156, 25]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [157, 19], [157, 27]]]]], [], []], "required", ["subexpr", "@mut", [["get", "required", ["loc", [null, [158, 19], [158, 27]]]]], [], []], "showMenuColumn", ["subexpr", "@mut", [["get", "showMenuColumn", ["loc", [null, [159, 25], [159, 39]]]]], [], []], "sendMenuItemAction", ["subexpr", "@mut", [["get", "sendMenuItemAction", ["loc", [null, [160, 29], [160, 47]]]]], [], []], "menuInRowAdditionalItems", ["subexpr", "@mut", [["get", "menuInRowAdditionalItems", ["loc", [null, [161, 35], [161, 59]]]]], [], []], "showHelperColumn", ["subexpr", "@mut", [["get", "showHelperColumn", ["loc", [null, [162, 27], [162, 43]]]]], [], []], "defaultRowConfig", ["subexpr", "@mut", [["get", "defaultRowConfig", ["loc", [null, [163, 27], [163, 43]]]]], [], []], "showValidationMessages", ["subexpr", "@mut", [["get", "showValidationMessagesInRow", ["loc", [null, [164, 33], [164, 60]]]]], [], []], "showAsteriskInRow", ["subexpr", "@mut", [["get", "showAsteriskInRow", ["loc", [null, [165, 28], [165, 45]]]]], [], []], "showCheckBoxInRow", ["subexpr", "@mut", [["get", "showCheckBoxInRow", ["loc", [null, [166, 28], [166, 45]]]]], [], []], "showEditButtonInRow", ["subexpr", "@mut", [["get", "showEditButtonInRow", ["loc", [null, [167, 30], [167, 49]]]]], [], []], "showPrototypeButtonInRow", ["subexpr", "@mut", [["get", "showPrototypeButtonInRow", ["loc", [null, [168, 35], [168, 59]]]]], [], []], "showDeleteButtonInRow", ["subexpr", "@mut", [["get", "showDeleteButtonInRow", ["loc", [null, [169, 32], [169, 53]]]]], [], []], "showEditMenuItemInRow", ["subexpr", "@mut", [["get", "showEditMenuItemInRow", ["loc", [null, [170, 32], [170, 53]]]]], [], []], "showPrototypeMenuItemInRow", ["subexpr", "@mut", [["get", "showPrototypeMenuItemInRow", ["loc", [null, [171, 37], [171, 63]]]]], [], []], "showDeleteMenuItemInRow", ["subexpr", "@mut", [["get", "showDeleteMenuItemInRow", ["loc", [null, [172, 34], [172, 57]]]]], [], []], "isParentRecordPropertyName", ["subexpr", "@mut", [["get", "isParentRecordPropertyName", ["loc", [null, [173, 37], [173, 63]]]]], [], []], "hierarchicalIndent", ["subexpr", "@mut", [["get", "hierarchicalIndent", ["loc", [null, [174, 29], [174, 47]]]]], [], []], "inHierarchicalMode", ["subexpr", "@mut", [["get", "inHierarchicalMode", ["loc", [null, [175, 29], [175, 47]]]]], [], []], "inExpandMode", ["subexpr", "unbound", [["get", "inExpandMode", ["loc", [null, [176, 32], [176, 44]]]]], [], ["loc", [null, [176, 23], [176, 45]]]], "loadRecords", ["subexpr", "@mut", [["get", "loadRecords", ["loc", [null, [177, 22], [177, 33]]]]], [], []], "doRenderData", ["subexpr", "@mut", [["get", "record.doRenderData", ["loc", [null, [178, 23], [178, 42]]]]], [], []], "rowClick", ["subexpr", "action", ["rowClick"], [], ["loc", [null, [179, 19], [179, 38]]]], "selectRow", ["subexpr", "action", ["selectRow"], [], ["loc", [null, [180, 20], [180, 40]]]], "createNewByPrototype", ["subexpr", "@mut", [["get", "createNewByPrototype", ["loc", [null, [181, 31], [181, 51]]]]], [], []], "deleteRow", ["subexpr", "action", ["deleteRow"], [], ["loc", [null, [182, 20], [182, 40]]]], "customButtonsInRow", ["subexpr", "@mut", [["get", "customButtonsInRow", ["loc", [null, [183, 29], [183, 47]]]]], [], []], "customButtonInRowAction", "customButtonInRowAction", "defaultLeftPadding", ["subexpr", "@mut", [["get", "defaultLeftPadding", ["loc", [null, [185, 29], [185, 47]]]]], [], []], "overflowedComponents", ["subexpr", "@mut", [["get", "overflowedComponents", ["loc", [null, [186, 31], [186, 51]]]]], [], []], "folvComponentName", ["subexpr", "@mut", [["get", "componentName", ["loc", [null, [187, 28], [187, 41]]]]], [], []], "hierarchyPaging", ["subexpr", "@mut", [["get", "hierarchyPaging", ["loc", [null, [188, 26], [188, 41]]]]], [], []], "configurateRow", ["subexpr", "@mut", [["get", "configurateRow", ["loc", [null, [189, 25], [189, 39]]]]], [], []], "allSelect", ["subexpr", "@mut", [["get", "allSelect", ["loc", [null, [190, 20], [190, 29]]]]], [], []]], ["loc", [null, [154, 8], [191, 10]]]]],
          locals: ["record"],
          templates: []
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 193,
                "column": 6
              },
              "end": {
                "line": 200,
                "column": 6
              }
            },
            "moduleName": "dummy/templates/components/object-list-view.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("tr");
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("td");
            dom.setAttribute(el2, "style", "text-align:center;");
            var el3 = dom.createTextNode("\n            ");
            dom.appendChild(el2, el3);
            var el3 = dom.createElement("div");
            dom.setAttribute(el3, "class", "ui active centered inline loader");
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("\n            ");
            dom.appendChild(el2, el3);
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("\n          ");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n        ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1, 1]);
            var morphs = new Array(2);
            morphs[0] = dom.createAttrMorph(element0, 'colspan');
            morphs[1] = dom.createMorphAt(element0, 3, 3);
            return morphs;
          },
          statements: [["attribute", "colspan", ["concat", [["get", "colspan", ["loc", [null, [195, 25], [195, 32]]]]]]], ["inline", "t", ["components.object-list-view.loading-text"], [], ["loc", [null, [197, 12], [197, 60]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 152,
              "column": 4
            },
            "end": {
              "line": 201,
              "column": 4
            }
          },
          "moduleName": "dummy/templates/components/object-list-view.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          morphs[1] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "each", [["get", "contentWithKeys", ["loc", [null, [153, 14], [153, 29]]]]], ["key", "key"], 0, null, ["loc", [null, [153, 6], [192, 15]]]], ["block", "if", [["get", "rowByRowLoadingProgress", ["loc", [null, [193, 12], [193, 35]]]]], [], 1, null, ["loc", [null, [193, 6], [200, 13]]]]],
        locals: [],
        templates: [child0, child1]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "triple-curlies"
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 204,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/object-list-view.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("table");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("thead");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("tr");
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("tbody");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element17 = dom.childAt(fragment, [0]);
        var element18 = dom.childAt(element17, [1, 1]);
        var element19 = dom.childAt(element17, [3]);
        var morphs = new Array(6);
        morphs[0] = dom.createAttrMorph(element17, 'class');
        morphs[1] = dom.createMorphAt(element18, 1, 1);
        morphs[2] = dom.createMorphAt(element18, 2, 2);
        morphs[3] = dom.createMorphAt(element18, 3, 3);
        morphs[4] = dom.createMorphAt(element19, 1, 1);
        morphs[5] = dom.createMorphAt(element19, 2, 2);
        return morphs;
      },
      statements: [["attribute", "class", ["concat", ["object-list-view ui unstackable celled ", ["subexpr", "if", [["get", "readonly", ["loc", [null, [1, 58], [1, 66]]]], "readonly"], [], ["loc", [null, [1, 53], [1, 79]]]], " ", ["get", "tableClass", ["loc", [null, [1, 82], [1, 92]]]], " table"]]], ["block", "if", [["get", "showHelperColumn", ["loc", [null, [4, 12], [4, 28]]]]], [], 0, null, ["loc", [null, [4, 6], [56, 13]]]], ["block", "each", [["get", "columns", ["loc", [null, [57, 14], [57, 21]]]]], [], 1, null, ["loc", [null, [57, 6], [82, 15]]]], ["block", "if", [["get", "showMenuColumn", ["loc", [null, [83, 12], [83, 26]]]]], [], 2, null, ["loc", [null, [83, 6], [85, 13]]]], ["block", "if", [["subexpr", "and", [["subexpr", "not", [["get", "showFiltersInModal", ["loc", [null, [89, 20], [89, 38]]]]], [], ["loc", [null, [89, 15], [89, 39]]]], ["get", "showFilters", ["loc", [null, [89, 40], [89, 51]]]]], [], ["loc", [null, [89, 10], [89, 52]]]]], [], 3, null, ["loc", [null, [89, 4], [145, 11]]]], ["block", "unless", [["get", "content", ["loc", [null, [146, 14], [146, 21]]]]], [], 4, 5, ["loc", [null, [146, 4], [201, 15]]]]],
      locals: [],
      templates: [child0, child1, child2, child3, child4, child5]
    };
  })());
});
define("dummy/templates/components/olv-filter-interval", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 14,
            "column": 6
          }
        },
        "moduleName": "dummy/templates/components/olv-filter-interval.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "style", "float: left; width: 45%;");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "style", "float: right; width: 45%;");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]), 1, 1);
        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [2]), 1, 1);
        return morphs;
      },
      statements: [["inline", "flexberry-textbox", [], ["value", ["subexpr", "@mut", [["get", "from", ["loc", [null, [3, 10], [3, 14]]]]], [], []], "placeholder", ["subexpr", "@mut", [["get", "fromPlaceholder", ["loc", [null, [4, 16], [4, 31]]]]], [], []], "dynamicProperties", ["subexpr", "@mut", [["get", "dynProps", ["loc", [null, [5, 22], [5, 30]]]]], [], []]], ["loc", [null, [2, 2], [6, 4]]]], ["inline", "flexberry-textbox", [], ["value", ["subexpr", "@mut", [["get", "to", ["loc", [null, [10, 10], [10, 12]]]]], [], []], "placeholder", ["subexpr", "@mut", [["get", "toPlaceholder", ["loc", [null, [11, 16], [11, 29]]]]], [], []], "dynamicProperties", ["subexpr", "@mut", [["get", "dynProps", ["loc", [null, [12, 22], [12, 30]]]]], [], []]], ["loc", [null, [9, 2], [13, 4]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/components/olv-setconfigdialogbutton", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "modifiers",
          "modifiers": ["action"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/olv-setconfigdialogbutton.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("button");
        dom.setAttribute(el1, "type", "button");
        dom.setAttribute(el1, "class", "ui button");
        var el2 = dom.createElement("i");
        dom.setAttribute(el2, "class", "large setting icon");
        dom.setAttribute(el2, "title", "customize column views");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var morphs = new Array(1);
        morphs[0] = dom.createElementMorph(element0);
        return morphs;
      },
      statements: [["element", "action", ["choose", ["get", "chooseData", ["loc", [null, [1, 58], [1, 68]]]]], [], ["loc", [null, [1, 40], [1, 70]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/components/olv-toolbar", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "fragmentReason": {
            "name": "modifiers",
            "modifiers": ["action"]
          },
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 10,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/olv-toolbar.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("button");
          dom.setAttribute(el1, "type", "button");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("i");
          dom.setAttribute(el2, "class", "refresh icon");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element20 = dom.childAt(fragment, [1]);
          var morphs = new Array(4);
          morphs[0] = dom.createAttrMorph(element20, 'class');
          morphs[1] = dom.createAttrMorph(element20, 'title');
          morphs[2] = dom.createElementMorph(element20);
          morphs[3] = dom.createMorphAt(element20, 1, 1);
          return morphs;
        },
        statements: [["attribute", "class", ["concat", ["ui refresh-button ", ["get", "buttonClass", ["loc", [null, [4, 31], [4, 42]]]], " button"]]], ["attribute", "title", ["subexpr", "t", ["components.olv-toolbar.refresh-button-text"], [], ["loc", [null, [5, 10], [5, 60]]]]], ["element", "action", ["refresh"], [], ["loc", [null, [6, 4], [6, 24]]]], ["inline", "t", ["components.olv-toolbar.refresh-button-text"], [], ["loc", [null, [7, 6], [7, 56]]]]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 12,
                "column": 2
              },
              "end": {
                "line": 21,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/components/olv-toolbar.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("button");
            dom.setAttribute(el1, "type", "button");
            dom.setAttribute(el1, "disabled", "disabled");
            var el2 = dom.createTextNode("\n        ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n    ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element19 = dom.childAt(fragment, [1]);
            var morphs = new Array(4);
            morphs[0] = dom.createAttrMorph(element19, 'class');
            morphs[1] = dom.createAttrMorph(element19, 'title');
            morphs[2] = dom.createElementMorph(element19);
            morphs[3] = dom.createMorphAt(element19, 1, 1);
            return morphs;
          },
          statements: [["attribute", "class", ["concat", ["ui create-button ", ["get", "buttonClass", ["loc", [null, [15, 32], [15, 43]]]], " disabled button"]]], ["attribute", "title", ["subexpr", "t", ["components.olv-toolbar.add-button-text"], [], ["loc", [null, [16, 12], [16, 58]]]]], ["element", "action", ["createNew"], [], ["loc", [null, [18, 6], [18, 28]]]], ["inline", "t", ["components.olv-toolbar.add-button-text"], [], ["loc", [null, [19, 8], [19, 54]]]]],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 21,
                "column": 2
              },
              "end": {
                "line": 29,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/components/olv-toolbar.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("button");
            dom.setAttribute(el1, "type", "button");
            var el2 = dom.createTextNode("\n        ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n    ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element18 = dom.childAt(fragment, [1]);
            var morphs = new Array(4);
            morphs[0] = dom.createAttrMorph(element18, 'class');
            morphs[1] = dom.createAttrMorph(element18, 'title');
            morphs[2] = dom.createElementMorph(element18);
            morphs[3] = dom.createMorphAt(element18, 1, 1);
            return morphs;
          },
          statements: [["attribute", "class", ["concat", ["ui create-button ", ["get", "buttonClass", ["loc", [null, [24, 32], [24, 43]]]], " button"]]], ["attribute", "title", ["subexpr", "t", ["components.olv-toolbar.add-button-text"], [], ["loc", [null, [25, 12], [25, 58]]]]], ["element", "action", ["createNew"], [], ["loc", [null, [26, 6], [26, 28]]]], ["inline", "t", ["components.olv-toolbar.add-button-text"], [], ["loc", [null, [27, 8], [27, 54]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 11,
              "column": 0
            },
            "end": {
              "line": 30,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/olv-toolbar.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "if", [["subexpr", "or", [["get", "readonly", ["loc", [null, [12, 12], [12, 20]]]], ["subexpr", "not", [["get", "enableCreateNewButton", ["loc", [null, [12, 26], [12, 47]]]]], [], ["loc", [null, [12, 21], [12, 48]]]]], [], ["loc", [null, [12, 8], [12, 49]]]]], [], 0, 1, ["loc", [null, [12, 2], [29, 9]]]]],
        locals: [],
        templates: [child0, child1]
      };
    })();
    var child2 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 32,
                "column": 2
              },
              "end": {
                "line": 42,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/components/olv-toolbar.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("button");
            dom.setAttribute(el1, "type", "button");
            dom.setAttribute(el1, "disabled", "disabled");
            var el2 = dom.createTextNode("\n        ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n        ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("i");
            dom.setAttribute(el2, "class", "delete icon");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n    ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element17 = dom.childAt(fragment, [1]);
            var morphs = new Array(4);
            morphs[0] = dom.createAttrMorph(element17, 'class');
            morphs[1] = dom.createAttrMorph(element17, 'title');
            morphs[2] = dom.createElementMorph(element17);
            morphs[3] = dom.createMorphAt(element17, 1, 1);
            return morphs;
          },
          statements: [["attribute", "class", ["concat", ["ui delete-button ", ["get", "buttonClass", ["loc", [null, [35, 32], [35, 43]]]], " disabled button"]]], ["attribute", "title", ["subexpr", "t", ["components.olv-toolbar.delete-button-text"], [], ["loc", [null, [36, 12], [36, 61]]]]], ["element", "action", ["delete"], [], ["loc", [null, [38, 6], [38, 25]]]], ["inline", "t", ["components.olv-toolbar.delete-button-text"], [], ["loc", [null, [39, 8], [39, 57]]]]],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 42,
                "column": 2
              },
              "end": {
                "line": 51,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/components/olv-toolbar.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("button");
            dom.setAttribute(el1, "type", "button");
            var el2 = dom.createTextNode("\n        ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n        ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("i");
            dom.setAttribute(el2, "class", "delete icon");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n    ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element16 = dom.childAt(fragment, [1]);
            var morphs = new Array(4);
            morphs[0] = dom.createAttrMorph(element16, 'class');
            morphs[1] = dom.createAttrMorph(element16, 'title');
            morphs[2] = dom.createElementMorph(element16);
            morphs[3] = dom.createMorphAt(element16, 1, 1);
            return morphs;
          },
          statements: [["attribute", "class", ["concat", ["ui delete-button ", ["get", "buttonClass", ["loc", [null, [45, 32], [45, 43]]]], " button"]]], ["attribute", "title", ["subexpr", "t", ["components.olv-toolbar.delete-button-text"], [], ["loc", [null, [46, 12], [46, 61]]]]], ["element", "action", ["delete"], [], ["loc", [null, [47, 6], [47, 25]]]], ["inline", "t", ["components.olv-toolbar.delete-button-text"], [], ["loc", [null, [48, 8], [48, 57]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 31,
              "column": 0
            },
            "end": {
              "line": 52,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/olv-toolbar.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "if", [["subexpr", "or", [["get", "readonly", ["loc", [null, [32, 12], [32, 20]]]], ["subexpr", "not", [["get", "isDeleteButtonEnabled", ["loc", [null, [32, 26], [32, 47]]]]], [], ["loc", [null, [32, 21], [32, 48]]]]], [], ["loc", [null, [32, 8], [32, 49]]]]], [], 0, 1, ["loc", [null, [32, 2], [51, 9]]]]],
        locals: [],
        templates: [child0, child1]
      };
    })();
    var child3 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 61,
                "column": 2
              },
              "end": {
                "line": 69,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/components/olv-toolbar.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("button");
            dom.setAttribute(el1, "type", "button");
            var el2 = dom.createTextNode("\n        ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("i");
            dom.setAttribute(el2, "class", "expand icon");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n    ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element14 = dom.childAt(fragment, [1]);
            var morphs = new Array(3);
            morphs[0] = dom.createAttrMorph(element14, 'class');
            morphs[1] = dom.createAttrMorph(element14, 'title');
            morphs[2] = dom.createElementMorph(element14);
            return morphs;
          },
          statements: [["attribute", "class", ["concat", ["ui button icon hierarchical-button ", ["get", "buttonClass", ["loc", [null, [64, 50], [64, 61]]]]]]], ["attribute", "title", ["subexpr", "t", ["components.olv-toolbar.coll-expand-button-text"], [], ["loc", [null, [65, 12], [65, 66]]]]], ["element", "action", [["get", "switchExpandMode", ["loc", [null, [66, 15], [66, 31]]]]], [], ["loc", [null, [66, 6], [66, 33]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 53,
              "column": 0
            },
            "end": {
              "line": 70,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/olv-toolbar.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("button");
          dom.setAttribute(el1, "type", "button");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("i");
          dom.setAttribute(el2, "class", "sitemap icon");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element15 = dom.childAt(fragment, [1]);
          var morphs = new Array(4);
          morphs[0] = dom.createAttrMorph(element15, 'class');
          morphs[1] = dom.createAttrMorph(element15, 'title');
          morphs[2] = dom.createElementMorph(element15);
          morphs[3] = dom.createMorphAt(fragment, 3, 3, contextualElement);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["attribute", "class", ["concat", ["ui button icon hierarchical-button ", ["get", "buttonClass", ["loc", [null, [56, 48], [56, 59]]]], " ", ["subexpr", "if", [["get", "inHierarchicalMode", ["loc", [null, [56, 67], [56, 85]]]], "active"], [], ["loc", [null, [56, 62], [56, 96]]]]]]], ["attribute", "title", ["subexpr", "t", ["components.olv-toolbar.hierarchy-button-text"], [], ["loc", [null, [57, 10], [57, 62]]]]], ["element", "action", [["get", "switchHierarchicalMode", ["loc", [null, [58, 13], [58, 35]]]]], [], ["loc", [null, [58, 4], [58, 37]]]], ["block", "if", [["get", "availableCollExpandMode", ["loc", [null, [61, 8], [61, 31]]]]], [], 0, null, ["loc", [null, [61, 2], [69, 9]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child4 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 80,
                "column": 4
              },
              "end": {
                "line": 89,
                "column": 4
              }
            },
            "moduleName": "dummy/templates/components/olv-toolbar.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1, "class", "or");
            dom.setAttribute(el1, "data-text", "•");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("button");
            dom.setAttribute(el1, "type", "button");
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("i");
            dom.setAttribute(el2, "class", "remove icon");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n      ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element11 = dom.childAt(fragment, [3]);
            var morphs = new Array(3);
            morphs[0] = dom.createAttrMorph(element11, 'class');
            morphs[1] = dom.createAttrMorph(element11, 'title');
            morphs[2] = dom.createElementMorph(element11);
            return morphs;
          },
          statements: [["attribute", "class", ["concat", ["ui button removeFilter-button ", ["get", "buttonClass", ["loc", [null, [84, 47], [84, 58]]]]]]], ["attribute", "title", ["subexpr", "t", ["components.olv-toolbar.remove-filter-button-text"], [], ["loc", [null, [85, 14], [85, 70]]]]], ["element", "action", [["get", "resetFilters", ["loc", [null, [86, 17], [86, 29]]]]], [], ["loc", [null, [86, 8], [86, 31]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 71,
              "column": 0
            },
            "end": {
              "line": 91,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/olv-toolbar.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "ui icon buttons filter-active");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("button");
          dom.setAttribute(el2, "type", "button");
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("i");
          dom.setAttribute(el3, "class", "filter icon");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n    ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element12 = dom.childAt(fragment, [1]);
          var element13 = dom.childAt(element12, [1]);
          var morphs = new Array(4);
          morphs[0] = dom.createAttrMorph(element13, 'class');
          morphs[1] = dom.createAttrMorph(element13, 'title');
          morphs[2] = dom.createElementMorph(element13);
          morphs[3] = dom.createMorphAt(element12, 3, 3);
          return morphs;
        },
        statements: [["attribute", "class", ["concat", ["ui button ", ["get", "buttonClass", ["loc", [null, [75, 25], [75, 36]]]], " ", ["subexpr", "if", [["get", "showFilters", ["loc", [null, [75, 44], [75, 55]]]], "active"], [], ["loc", [null, [75, 39], [75, 66]]]]]]], ["attribute", "title", ["subexpr", "t", ["components.olv-toolbar.filter-button-text"], [], ["loc", [null, [76, 12], [76, 61]]]]], ["element", "action", ["showFiltersTool"], [], ["loc", [null, [77, 6], [77, 34]]]], ["block", "if", [["get", "filters", ["loc", [null, [80, 10], [80, 17]]]]], [], 0, null, ["loc", [null, [80, 4], [89, 11]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child5 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 92,
              "column": 0
            },
            "end": {
              "line": 114,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/olv-toolbar.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "ui action input olv-search");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "block-action-input");
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("button");
          dom.setAttribute(el2, "type", "button");
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("i");
          dom.setAttribute(el3, "class", "search icon");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n    ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("button");
          dom.setAttribute(el2, "type", "button");
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("i");
          dom.setAttribute(el3, "class", "remove icon");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n    ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element8 = dom.childAt(fragment, [1]);
          var element9 = dom.childAt(element8, [3]);
          var element10 = dom.childAt(element8, [5]);
          var morphs = new Array(7);
          morphs[0] = dom.createMorphAt(dom.childAt(element8, [1]), 0, 0);
          morphs[1] = dom.createAttrMorph(element9, 'class');
          morphs[2] = dom.createAttrMorph(element9, 'title');
          morphs[3] = dom.createElementMorph(element9);
          morphs[4] = dom.createAttrMorph(element10, 'class');
          morphs[5] = dom.createAttrMorph(element10, 'title');
          morphs[6] = dom.createElementMorph(element10);
          return morphs;
        },
        statements: [["inline", "input", [], ["type", "text", "placeholder", ["subexpr", "t", ["components.olv-toolbar.filter-by-any-match-placeholder"], [], ["loc", [null, [96, 18], [96, 78]]]], "value", ["subexpr", "@mut", [["get", "filterByAnyMatchText", ["loc", [null, [97, 12], [97, 32]]]]], [], []], "key-down", "keyDownFilterAction"], ["loc", [null, [94, 36], [98, 6]]]], ["attribute", "class", ["concat", ["ui ", ["get", "buttonClass", ["loc", [null, [101, 18], [101, 29]]]], " icon button search-button"]]], ["attribute", "title", ["subexpr", "t", ["components.olv-toolbar.search-button-text"], [], ["loc", [null, [102, 12], [102, 61]]]]], ["element", "action", ["filterByAnyMatch"], [], ["loc", [null, [103, 6], [103, 35]]]], ["attribute", "class", ["concat", ["ui ", ["get", "buttonClass", ["loc", [null, [108, 18], [108, 29]]]], " icon button clear-search-button"]]], ["attribute", "title", ["subexpr", "t", ["components.olv-toolbar.clear-search-button-text"], [], ["loc", [null, [109, 12], [109, 67]]]]], ["element", "action", ["removeFilter"], [], ["loc", [null, [110, 6], [110, 31]]]]],
        locals: [],
        templates: []
      };
    })();
    var child6 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 115,
              "column": 0
            },
            "end": {
              "line": 129,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/olv-toolbar.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "ui buttons export-config");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("button");
          dom.setAttribute(el2, "type", "button");
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("i");
          dom.setAttribute(el3, "class", "large file excel outline icon");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n    ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element6 = dom.childAt(fragment, [1]);
          var element7 = dom.childAt(element6, [1]);
          var morphs = new Array(4);
          morphs[0] = dom.createAttrMorph(element7, 'class');
          morphs[1] = dom.createAttrMorph(element7, 'title');
          morphs[2] = dom.createElementMorph(element7);
          morphs[3] = dom.createMorphAt(element6, 3, 3);
          return morphs;
        },
        statements: [["attribute", "class", ["concat", ["ui button icon export-button ", ["get", "buttonClass", ["loc", [null, [119, 44], [119, 55]]]]]]], ["attribute", "title", ["subexpr", "t", ["components.olv-toolbar.export-excel-button-text"], [], ["loc", [null, [120, 12], [120, 67]]]]], ["element", "action", ["showExportDialog"], [], ["loc", [null, [121, 6], [121, 35]]]], ["inline", "flexberry-menu", [], ["items", ["subexpr", "@mut", [["get", "exportExcelItems", ["loc", [null, [125, 12], [125, 28]]]]], [], []], "onItemClick", ["subexpr", "action", ["onExportMenuItemClick"], [], ["loc", [null, [126, 18], [126, 50]]]]], ["loc", [null, [124, 4], [127, 6]]]]],
        locals: [],
        templates: []
      };
    })();
    var child7 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 139,
                "column": 4
              },
              "end": {
                "line": 144,
                "column": 4
              }
            },
            "moduleName": "dummy/templates/components/olv-toolbar.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "flexberry-menu", [], ["items", ["subexpr", "@mut", [["get", "colsSettingsItems", ["loc", [null, [141, 14], [141, 31]]]]], [], []], "onItemClick", ["subexpr", "action", ["onMenuItemClick"], [], ["loc", [null, [142, 20], [142, 46]]]]], ["loc", [null, [140, 6], [143, 8]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 130,
              "column": 0
            },
            "end": {
              "line": 146,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/olv-toolbar.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "ui buttons cols-config");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("button");
          dom.setAttribute(el2, "type", "button");
          dom.setAttribute(el2, "class", "ui icon button config-button");
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("i");
          dom.setAttribute(el3, "class", "large table icon");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n    ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element4 = dom.childAt(fragment, [1]);
          var element5 = dom.childAt(element4, [1]);
          var morphs = new Array(3);
          morphs[0] = dom.createAttrMorph(element5, 'title');
          morphs[1] = dom.createElementMorph(element5);
          morphs[2] = dom.createMorphAt(element4, 3, 3);
          return morphs;
        },
        statements: [["attribute", "title", ["subexpr", "t", ["components.colsconfig-dialog-content.title"], [], ["loc", [null, [135, 12], [135, 62]]]]], ["element", "action", ["showConfigDialog"], [], ["loc", [null, [136, 6], [136, 35]]]], ["block", "if", [["get", "colsSettingsItems", ["loc", [null, [139, 10], [139, 27]]]]], [], 0, null, ["loc", [null, [139, 4], [144, 11]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child8 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 156,
                "column": 4
              },
              "end": {
                "line": 161,
                "column": 4
              }
            },
            "moduleName": "dummy/templates/components/olv-toolbar.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "flexberry-menu", [], ["items", ["subexpr", "@mut", [["get", "advLimitItems", ["loc", [null, [158, 14], [158, 27]]]]], [], []], "onItemClick", ["subexpr", "action", ["onLimitMenuItemClick"], [], ["loc", [null, [159, 20], [159, 51]]]]], ["loc", [null, [157, 6], [160, 8]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 147,
              "column": 0
            },
            "end": {
              "line": 163,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/olv-toolbar.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "ui buttons adv-limit-config");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("button");
          dom.setAttribute(el2, "type", "button");
          dom.setAttribute(el2, "class", "ui icon button adv-limit-button");
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("i");
          dom.setAttribute(el3, "class", "large flask icon");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n    ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element2 = dom.childAt(fragment, [1]);
          var element3 = dom.childAt(element2, [1]);
          var morphs = new Array(3);
          morphs[0] = dom.createAttrMorph(element3, 'title');
          morphs[1] = dom.createElementMorph(element3);
          morphs[2] = dom.createMorphAt(element2, 3, 3);
          return morphs;
        },
        statements: [["attribute", "title", ["subexpr", "t", ["components.advlimit-dialog-content.title"], [], ["loc", [null, [152, 12], [152, 60]]]]], ["element", "action", ["showAdvLimitDialog"], [], ["loc", [null, [153, 6], [153, 37]]]], ["block", "if", [["get", "advLimitItems", ["loc", [null, [156, 10], [156, 23]]]]], [], 0, null, ["loc", [null, [156, 4], [161, 11]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child9 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 171,
                "column": 6
              },
              "end": {
                "line": 174,
                "column": 6
              }
            },
            "moduleName": "dummy/templates/components/olv-toolbar.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("i");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createAttrMorph(element0, 'class');
            morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);
            return morphs;
          },
          statements: [["attribute", "class", ["get", "customButton.iconClasses", ["loc", [null, [172, 19], [172, 43]]]]], ["content", "customButton.buttonName", ["loc", [null, [173, 8], [173, 35]]]]],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 174,
                  "column": 6
                },
                "end": {
                  "line": 176,
                  "column": 6
                }
              },
              "moduleName": "dummy/templates/components/olv-toolbar.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("        ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
              return morphs;
            },
            statements: [["content", "customButton.buttonName", ["loc", [null, [175, 8], [175, 35]]]]],
            locals: [],
            templates: []
          };
        })();
        var child1 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 176,
                  "column": 6
                },
                "end": {
                  "line": 178,
                  "column": 6
                }
              },
              "moduleName": "dummy/templates/components/olv-toolbar.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("        ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n      ");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
              return morphs;
            },
            statements: [["inline", "t", ["components.olv-toolbar.custom-button-text"], [], ["loc", [null, [177, 8], [177, 57]]]]],
            locals: [],
            templates: []
          };
        })();
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 174,
                "column": 6
              },
              "end": {
                "line": 178,
                "column": 6
              }
            },
            "moduleName": "dummy/templates/components/olv-toolbar.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [["block", "if", [["get", "customButton.buttonName", ["loc", [null, [174, 16], [174, 39]]]]], [], 0, 1, ["loc", [null, [174, 6], [178, 6]]]]],
          locals: [],
          templates: [child0, child1]
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 164,
              "column": 0
            },
            "end": {
              "line": 180,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/olv-toolbar.hbs"
        },
        isEmpty: false,
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("button");
          dom.setAttribute(el1, "type", "button");
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element1 = dom.childAt(fragment, [1]);
          var morphs = new Array(5);
          morphs[0] = dom.createAttrMorph(element1, 'class');
          morphs[1] = dom.createAttrMorph(element1, 'title');
          morphs[2] = dom.createAttrMorph(element1, 'disabled');
          morphs[3] = dom.createElementMorph(element1);
          morphs[4] = dom.createMorphAt(element1, 1, 1);
          return morphs;
        },
        statements: [["attribute", "class", ["concat", ["ui ", ["subexpr", "if", [["get", "customButton.buttonClasses", ["loc", [null, [167, 19], [167, 45]]]], ["get", "customButton.buttonClasses", ["loc", [null, [167, 46], [167, 72]]]]], [], ["loc", [null, [167, 14], [167, 74]]]], " button"]]], ["attribute", "title", ["subexpr", "if", [["get", "customButton.buttonTitle", ["loc", [null, [168, 15], [168, 39]]]], ["get", "customButton.buttonTitle", ["loc", [null, [168, 40], [168, 64]]]]], [], ["loc", [null, [168, 10], [168, 66]]]]], ["attribute", "disabled", ["get", "customButton.disabled", ["loc", [null, [169, 15], [169, 36]]]]], ["element", "action", ["customButtonAction", ["get", "customButton.buttonAction", ["loc", [null, [170, 34], [170, 59]]]]], [], ["loc", [null, [170, 4], [170, 61]]]], ["block", "if", [["get", "customButton.iconClasses", ["loc", [null, [171, 12], [171, 36]]]]], [], 0, 1, ["loc", [null, [171, 6], [178, 13]]]]],
        locals: ["customButton"],
        templates: [child0, child1]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type", "multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 206,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/olv-toolbar.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "olv-toolbar-info-modal-dialog ui small basic modal");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "ui icon header");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("i");
        dom.setAttribute(el3, "class", "olvt icon");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "center aligned ui grid");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("button");
        dom.setAttribute(el3, "type", "button");
        dom.setAttribute(el3, "class", "ui button icon olv-toolbar-info-modal-dialog-copy-button");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n  ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "actions");
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "ui button approve olv-toolbar-info-modal-dialog-ok-button");
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n  ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "ui form");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "ui field olv-toolbar-info-modal-dialog-content center aligned ");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("textarea");
        dom.setAttribute(el4, "cols", "80");
        dom.setAttribute(el4, "rows", "20");
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element21 = dom.childAt(fragment, [10]);
        var element22 = dom.childAt(element21, [3]);
        var element23 = dom.childAt(element22, [1]);
        var morphs = new Array(16);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(fragment, 1, 1, contextualElement);
        morphs[2] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        morphs[3] = dom.createMorphAt(fragment, 3, 3, contextualElement);
        morphs[4] = dom.createMorphAt(fragment, 4, 4, contextualElement);
        morphs[5] = dom.createMorphAt(fragment, 5, 5, contextualElement);
        morphs[6] = dom.createMorphAt(fragment, 6, 6, contextualElement);
        morphs[7] = dom.createMorphAt(fragment, 7, 7, contextualElement);
        morphs[8] = dom.createMorphAt(fragment, 8, 8, contextualElement);
        morphs[9] = dom.createMorphAt(fragment, 9, 9, contextualElement);
        morphs[10] = dom.createMorphAt(dom.childAt(element21, [1]), 3, 3);
        morphs[11] = dom.createAttrMorph(element23, 'title');
        morphs[12] = dom.createElementMorph(element23);
        morphs[13] = dom.createMorphAt(element23, 1, 1);
        morphs[14] = dom.createMorphAt(dom.childAt(element22, [3, 1]), 1, 1);
        morphs[15] = dom.createMorphAt(dom.childAt(element21, [5, 1, 1]), 0, 0);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["block", "if", [["get", "refreshButton", ["loc", [null, [1, 6], [1, 19]]]]], [], 0, null, ["loc", [null, [1, 0], [10, 7]]]], ["block", "if", [["get", "createNewButton", ["loc", [null, [11, 6], [11, 21]]]]], [], 1, null, ["loc", [null, [11, 0], [30, 7]]]], ["block", "if", [["get", "deleteButton", ["loc", [null, [31, 6], [31, 18]]]]], [], 2, null, ["loc", [null, [31, 0], [52, 7]]]], ["block", "if", [["get", "availableHierarchicalMode", ["loc", [null, [53, 6], [53, 31]]]]], [], 3, null, ["loc", [null, [53, 0], [70, 7]]]], ["block", "if", [["get", "enableFilters", ["loc", [null, [71, 6], [71, 19]]]]], [], 4, null, ["loc", [null, [71, 0], [91, 7]]]], ["block", "if", [["get", "filterButton", ["loc", [null, [92, 6], [92, 18]]]]], [], 5, null, ["loc", [null, [92, 0], [114, 7]]]], ["block", "if", [["get", "exportExcelButton", ["loc", [null, [115, 6], [115, 23]]]]], [], 6, null, ["loc", [null, [115, 0], [129, 7]]]], ["block", "if", [["get", "colsConfigButton", ["loc", [null, [130, 6], [130, 22]]]]], [], 7, null, ["loc", [null, [130, 0], [146, 7]]]], ["block", "if", [["get", "advLimitButton", ["loc", [null, [147, 6], [147, 20]]]]], [], 8, null, ["loc", [null, [147, 0], [163, 7]]]], ["block", "each", [["get", "customButtons", ["loc", [null, [164, 8], [164, 21]]]]], [], 9, null, ["loc", [null, [164, 0], [180, 9]]]], ["content", "_infoModalDialogCaption", ["loc", [null, [184, 4], [184, 31]]]], ["attribute", "title", ["subexpr", "t", ["components.olv-toolbar.copy"], [], ["loc", [null, [190, 10], [190, 45]]]]], ["element", "action", ["copyJSONContent"], [], ["loc", [null, [191, 4], [191, 32]]]], ["inline", "t", ["components.olv-toolbar.copy"], [], ["loc", [null, [192, 6], [192, 41]]]], ["inline", "t", ["components.olv-toolbar.close"], [], ["loc", [null, [196, 6], [196, 42]]]], ["content", "_infoModalDialogContent", ["loc", [null, [202, 36], [202, 63]]]]],
      locals: [],
      templates: [child0, child1, child2, child3, child4, child5, child6, child7, child8, child9]
    };
  })());
});
define("dummy/templates/components/settings-example", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 2,
              "column": 2
            },
            "end": {
              "line": 9,
              "column": 2
            }
          },
          "moduleName": "dummy/templates/components/settings-example.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "ui segment");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "ui segment");
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("h4");
          dom.setAttribute(el3, "class", "ui header");
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("pre");
          var el4 = dom.createElement("code");
          var el5 = dom.createComment("");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n      ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element7 = dom.childAt(fragment, [1, 1]);
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(dom.childAt(element7, [1]), 0, 0);
          morphs[1] = dom.createMorphAt(dom.childAt(element7, [3, 0]), 0, 0);
          return morphs;
        },
        statements: [["inline", "t", ["components.settings-example.component-template-caption"], [], ["loc", [null, [5, 30], [5, 92]]]], ["content", "componentTemplateText", ["loc", [null, [6, 19], [6, 44]]]]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 11,
              "column": 4
            },
            "end": {
              "line": 13,
              "column": 4
            }
          },
          "moduleName": "dummy/templates/components/settings-example.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("h4");
          dom.setAttribute(el1, "class", "ui header");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);
          return morphs;
        },
        statements: [["content", "componentSettingsCaption", ["loc", [null, [12, 28], [12, 56]]]]],
        locals: [],
        templates: []
      };
    })();
    var child2 = (function () {
      var child0 = (function () {
        var child0 = (function () {
          var child0 = (function () {
            return {
              meta: {
                "fragmentReason": false,
                "revision": "Ember@2.4.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 27,
                    "column": 16
                  },
                  "end": {
                    "line": 29,
                    "column": 16
                  }
                },
                "moduleName": "dummy/templates/components/settings-example.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("                  ");
                dom.appendChild(el0, el1);
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("=\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var morphs = new Array(1);
                morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
                return morphs;
              },
              statements: [["content", "settingMetadata.bindedControllerPropertieDisplayName", ["loc", [null, [28, 18], [28, 74]]]]],
              locals: [],
              templates: []
            };
          })();
          var child1 = (function () {
            return {
              meta: {
                "fragmentReason": false,
                "revision": "Ember@2.4.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 29,
                    "column": 16
                  },
                  "end": {
                    "line": 31,
                    "column": 16
                  }
                },
                "moduleName": "dummy/templates/components/settings-example.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("                  ");
                dom.appendChild(el0, el1);
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("=\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var morphs = new Array(1);
                morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
                return morphs;
              },
              statements: [["content", "settingMetadata.bindedControllerPropertieName", ["loc", [null, [30, 18], [30, 67]]]]],
              locals: [],
              templates: []
            };
          })();
          var child2 = (function () {
            return {
              meta: {
                "fragmentReason": false,
                "revision": "Ember@2.4.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 34,
                    "column": 16
                  },
                  "end": {
                    "line": 37,
                    "column": 16
                  }
                },
                "moduleName": "dummy/templates/components/settings-example.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("                  ");
                dom.appendChild(el0, el1);
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var morphs = new Array(1);
                morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
                return morphs;
              },
              statements: [["inline", "to-string", [["get", "settingMetadata.settingValue", ["loc", [null, [36, 30], [36, 58]]]]], [], ["loc", [null, [36, 18], [36, 60]]]]],
              locals: [],
              templates: []
            };
          })();
          var child3 = (function () {
            var child0 = (function () {
              return {
                meta: {
                  "fragmentReason": false,
                  "revision": "Ember@2.4.6",
                  "loc": {
                    "source": null,
                    "start": {
                      "line": 39,
                      "column": 18
                    },
                    "end": {
                      "line": 44,
                      "column": 18
                    }
                  },
                  "moduleName": "dummy/templates/components/settings-example.hbs"
                },
                isEmpty: false,
                arity: 0,
                cachedFragment: null,
                hasRendered: false,
                buildFragment: function buildFragment(dom) {
                  var el0 = dom.createDocumentFragment();
                  var el1 = dom.createTextNode("                    ");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createComment("");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createTextNode("\n");
                  dom.appendChild(el0, el1);
                  return el0;
                },
                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                  var morphs = new Array(1);
                  morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
                  return morphs;
                },
                statements: [["inline", "input", [], ["type", "checkbox", "checked", ["subexpr", "mut", [["subexpr", "get", [["get", "controllerProperties", ["loc", [null, [42, 40], [42, 60]]]], ["get", "settingMetadata.bindedControllerPropertieName", ["loc", [null, [42, 61], [42, 106]]]]], [], ["loc", [null, [42, 35], [42, 107]]]]], [], ["loc", [null, [42, 30], [42, 108]]]]], ["loc", [null, [40, 20], [43, 22]]]]],
                locals: [],
                templates: []
              };
            })();
            var child1 = (function () {
              return {
                meta: {
                  "fragmentReason": false,
                  "revision": "Ember@2.4.6",
                  "loc": {
                    "source": null,
                    "start": {
                      "line": 46,
                      "column": 18
                    },
                    "end": {
                      "line": 51,
                      "column": 18
                    }
                  },
                  "moduleName": "dummy/templates/components/settings-example.hbs"
                },
                isEmpty: false,
                arity: 0,
                cachedFragment: null,
                hasRendered: false,
                buildFragment: function buildFragment(dom) {
                  var el0 = dom.createDocumentFragment();
                  var el1 = dom.createTextNode("                    ");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createComment("");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createTextNode("\n");
                  dom.appendChild(el0, el1);
                  return el0;
                },
                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                  var morphs = new Array(1);
                  morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
                  return morphs;
                },
                statements: [["inline", "input", [], ["type", "text", "value", ["subexpr", "mut", [["subexpr", "get", [["get", "controllerProperties", ["loc", [null, [49, 38], [49, 58]]]], ["get", "settingMetadata.bindedControllerPropertieName", ["loc", [null, [49, 59], [49, 104]]]]], [], ["loc", [null, [49, 33], [49, 105]]]]], [], ["loc", [null, [49, 28], [49, 106]]]]], ["loc", [null, [47, 20], [50, 22]]]]],
                locals: [],
                templates: []
              };
            })();
            var child2 = (function () {
              return {
                meta: {
                  "fragmentReason": false,
                  "revision": "Ember@2.4.6",
                  "loc": {
                    "source": null,
                    "start": {
                      "line": 53,
                      "column": 18
                    },
                    "end": {
                      "line": 57,
                      "column": 18
                    }
                  },
                  "moduleName": "dummy/templates/components/settings-example.hbs"
                },
                isEmpty: false,
                arity: 0,
                cachedFragment: null,
                hasRendered: false,
                buildFragment: function buildFragment(dom) {
                  var el0 = dom.createDocumentFragment();
                  var el1 = dom.createTextNode("                    ");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createComment("");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createTextNode("\n");
                  dom.appendChild(el0, el1);
                  return el0;
                },
                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                  var morphs = new Array(1);
                  morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
                  return morphs;
                },
                statements: [["inline", "number-input", [], ["value", ["subexpr", "mut", [["subexpr", "get", [["get", "controllerProperties", ["loc", [null, [55, 38], [55, 58]]]], ["get", "settingMetadata.bindedControllerPropertieName", ["loc", [null, [55, 59], [55, 104]]]]], [], ["loc", [null, [55, 33], [55, 105]]]]], [], ["loc", [null, [55, 28], [55, 106]]]]], ["loc", [null, [54, 20], [56, 22]]]]],
                locals: [],
                templates: []
              };
            })();
            var child3 = (function () {
              return {
                meta: {
                  "fragmentReason": false,
                  "revision": "Ember@2.4.6",
                  "loc": {
                    "source": null,
                    "start": {
                      "line": 59,
                      "column": 18
                    },
                    "end": {
                      "line": 64,
                      "column": 18
                    }
                  },
                  "moduleName": "dummy/templates/components/settings-example.hbs"
                },
                isEmpty: false,
                arity: 0,
                cachedFragment: null,
                hasRendered: false,
                buildFragment: function buildFragment(dom) {
                  var el0 = dom.createDocumentFragment();
                  var el1 = dom.createTextNode("                    ");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createComment("");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createTextNode("\n");
                  dom.appendChild(el0, el1);
                  return el0;
                },
                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                  var morphs = new Array(1);
                  morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
                  return morphs;
                },
                statements: [["inline", "input", [], ["type", "datetime-local", "value", ["subexpr", "mut", [["subexpr", "get", [["get", "controllerProperties", ["loc", [null, [62, 38], [62, 58]]]], ["get", "settingMetadata.bindedControllerPropertieName", ["loc", [null, [62, 59], [62, 104]]]]], [], ["loc", [null, [62, 33], [62, 105]]]]], [], ["loc", [null, [62, 28], [62, 106]]]]], ["loc", [null, [60, 20], [63, 22]]]]],
                locals: [],
                templates: []
              };
            })();
            var child4 = (function () {
              var child0 = (function () {
                return {
                  meta: {
                    "fragmentReason": false,
                    "revision": "Ember@2.4.6",
                    "loc": {
                      "source": null,
                      "start": {
                        "line": 69,
                        "column": 22
                      },
                      "end": {
                        "line": 73,
                        "column": 22
                      }
                    },
                    "moduleName": "dummy/templates/components/settings-example.hbs"
                  },
                  isEmpty: false,
                  arity: 1,
                  cachedFragment: null,
                  hasRendered: false,
                  buildFragment: function buildFragment(dom) {
                    var el0 = dom.createDocumentFragment();
                    var el1 = dom.createTextNode("                        ");
                    dom.appendChild(el0, el1);
                    var el1 = dom.createElement("option");
                    var el2 = dom.createTextNode("\n                          ");
                    dom.appendChild(el1, el2);
                    var el2 = dom.createComment("");
                    dom.appendChild(el1, el2);
                    var el2 = dom.createTextNode("\n                        ");
                    dom.appendChild(el1, el2);
                    dom.appendChild(el0, el1);
                    var el1 = dom.createTextNode("\n");
                    dom.appendChild(el0, el1);
                    return el0;
                  },
                  buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                    var element1 = dom.childAt(fragment, [1]);
                    var morphs = new Array(3);
                    morphs[0] = dom.createAttrMorph(element1, 'value');
                    morphs[1] = dom.createAttrMorph(element1, 'selected');
                    morphs[2] = dom.createMorphAt(element1, 1, 1);
                    return morphs;
                  },
                  statements: [["attribute", "value", ["get", "item", ["loc", [null, [70, 40], [70, 44]]]]], ["attribute", "selected", ["subexpr", "eq", [["subexpr", "get", [["get", "controllerProperties", ["loc", [null, [70, 66], [70, 86]]]], ["get", "settingMetadata.bindedControllerPropertieName", ["loc", [null, [70, 87], [70, 132]]]]], [], ["loc", [null, [70, 61], [70, 133]]]], ["get", "item", ["loc", [null, [70, 134], [70, 138]]]]], [], ["loc", [null, [70, 56], [70, 140]]]]], ["inline", "to-string", [["get", "item", ["loc", [null, [71, 38], [71, 42]]]]], [], ["loc", [null, [71, 26], [71, 44]]]]],
                  locals: ["item"],
                  templates: []
                };
              })();
              return {
                meta: {
                  "fragmentReason": false,
                  "revision": "Ember@2.4.6",
                  "loc": {
                    "source": null,
                    "start": {
                      "line": 66,
                      "column": 18
                    },
                    "end": {
                      "line": 75,
                      "column": 18
                    }
                  },
                  "moduleName": "dummy/templates/components/settings-example.hbs"
                },
                isEmpty: false,
                arity: 0,
                cachedFragment: null,
                hasRendered: false,
                buildFragment: function buildFragment(dom) {
                  var el0 = dom.createDocumentFragment();
                  var el1 = dom.createTextNode("                    ");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createElement("select");
                  var el2 = dom.createTextNode("\n                      ");
                  dom.appendChild(el1, el2);
                  var el2 = dom.createElement("option");
                  dom.appendChild(el1, el2);
                  var el2 = dom.createTextNode("\n");
                  dom.appendChild(el1, el2);
                  var el2 = dom.createComment("");
                  dom.appendChild(el1, el2);
                  var el2 = dom.createTextNode("                    ");
                  dom.appendChild(el1, el2);
                  dom.appendChild(el0, el1);
                  var el1 = dom.createTextNode("\n");
                  dom.appendChild(el0, el1);
                  return el0;
                },
                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                  var element2 = dom.childAt(fragment, [1]);
                  var morphs = new Array(2);
                  morphs[0] = dom.createAttrMorph(element2, 'onchange');
                  morphs[1] = dom.createMorphAt(element2, 3, 3);
                  return morphs;
                },
                statements: [["attribute", "onchange", ["subexpr", "action", [["subexpr", "mut", [["subexpr", "get", [["get", "controllerProperties", ["loc", [null, [67, 56], [67, 76]]]], ["get", "settingMetadata.bindedControllerPropertieName", ["loc", [null, [67, 77], [67, 122]]]]], [], ["loc", [null, [67, 51], [67, 123]]]]], [], ["loc", [null, [67, 46], [67, 124]]]]], ["value", "target.value"], ["loc", [null, [67, 37], [67, 147]]]]], ["block", "each", [["get", "settingMetadata.settingAvailableItems", ["loc", [null, [69, 30], [69, 67]]]]], [], 0, null, ["loc", [null, [69, 22], [73, 31]]]]],
                locals: [],
                templates: [child0]
              };
            })();
            var child5 = (function () {
              return {
                meta: {
                  "fragmentReason": false,
                  "revision": "Ember@2.4.6",
                  "loc": {
                    "source": null,
                    "start": {
                      "line": 77,
                      "column": 18
                    },
                    "end": {
                      "line": 82,
                      "column": 18
                    }
                  },
                  "moduleName": "dummy/templates/components/settings-example.hbs"
                },
                isEmpty: false,
                arity: 0,
                cachedFragment: null,
                hasRendered: false,
                buildFragment: function buildFragment(dom) {
                  var el0 = dom.createDocumentFragment();
                  var el1 = dom.createTextNode("                    ");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createComment("");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createTextNode("\n");
                  dom.appendChild(el0, el1);
                  return el0;
                },
                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                  var morphs = new Array(1);
                  morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
                  return morphs;
                },
                statements: [["inline", "css-picker", [], ["value", ["subexpr", "mut", [["subexpr", "get", [["get", "controllerProperties", ["loc", [null, [79, 38], [79, 58]]]], ["get", "settingMetadata.bindedControllerPropertieName", ["loc", [null, [79, 59], [79, 104]]]]], [], ["loc", [null, [79, 33], [79, 105]]]]], [], ["loc", [null, [79, 28], [79, 106]]]], "items", ["subexpr", "@mut", [["get", "settingMetadata.settingAvailableItems", ["loc", [null, [80, 28], [80, 65]]]]], [], []]], ["loc", [null, [78, 20], [81, 22]]]]],
                locals: [],
                templates: []
              };
            })();
            var child6 = (function () {
              return {
                meta: {
                  "fragmentReason": false,
                  "revision": "Ember@2.4.6",
                  "loc": {
                    "source": null,
                    "start": {
                      "line": 84,
                      "column": 18
                    },
                    "end": {
                      "line": 86,
                      "column": 18
                    }
                  },
                  "moduleName": "dummy/templates/components/settings-example.hbs"
                },
                isEmpty: false,
                arity: 0,
                cachedFragment: null,
                hasRendered: false,
                buildFragment: function buildFragment(dom) {
                  var el0 = dom.createDocumentFragment();
                  var el1 = dom.createTextNode("                    ");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createComment("");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createTextNode("\n");
                  dom.appendChild(el0, el1);
                  return el0;
                },
                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                  var morphs = new Array(1);
                  morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
                  return morphs;
                },
                statements: [["inline", "to-string", [["subexpr", "get", [["get", "controllerProperties", ["loc", [null, [85, 37], [85, 57]]]], ["get", "settingMetadata.bindedControllerPropertieName", ["loc", [null, [85, 58], [85, 103]]]]], [], ["loc", [null, [85, 32], [85, 104]]]]], [], ["loc", [null, [85, 20], [85, 106]]]]],
                locals: [],
                templates: []
              };
            })();
            var child7 = (function () {
              return {
                meta: {
                  "fragmentReason": false,
                  "revision": "Ember@2.4.6",
                  "loc": {
                    "source": null,
                    "start": {
                      "line": 88,
                      "column": 18
                    },
                    "end": {
                      "line": 90,
                      "column": 18
                    }
                  },
                  "moduleName": "dummy/templates/components/settings-example.hbs"
                },
                isEmpty: false,
                arity: 0,
                cachedFragment: null,
                hasRendered: false,
                buildFragment: function buildFragment(dom) {
                  var el0 = dom.createDocumentFragment();
                  var el1 = dom.createTextNode("                    ");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createComment("");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createTextNode("\n");
                  dom.appendChild(el0, el1);
                  return el0;
                },
                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                  var morphs = new Array(1);
                  morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
                  return morphs;
                },
                statements: [["inline", "to-string", [["subexpr", "get", [["get", "controllerProperties", ["loc", [null, [89, 37], [89, 57]]]], ["get", "settingMetadata.bindedControllerPropertieName", ["loc", [null, [89, 58], [89, 103]]]]], [], ["loc", [null, [89, 32], [89, 104]]]]], [], ["loc", [null, [89, 20], [89, 106]]]]],
                locals: [],
                templates: []
              };
            })();
            return {
              meta: {
                "fragmentReason": false,
                "revision": "Ember@2.4.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 37,
                    "column": 16
                  },
                  "end": {
                    "line": 91,
                    "column": 16
                  }
                },
                "moduleName": "dummy/templates/components/settings-example.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var morphs = new Array(8);
                morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
                morphs[1] = dom.createMorphAt(fragment, 2, 2, contextualElement);
                morphs[2] = dom.createMorphAt(fragment, 4, 4, contextualElement);
                morphs[3] = dom.createMorphAt(fragment, 6, 6, contextualElement);
                morphs[4] = dom.createMorphAt(fragment, 8, 8, contextualElement);
                morphs[5] = dom.createMorphAt(fragment, 10, 10, contextualElement);
                morphs[6] = dom.createMorphAt(fragment, 12, 12, contextualElement);
                morphs[7] = dom.createMorphAt(fragment, 14, 14, contextualElement);
                dom.insertBoundary(fragment, 0);
                dom.insertBoundary(fragment, null);
                return morphs;
              },
              statements: [["block", "if", [["subexpr", "eq", [["get", "settingMetadata.settingType", ["loc", [null, [39, 28], [39, 55]]]], "boolean"], [], ["loc", [null, [39, 24], [39, 66]]]]], [], 0, null, ["loc", [null, [39, 18], [44, 25]]]], ["block", "if", [["subexpr", "eq", [["get", "settingMetadata.settingType", ["loc", [null, [46, 28], [46, 55]]]], "string"], [], ["loc", [null, [46, 24], [46, 65]]]]], [], 1, null, ["loc", [null, [46, 18], [51, 25]]]], ["block", "if", [["subexpr", "eq", [["get", "settingMetadata.settingType", ["loc", [null, [53, 28], [53, 55]]]], "number"], [], ["loc", [null, [53, 24], [53, 65]]]]], [], 2, null, ["loc", [null, [53, 18], [57, 25]]]], ["block", "if", [["subexpr", "or", [["subexpr", "eq", [["get", "settingMetadata.settingType", ["loc", [null, [59, 32], [59, 59]]]], "date"], [], ["loc", [null, [59, 28], [59, 67]]]], ["subexpr", "eq", [["get", "settingMetadata.settingType", ["loc", [null, [59, 72], [59, 99]]]], "datetime"], [], ["loc", [null, [59, 68], [59, 111]]]]], [], ["loc", [null, [59, 24], [59, 112]]]]], [], 3, null, ["loc", [null, [59, 18], [64, 25]]]], ["block", "if", [["subexpr", "eq", [["get", "settingMetadata.settingType", ["loc", [null, [66, 28], [66, 55]]]], "enumeration"], [], ["loc", [null, [66, 24], [66, 70]]]]], [], 4, null, ["loc", [null, [66, 18], [75, 25]]]], ["block", "if", [["subexpr", "eq", [["get", "settingMetadata.settingType", ["loc", [null, [77, 28], [77, 55]]]], "css"], [], ["loc", [null, [77, 24], [77, 62]]]]], [], 5, null, ["loc", [null, [77, 18], [82, 25]]]], ["block", "if", [["subexpr", "eq", [["get", "settingMetadata.settingType", ["loc", [null, [84, 28], [84, 55]]]], "hasManyArray"], [], ["loc", [null, [84, 24], [84, 71]]]]], [], 6, null, ["loc", [null, [84, 18], [86, 25]]]], ["block", "if", [["subexpr", "eq", [["get", "settingMetadata.settingType", ["loc", [null, [88, 28], [88, 55]]]], "model"], [], ["loc", [null, [88, 24], [88, 64]]]]], [], 7, null, ["loc", [null, [88, 18], [90, 25]]]]],
              locals: [],
              templates: [child0, child1, child2, child3, child4, child5, child6, child7]
            };
          })();
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 25,
                  "column": 12
                },
                "end": {
                  "line": 92,
                  "column": 14
                }
              },
              "moduleName": "dummy/templates/components/settings-example.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(2);
              morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
              morphs[1] = dom.createMorphAt(fragment, 2, 2, contextualElement);
              dom.insertBoundary(fragment, 0);
              dom.insertBoundary(fragment, null);
              return morphs;
            },
            statements: [["block", "if", [["get", "settingMetadata.bindedControllerPropertieDisplayName", ["loc", [null, [27, 22], [27, 74]]]]], [], 0, 1, ["loc", [null, [27, 16], [31, 23]]]], ["block", "if", [["get", "settingMetadata.settingIsWithoutUI", ["loc", [null, [34, 22], [34, 56]]]]], [], 2, 3, ["loc", [null, [34, 16], [91, 23]]]]],
            locals: [],
            templates: [child0, child1, child2, child3]
          };
        })();
        var child1 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 95,
                  "column": 14
                },
                "end": {
                  "line": 97,
                  "column": 14
                }
              },
              "moduleName": "dummy/templates/components/settings-example.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("                ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("=");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(2);
              morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
              morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);
              return morphs;
            },
            statements: [["content", "settingMetadata.settingName", ["loc", [null, [96, 16], [96, 47]]]], ["inline", "to-string", [["get", "settingMetadata.settingValue", ["loc", [null, [96, 60], [96, 88]]]]], [], ["loc", [null, [96, 48], [96, 90]]]]],
            locals: [],
            templates: []
          };
        })();
        var child2 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 97,
                  "column": 14
                },
                "end": {
                  "line": 99,
                  "column": 14
                }
              },
              "moduleName": "dummy/templates/components/settings-example.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("                ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("=");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(2);
              morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
              morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);
              return morphs;
            },
            statements: [["inline", "to-string", [["get", "settingMetadata.settingName", ["loc", [null, [98, 28], [98, 55]]]]], [], ["loc", [null, [98, 16], [98, 57]]]], ["inline", "to-string", [["subexpr", "get", [["get", "controllerProperties", ["loc", [null, [98, 75], [98, 95]]]], ["get", "settingMetadata.bindedControllerPropertieName", ["loc", [null, [98, 96], [98, 141]]]]], [], ["loc", [null, [98, 70], [98, 142]]]]], [], ["loc", [null, [98, 58], [98, 144]]]]],
            locals: [],
            templates: []
          };
        })();
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 22,
                "column": 8
              },
              "end": {
                "line": 105,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/components/settings-example.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("tr");
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("td");
            var el3 = dom.createTextNode("\n");
            dom.appendChild(el2, el3);
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("            ");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("td");
            var el3 = dom.createTextNode("\n");
            dom.appendChild(el2, el3);
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("            ");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("td");
            var el3 = dom.createTextNode("\n              ");
            dom.appendChild(el2, el3);
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("=");
            dom.appendChild(el2, el3);
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("\n            ");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element3 = dom.childAt(fragment, [1]);
            var element4 = dom.childAt(element3, [5]);
            var morphs = new Array(4);
            morphs[0] = dom.createMorphAt(dom.childAt(element3, [1]), 1, 1);
            morphs[1] = dom.createMorphAt(dom.childAt(element3, [3]), 1, 1);
            morphs[2] = dom.createMorphAt(element4, 1, 1);
            morphs[3] = dom.createMorphAt(element4, 3, 3);
            return morphs;
          },
          statements: [["block", "if", [["get", "settingMetadata.bindedControllerPropertieName", ["loc", [null, [25, 18], [25, 63]]]]], [], 0, null, ["loc", [null, [25, 12], [92, 21]]]], ["block", "if", [["subexpr", "or", [["get", "settingMetadata.settingIsWithoutUI", ["loc", [null, [95, 24], [95, 58]]]], ["subexpr", "not", [["get", "settingMetadata.bindedControllerPropertieName", ["loc", [null, [95, 64], [95, 109]]]]], [], ["loc", [null, [95, 59], [95, 110]]]]], [], ["loc", [null, [95, 20], [95, 111]]]]], [], 1, 2, ["loc", [null, [95, 14], [99, 21]]]], ["inline", "to-string", [["get", "settingMetadata.settingName", ["loc", [null, [102, 26], [102, 53]]]]], [], ["loc", [null, [102, 14], [102, 55]]]], ["inline", "to-string", [["get", "settingMetadata.settingDefaultValue", ["loc", [null, [102, 68], [102, 103]]]]], [], ["loc", [null, [102, 56], [102, 105]]]]],
          locals: ["settingMetadata"],
          templates: [child0, child1, child2]
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 14,
              "column": 4
            },
            "end": {
              "line": 108,
              "column": 4
            }
          },
          "moduleName": "dummy/templates/components/settings-example.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("table");
          dom.setAttribute(el1, "class", "ui celled table flexberry-word-break");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("thead");
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("tr");
          var el4 = dom.createElement("th");
          var el5 = dom.createComment("");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n        ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("th");
          var el5 = dom.createComment("");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n        ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("th");
          var el5 = dom.createComment("");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n      ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("tbody");
          var el3 = dom.createTextNode("\n");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("      ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element5 = dom.childAt(fragment, [1]);
          var element6 = dom.childAt(element5, [1, 1]);
          var morphs = new Array(4);
          morphs[0] = dom.createMorphAt(dom.childAt(element6, [0]), 0, 0);
          morphs[1] = dom.createMorphAt(dom.childAt(element6, [2]), 0, 0);
          morphs[2] = dom.createMorphAt(dom.childAt(element6, [4]), 0, 0);
          morphs[3] = dom.createMorphAt(dom.childAt(element5, [3]), 1, 1);
          return morphs;
        },
        statements: [["inline", "t", ["components.settings-example.controller-properties-caption"], [], ["loc", [null, [17, 16], [17, 81]]]], ["inline", "t", ["components.settings-example.component-current-settings-caption"], [], ["loc", [null, [18, 12], [18, 82]]]], ["inline", "t", ["components.settings-example.component-default-settings-caption"], [], ["loc", [null, [19, 12], [19, 82]]]], ["block", "each", [["get", "componentSettingsMetadata", ["loc", [null, [22, 16], [22, 41]]]]], [], 0, null, ["loc", [null, [22, 8], [105, 17]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child3 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 108,
              "column": 4
            },
            "end": {
              "line": 110,
              "column": 4
            }
          },
          "moduleName": "dummy/templates/components/settings-example.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["content", "componentSettingsPlaceholder", ["loc", [null, [109, 6], [109, 38]]]]],
        locals: [],
        templates: []
      };
    })();
    var child4 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 112,
              "column": 2
            },
            "end": {
              "line": 119,
              "column": 2
            }
          },
          "moduleName": "dummy/templates/components/settings-example.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "ui segment");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "ui segment");
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("h4");
          dom.setAttribute(el3, "class", "ui header");
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n      ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1, 1]);
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(dom.childAt(element0, [1]), 0, 0);
          morphs[1] = dom.createMorphAt(element0, 3, 3);
          return morphs;
        },
        statements: [["inline", "t", ["components.settings-example.component-with-applied-settings-caption"], [], ["loc", [null, [115, 30], [115, 105]]]], ["content", "yield", ["loc", [null, [116, 8], [116, 17]]]]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "triple-curlies"
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 121,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/settings-example.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "ui segments");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "ui segment");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element8 = dom.childAt(fragment, [0]);
        var element9 = dom.childAt(element8, [3]);
        var morphs = new Array(4);
        morphs[0] = dom.createMorphAt(element8, 1, 1);
        morphs[1] = dom.createMorphAt(element9, 1, 1);
        morphs[2] = dom.createMorphAt(element9, 2, 2);
        morphs[3] = dom.createMorphAt(element8, 5, 5);
        return morphs;
      },
      statements: [["block", "if", [["get", "componentTemplateText", ["loc", [null, [2, 8], [2, 29]]]]], [], 0, null, ["loc", [null, [2, 2], [9, 9]]]], ["block", "if", [["get", "componentSettingsCaption", ["loc", [null, [11, 10], [11, 34]]]]], [], 1, null, ["loc", [null, [11, 4], [13, 11]]]], ["block", "if", [["get", "componentSettingsMetadata.length", ["loc", [null, [14, 10], [14, 42]]]]], [], 2, 3, ["loc", [null, [14, 4], [110, 11]]]], ["block", "if", [["get", "hasBlock", ["loc", [null, [112, 8], [112, 16]]]]], [], 4, null, ["loc", [null, [112, 2], [119, 9]]]]],
      locals: [],
      templates: [child0, child1, child2, child3, child4]
    };
  })());
});
define("dummy/templates/components/simple-map", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 12,
              "column": 6
            },
            "end": {
              "line": 14,
              "column": 6
            }
          },
          "moduleName": "dummy/templates/components/simple-map.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "yield", [["get", "leafletMap", ["loc", [null, [13, 16], [13, 26]]]]], [], ["loc", [null, [13, 8], [13, 28]]]]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "triple-curlies"
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 34,
            "column": 7
          }
        },
        "moduleName": "dummy/templates/components/simple-map.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("form");
        dom.setAttribute(el1, "class", "ui form flexberry-vertical-form");
        dom.setAttribute(el1, "role", "form");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "ui grid");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "twelve wide column");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "four wide column");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("h3");
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0, 1]);
        var element1 = dom.childAt(element0, [1]);
        var element2 = dom.childAt(element0, [3, 1]);
        var morphs = new Array(5);
        morphs[0] = dom.createMorphAt(element1, 1, 1);
        morphs[1] = dom.createMorphAt(element1, 3, 3);
        morphs[2] = dom.createMorphAt(dom.childAt(element2, [1]), 0, 0);
        morphs[3] = dom.createMorphAt(element2, 3, 3);
        morphs[4] = dom.createMorphAt(element2, 5, 5);
        return morphs;
      },
      statements: [["inline", "flexberry-map", [], ["lat", ["subexpr", "@mut", [["get", "lat", ["loc", [null, [5, 12], [5, 15]]]]], [], []], "lng", ["subexpr", "@mut", [["get", "lng", ["loc", [null, [6, 12], [6, 15]]]]], [], []], "zoom", ["subexpr", "@mut", [["get", "zoom", ["loc", [null, [7, 13], [7, 17]]]]], [], []], "zoomControl", true, "leafletInit", ["subexpr", "action", ["onMapLeafletInit", "leafletMap"], [], ["loc", [null, [9, 20], [9, 60]]]], "serviceLayerInit", ["subexpr", "action", ["onServiceLayerInit", "serviceLayer"], [], ["loc", [null, [10, 25], [10, 69]]]]], ["loc", [null, [4, 6], [11, 8]]]], ["block", "if", [["get", "leafletMap", ["loc", [null, [12, 12], [12, 22]]]]], [], 0, null, ["loc", [null, [12, 6], [14, 13]]]], ["inline", "t", ["forms.map.tabbar.search.caption"], [], ["loc", [null, [18, 12], [18, 51]]]], ["inline", "flexberry-search-panel", [], ["querySearch", ["subexpr", "action", ["querySearch"], [], ["loc", [null, [20, 22], [20, 44]]]], "clearSearch", ["subexpr", "action", ["clearSearch"], [], ["loc", [null, [21, 22], [21, 44]]]], "searchInProcess", ["subexpr", "@mut", [["get", "searchInProcess", ["loc", [null, [22, 26], [22, 41]]]]], [], []], "searchSettings", ["subexpr", "flexberry-search-properties-osm-ru", ["http://openstreetmap.ru/api/autocomplete?q={query}"], [], ["loc", [null, [23, 25], [23, 114]]]]], ["loc", [null, [19, 8], [24, 10]]]], ["inline", "layer-result-list", [], ["results", ["subexpr", "@mut", [["get", "searchResults", ["loc", [null, [26, 18], [26, 31]]]]], [], []], "featureSelected", ["subexpr", "action", ["onLayerFeatureSelected"], [], ["loc", [null, [27, 26], [27, 59]]]], "serviceLayer", ["subexpr", "@mut", [["get", "serviceLayer", ["loc", [null, [28, 23], [28, 35]]]]], [], []], "leafletMap", ["subexpr", "@mut", [["get", "leafletMap", ["loc", [null, [29, 21], [29, 31]]]]], [], []]], ["loc", [null, [25, 8], [30, 10]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define("dummy/templates/components/ui-checkbox", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/ui-checkbox.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("input");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("label");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        if (this.cachedFragment) {
          dom.repairClonedNode(element0, [], true);
        }
        var morphs = new Array(6);
        morphs[0] = dom.createAttrMorph(element0, 'type');
        morphs[1] = dom.createAttrMorph(element0, 'name');
        morphs[2] = dom.createAttrMorph(element0, 'checked');
        morphs[3] = dom.createAttrMorph(element0, 'disabled');
        morphs[4] = dom.createAttrMorph(element0, 'data-id');
        morphs[5] = dom.createMorphAt(dom.childAt(fragment, [2]), 0, 0);
        return morphs;
      },
      statements: [["attribute", "type", ["get", "type", ["loc", [null, [1, 14], [1, 18]]]]], ["attribute", "name", ["get", "name", ["loc", [null, [1, 28], [1, 32]]]]], ["attribute", "checked", ["get", "checked", ["loc", [null, [1, 45], [1, 52]]]]], ["attribute", "disabled", ["get", "readonly", ["loc", [null, [1, 66], [1, 74]]]]], ["attribute", "data-id", ["get", "data-id", ["loc", [null, [1, 87], [1, 94]]]]], ["content", "label", ["loc", [null, [2, 7], [2, 16]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/components/ui-dropdown", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/ui-dropdown.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["content", "yield", ["loc", [null, [1, 0], [1, 9]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/components/ui-message-content", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "fragmentReason": {
            "name": "triple-curlies"
          },
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 3,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/ui-message-content.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "header");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);
          return morphs;
        },
        statements: [["content", "caption", ["loc", [null, [2, 22], [2, 33]]]]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 4,
              "column": 0
            },
            "end": {
              "line": 6,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/ui-message-content.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("p");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);
          return morphs;
        },
        statements: [["content", "message", ["loc", [null, [5, 5], [5, 16]]]]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type", "multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 8,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/ui-message-content.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(3);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(fragment, 1, 1, contextualElement);
        morphs[2] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["block", "if", [["get", "caption", ["loc", [null, [1, 6], [1, 13]]]]], [], 0, null, ["loc", [null, [1, 0], [3, 7]]]], ["block", "if", [["get", "message", ["loc", [null, [4, 6], [4, 13]]]]], [], 1, null, ["loc", [null, [4, 0], [6, 7]]]], ["content", "yield", ["loc", [null, [7, 0], [7, 9]]]]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define("dummy/templates/components/ui-message", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "fragmentReason": {
            "name": "triple-curlies"
          },
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 3,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/ui-message.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("i");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var morphs = new Array(1);
          morphs[0] = dom.createAttrMorph(element0, 'class');
          return morphs;
        },
        statements: [["attribute", "class", ["concat", [["get", "icon", ["loc", [null, [2, 14], [2, 18]]]]]]]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 4,
              "column": 0
            },
            "end": {
              "line": 6,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/ui-message.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("i");
          dom.setAttribute(el1, "class", "close icon");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes() {
          return [];
        },
        statements: [],
        locals: [],
        templates: []
      };
    })();
    var child2 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 7,
              "column": 0
            },
            "end": {
              "line": 11,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/ui-message.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "content");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["inline", "partial", ["components/ui-message-content"], [], ["loc", [null, [9, 4], [9, 47]]]]],
        locals: [],
        templates: []
      };
    })();
    var child3 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 11,
              "column": 0
            },
            "end": {
              "line": 13,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/ui-message.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "partial", ["components/ui-message-content"], [], ["loc", [null, [12, 2], [12, 45]]]]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type", "multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 14,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/ui-message.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(3);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(fragment, 1, 1, contextualElement);
        morphs[2] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "if", [["get", "icon", ["loc", [null, [1, 6], [1, 10]]]]], [], 0, null, ["loc", [null, [1, 0], [3, 7]]]], ["block", "if", [["get", "closeable", ["loc", [null, [4, 6], [4, 15]]]]], [], 1, null, ["loc", [null, [4, 0], [6, 7]]]], ["block", "if", [["get", "icon", ["loc", [null, [7, 6], [7, 10]]]]], [], 2, 3, ["loc", [null, [7, 0], [13, 7]]]]],
      locals: [],
      templates: [child0, child1, child2, child3]
    };
  })());
});
define("dummy/templates/components/ui-modal", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/ui-modal.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["content", "yield", ["loc", [null, [1, 0], [1, 9]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/components/ui-radio", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/ui-radio.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("input");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("label");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        if (this.cachedFragment) {
          dom.repairClonedNode(element0, [], true);
        }
        var morphs = new Array(6);
        morphs[0] = dom.createAttrMorph(element0, 'type');
        morphs[1] = dom.createAttrMorph(element0, 'name');
        morphs[2] = dom.createAttrMorph(element0, 'checked');
        morphs[3] = dom.createAttrMorph(element0, 'disabled');
        morphs[4] = dom.createAttrMorph(element0, 'data-id');
        morphs[5] = dom.createMorphAt(dom.childAt(fragment, [2]), 0, 0);
        return morphs;
      },
      statements: [["attribute", "type", ["get", "type", ["loc", [null, [1, 14], [1, 18]]]]], ["attribute", "name", ["get", "name", ["loc", [null, [1, 28], [1, 32]]]]], ["attribute", "checked", ["get", "checked", ["loc", [null, [1, 45], [1, 52]]]]], ["attribute", "disabled", ["get", "readonly", ["loc", [null, [1, 66], [1, 74]]]]], ["attribute", "data-id", ["get", "data-id", ["loc", [null, [1, 87], [1, 94]]]]], ["content", "label", ["loc", [null, [2, 7], [2, 16]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/error", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 7,
                "column": 2
              },
              "end": {
                "line": 11,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/error.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("pre");
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);
            return morphs;
          },
          statements: [["content", "model.stack", ["loc", [null, [10, 9], [10, 24]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 6,
              "column": 0
            },
            "end": {
              "line": 12,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/error.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "flexberry-toggler", [], ["caption", ["subexpr", "t", ["forms.error-form.show-more"], [], ["loc", [null, [8, 12], [8, 44]]]]], 0, null, ["loc", [null, [7, 2], [11, 24]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child1 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 14,
                "column": 2
              },
              "end": {
                "line": 20,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/error.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "link-to", [["subexpr", "t", ["forms.error-form.retry"], [], ["loc", [null, [15, 14], [15, 42]]]], ["get", "model.retryRoute", ["loc", [null, [15, 43], [15, 59]]]], ["get", "model.id", ["loc", [null, [15, 60], [15, 68]]]]], ["tagName", "button", "activeClass", "", "class", "ui button"], ["loc", [null, [15, 4], [19, 6]]]]],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 20,
                "column": 2
              },
              "end": {
                "line": 26,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/error.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "link-to", [["subexpr", "t", ["forms.error-form.retry"], [], ["loc", [null, [21, 14], [21, 42]]]], ["get", "model.retryRoute", ["loc", [null, [21, 43], [21, 59]]]]], ["tagName", "button", "activeClass", "", "class", "ui button"], ["loc", [null, [21, 4], [25, 6]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 13,
              "column": 0
            },
            "end": {
              "line": 27,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/error.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "if", [["get", "model.id", ["loc", [null, [14, 8], [14, 16]]]]], [], 0, 1, ["loc", [null, [14, 2], [26, 9]]]]],
        locals: [],
        templates: [child0, child1]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes", "wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 28,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/error.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("h1");
        dom.setAttribute(el1, "class", "ui header");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("h2");
        dom.setAttribute(el1, "class", "ui header");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [2]);
        var morphs = new Array(5);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]), 0, 0);
        morphs[1] = dom.createMorphAt(element0, 1, 1);
        morphs[2] = dom.createMorphAt(element0, 3, 3);
        morphs[3] = dom.createMorphAt(fragment, 4, 4, contextualElement);
        morphs[4] = dom.createMorphAt(fragment, 5, 5, contextualElement);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["inline", "t", ["forms.error-form.caption"], [], ["loc", [null, [1, 22], [1, 54]]]], ["inline", "if", [["get", "model.name", ["loc", [null, [3, 7], [3, 17]]]], ["subexpr", "concat", [["get", "model.name", ["loc", [null, [3, 26], [3, 36]]]], ": "], [], ["loc", [null, [3, 18], [3, 42]]]]], [], ["loc", [null, [3, 2], [3, 44]]]], ["inline", "if", [["get", "model.message", ["loc", [null, [4, 7], [4, 20]]]], ["get", "model.message", ["loc", [null, [4, 21], [4, 34]]]]], [], ["loc", [null, [4, 2], [4, 36]]]], ["block", "if", [["get", "model.stack", ["loc", [null, [6, 6], [6, 17]]]]], [], 0, null, ["loc", [null, [6, 0], [12, 7]]]], ["block", "if", [["get", "model.retryRoute", ["loc", [null, [13, 6], [13, 22]]]]], [], 1, null, ["loc", [null, [13, 0], [27, 7]]]]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define("dummy/templates/filters-dialog-content", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/filters-dialog-content.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "filters-dialog-content", [], ["componentName", ["subexpr", "@mut", [["get", "model.componentName", ["loc", [null, [2, 16], [2, 35]]]]], [], []], "filterColumns", ["subexpr", "@mut", [["get", "model.filterColumns", ["loc", [null, [3, 16], [3, 35]]]]], [], []], "close", ["subexpr", "action", ["closeModalDialog"], [], ["loc", [null, [4, 8], [4, 35]]]], "message", ["subexpr", "@mut", [["get", "message", ["loc", [null, [5, 10], [5, 17]]]]], [], []]], ["loc", [null, [1, 0], [6, 2]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/filters-dialog", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "fragmentReason": {
            "name": "missing-wrapper",
            "problems": ["wrong-type"]
          },
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 10,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/filters-dialog.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "outlet", ["modal-content"], [], ["loc", [null, [9, 2], [9, 28]]]]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 11,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/filters-dialog.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "modal-dialog", [], ["title", ["subexpr", "@mut", [["get", "title", ["loc", [null, [2, 8], [2, 13]]]]], [], []], "sizeClass", "small", "close", "removeModalDialog", "created", "createdModalDialog", "useOkButton", false, "useCloseButton", false], 0, null, ["loc", [null, [1, 0], [10, 17]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define("dummy/templates/flexberry-file-view-dialog", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "fragmentReason": {
            "name": "triple-curlies"
          },
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 10,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/flexberry-file-view-dialog.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("img");
          dom.setAttribute(el1, "class", "flexberry-file-view-dialog");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var morphs = new Array(2);
          morphs[0] = dom.createAttrMorph(element0, 'src');
          morphs[1] = dom.createAttrMorph(element0, 'alt');
          return morphs;
        },
        statements: [["attribute", "src", ["concat", [["get", "imageSrc", ["loc", [null, [9, 49], [9, 57]]]]]]], ["attribute", "alt", ["subexpr", "t", ["components.flexberry-file.preview-image-alternative-text"], [], ["loc", [null, [9, 65], [9, 129]]]]]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 11,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/flexberry-file-view-dialog.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "modal-dialog", [], ["title", ["subexpr", "@mut", [["get", "title", ["loc", [null, [2, 8], [2, 13]]]]], [], []], "useOkButton", false, "close", "removeModalDialog", "created", "createdModalDialog", "viewImageContent", true, "sizeClass", ["subexpr", "@mut", [["get", "sizeClass", ["loc", [null, [7, 12], [7, 21]]]]], [], []], "settings", ["subexpr", "@mut", [["get", "settings", ["loc", [null, [8, 11], [8, 19]]]]], [], []]], 0, null, ["loc", [null, [1, 0], [10, 17]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define("dummy/templates/gis-search-form", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 52,
                  "column": 18
                },
                "end": {
                  "line": 54,
                  "column": 18
                }
              },
              "moduleName": "dummy/templates/gis-search-form.hbs"
            },
            isEmpty: false,
            arity: 2,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("                    ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "item");
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var element6 = dom.childAt(fragment, [1]);
              var morphs = new Array(2);
              morphs[0] = dom.createAttrMorph(element6, 'data-value');
              morphs[1] = dom.createMorphAt(element6, 0, 0);
              return morphs;
            },
            statements: [["attribute", "data-value", ["concat", [["get", "value", ["loc", [null, [53, 52], [53, 57]]]]]]], ["content", "value", ["loc", [null, [53, 61], [53, 70]]]]],
            locals: ["key", "value"],
            templates: []
          };
        })();
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 46,
                "column": 14
              },
              "end": {
                "line": 56,
                "column": 14
              }
            },
            "moduleName": "dummy/templates/gis-search-form.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("                ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("i");
            dom.setAttribute(el1, "class", "dropdown icon");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n                ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1, "class", "text");
            var el2 = dom.createTextNode("\n                  ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n                ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n                ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1, "class", "menu");
            var el2 = dom.createTextNode("\n");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("                ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(2);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [3]), 1, 1);
            morphs[1] = dom.createMorphAt(dom.childAt(fragment, [5]), 1, 1);
            return morphs;
          },
          statements: [["content", "filter.condition", ["loc", [null, [49, 18], [49, 38]]]], ["block", "each-in", [["get", "scaleFilterConditions", ["loc", [null, [52, 29], [52, 50]]]]], [], 0, null, ["loc", [null, [52, 18], [54, 30]]]]],
          locals: [],
          templates: [child0]
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 44,
              "column": 12
            },
            "end": {
              "line": 69,
              "column": 12
            }
          },
          "moduleName": "dummy/templates/gis-search-form.hbs"
        },
        isEmpty: false,
        arity: 2,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("              ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "scale-filter");
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("              ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n              ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n              ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n              ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element7 = dom.childAt(fragment, [1]);
          var morphs = new Array(4);
          morphs[0] = dom.createMorphAt(element7, 1, 1);
          morphs[1] = dom.createMorphAt(element7, 3, 3);
          morphs[2] = dom.createMorphAt(element7, 5, 5);
          morphs[3] = dom.createMorphAt(element7, 7, 7);
          return morphs;
        },
        statements: [["block", "ui-dropdown", [], ["class", "compact selection", "onChange", ["subexpr", "action", ["onScaleConditionChange", ["get", "index", ["loc", [null, [46, 97], [46, 102]]]]], [], ["loc", [null, [46, 64], [46, 103]]]]], 0, null, ["loc", [null, [46, 14], [56, 30]]]], ["inline", "t", ["forms.gis-search-form.scale-prefix"], [], ["loc", [null, [57, 14], [57, 56]]]], ["inline", "flexberry-dropdown-input", [], ["items", ["subexpr", "@mut", [["get", "scales", ["loc", [null, [59, 22], [59, 28]]]]], [], []], "value", ["subexpr", "@mut", [["get", "filter.scale", ["loc", [null, [60, 22], [60, 34]]]]], [], []], "class", "scale-value fluid", "onKeyDown", ["subexpr", "action", ["scaleFilterKeyDown"], [], ["loc", [null, [62, 26], [62, 55]]]], "direction", "downward", "inputPlaceholder", ["subexpr", "t", ["forms.gis-search-form.scale-dropdown-input-placeholder"], [], ["loc", [null, [64, 33], [64, 93]]]], "inputTitle", ["subexpr", "t", ["forms.gis-search-form.scale-dropdown-input-title"], [], ["loc", [null, [65, 27], [65, 81]]]]], ["loc", [null, [58, 14], [66, 16]]]], ["inline", "flexberry-button", [], ["iconClass", "remove icon", "click", ["subexpr", "action", ["deleteScaleFilterCondition", ["get", "index", ["loc", [null, [67, 100], [67, 105]]]]], [], ["loc", [null, [67, 63], [67, 106]]]]], ["loc", [null, [67, 14], [67, 108]]]]],
        locals: ["filter", "index"],
        templates: [child0]
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 69,
              "column": 12
            },
            "end": {
              "line": 71,
              "column": 12
            }
          },
          "moduleName": "dummy/templates/gis-search-form.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("              ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("label");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);
          return morphs;
        },
        statements: [["inline", "t", ["forms.gis-search-form.scale-no-conditions"], [], ["loc", [null, [70, 21], [70, 70]]]]],
        locals: [],
        templates: []
      };
    })();
    var child2 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 121,
                "column": 10
              },
              "end": {
                "line": 123,
                "column": 10
              }
            },
            "moduleName": "dummy/templates/gis-search-form.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("            ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("th");
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);
            return morphs;
          },
          statements: [["inline", "t", ["forms.gis-search-form.maps.actions.open"], [], ["loc", [null, [122, 16], [122, 63]]]]],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 126,
                  "column": 14
                },
                "end": {
                  "line": 128,
                  "column": 14
                }
              },
              "moduleName": "dummy/templates/gis-search-form.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("                ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("i");
              dom.setAttribute(el1, "class", "external share icon");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes() {
              return [];
            },
            statements: [],
            locals: [],
            templates: []
          };
        })();
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 124,
                "column": 10
              },
              "end": {
                "line": 130,
                "column": 10
              }
            },
            "moduleName": "dummy/templates/gis-search-form.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("            ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("td");
            dom.setAttribute(el1, "class", "collapsing");
            var el2 = dom.createTextNode("\n");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("            ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
            return morphs;
          },
          statements: [["block", "link-to", [["get", "mapRouteName", ["loc", [null, [126, 25], [126, 37]]]], ["get", "row.id", ["loc", [null, [126, 38], [126, 44]]]]], ["title", ["subexpr", "t", ["forms.gis-search-form.ctrl-message"], [], ["loc", [null, [126, 51], [126, 91]]]]], 0, null, ["loc", [null, [126, 14], [128, 26]]]]],
          locals: ["row"],
          templates: [child0]
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 114,
              "column": 8
            },
            "end": {
              "line": 131,
              "column": 8
            }
          },
          "moduleName": "dummy/templates/gis-search-form.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          morphs[1] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "block-slot", ["column-header-tail-0"], [], 0, null, ["loc", [null, [121, 10], [123, 25]]]], ["block", "block-slot", ["column-cell-tail-0"], [], 1, null, ["loc", [null, [124, 10], [130, 25]]]]],
        locals: [],
        templates: [child0, child1]
      };
    })();
    var child3 = (function () {
      var child0 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 159,
                  "column": 18
                },
                "end": {
                  "line": 161,
                  "column": 18
                }
              },
              "moduleName": "dummy/templates/gis-search-form.hbs"
            },
            isEmpty: false,
            arity: 1,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("                    ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("option");
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var element0 = dom.childAt(fragment, [1]);
              var morphs = new Array(3);
              morphs[0] = dom.createAttrMorph(element0, 'value');
              morphs[1] = dom.createAttrMorph(element0, 'selected');
              morphs[2] = dom.createMorphAt(element0, 0, 0);
              return morphs;
            },
            statements: [["attribute", "value", ["concat", [["subexpr", "get", [["get", "mapItem", ["loc", [null, [160, 41], [160, 48]]]], "id"], [], ["loc", [null, [160, 35], [160, 55]]]]]]], ["attribute", "selected", ["subexpr", "eq", [["subexpr", "get", [["get", "mapItem", ["loc", [null, [160, 76], [160, 83]]]], "id"], [], ["loc", [null, [160, 71], [160, 89]]]], ["get", "_selectedMap", ["loc", [null, [160, 90], [160, 102]]]]], [], ["loc", [null, [160, 66], [160, 104]]]]], ["inline", "get", [["get", "mapItem", ["loc", [null, [160, 111], [160, 118]]]], "name"], [], ["loc", [null, [160, 105], [160, 127]]]]],
            locals: ["mapItem"],
            templates: []
          };
        })();
        var child1 = (function () {
          var child0 = (function () {
            var child0 = (function () {
              return {
                meta: {
                  "fragmentReason": false,
                  "revision": "Ember@2.4.6",
                  "loc": {
                    "source": null,
                    "start": {
                      "line": 166,
                      "column": 18
                    },
                    "end": {
                      "line": 170,
                      "column": 18
                    }
                  },
                  "moduleName": "dummy/templates/gis-search-form.hbs"
                },
                isEmpty: false,
                arity: 0,
                cachedFragment: null,
                hasRendered: false,
                buildFragment: function buildFragment(dom) {
                  var el0 = dom.createDocumentFragment();
                  var el1 = dom.createTextNode("                    ");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createComment("");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createTextNode("\n");
                  dom.appendChild(el0, el1);
                  return el0;
                },
                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                  var morphs = new Array(1);
                  morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
                  return morphs;
                },
                statements: [["inline", "t", ["forms.gis-search-form.layer-metadata.ok"], [], ["loc", [null, [169, 20], [169, 67]]]]],
                locals: [],
                templates: []
              };
            })();
            return {
              meta: {
                "fragmentReason": false,
                "revision": "Ember@2.4.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 165,
                    "column": 16
                  },
                  "end": {
                    "line": 171,
                    "column": 16
                  }
                },
                "moduleName": "dummy/templates/gis-search-form.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var morphs = new Array(1);
                morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
                dom.insertBoundary(fragment, 0);
                dom.insertBoundary(fragment, null);
                return morphs;
              },
              statements: [["block", "link-to", [["get", "newMapWithMetadataRouteName", ["loc", [null, [167, 20], [167, 47]]]], ["subexpr", "query-params", [], ["metadata", ["get", "_metadataIds", ["loc", [null, [167, 71], [167, 83]]]]], ["loc", [null, [167, 48], [167, 84]]]]], ["class", "ui positive button", "title", ["subexpr", "t", ["forms.gis-search-form.ctrl-message"], [], ["loc", [null, [168, 53], [168, 93]]]]], 0, null, ["loc", [null, [166, 18], [170, 30]]]]],
              locals: [],
              templates: [child0]
            };
          })();
          var child1 = (function () {
            var child0 = (function () {
              return {
                meta: {
                  "fragmentReason": false,
                  "revision": "Ember@2.4.6",
                  "loc": {
                    "source": null,
                    "start": {
                      "line": 172,
                      "column": 18
                    },
                    "end": {
                      "line": 176,
                      "column": 18
                    }
                  },
                  "moduleName": "dummy/templates/gis-search-form.hbs"
                },
                isEmpty: false,
                arity: 0,
                cachedFragment: null,
                hasRendered: false,
                buildFragment: function buildFragment(dom) {
                  var el0 = dom.createDocumentFragment();
                  var el1 = dom.createTextNode("                    ");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createComment("");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createTextNode("\n");
                  dom.appendChild(el0, el1);
                  return el0;
                },
                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                  var morphs = new Array(1);
                  morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
                  return morphs;
                },
                statements: [["inline", "t", ["forms.gis-search-form.layer-metadata.ok"], [], ["loc", [null, [175, 20], [175, 67]]]]],
                locals: [],
                templates: []
              };
            })();
            return {
              meta: {
                "fragmentReason": false,
                "revision": "Ember@2.4.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 171,
                    "column": 16
                  },
                  "end": {
                    "line": 177,
                    "column": 16
                  }
                },
                "moduleName": "dummy/templates/gis-search-form.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var morphs = new Array(1);
                morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
                dom.insertBoundary(fragment, 0);
                dom.insertBoundary(fragment, null);
                return morphs;
              },
              statements: [["block", "link-to", [["get", "mapWithMetadataRouteName", ["loc", [null, [173, 20], [173, 44]]]], ["get", "_selectedMap", ["loc", [null, [173, 45], [173, 57]]]], ["subexpr", "query-params", [], ["metadata", ["get", "_metadataIds", ["loc", [null, [173, 81], [173, 93]]]]], ["loc", [null, [173, 58], [173, 94]]]]], ["class", "ui positive button", "title", ["subexpr", "t", ["forms.gis-search-form.ctrl-message"], [], ["loc", [null, [174, 53], [174, 93]]]]], 0, null, ["loc", [null, [172, 18], [176, 30]]]]],
              locals: [],
              templates: [child0]
            };
          })();
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 164,
                  "column": 14
                },
                "end": {
                  "line": 178,
                  "column": 14
                }
              },
              "moduleName": "dummy/templates/gis-search-form.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
              dom.insertBoundary(fragment, 0);
              dom.insertBoundary(fragment, null);
              return morphs;
            },
            statements: [["block", "if", [["subexpr", "eq", [["get", "_selectedMap", ["loc", [null, [165, 26], [165, 38]]]], "new"], [], ["loc", [null, [165, 22], [165, 45]]]]], [], 0, 1, ["loc", [null, [165, 16], [177, 23]]]]],
            locals: [],
            templates: [child0, child1]
          };
        })();
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 143,
                "column": 10
              },
              "end": {
                "line": 180,
                "column": 10
              }
            },
            "moduleName": "dummy/templates/gis-search-form.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("            ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1, "class", "search-result-top-panel");
            var el2 = dom.createTextNode("\n              ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("div");
            dom.setAttribute(el2, "class", "search-result-top-panel-item");
            var el3 = dom.createTextNode("\n                ");
            dom.appendChild(el2, el3);
            var el3 = dom.createElement("span");
            var el4 = dom.createComment("");
            dom.appendChild(el3, el4);
            var el4 = dom.createTextNode(" ");
            dom.appendChild(el3, el4);
            var el4 = dom.createComment("");
            dom.appendChild(el3, el4);
            var el4 = dom.createTextNode("\n                (");
            dom.appendChild(el3, el4);
            var el4 = dom.createElement("a");
            dom.setAttribute(el4, "class", "search-result-top-panel-clear");
            var el5 = dom.createTextNode("\n                  ");
            dom.appendChild(el4, el5);
            var el5 = dom.createComment("");
            dom.appendChild(el4, el5);
            var el5 = dom.createTextNode("\n                  ");
            dom.appendChild(el4, el5);
            dom.appendChild(el3, el4);
            var el4 = dom.createTextNode(").\n                ");
            dom.appendChild(el3, el4);
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("\n                ");
            dom.appendChild(el2, el3);
            var el3 = dom.createElement("span");
            var el4 = dom.createTextNode("\n                ");
            dom.appendChild(el3, el4);
            var el4 = dom.createComment("");
            dom.appendChild(el3, el4);
            var el4 = dom.createTextNode("\n                ");
            dom.appendChild(el3, el4);
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("\n              ");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n              ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("div");
            dom.setAttribute(el2, "class", "search-result-top-panel-item");
            var el3 = dom.createTextNode("\n                ");
            dom.appendChild(el2, el3);
            var el3 = dom.createElement("select");
            dom.setAttribute(el3, "class", "ui dropdown mapItems");
            var el4 = dom.createTextNode("\n                  ");
            dom.appendChild(el3, el4);
            var el4 = dom.createElement("option");
            dom.setAttribute(el4, "selected", "");
            dom.setAttribute(el4, "value", "");
            var el5 = dom.createComment("");
            dom.appendChild(el4, el5);
            dom.appendChild(el3, el4);
            var el4 = dom.createTextNode("\n                  ");
            dom.appendChild(el3, el4);
            var el4 = dom.createElement("option");
            dom.setAttribute(el4, "value", "new");
            var el5 = dom.createComment("");
            dom.appendChild(el4, el5);
            dom.appendChild(el3, el4);
            var el4 = dom.createTextNode("\n");
            dom.appendChild(el3, el4);
            var el4 = dom.createComment("");
            dom.appendChild(el3, el4);
            var el4 = dom.createTextNode("                ");
            dom.appendChild(el3, el4);
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("\n              ");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("            ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element1 = dom.childAt(fragment, [1]);
            var element2 = dom.childAt(element1, [1]);
            var element3 = dom.childAt(element2, [1]);
            var element4 = dom.childAt(element3, [4]);
            var element5 = dom.childAt(element1, [3, 1]);
            var morphs = new Array(10);
            morphs[0] = dom.createMorphAt(element3, 0, 0);
            morphs[1] = dom.createMorphAt(element3, 2, 2);
            morphs[2] = dom.createElementMorph(element4);
            morphs[3] = dom.createMorphAt(element4, 1, 1);
            morphs[4] = dom.createMorphAt(dom.childAt(element2, [3]), 1, 1);
            morphs[5] = dom.createAttrMorph(element5, 'onchange');
            morphs[6] = dom.createMorphAt(dom.childAt(element5, [1]), 0, 0);
            morphs[7] = dom.createMorphAt(dom.childAt(element5, [3]), 0, 0);
            morphs[8] = dom.createMorphAt(element5, 5, 5);
            morphs[9] = dom.createMorphAt(element1, 5, 5);
            return morphs;
          },
          statements: [["inline", "t", ["forms.gis-search-form.layer-metadata.selected-message"], [], ["loc", [null, [146, 22], [146, 83]]]], ["content", "_selectedRowsCount", ["loc", [null, [146, 84], [146, 106]]]], ["element", "action", ["_clearSelectedRows"], [], ["loc", [null, [147, 20], [147, 51]]]], ["inline", "t", ["forms.gis-search-form.layer-metadata.reset"], [], ["loc", [null, [148, 18], [148, 68]]]], ["inline", "t", ["forms.gis-search-form.layer-metadata.open-into-map"], [], ["loc", [null, [152, 16], [152, 74]]]], ["attribute", "onchange", ["subexpr", "action", [["subexpr", "mut", [["get", "_selectedMap", ["loc", [null, [156, 76], [156, 88]]]]], [], ["loc", [null, [156, 71], [156, 89]]]]], ["value", "target.value"], ["loc", [null, [156, 62], [156, 112]]]]], ["inline", "t", ["forms.gis-search-form.layer-metadata.select-a-map"], [], ["loc", [null, [157, 44], [157, 101]]]], ["inline", "t", ["forms.gis-search-form.layer-metadata.new-map"], [], ["loc", [null, [158, 38], [158, 90]]]], ["block", "each", [["get", "model.availableMaps", ["loc", [null, [159, 26], [159, 45]]]]], [], 0, null, ["loc", [null, [159, 18], [161, 27]]]], ["block", "if", [["get", "_canOpenMapWithMetadata", ["loc", [null, [164, 20], [164, 43]]]]], [], 1, null, ["loc", [null, [164, 14], [178, 21]]]]],
          locals: [],
          templates: [child0, child1]
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 181,
                "column": 10
              },
              "end": {
                "line": 185,
                "column": 10
              }
            },
            "moduleName": "dummy/templates/gis-search-form.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("            ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("th");
            var el2 = dom.createTextNode("\n              ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
            return morphs;
          },
          statements: [["inline", "t", ["forms.gis-search-form.layer-metadata.actions.select"], [], ["loc", [null, [183, 14], [183, 73]]]]],
          locals: [],
          templates: []
        };
      })();
      var child2 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 186,
                "column": 10
              },
              "end": {
                "line": 193,
                "column": 10
              }
            },
            "moduleName": "dummy/templates/gis-search-form.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("            ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("td");
            dom.setAttribute(el1, "class", "collapsing");
            var el2 = dom.createTextNode("\n              ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
            return morphs;
          },
          statements: [["inline", "flexberry-checkbox", [], ["value", ["subexpr", "get", [["get", "_selectedRows", ["loc", [null, [189, 27], [189, 40]]]], ["get", "row.id", ["loc", [null, [189, 41], [189, 47]]]]], [], ["loc", [null, [189, 22], [189, 48]]]], "onChange", ["subexpr", "action", ["onRowSelect", ["get", "row.id", ["loc", [null, [190, 47], [190, 53]]]]], [], ["loc", [null, [190, 25], [190, 54]]]]], ["loc", [null, [188, 14], [191, 16]]]]],
          locals: ["row"],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 136,
              "column": 8
            },
            "end": {
              "line": 194,
              "column": 8
            }
          },
          "moduleName": "dummy/templates/gis-search-form.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(3);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          morphs[1] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          morphs[2] = dom.createMorphAt(fragment, 2, 2, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "block-slot", ["head-block"], [], 0, null, ["loc", [null, [143, 10], [180, 25]]]], ["block", "block-slot", ["column-header-head-0"], [], 1, null, ["loc", [null, [181, 10], [185, 25]]]], ["block", "block-slot", ["column-cell-head-0"], [], 2, null, ["loc", [null, [186, 10], [193, 25]]]]],
        locals: [],
        templates: [child0, child1, child2]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 199,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/gis-search-form.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("h3");
        dom.setAttribute(el1, "class", "ui header");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("form");
        dom.setAttribute(el1, "class", "ui form flexberry-vertical-form gis-search-form");
        dom.setAttribute(el1, "role", "form");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "ui fluid action input");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("button");
        dom.setAttribute(el3, "class", "ui icon button search-button");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("i");
        dom.setAttribute(el4, "class", "search icon");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("button");
        dom.setAttribute(el3, "class", "ui icon button clear-search-button");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("i");
        dom.setAttribute(el4, "class", "remove icon");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "ui segments");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "ui segment accordion advanced-search");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "ui top attached label title");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("i");
        dom.setAttribute(el5, "class", "dropdown icon");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "ui horizontal segments content");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5, "class", "ui segment advanced-search-what-segment");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("div");
        dom.setAttribute(el6, "class", "ui top attached label");
        var el7 = dom.createTextNode("\n            ");
        dom.appendChild(el6, el7);
        var el7 = dom.createComment("");
        dom.appendChild(el6, el7);
        var el7 = dom.createTextNode("\n          ");
        dom.appendChild(el6, el7);
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("div");
        dom.setAttribute(el6, "class", "field");
        var el7 = dom.createTextNode("\n            ");
        dom.appendChild(el6, el7);
        var el7 = dom.createElement("label");
        var el8 = dom.createTextNode("\n              ");
        dom.appendChild(el7, el8);
        var el8 = dom.createComment("");
        dom.appendChild(el7, el8);
        var el8 = dom.createTextNode("\n            ");
        dom.appendChild(el7, el8);
        dom.appendChild(el6, el7);
        var el7 = dom.createTextNode("\n            ");
        dom.appendChild(el6, el7);
        var el7 = dom.createComment("");
        dom.appendChild(el6, el7);
        var el7 = dom.createTextNode("\n          ");
        dom.appendChild(el6, el7);
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("div");
        dom.setAttribute(el6, "class", "scale-header");
        var el7 = dom.createTextNode("\n            ");
        dom.appendChild(el6, el7);
        var el7 = dom.createElement("label");
        var el8 = dom.createComment("");
        dom.appendChild(el7, el8);
        dom.appendChild(el6, el7);
        var el7 = dom.createTextNode("\n            ");
        dom.appendChild(el6, el7);
        var el7 = dom.createElement("button");
        dom.setAttribute(el7, "class", "ui button icon mini compact");
        var el8 = dom.createTextNode("\n              ");
        dom.appendChild(el7, el8);
        var el8 = dom.createElement("i");
        dom.setAttribute(el8, "class", "plus icon");
        dom.appendChild(el7, el8);
        var el8 = dom.createTextNode("\n            ");
        dom.appendChild(el7, el8);
        dom.appendChild(el6, el7);
        var el7 = dom.createTextNode("\n          ");
        dom.appendChild(el6, el7);
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("div");
        dom.setAttribute(el6, "class", "scale-filters");
        var el7 = dom.createTextNode("\n");
        dom.appendChild(el6, el7);
        var el7 = dom.createComment("");
        dom.appendChild(el6, el7);
        var el7 = dom.createTextNode("          ");
        dom.appendChild(el6, el7);
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5, "class", "ui segment advanced-search-where-segment");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("div");
        dom.setAttribute(el6, "class", "ui top attached label");
        var el7 = dom.createTextNode("\n            ");
        dom.appendChild(el6, el7);
        var el7 = dom.createComment("");
        dom.appendChild(el6, el7);
        var el7 = dom.createTextNode("\n          ");
        dom.appendChild(el6, el7);
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "ui segment search-results");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "ui top attached label");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("i");
        dom.setAttribute(el5, "class", "dropdown icon");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5, "class", "ui loader");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "ui top attached fluid tabular menu");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("a");
        dom.setAttribute(el5, "class", "tab item active");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("a");
        dom.setAttribute(el5, "class", "tab item");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "ui bottom attached tab segment active search-result-tab-panel");
        var el5 = dom.createTextNode("\n");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "ui bottom attached tab segment search-result-tab-panel");
        var el5 = dom.createTextNode("\n");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element8 = dom.childAt(fragment, [2]);
        var element9 = dom.childAt(element8, [3]);
        var element10 = dom.childAt(element9, [3]);
        var element11 = dom.childAt(element9, [5]);
        var element12 = dom.childAt(element8, [5]);
        var element13 = dom.childAt(element12, [1]);
        var element14 = dom.childAt(element13, [3]);
        var element15 = dom.childAt(element14, [1]);
        var element16 = dom.childAt(element15, [3]);
        var element17 = dom.childAt(element15, [5]);
        var element18 = dom.childAt(element17, [3]);
        var element19 = dom.childAt(element14, [3]);
        var element20 = dom.childAt(element12, [3]);
        var element21 = dom.childAt(element20, [3]);
        var element22 = dom.childAt(element20, [5]);
        var element23 = dom.childAt(element22, [1]);
        var element24 = dom.childAt(element22, [3]);
        var element25 = dom.childAt(element20, [7]);
        var element26 = dom.childAt(element20, [9]);
        var morphs = new Array(26);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]), 1, 1);
        morphs[1] = dom.createMorphAt(element8, 1, 1);
        morphs[2] = dom.createMorphAt(element9, 1, 1);
        morphs[3] = dom.createElementMorph(element10);
        morphs[4] = dom.createElementMorph(element11);
        morphs[5] = dom.createMorphAt(dom.childAt(element13, [1]), 3, 3);
        morphs[6] = dom.createMorphAt(dom.childAt(element15, [1]), 1, 1);
        morphs[7] = dom.createMorphAt(dom.childAt(element16, [1]), 1, 1);
        morphs[8] = dom.createMorphAt(element16, 3, 3);
        morphs[9] = dom.createMorphAt(dom.childAt(element17, [1]), 0, 0);
        morphs[10] = dom.createAttrMorph(element18, 'onclick');
        morphs[11] = dom.createMorphAt(dom.childAt(element15, [7]), 1, 1);
        morphs[12] = dom.createMorphAt(dom.childAt(element19, [1]), 1, 1);
        morphs[13] = dom.createMorphAt(element19, 3, 3);
        morphs[14] = dom.createMorphAt(dom.childAt(element20, [1]), 3, 3);
        morphs[15] = dom.createAttrMorph(element21, 'class');
        morphs[16] = dom.createAttrMorph(element23, 'data-tab');
        morphs[17] = dom.createAttrMorph(element23, 'title');
        morphs[18] = dom.createMorphAt(element23, 1, 1);
        morphs[19] = dom.createAttrMorph(element24, 'data-tab');
        morphs[20] = dom.createAttrMorph(element24, 'title');
        morphs[21] = dom.createMorphAt(element24, 1, 1);
        morphs[22] = dom.createAttrMorph(element25, 'data-tab');
        morphs[23] = dom.createMorphAt(element25, 1, 1);
        morphs[24] = dom.createAttrMorph(element26, 'data-tab');
        morphs[25] = dom.createMorphAt(element26, 1, 1);
        return morphs;
      },
      statements: [["inline", "t", ["forms.gis-search-form.header"], [], ["loc", [null, [2, 2], [2, 38]]]], ["inline", "flexberry-error", [], ["error", ["subexpr", "@mut", [["get", "error", ["loc", [null, [5, 26], [5, 31]]]]], [], []]], ["loc", [null, [5, 2], [5, 33]]]], ["inline", "input", [], ["type", "text", "value", ["subexpr", "@mut", [["get", "searchConditions.anyText", ["loc", [null, [9, 12], [9, 36]]]]], [], []], "placeholder", ["subexpr", "t", ["components.flexberry-search.placeholder"], [], ["loc", [null, [10, 18], [10, 63]]]], "enter", ["subexpr", "action", ["getSearchResults"], [], ["loc", [null, [11, 12], [11, 39]]]]], ["loc", [null, [7, 4], [12, 6]]]], ["element", "action", ["getSearchResults"], ["on", "click"], ["loc", [null, [13, 49], [13, 89]]]], ["element", "action", ["onAnyTextClearButtonClick"], ["on", "click"], ["loc", [null, [16, 55], [16, 104]]]], ["inline", "t", ["forms.gis-search-form.advanced-search-conditions"], [], ["loc", [null, [24, 8], [24, 64]]]], ["inline", "t", ["forms.gis-search-form.search-conditions-what"], [], ["loc", [null, [29, 12], [29, 64]]]], ["inline", "t", ["forms.gis-search-form.keywords"], [], ["loc", [null, [33, 14], [33, 52]]]], ["inline", "flexberry-textbox", [], ["value", ["subexpr", "@mut", [["get", "searchConditions.keyWords", ["loc", [null, [35, 38], [35, 63]]]]], [], []]], ["loc", [null, [35, 12], [35, 65]]]], ["inline", "t", ["forms.gis-search-form.scale"], [], ["loc", [null, [38, 19], [38, 54]]]], ["attribute", "onclick", ["subexpr", "action", ["addScaleFilterCondition"], [], ["loc", [null, [39, 64], [39, 100]]]]], ["block", "each", [["get", "searchConditions.scaleFilters", ["loc", [null, [44, 20], [44, 49]]]]], [], 0, 1, ["loc", [null, [44, 12], [71, 21]]]], ["inline", "t", ["forms.gis-search-form.search-conditions-where"], [], ["loc", [null, [76, 12], [76, 65]]]], ["inline", "flexberry-boundingbox", [], ["mapModel", ["subexpr", "@mut", [["get", "model.boundingBoxComponentMap", ["loc", [null, [79, 21], [79, 50]]]]], [], []], "minLat", ["subexpr", "@mut", [["get", "searchConditions.minLat", ["loc", [null, [80, 19], [80, 42]]]]], [], []], "minLng", ["subexpr", "@mut", [["get", "searchConditions.minLng", ["loc", [null, [81, 19], [81, 42]]]]], [], []], "maxLat", ["subexpr", "@mut", [["get", "searchConditions.maxLat", ["loc", [null, [82, 19], [82, 42]]]]], [], []], "maxLng", ["subexpr", "@mut", [["get", "searchConditions.maxLng", ["loc", [null, [83, 19], [83, 42]]]]], [], []], "boundingBoxChange", ["subexpr", "action", ["onBoundingBoxChange"], [], ["loc", [null, [84, 30], [84, 60]]]]], ["loc", [null, [78, 10], [85, 12]]]], ["inline", "t", ["forms.gis-search-form.search-results"], [], ["loc", [null, [92, 8], [92, 52]]]], ["attribute", "class", ["concat", ["ui ", ["subexpr", "if", [["get", "isLoading", ["loc", [null, [94, 26], [94, 35]]]], "active", "disabled"], [], ["loc", [null, [94, 21], [94, 57]]]], " inverted dimmer"]]], ["attribute", "data-tab", ["get", "tabSettings.0.tab", ["loc", [null, [100, 21], [100, 38]]]]], ["attribute", "title", ["subexpr", "t", [["get", "tabSettings.0.title", ["loc", [null, [101, 20], [101, 39]]]]], [], ["loc", [null, [101, 16], [101, 41]]]]], ["inline", "t", [["get", "tabSettings.0.title", ["loc", [null, [102, 14], [102, 33]]]]], [], ["loc", [null, [102, 10], [102, 35]]]], ["attribute", "data-tab", ["get", "tabSettings.1.tab", ["loc", [null, [106, 21], [106, 38]]]]], ["attribute", "title", ["subexpr", "t", [["get", "tabSettings.1.title", ["loc", [null, [107, 20], [107, 39]]]]], [], ["loc", [null, [107, 16], [107, 41]]]]], ["inline", "t", [["get", "tabSettings.1.title", ["loc", [null, [108, 14], [108, 33]]]]], [], ["loc", [null, [108, 10], [108, 35]]]], ["attribute", "data-tab", ["get", "tabSettings.0.tab", ["loc", [null, [113, 19], [113, 36]]]]], ["block", "flexberry-table", [], ["model", ["subexpr", "get", [["get", "this", ["loc", [null, [115, 21], [115, 25]]]], ["get", "tabSettings.0.fieldName", ["loc", [null, [115, 26], [115, 49]]]]], [], ["loc", [null, [115, 16], [115, 50]]]], "getData", ["subexpr", "action", ["getData", ["get", "tabSettings.0.fieldName", ["loc", [null, [116, 36], [116, 59]]]]], [], ["loc", [null, [116, 18], [116, 60]]]], "modelName", ["subexpr", "@mut", [["get", "tabSettings.0.modelName", ["loc", [null, [117, 20], [117, 43]]]]], [], []], "projectionName", ["subexpr", "@mut", [["get", "tabSettings.0.projectionName", ["loc", [null, [118, 25], [118, 53]]]]], [], []], "header", ["subexpr", "header-from-projection", [], ["modelName", ["get", "tabSettings.0.modelName", ["loc", [null, [119, 51], [119, 74]]]], "projectionName", ["get", "tabSettings.0.projectionName", ["loc", [null, [119, 90], [119, 118]]]]], ["loc", [null, [119, 17], [119, 119]]]]], 2, null, ["loc", [null, [114, 8], [131, 28]]]], ["attribute", "data-tab", ["get", "tabSettings.1.tab", ["loc", [null, [135, 19], [135, 36]]]]], ["block", "flexberry-table", [], ["model", ["subexpr", "get", [["get", "this", ["loc", [null, [137, 21], [137, 25]]]], ["get", "tabSettings.1.fieldName", ["loc", [null, [137, 26], [137, 49]]]]], [], ["loc", [null, [137, 16], [137, 50]]]], "getData", ["subexpr", "action", ["getData", ["get", "tabSettings.1.fieldName", ["loc", [null, [138, 36], [138, 59]]]]], [], ["loc", [null, [138, 18], [138, 60]]]], "modelName", ["subexpr", "@mut", [["get", "tabSettings.1.modelName", ["loc", [null, [139, 20], [139, 43]]]]], [], []], "projectionName", ["subexpr", "@mut", [["get", "tabSettings.1.projectionName", ["loc", [null, [140, 25], [140, 53]]]]], [], []], "header", ["subexpr", "header-from-projection", [], ["modelName", ["get", "tabSettings.1.modelName", ["loc", [null, [141, 51], [141, 74]]]], "projectionName", ["get", "tabSettings.1.projectionName", ["loc", [null, [141, 90], [141, 118]]]]], ["loc", [null, [141, 17], [141, 119]]]]], 3, null, ["loc", [null, [136, 8], [194, 28]]]]],
      locals: [],
      templates: [child0, child1, child2, child3]
    };
  })());
});
define("dummy/templates/i-i-s-caseberry-logging-objects-application-log-e", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 3,
                "column": 2
              },
              "end": {
                "line": 10,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/i-i-s-caseberry-logging-objects-application-log-e.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "ui-message", [], ["type", "error", "closeable", true, "title", "Error occurred", "message", ["subexpr", "@mut", [["get", "currentError", ["loc", [null, [8, 14], [8, 26]]]]], [], []]], ["loc", [null, [4, 4], [9, 6]]]]],
          locals: ["currentError"],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 2,
              "column": 0
            },
            "end": {
              "line": 11,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/i-i-s-caseberry-logging-objects-application-log-e.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "each", [["get", "errorMessages", ["loc", [null, [3, 10], [3, 23]]]]], [], 0, null, ["loc", [null, [3, 2], [10, 11]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child1 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 17,
                "column": 8
              },
              "end": {
                "line": 19,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/i-i-s-caseberry-logging-objects-application-log-e.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("button");
            dom.setAttribute(el1, "type", "submit");
            dom.setAttribute(el1, "class", "ui button save-button");
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element2 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createElementMorph(element2);
            morphs[1] = dom.createMorphAt(element2, 0, 0);
            return morphs;
          },
          statements: [["element", "action", ["save"], [], ["loc", [null, [18, 62], [18, 79]]]], ["inline", "t", ["forms.edit-form.save-button-text"], [], ["loc", [null, [18, 80], [18, 120]]]]],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 20,
                "column": 8
              },
              "end": {
                "line": 22,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/i-i-s-caseberry-logging-objects-application-log-e.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("button");
            dom.setAttribute(el1, "type", "submit");
            dom.setAttribute(el1, "class", "ui button save-close-button");
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element1 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createElementMorph(element1);
            morphs[1] = dom.createMorphAt(element1, 0, 0);
            return morphs;
          },
          statements: [["element", "action", ["saveAndClose"], [], ["loc", [null, [21, 68], [21, 93]]]], ["inline", "t", ["forms.edit-form.saveAndClose-button-text"], [], ["loc", [null, [21, 94], [21, 142]]]]],
          locals: [],
          templates: []
        };
      })();
      var child2 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 23,
                "column": 8
              },
              "end": {
                "line": 25,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/i-i-s-caseberry-logging-objects-application-log-e.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("button");
            dom.setAttribute(el1, "type", "submit");
            dom.setAttribute(el1, "class", "ui button save-del-button");
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createElementMorph(element0);
            morphs[1] = dom.createMorphAt(element0, 0, 0);
            return morphs;
          },
          statements: [["element", "action", ["delete"], [], ["loc", [null, [24, 66], [24, 85]]]], ["inline", "t", ["forms.edit-form.delete-button-text"], [], ["loc", [null, [24, 86], [24, 128]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 16,
              "column": 6
            },
            "end": {
              "line": 26,
              "column": 6
            }
          },
          "moduleName": "dummy/templates/i-i-s-caseberry-logging-objects-application-log-e.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(3);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          morphs[1] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          morphs[2] = dom.createMorphAt(fragment, 2, 2, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "unless", [["subexpr", "and", [["get", "hasParentRoute", ["loc", [null, [17, 23], [17, 37]]]], ["subexpr", "not", [["get", "saveBeforeRouteLeave", ["loc", [null, [17, 43], [17, 63]]]]], [], ["loc", [null, [17, 38], [17, 64]]]]], [], ["loc", [null, [17, 18], [17, 65]]]]], [], 0, null, ["loc", [null, [17, 8], [19, 19]]]], ["block", "unless", [["subexpr", "and", [["get", "hasParentRoute", ["loc", [null, [20, 23], [20, 37]]]], ["subexpr", "not", [["get", "saveBeforeRouteLeave", ["loc", [null, [20, 43], [20, 63]]]]], [], ["loc", [null, [20, 38], [20, 64]]]]], [], ["loc", [null, [20, 18], [20, 65]]]]], [], 1, null, ["loc", [null, [20, 8], [22, 19]]]], ["block", "unless", [["subexpr", "and", [["get", "model.isNew", ["loc", [null, [23, 23], [23, 34]]]], ["subexpr", "or", [["subexpr", "not", [["get", "hasParentRoute", ["loc", [null, [23, 44], [23, 58]]]]], [], ["loc", [null, [23, 39], [23, 59]]]], ["subexpr", "and", [["get", "hasParentRoute", ["loc", [null, [23, 65], [23, 79]]]], ["get", "saveBeforeRouteLeave", ["loc", [null, [23, 80], [23, 100]]]]], [], ["loc", [null, [23, 60], [23, 101]]]]], [], ["loc", [null, [23, 35], [23, 102]]]]], [], ["loc", [null, [23, 18], [23, 103]]]]], [], 2, null, ["loc", [null, [23, 8], [25, 19]]]]],
        locals: [],
        templates: [child0, child1, child2]
      };
    })();
    var child2 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 32,
              "column": 2
            },
            "end": {
              "line": 36,
              "column": 2
            }
          },
          "moduleName": "dummy/templates/i-i-s-caseberry-logging-objects-application-log-e.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("span");
          dom.setAttribute(el1, "style", "color:red");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["content", "model.errors.category", ["loc", [null, [34, 6], [34, 31]]]]],
        locals: [],
        templates: []
      };
    })();
    var child3 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 47,
              "column": 2
            },
            "end": {
              "line": 51,
              "column": 2
            }
          },
          "moduleName": "dummy/templates/i-i-s-caseberry-logging-objects-application-log-e.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("span");
          dom.setAttribute(el1, "style", "color:red");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["content", "model.errors.eventId", ["loc", [null, [49, 6], [49, 30]]]]],
        locals: [],
        templates: []
      };
    })();
    var child4 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 62,
              "column": 2
            },
            "end": {
              "line": 66,
              "column": 2
            }
          },
          "moduleName": "dummy/templates/i-i-s-caseberry-logging-objects-application-log-e.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("span");
          dom.setAttribute(el1, "style", "color:red");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["content", "model.errors.priority", ["loc", [null, [64, 6], [64, 31]]]]],
        locals: [],
        templates: []
      };
    })();
    var child5 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 77,
              "column": 2
            },
            "end": {
              "line": 81,
              "column": 2
            }
          },
          "moduleName": "dummy/templates/i-i-s-caseberry-logging-objects-application-log-e.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("span");
          dom.setAttribute(el1, "style", "color:red");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["content", "model.errors.severity", ["loc", [null, [79, 6], [79, 31]]]]],
        locals: [],
        templates: []
      };
    })();
    var child6 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 92,
              "column": 2
            },
            "end": {
              "line": 96,
              "column": 2
            }
          },
          "moduleName": "dummy/templates/i-i-s-caseberry-logging-objects-application-log-e.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("span");
          dom.setAttribute(el1, "style", "color:red");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["content", "model.errors.title", ["loc", [null, [94, 6], [94, 28]]]]],
        locals: [],
        templates: []
      };
    })();
    var child7 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 108,
              "column": 2
            },
            "end": {
              "line": 110,
              "column": 2
            }
          },
          "moduleName": "dummy/templates/i-i-s-caseberry-logging-objects-application-log-e.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("span");
          dom.setAttribute(el1, "style", "color:red");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);
          return morphs;
        },
        statements: [["content", "model.errors.timestamp", ["loc", [null, [109, 28], [109, 54]]]]],
        locals: [],
        templates: []
      };
    })();
    var child8 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 119,
              "column": 2
            },
            "end": {
              "line": 123,
              "column": 2
            }
          },
          "moduleName": "dummy/templates/i-i-s-caseberry-logging-objects-application-log-e.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("span");
          dom.setAttribute(el1, "style", "color:red");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["content", "model.errors.machineName", ["loc", [null, [121, 6], [121, 34]]]]],
        locals: [],
        templates: []
      };
    })();
    var child9 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 134,
              "column": 2
            },
            "end": {
              "line": 138,
              "column": 2
            }
          },
          "moduleName": "dummy/templates/i-i-s-caseberry-logging-objects-application-log-e.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("span");
          dom.setAttribute(el1, "style", "color:red");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["content", "model.errors.appDomainName", ["loc", [null, [136, 6], [136, 36]]]]],
        locals: [],
        templates: []
      };
    })();
    var child10 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 149,
              "column": 2
            },
            "end": {
              "line": 153,
              "column": 2
            }
          },
          "moduleName": "dummy/templates/i-i-s-caseberry-logging-objects-application-log-e.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("span");
          dom.setAttribute(el1, "style", "color:red");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["content", "model.errors.processId", ["loc", [null, [151, 6], [151, 32]]]]],
        locals: [],
        templates: []
      };
    })();
    var child11 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 164,
              "column": 2
            },
            "end": {
              "line": 168,
              "column": 2
            }
          },
          "moduleName": "dummy/templates/i-i-s-caseberry-logging-objects-application-log-e.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("span");
          dom.setAttribute(el1, "style", "color:red");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["content", "model.errors.processName", ["loc", [null, [166, 6], [166, 34]]]]],
        locals: [],
        templates: []
      };
    })();
    var child12 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 179,
              "column": 2
            },
            "end": {
              "line": 183,
              "column": 2
            }
          },
          "moduleName": "dummy/templates/i-i-s-caseberry-logging-objects-application-log-e.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("span");
          dom.setAttribute(el1, "style", "color:red");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["content", "model.errors.threadName", ["loc", [null, [181, 6], [181, 33]]]]],
        locals: [],
        templates: []
      };
    })();
    var child13 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 194,
              "column": 2
            },
            "end": {
              "line": 198,
              "column": 2
            }
          },
          "moduleName": "dummy/templates/i-i-s-caseberry-logging-objects-application-log-e.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("span");
          dom.setAttribute(el1, "style", "color:red");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["content", "model.errors.win32ThreadId", ["loc", [null, [196, 6], [196, 36]]]]],
        locals: [],
        templates: []
      };
    })();
    var child14 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 209,
              "column": 2
            },
            "end": {
              "line": 213,
              "column": 2
            }
          },
          "moduleName": "dummy/templates/i-i-s-caseberry-logging-objects-application-log-e.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("span");
          dom.setAttribute(el1, "style", "color:red");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["content", "model.errors.message", ["loc", [null, [211, 6], [211, 30]]]]],
        locals: [],
        templates: []
      };
    })();
    var child15 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 224,
              "column": 2
            },
            "end": {
              "line": 228,
              "column": 2
            }
          },
          "moduleName": "dummy/templates/i-i-s-caseberry-logging-objects-application-log-e.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("span");
          dom.setAttribute(el1, "style", "color:red");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["content", "model.errors.formattedMessage", ["loc", [null, [226, 6], [226, 39]]]]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes", "wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 239,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/i-i-s-caseberry-logging-objects-application-log-e.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("h3");
        dom.setAttribute(el1, "class", "ui header");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("form");
        dom.setAttribute(el1, "class", "ui form flexberry-vertical-form");
        dom.setAttribute(el1, "role", "form");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "field");
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "flexberry-edit-panel");
        var el5 = dom.createTextNode("\n");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("      ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("button");
        dom.setAttribute(el5, "type", "submit");
        dom.setAttribute(el5, "class", "ui button close-button");
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n  ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createTextNode("Timestamp");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element3 = dom.childAt(fragment, [3]);
        var element4 = dom.childAt(element3, [1, 1, 1]);
        var element5 = dom.childAt(element4, [3]);
        var element6 = dom.childAt(element3, [3]);
        var element7 = dom.childAt(element3, [5]);
        var element8 = dom.childAt(element3, [7]);
        var element9 = dom.childAt(element3, [9]);
        var element10 = dom.childAt(element3, [11]);
        var element11 = dom.childAt(element3, [13]);
        var element12 = dom.childAt(element3, [15]);
        var element13 = dom.childAt(element3, [17]);
        var element14 = dom.childAt(element3, [19]);
        var element15 = dom.childAt(element3, [21]);
        var element16 = dom.childAt(element3, [23]);
        var element17 = dom.childAt(element3, [25]);
        var element18 = dom.childAt(element3, [27]);
        var element19 = dom.childAt(element3, [29]);
        var morphs = new Array(32);
        morphs[0] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        morphs[1] = dom.createMorphAt(element4, 1, 1);
        morphs[2] = dom.createElementMorph(element5);
        morphs[3] = dom.createMorphAt(element5, 0, 0);
        morphs[4] = dom.createMorphAt(element6, 1, 1);
        morphs[5] = dom.createMorphAt(element6, 3, 3);
        morphs[6] = dom.createMorphAt(element7, 1, 1);
        morphs[7] = dom.createMorphAt(element7, 3, 3);
        morphs[8] = dom.createMorphAt(element8, 1, 1);
        morphs[9] = dom.createMorphAt(element8, 3, 3);
        morphs[10] = dom.createMorphAt(element9, 1, 1);
        morphs[11] = dom.createMorphAt(element9, 3, 3);
        morphs[12] = dom.createMorphAt(element10, 1, 1);
        morphs[13] = dom.createMorphAt(element10, 3, 3);
        morphs[14] = dom.createMorphAt(element11, 3, 3);
        morphs[15] = dom.createMorphAt(element11, 5, 5);
        morphs[16] = dom.createMorphAt(element12, 1, 1);
        morphs[17] = dom.createMorphAt(element12, 3, 3);
        morphs[18] = dom.createMorphAt(element13, 1, 1);
        morphs[19] = dom.createMorphAt(element13, 3, 3);
        morphs[20] = dom.createMorphAt(element14, 1, 1);
        morphs[21] = dom.createMorphAt(element14, 3, 3);
        morphs[22] = dom.createMorphAt(element15, 1, 1);
        morphs[23] = dom.createMorphAt(element15, 3, 3);
        morphs[24] = dom.createMorphAt(element16, 1, 1);
        morphs[25] = dom.createMorphAt(element16, 3, 3);
        morphs[26] = dom.createMorphAt(element17, 1, 1);
        morphs[27] = dom.createMorphAt(element17, 3, 3);
        morphs[28] = dom.createMorphAt(element18, 1, 1);
        morphs[29] = dom.createMorphAt(element18, 3, 3);
        morphs[30] = dom.createMorphAt(element19, 1, 1);
        morphs[31] = dom.createMorphAt(element19, 3, 3);
        return morphs;
      },
      statements: [["block", "if", [["get", "errorMessages", ["loc", [null, [2, 6], [2, 19]]]]], [], 0, null, ["loc", [null, [2, 0], [11, 7]]]], ["block", "unless", [["get", "readonly", ["loc", [null, [16, 16], [16, 24]]]]], [], 1, null, ["loc", [null, [16, 6], [26, 17]]]], ["element", "action", ["close"], [], ["loc", [null, [27, 59], [27, 77]]]], ["inline", "t", ["forms.edit-form.close-button-text"], [], ["loc", [null, [27, 78], [27, 119]]]], ["block", "if", [["get", "model.errors.category", ["loc", [null, [32, 8], [32, 29]]]]], [], 2, null, ["loc", [null, [32, 2], [36, 9]]]], ["inline", "flexberry-field", [], ["readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [38, 13], [38, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.category", ["loc", [null, [40, 10], [40, 24]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.category", ["loc", [null, [41, 14], [41, 35]]]], "error", ""], [], ["loc", [null, [41, 10], [41, 47]]]], "label", "Category"], ["loc", [null, [37, 2], [43, 4]]]], ["block", "if", [["get", "model.errors.eventId", ["loc", [null, [47, 8], [47, 28]]]]], [], 3, null, ["loc", [null, [47, 2], [51, 9]]]], ["inline", "flexberry-field", [], ["readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [53, 13], [53, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.eventId", ["loc", [null, [55, 10], [55, 23]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.eventId", ["loc", [null, [56, 14], [56, 34]]]], "error", ""], [], ["loc", [null, [56, 10], [56, 46]]]], "label", "Event id"], ["loc", [null, [52, 2], [58, 4]]]], ["block", "if", [["get", "model.errors.priority", ["loc", [null, [62, 8], [62, 29]]]]], [], 4, null, ["loc", [null, [62, 2], [66, 9]]]], ["inline", "flexberry-field", [], ["readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [68, 13], [68, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.priority", ["loc", [null, [70, 10], [70, 24]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.priority", ["loc", [null, [71, 14], [71, 35]]]], "error", ""], [], ["loc", [null, [71, 10], [71, 47]]]], "label", "Priority"], ["loc", [null, [67, 2], [73, 4]]]], ["block", "if", [["get", "model.errors.severity", ["loc", [null, [77, 8], [77, 29]]]]], [], 5, null, ["loc", [null, [77, 2], [81, 9]]]], ["inline", "flexberry-field", [], ["readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [83, 13], [83, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.severity", ["loc", [null, [85, 10], [85, 24]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.severity", ["loc", [null, [86, 14], [86, 35]]]], "error", ""], [], ["loc", [null, [86, 10], [86, 47]]]], "label", "Severity"], ["loc", [null, [82, 2], [88, 4]]]], ["block", "if", [["get", "model.errors.title", ["loc", [null, [92, 8], [92, 26]]]]], [], 6, null, ["loc", [null, [92, 2], [96, 9]]]], ["inline", "flexberry-field", [], ["readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [98, 13], [98, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.title", ["loc", [null, [100, 10], [100, 21]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.title", ["loc", [null, [101, 14], [101, 32]]]], "error", ""], [], ["loc", [null, [101, 10], [101, 44]]]], "label", "Title"], ["loc", [null, [97, 2], [103, 4]]]], ["block", "if", [["get", "model.errors.timestamp", ["loc", [null, [108, 8], [108, 30]]]]], [], 7, null, ["loc", [null, [108, 2], [110, 9]]]], ["inline", "flexberry-datepicker", [], ["readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [112, 13], [112, 21]]]]], [], []], "value", ["subexpr", "@mut", [["get", "model.timestamp", ["loc", [null, [113, 10], [113, 25]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.timestamp", ["loc", [null, [114, 14], [114, 36]]]], "error", ""], [], ["loc", [null, [114, 10], [114, 48]]]]], ["loc", [null, [111, 2], [115, 4]]]], ["block", "if", [["get", "model.errors.machineName", ["loc", [null, [119, 8], [119, 32]]]]], [], 8, null, ["loc", [null, [119, 2], [123, 9]]]], ["inline", "flexberry-field", [], ["readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [125, 13], [125, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.machineName", ["loc", [null, [127, 10], [127, 27]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.machineName", ["loc", [null, [128, 14], [128, 38]]]], "error", ""], [], ["loc", [null, [128, 10], [128, 50]]]], "label", "Machine name"], ["loc", [null, [124, 2], [130, 4]]]], ["block", "if", [["get", "model.errors.appDomainName", ["loc", [null, [134, 8], [134, 34]]]]], [], 9, null, ["loc", [null, [134, 2], [138, 9]]]], ["inline", "flexberry-field", [], ["readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [140, 13], [140, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.appDomainName", ["loc", [null, [142, 10], [142, 29]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.appDomainName", ["loc", [null, [143, 14], [143, 40]]]], "error", ""], [], ["loc", [null, [143, 10], [143, 52]]]], "label", "App domain name"], ["loc", [null, [139, 2], [145, 4]]]], ["block", "if", [["get", "model.errors.processId", ["loc", [null, [149, 8], [149, 30]]]]], [], 10, null, ["loc", [null, [149, 2], [153, 9]]]], ["inline", "flexberry-field", [], ["readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [155, 13], [155, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.processId", ["loc", [null, [157, 10], [157, 25]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.processId", ["loc", [null, [158, 14], [158, 36]]]], "error", ""], [], ["loc", [null, [158, 10], [158, 48]]]], "label", "Process id"], ["loc", [null, [154, 2], [160, 4]]]], ["block", "if", [["get", "model.errors.processName", ["loc", [null, [164, 8], [164, 32]]]]], [], 11, null, ["loc", [null, [164, 2], [168, 9]]]], ["inline", "flexberry-field", [], ["readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [170, 13], [170, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.processName", ["loc", [null, [172, 10], [172, 27]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.processName", ["loc", [null, [173, 14], [173, 38]]]], "error", ""], [], ["loc", [null, [173, 10], [173, 50]]]], "label", "Process name"], ["loc", [null, [169, 2], [175, 4]]]], ["block", "if", [["get", "model.errors.threadName", ["loc", [null, [179, 8], [179, 31]]]]], [], 12, null, ["loc", [null, [179, 2], [183, 9]]]], ["inline", "flexberry-field", [], ["readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [185, 13], [185, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.threadName", ["loc", [null, [187, 10], [187, 26]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.threadName", ["loc", [null, [188, 14], [188, 37]]]], "error", ""], [], ["loc", [null, [188, 10], [188, 49]]]], "label", "Thread name"], ["loc", [null, [184, 2], [190, 4]]]], ["block", "if", [["get", "model.errors.win32ThreadId", ["loc", [null, [194, 8], [194, 34]]]]], [], 13, null, ["loc", [null, [194, 2], [198, 9]]]], ["inline", "flexberry-field", [], ["readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [200, 13], [200, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.win32ThreadId", ["loc", [null, [202, 10], [202, 29]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.win32ThreadId", ["loc", [null, [203, 14], [203, 40]]]], "error", ""], [], ["loc", [null, [203, 10], [203, 52]]]], "label", "Win32 thread id"], ["loc", [null, [199, 2], [205, 4]]]], ["block", "if", [["get", "model.errors.message", ["loc", [null, [209, 8], [209, 28]]]]], [], 14, null, ["loc", [null, [209, 2], [213, 9]]]], ["inline", "flexberry-field", [], ["readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [215, 13], [215, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.message", ["loc", [null, [217, 10], [217, 23]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.message", ["loc", [null, [218, 14], [218, 34]]]], "error", ""], [], ["loc", [null, [218, 10], [218, 46]]]], "label", "Message"], ["loc", [null, [214, 2], [220, 4]]]], ["block", "if", [["get", "model.errors.formattedMessage", ["loc", [null, [224, 8], [224, 37]]]]], [], 15, null, ["loc", [null, [224, 2], [228, 9]]]], ["inline", "flexberry-field", [], ["readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [230, 13], [230, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.formattedMessage", ["loc", [null, [232, 10], [232, 32]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.formattedMessage", ["loc", [null, [233, 14], [233, 43]]]], "error", ""], [], ["loc", [null, [233, 10], [233, 55]]]], "label", "Formatted message"], ["loc", [null, [229, 2], [235, 4]]]]],
      locals: [],
      templates: [child0, child1, child2, child3, child4, child5, child6, child7, child8, child9, child10, child11, child12, child13, child14, child15]
    };
  })());
});
define("dummy/templates/i-i-s-caseberry-logging-objects-application-log-l", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type", "multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 28,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/i-i-s-caseberry-logging-objects-application-log-l.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("h3");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "row");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(3);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [2]), 0, 0);
        morphs[2] = dom.createMorphAt(dom.childAt(fragment, [4]), 1, 1);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "flexberry-error", [], ["error", ["subexpr", "@mut", [["get", "error", ["loc", [null, [1, 24], [1, 29]]]]], [], []]], ["loc", [null, [1, 0], [1, 31]]]], ["inline", "t", ["forms.i-i-s-caseberry-logging-objects-application-log-l.caption"], [], ["loc", [null, [2, 4], [2, 75]]]], ["inline", "flexberry-objectlistview", [], ["content", ["subexpr", "@mut", [["get", "model", ["loc", [null, [5, 12], [5, 17]]]]], [], []], "modelName", "i-i-s-caseberry-logging-objects-application-log", "modelProjection", ["subexpr", "@mut", [["get", "modelProjection", ["loc", [null, [7, 20], [7, 35]]]]], [], []], "editFormRoute", ["subexpr", "@mut", [["get", "editFormRoute", ["loc", [null, [8, 18], [8, 31]]]]], [], []], "createNewButton", false, "refreshButton", true, "sorting", ["subexpr", "@mut", [["get", "computedSorting", ["loc", [null, [11, 12], [11, 27]]]]], [], []], "orderable", true, "pages", ["subexpr", "@mut", [["get", "pages", ["loc", [null, [13, 10], [13, 15]]]]], [], []], "perPageValue", ["subexpr", "@mut", [["get", "perPageValue", ["loc", [null, [14, 17], [14, 29]]]]], [], []], "perPageValues", ["subexpr", "@mut", [["get", "perPageValues", ["loc", [null, [15, 18], [15, 31]]]]], [], []], "recordsTotalCount", ["subexpr", "@mut", [["get", "recordsTotalCount", ["loc", [null, [16, 22], [16, 39]]]]], [], []], "hasPreviousPage", ["subexpr", "@mut", [["get", "hasPreviousPage", ["loc", [null, [17, 20], [17, 35]]]]], [], []], "hasNextPage", ["subexpr", "@mut", [["get", "hasNextPage", ["loc", [null, [18, 16], [18, 27]]]]], [], []], "sortByColumn", ["subexpr", "action", ["sortByColumn"], [], ["loc", [null, [19, 17], [19, 40]]]], "addColumnToSorting", ["subexpr", "action", ["addColumnToSorting"], [], ["loc", [null, [20, 23], [20, 52]]]], "previousPage", ["subexpr", "action", ["previousPage"], [], ["loc", [null, [21, 17], [21, 40]]]], "gotoPage", ["subexpr", "action", ["gotoPage"], [], ["loc", [null, [22, 13], [22, 32]]]], "nextPage", ["subexpr", "action", ["nextPage"], [], ["loc", [null, [23, 13], [23, 32]]]], "componentName", "IISLoggingObjectListView", "beforeDeleteAllRecords", ["subexpr", "action", ["beforeDeleteAllRecords"], [], ["loc", [null, [25, 27], [25, 60]]]]], ["loc", [null, [4, 2], [26, 4]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/index", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "triple-curlies"
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/index.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "ui message");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "header");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0, 1]), 1, 1);
        return morphs;
      },
      statements: [["inline", "t", ["forms.index.greeting"], [], ["loc", [null, [3, 4], [3, 32]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/loading", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "triple-curlies"
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/loading.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "loading-pane");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "loading-message");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "spinner");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0, 1]), 1, 1);
        return morphs;
      },
      statements: [["inline", "t", ["forms.loading.spinner-caption"], [], ["loc", [null, [3, 4], [3, 41]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/lookup-dialog-content", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "triple-curlies"
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 40,
            "column": 6
          }
        },
        "moduleName": "dummy/templates/lookup-dialog-content.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "id", "lookup-list");
        dom.setAttribute(el1, "class", "list-group");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]), 1, 1);
        return morphs;
      },
      statements: [["inline", "flexberry-objectlistview", [], ["class", "ui bottom attached", "modelProjection", ["subexpr", "@mut", [["get", "modelProjection", ["loc", [null, [4, 20], [4, 35]]]]], [], []], "modelName", ["subexpr", "@mut", [["get", "modelName", ["loc", [null, [5, 14], [5, 23]]]]], [], []], "content", ["subexpr", "@mut", [["get", "model", ["loc", [null, [6, 12], [6, 17]]]]], [], []], "selectedRecord", ["subexpr", "@mut", [["get", "currentLookupRow", ["loc", [null, [7, 19], [7, 35]]]]], [], []], "componentMode", "lookupform", "componentName", ["subexpr", "@mut", [["get", "folvComponentName", ["loc", [null, [9, 18], [9, 35]]]]], [], []], "lookupComponentName", ["subexpr", "@mut", [["get", "componentName", ["loc", [null, [10, 24], [10, 37]]]]], [], []], "showEditMenuItemInRow", false, "createNewButton", false, "showCheckBoxInRow", false, "colsConfigButton", false, "columnsWidthAutoresize", true, "filterByAnyMatch", ["subexpr", "action", ["filterByAnyMatch"], [], ["loc", [null, [16, 21], [16, 48]]]], "filterText", ["subexpr", "@mut", [["get", "filter", ["loc", [null, [17, 15], [17, 21]]]]], [], []], "filters", ["subexpr", "@mut", [["get", "filters", ["loc", [null, [18, 12], [18, 19]]]]], [], []], "applyFilters", ["subexpr", "action", ["applyFilters"], [], ["loc", [null, [19, 17], [19, 40]]]], "resetFilters", ["subexpr", "action", ["resetFilters"], [], ["loc", [null, [20, 17], [20, 40]]]], "customProperties", ["subexpr", "@mut", [["get", "customPropertiesData", ["loc", [null, [21, 21], [21, 41]]]]], [], []], "pages", ["subexpr", "@mut", [["get", "pages", ["loc", [null, [22, 10], [22, 15]]]]], [], []], "perPageValue", ["subexpr", "@mut", [["get", "perPageValue", ["loc", [null, [23, 17], [23, 29]]]]], [], []], "perPageValues", ["subexpr", "@mut", [["get", "perPageValues", ["loc", [null, [24, 18], [24, 31]]]]], [], []], "recordsTotalCount", ["subexpr", "@mut", [["get", "recordsTotalCount", ["loc", [null, [25, 22], [25, 39]]]]], [], []], "hasPreviousPage", ["subexpr", "@mut", [["get", "hasPreviousPage", ["loc", [null, [26, 20], [26, 35]]]]], [], []], "hasNextPage", ["subexpr", "@mut", [["get", "hasNextPage", ["loc", [null, [27, 16], [27, 27]]]]], [], []], "previousPage", ["subexpr", "action", ["previousPage"], [], ["loc", [null, [28, 17], [28, 40]]]], "gotoPage", ["subexpr", "action", ["gotoPage"], [], ["loc", [null, [29, 13], [29, 32]]]], "nextPage", ["subexpr", "action", ["nextPage"], [], ["loc", [null, [30, 13], [30, 32]]]], "disableHierarchicalMode", ["subexpr", "@mut", [["get", "disableHierarchicalMode", ["loc", [null, [31, 28], [31, 51]]]]], [], []], "sorting", ["subexpr", "@mut", [["get", "computedSorting", ["loc", [null, [32, 12], [32, 27]]]]], [], []], "orderable", true, "sortByColumn", ["subexpr", "action", ["sortByColumn"], [], ["loc", [null, [34, 17], [34, 40]]]], "addColumnToSorting", ["subexpr", "action", ["addColumnToSorting"], [], ["loc", [null, [35, 23], [35, 52]]]], "notUseUserSettings", ["subexpr", "@mut", [["get", "notUseUserSettings", ["loc", [null, [36, 23], [36, 41]]]]], [], []], "beforeDeleteAllRecords", ["subexpr", "action", ["beforeDeleteAllRecords"], [], ["loc", [null, [37, 27], [37, 60]]]], "data-test-lookup-olv", true], ["loc", [null, [2, 2], [39, 4]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/lookup-dialog", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "fragmentReason": {
            "name": "missing-wrapper",
            "problems": ["wrong-type"]
          },
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 13,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/lookup-dialog.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "outlet", ["modal-content"], [], ["loc", [null, [12, 2], [12, 28]]]]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 14,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/lookup-dialog.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "modal-dialog", [], ["title", ["subexpr", "@mut", [["get", "title", ["loc", [null, [2, 8], [2, 13]]]]], [], []], "sizeClass", ["subexpr", "@mut", [["get", "modalDialogSettings.sizeClass", ["loc", [null, [3, 12], [3, 41]]]]], [], []], "close", "removeModalDialog", "created", "createdModalDialog", "useOkButton", ["subexpr", "@mut", [["get", "modalDialogSettings.useOkButton", ["loc", [null, [6, 14], [6, 45]]]]], [], []], "useCloseButton", ["subexpr", "@mut", [["get", "modalDialogSettings.useCloseButton", ["loc", [null, [7, 17], [7, 51]]]]], [], []], "componentName", ["subexpr", "@mut", [["get", "componentName", ["loc", [null, [8, 16], [8, 29]]]]], [], []], "settings", ["subexpr", "@mut", [["get", "modalDialogSettings.settings", ["loc", [null, [9, 11], [9, 39]]]]], [], []], "data-test-lookup-dialog", true], 0, null, ["loc", [null, [1, 0], [13, 17]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define("dummy/templates/map", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 16,
                "column": 8
              },
              "end": {
                "line": 18,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/map.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("button");
            dom.setAttribute(el1, "type", "submit");
            dom.setAttribute(el1, "class", "ui button save-button");
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element2 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createElementMorph(element2);
            morphs[1] = dom.createMorphAt(element2, 0, 0);
            return morphs;
          },
          statements: [["element", "action", ["save"], [], ["loc", [null, [17, 62], [17, 79]]]], ["inline", "t", ["forms.edit-form.save-button-text"], [], ["loc", [null, [17, 80], [17, 120]]]]],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 19,
                "column": 8
              },
              "end": {
                "line": 21,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/map.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("button");
            dom.setAttribute(el1, "type", "submit");
            dom.setAttribute(el1, "class", "ui button save-close-button");
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element1 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createElementMorph(element1);
            morphs[1] = dom.createMorphAt(element1, 0, 0);
            return morphs;
          },
          statements: [["element", "action", ["saveAndClose"], [], ["loc", [null, [20, 68], [20, 93]]]], ["inline", "t", ["forms.edit-form.saveAndClose-button-text"], [], ["loc", [null, [20, 94], [20, 142]]]]],
          locals: [],
          templates: []
        };
      })();
      var child2 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 22,
                "column": 8
              },
              "end": {
                "line": 24,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/map.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("button");
            dom.setAttribute(el1, "type", "submit");
            dom.setAttribute(el1, "class", "ui button save-del-button");
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createElementMorph(element0);
            morphs[1] = dom.createMorphAt(element0, 0, 0);
            return morphs;
          },
          statements: [["element", "action", ["delete"], [], ["loc", [null, [23, 66], [23, 85]]]], ["inline", "t", ["forms.edit-form.delete-button-text"], [], ["loc", [null, [23, 86], [23, 128]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 15,
              "column": 6
            },
            "end": {
              "line": 25,
              "column": 6
            }
          },
          "moduleName": "dummy/templates/map.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(3);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          morphs[1] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          morphs[2] = dom.createMorphAt(fragment, 2, 2, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "unless", [["subexpr", "and", [["get", "hasParentRoute", ["loc", [null, [16, 23], [16, 37]]]], ["subexpr", "not", [["get", "saveBeforeRouteLeave", ["loc", [null, [16, 43], [16, 63]]]]], [], ["loc", [null, [16, 38], [16, 64]]]]], [], ["loc", [null, [16, 18], [16, 65]]]]], [], 0, null, ["loc", [null, [16, 8], [18, 19]]]], ["block", "unless", [["subexpr", "and", [["get", "hasParentRoute", ["loc", [null, [19, 23], [19, 37]]]], ["subexpr", "not", [["get", "saveBeforeRouteLeave", ["loc", [null, [19, 43], [19, 63]]]]], [], ["loc", [null, [19, 38], [19, 64]]]]], [], ["loc", [null, [19, 18], [19, 65]]]]], [], 1, null, ["loc", [null, [19, 8], [21, 19]]]], ["block", "unless", [["subexpr", "and", [["get", "model.isNew", ["loc", [null, [22, 23], [22, 34]]]], ["subexpr", "or", [["subexpr", "not", [["get", "hasParentRoute", ["loc", [null, [22, 44], [22, 58]]]]], [], ["loc", [null, [22, 39], [22, 59]]]], ["subexpr", "and", [["get", "hasParentRoute", ["loc", [null, [22, 65], [22, 79]]]], ["get", "saveBeforeRouteLeave", ["loc", [null, [22, 80], [22, 100]]]]], [], ["loc", [null, [22, 60], [22, 101]]]]], [], ["loc", [null, [22, 35], [22, 102]]]]], [], ["loc", [null, [22, 18], [22, 103]]]]], [], 2, null, ["loc", [null, [22, 8], [24, 19]]]]],
        locals: [],
        templates: [child0, child1, child2]
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 52,
              "column": 8
            },
            "end": {
              "line": 132,
              "column": 8
            }
          },
          "moduleName": "dummy/templates/map.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("          ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "flexberry-maplayers", [], ["class", "styled", "access", ["subexpr", "hash", [], ["accessibleModel", ["get", "access.mapLayerModel", ["loc", [null, [56, 30], [56, 50]]]], "accessibleData", ["get", "access.mapLayerData", ["loc", [null, [57, 29], [57, 48]]]], "createAccess", true, "presenceLayerInGeoportal", ["get", "access.presenceLayerInGeoportal", ["loc", [null, [59, 39], [59, 70]]]]], ["loc", [null, [55, 19], [59, 71]]]], "leafletMap", ["subexpr", "@mut", [["get", "leafletMap", ["loc", [null, [60, 23], [60, 33]]]]], [], []], "sideBySide", ["subexpr", "@mut", [["get", "sideBySide", ["loc", [null, [61, 23], [61, 33]]]]], [], []], "layers", ["subexpr", "get-with-dynamic-actions", [["get", "this", ["loc", [null, [62, 45], [62, 49]]]], "model.otherLayers"], ["hierarchyPropertyName", "layers", "pathKeyword", "layerPath", "dynamicActions", ["subexpr", "array", [["subexpr", "hash", [], ["on", "add", "actionName", "onMapLayerAdd", "actionArguments", ["subexpr", "array", ["{% layerPath %}"], [], ["loc", [null, [69, 34], [69, 59]]]]], ["loc", [null, [66, 16], [70, 17]]]], ["subexpr", "hash", [], ["on", "copy", "actionName", "onMapLayerCopy", "actionArguments", ["subexpr", "array", ["model.otherLayers"], [], ["loc", [null, [74, 34], [74, 61]]]]], ["loc", [null, [71, 16], [75, 17]]]], ["subexpr", "hash", [], ["on", "edit", "actionName", "onMapLayerEdit", "actionArguments", ["subexpr", "array", ["{% layerPath %}"], [], ["loc", [null, [79, 34], [79, 59]]]]], ["loc", [null, [76, 16], [80, 17]]]], ["subexpr", "hash", [], ["on", "remove", "actionName", "onMapLayerRemove", "actionArguments", ["subexpr", "array", ["{% layerPath %}"], [], ["loc", [null, [84, 34], [84, 59]]]]], ["loc", [null, [81, 16], [85, 17]]]], ["subexpr", "hash", [], ["on", "changeVisibility", "actionName", "onMapLayerChangeVisibility", "actionArguments", ["subexpr", "array", ["{% layerPath %}.visibility"], [], ["loc", [null, [89, 34], [89, 70]]]]], ["loc", [null, [86, 16], [90, 17]]]], ["subexpr", "hash", [], ["on", "changeOpacity", "actionName", "onMapLayerChangeOpacity", "actionArguments", ["subexpr", "array", ["{% layerPath %}.settingsAsObject.opacity"], [], ["loc", [null, [94, 34], [94, 84]]]]], ["loc", [null, [91, 16], [95, 17]]]], ["subexpr", "hash", [], ["on", "fitBounds", "actionName", "onMapLayerFitBounds", "actionArguments", ["subexpr", "array", ["{% layerPath %}.bounds"], [], ["loc", [null, [99, 34], [99, 66]]]]], ["loc", [null, [96, 16], [100, 17]]]], ["subexpr", "hash", [], ["on", "attributesEdit", "actionName", "onAttributesEdit", "actionArguments", ["subexpr", "array", ["{% layerPath %}", ["subexpr", "hash", [], ["itemsPath", "editedLayers", "selectedTabIndexPath", "editedLayersSelectedTabIndex", "foldedPath", "editedLayersPanelFolded", "loadingPath", "editedLayersPanelLoading"], ["loc", [null, [105, 20], [110, 21]]]]], [], ["loc", [null, [104, 34], [111, 19]]]]], ["loc", [null, [101, 16], [112, 17]]]], ["subexpr", "hash", [], ["on", "featureEdit", "actionName", "onFeatureEdit", "actionArguments", ["subexpr", "array", ["{% layerPath %}", ["subexpr", "hash", [], ["mapAction", "onCreateOrEditFeature", "loadingPath", "editedLayersPanelLoading"], ["loc", [null, [117, 20], [120, 21]]]]], [], ["loc", [null, [116, 34], [121, 19]]]]], ["loc", [null, [113, 16], [122, 17]]]], ["subexpr", "hash", [], ["on", "onLoad", "actionName", "onLoad", "actionArguments", ["subexpr", "array", ["{% layerPath %}"], [], ["loc", [null, [126, 34], [126, 59]]]]], ["loc", [null, [123, 16], [127, 17]]]]], [], ["loc", [null, [65, 29], [128, 15]]]]], ["loc", [null, [62, 19], [129, 13]]]], "add", ["subexpr", "action", ["onMapLayerAdd", "model.hierarchy"], [], ["loc", [null, [130, 16], [130, 58]]]]], ["loc", [null, [53, 10], [131, 12]]]]],
        locals: [],
        templates: []
      };
    })();
    var child2 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 132,
              "column": 8
            },
            "end": {
              "line": 135,
              "column": 8
            }
          },
          "moduleName": "dummy/templates/map.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("          ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "ui form loading");
          dom.setAttribute(el1, "style", "height: 100%;");
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes() {
          return [];
        },
        statements: [],
        locals: [],
        templates: []
      };
    })();
    var child3 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 139,
              "column": 8
            },
            "end": {
              "line": 141,
              "column": 8
            }
          },
          "moduleName": "dummy/templates/map.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("          ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("h5");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);
          return morphs;
        },
        statements: [["inline", "t", ["components.flexberry-search.result-caption"], [], ["loc", [null, [140, 14], [140, 64]]]]],
        locals: [],
        templates: []
      };
    })();
    var child4 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 193,
              "column": 6
            },
            "end": {
              "line": 198,
              "column": 6
            }
          },
          "moduleName": "dummy/templates/map.hbs"
        },
        isEmpty: false,
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "flexberry-create-object-geometry", [], ["createItem", ["subexpr", "@mut", [["get", "createItem", ["loc", [null, [195, 21], [195, 31]]]]], [], []], "leafletMap", ["subexpr", "@mut", [["get", "leafletMap", ["loc", [null, [196, 21], [196, 31]]]]], [], []]], ["loc", [null, [194, 8], [197, 10]]]]],
        locals: ["createItem"],
        templates: []
      };
    })();
    var child5 = (function () {
      var child0 = (function () {
        var child0 = (function () {
          var child0 = (function () {
            return {
              meta: {
                "fragmentReason": false,
                "revision": "Ember@2.4.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 328,
                    "column": 10
                  },
                  "end": {
                    "line": 338,
                    "column": 10
                  }
                },
                "moduleName": "dummy/templates/map.hbs"
              },
              isEmpty: false,
              arity: 2,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("            ");
                dom.appendChild(el0, el1);
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var morphs = new Array(1);
                morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
                return morphs;
              },
              statements: [["inline", "flexberry-layers", [], ["leafletContainer", ["subexpr", "@mut", [["get", "groupLayers", ["loc", [null, [333, 31], [333, 42]]]]], [], []], "leafletMap", ["subexpr", "@mut", [["get", "miniMap", ["loc", [null, [334, 25], [334, 32]]]]], [], []], "layers", ["subexpr", "@mut", [["get", "model.hierarchy", ["loc", [null, [335, 21], [335, 36]]]]], [], []], "forMinimap", true], ["loc", [null, [332, 12], [337, 14]]]]],
              locals: ["groupLayers", "miniMap"],
              templates: []
            };
          })();
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 326,
                  "column": 10
                },
                "end": {
                  "line": 339,
                  "column": 10
                }
              },
              "moduleName": "dummy/templates/map.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("            ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(2);
              morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
              morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);
              dom.insertBoundary(fragment, null);
              return morphs;
            },
            statements: [["inline", "map-tools/measure", [], ["leafletMap", ["subexpr", "@mut", [["get", "leafletMap", ["loc", [null, [327, 43], [327, 53]]]]], [], []], "addHaArea", true], ["loc", [null, [327, 12], [327, 70]]]], ["block", "minimap-control", [], ["minimized", true, "leafletMap", ["subexpr", "@mut", [["get", "leafletMap", ["loc", [null, [330, 23], [330, 33]]]]], [], []]], 0, null, ["loc", [null, [328, 10], [338, 30]]]]],
            locals: [],
            templates: [child0]
          };
        })();
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 320,
                "column": 8
              },
              "end": {
                "line": 340,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/map.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [["block", "block-slot", ["submenu"], [], 0, null, ["loc", [null, [326, 10], [339, 25]]]]],
          locals: [],
          templates: [child0]
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 275,
              "column": 6
            },
            "end": {
              "line": 342,
              "column": 6
            }
          },
          "moduleName": "dummy/templates/map.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(14);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);
          morphs[2] = dom.createMorphAt(fragment, 5, 5, contextualElement);
          morphs[3] = dom.createMorphAt(fragment, 7, 7, contextualElement);
          morphs[4] = dom.createMorphAt(fragment, 9, 9, contextualElement);
          morphs[5] = dom.createMorphAt(fragment, 11, 11, contextualElement);
          morphs[6] = dom.createMorphAt(fragment, 13, 13, contextualElement);
          morphs[7] = dom.createMorphAt(fragment, 15, 15, contextualElement);
          morphs[8] = dom.createMorphAt(fragment, 17, 17, contextualElement);
          morphs[9] = dom.createMorphAt(fragment, 19, 19, contextualElement);
          morphs[10] = dom.createMorphAt(fragment, 21, 21, contextualElement);
          morphs[11] = dom.createMorphAt(fragment, 23, 23, contextualElement);
          morphs[12] = dom.createMorphAt(fragment, 25, 25, contextualElement);
          morphs[13] = dom.createMorphAt(fragment, 27, 27, contextualElement);
          return morphs;
        },
        statements: [["inline", "map-commands/full-extent", [], ["lat", ["subexpr", "@mut", [["get", "model.lat", ["loc", [null, [277, 14], [277, 23]]]]], [], []], "lng", ["subexpr", "@mut", [["get", "model.lng", ["loc", [null, [278, 14], [278, 23]]]]], [], []], "zoom", ["subexpr", "@mut", [["get", "model.zoom", ["loc", [null, [279, 15], [279, 25]]]]], [], []], "leafletMap", ["subexpr", "@mut", [["get", "leafletMap", ["loc", [null, [280, 21], [280, 31]]]]], [], []]], ["loc", [null, [276, 8], [281, 10]]]], ["inline", "map-commands/edit", [], ["mapModel", ["subexpr", "@mut", [["get", "model", ["loc", [null, [283, 19], [283, 24]]]]], [], []], "leafletMap", ["subexpr", "@mut", [["get", "leafletMap", ["loc", [null, [284, 21], [284, 31]]]]], [], []]], ["loc", [null, [282, 8], [285, 10]]]], ["inline", "scale-control", [], ["imperial", false, "leafletMap", ["subexpr", "@mut", [["get", "leafletMap", ["loc", [null, [288, 21], [288, 31]]]]], [], []]], ["loc", [null, [286, 8], [289, 10]]]], ["inline", "history-control", [], ["leafletMap", ["subexpr", "@mut", [["get", "leafletMap", ["loc", [null, [290, 37], [290, 47]]]]], [], []]], ["loc", [null, [290, 8], [290, 49]]]], ["inline", "map-tools/drag", [], ["leafletMap", ["subexpr", "@mut", [["get", "leafletMap", ["loc", [null, [291, 36], [291, 46]]]]], [], []]], ["loc", [null, [291, 8], [291, 48]]]], ["inline", "map-tools/zoom-in", [], ["leafletMap", ["subexpr", "@mut", [["get", "leafletMap", ["loc", [null, [292, 39], [292, 49]]]]], [], []]], ["loc", [null, [292, 8], [292, 51]]]], ["inline", "map-tools/zoom-out", [], ["leafletMap", ["subexpr", "@mut", [["get", "leafletMap", ["loc", [null, [293, 40], [293, 50]]]]], [], []]], ["loc", [null, [293, 8], [293, 52]]]], ["inline", "map-tools/identify", [], ["layerMode", ["subexpr", "@mut", [["get", "identifyToolLayerMode", ["loc", [null, [295, 20], [295, 41]]]]], [], []], "toolMode", ["subexpr", "@mut", [["get", "identifyToolToolMode", ["loc", [null, [296, 19], [296, 39]]]]], [], []], "bufferActive", ["subexpr", "@mut", [["get", "identifyToolBufferActive", ["loc", [null, [297, 23], [297, 47]]]]], [], []], "bufferUnits", ["subexpr", "@mut", [["get", "identifyToolBufferUnits", ["loc", [null, [298, 22], [298, 45]]]]], [], []], "bufferRadius", ["subexpr", "@mut", [["get", "identifyToolBufferRadius", ["loc", [null, [299, 23], [299, 47]]]]], [], []], "layers", ["subexpr", "@mut", [["get", "model.hierarchy", ["loc", [null, [300, 17], [300, 32]]]]], [], []], "leafletMap", ["subexpr", "@mut", [["get", "leafletMap", ["loc", [null, [301, 21], [301, 31]]]]], [], []]], ["loc", [null, [294, 8], [302, 10]]]], ["inline", "map-tools/compare", [], ["leafletMap", ["subexpr", "@mut", [["get", "leafletMap", ["loc", [null, [304, 21], [304, 31]]]]], [], []], "showCompareSideBar", ["subexpr", "action", ["showCompareSideBar"], [], ["loc", [null, [305, 29], [305, 58]]]]], ["loc", [null, [303, 8], [306, 10]]]], ["inline", "map-commands/go-to", [], ["leafletMap", ["subexpr", "@mut", [["get", "leafletMap", ["loc", [null, [307, 40], [307, 50]]]]], [], []]], ["loc", [null, [307, 8], [307, 52]]]], ["inline", "map-commands/locate", [], ["leafletMap", ["subexpr", "@mut", [["get", "leafletMap", ["loc", [null, [308, 41], [308, 51]]]]], [], []]], ["loc", [null, [308, 8], [308, 53]]]], ["inline", "map-commands/search", [], ["leafletMap", ["subexpr", "@mut", [["get", "leafletMap", ["loc", [null, [310, 21], [310, 31]]]]], [], []], "layers", ["subexpr", "@mut", [["get", "model.hierarchy", ["loc", [null, [311, 17], [311, 32]]]]], [], []]], ["loc", [null, [309, 8], [312, 10]]]], ["inline", "map-commands/export", [], ["iconClass", "external share icon", "timeout", 30000, "defaultMapCaption", ["subexpr", "@mut", [["get", "model.name", ["loc", [null, [316, 28], [316, 38]]]]], [], []], "leafletMap", ["subexpr", "@mut", [["get", "leafletMap", ["loc", [null, [317, 21], [317, 31]]]]], [], []], "layers", ["subexpr", "@mut", [["get", "model.hierarchy", ["loc", [null, [318, 17], [318, 32]]]]], [], []]], ["loc", [null, [313, 8], [319, 10]]]], ["block", "map-commands/base", [], ["class", "flexberry-more-map-command no-arrow", "name", "base", "iconClass", "more icon", "leafletMap", ["subexpr", "@mut", [["get", "leafletMap", ["loc", [null, [324, 21], [324, 31]]]]], [], []]], 0, null, ["loc", [null, [320, 8], [340, 30]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child6 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 345,
              "column": 2
            },
            "end": {
              "line": 347,
              "column": 2
            }
          },
          "moduleName": "dummy/templates/map.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "map-tools/background-layers", [], ["layers", ["subexpr", "@mut", [["get", "model.hierarchy", ["loc", [null, [346, 41], [346, 56]]]]], [], []], "leafletMap", ["subexpr", "@mut", [["get", "leafletMap", ["loc", [null, [346, 68], [346, 78]]]]], [], []]], ["loc", [null, [346, 4], [346, 80]]]]],
        locals: [],
        templates: []
      };
    })();
    var child7 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 350,
              "column": 6
            },
            "end": {
              "line": 387,
              "column": 6
            }
          },
          "moduleName": "dummy/templates/map.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);
          return morphs;
        },
        statements: [["inline", "flexberry-layers", [], ["leafletMap", ["subexpr", "@mut", [["get", "leafletMap", ["loc", [null, [369, 21], [369, 31]]]]], [], []], "leafletContainer", ["subexpr", "@mut", [["get", "leafletMap", ["loc", [null, [370, 27], [370, 37]]]]], [], []], "layers", ["subexpr", "get-with-dynamic-actions", [["get", "this", ["loc", [null, [371, 43], [371, 47]]]], "model.hierarchy"], ["hierarchyPropertyName", "layers", "pathKeyword", "layerPath", "dynamicActions", ["subexpr", "array", [["subexpr", "hash", [], ["on", "layerInit", "actionName", "onLayerInit"], ["loc", [null, [375, 14], [378, 15]]]]], [], ["loc", [null, [374, 27], [379, 13]]]]], ["loc", [null, [371, 17], [380, 11]]]]], ["loc", [null, [368, 8], [381, 10]]]], ["inline", "switch-scale-control", [], ["leafletMap", ["subexpr", "@mut", [["get", "leafletMap", ["loc", [null, [383, 21], [383, 31]]]]], [], []], "updateWhenIdle", true, "scales", ["subexpr", "@mut", [["get", "switchScaleControlScales", ["loc", [null, [385, 17], [385, 41]]]]], [], []]], ["loc", [null, [382, 8], [386, 10]]]]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 395,
            "column": 7
          }
        },
        "moduleName": "dummy/templates/map.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("h3");
        dom.setAttribute(el1, "class", "ui header");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("form");
        dom.setAttribute(el1, "class", "ui form flexberry-vertical-form");
        dom.setAttribute(el1, "role", "form");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "flexberry-edit-panel");
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("button");
        dom.setAttribute(el4, "type", "submit");
        dom.setAttribute(el4, "class", "ui button close-button");
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("-->");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "sidebar-wrapper");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "ui very wide right sidebar pushable tabbar");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "data-tab", "treeview");
        dom.setAttribute(el4, "class", "ui tab treeview");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("h3");
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "data-tab", "search");
        dom.setAttribute(el4, "class", "ui tab search");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("h3");
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "data-tab", "identify");
        dom.setAttribute(el4, "class", "ui tab identify");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("h3");
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "data-tab", "bookmarks");
        dom.setAttribute(el4, "class", "ui tab bookmarks");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("h3");
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "data-tab", "createObject");
        dom.setAttribute(el4, "class", "ui tab createObject");
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("h3");
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "data-tab", "favorites");
        dom.setAttribute(el4, "class", "ui tab bookmarks");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("h3");
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "data-tab", "createOrEditObject");
        dom.setAttribute(el4, "class", "ui tab createOrEditObject");
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("h3");
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "data-tab", "compare");
        dom.setAttribute(el4, "class", "ui tab compare");
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("h3");
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "ui tab bottompanel-wrapper intersection-panel");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "ui tab bottompanel-wrapper compare-geometries-panel");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "row");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "sixteen wide column");
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "mappanel");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "pusher");
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element3 = dom.childAt(fragment, [2]);
        var element4 = dom.childAt(element3, [5, 1]);
        var element5 = dom.childAt(element4, [3]);
        var element6 = dom.childAt(element3, [9]);
        var element7 = dom.childAt(element6, [3]);
        var element8 = dom.childAt(element7, [1]);
        var element9 = dom.childAt(element7, [3]);
        var element10 = dom.childAt(element7, [5]);
        var element11 = dom.childAt(element7, [7]);
        var element12 = dom.childAt(element7, [9]);
        var element13 = dom.childAt(element7, [11]);
        var element14 = dom.childAt(element7, [13]);
        var element15 = dom.childAt(element7, [15]);
        var element16 = dom.childAt(element3, [11]);
        var morphs = new Array(34);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]), 0, 0);
        morphs[1] = dom.createMorphAt(element3, 1, 1);
        morphs[2] = dom.createMorphAt(element3, 3, 3);
        morphs[3] = dom.createMorphAt(element4, 1, 1);
        morphs[4] = dom.createElementMorph(element5);
        morphs[5] = dom.createMorphAt(element5, 0, 0);
        morphs[6] = dom.createMorphAt(element3, 7, 7);
        morphs[7] = dom.createMorphAt(element6, 1, 1);
        morphs[8] = dom.createMorphAt(dom.childAt(element8, [1]), 0, 0);
        morphs[9] = dom.createMorphAt(element8, 3, 3);
        morphs[10] = dom.createMorphAt(dom.childAt(element9, [1]), 0, 0);
        morphs[11] = dom.createMorphAt(element9, 3, 3);
        morphs[12] = dom.createMorphAt(element9, 5, 5);
        morphs[13] = dom.createMorphAt(dom.childAt(element10, [1]), 0, 0);
        morphs[14] = dom.createMorphAt(element10, 3, 3);
        morphs[15] = dom.createMorphAt(element10, 5, 5);
        morphs[16] = dom.createMorphAt(dom.childAt(element11, [1]), 0, 0);
        morphs[17] = dom.createMorphAt(element11, 3, 3);
        morphs[18] = dom.createMorphAt(dom.childAt(element12, [1]), 0, 0);
        morphs[19] = dom.createMorphAt(element12, 3, 3);
        morphs[20] = dom.createMorphAt(dom.childAt(element13, [1]), 0, 0);
        morphs[21] = dom.createMorphAt(element13, 3, 3);
        morphs[22] = dom.createMorphAt(dom.childAt(element14, [1]), 0, 0);
        morphs[23] = dom.createMorphAt(element14, 3, 3);
        morphs[24] = dom.createMorphAt(dom.childAt(element15, [1]), 0, 0);
        morphs[25] = dom.createMorphAt(element15, 3, 3);
        morphs[26] = dom.createAttrMorph(element16, 'class');
        morphs[27] = dom.createMorphAt(element16, 1, 1);
        morphs[28] = dom.createMorphAt(dom.childAt(element3, [13]), 1, 1);
        morphs[29] = dom.createMorphAt(dom.childAt(element3, [15]), 1, 1);
        morphs[30] = dom.createMorphAt(dom.childAt(element3, [17, 1]), 1, 1);
        morphs[31] = dom.createMorphAt(element3, 19, 19);
        morphs[32] = dom.createMorphAt(dom.childAt(element3, [21, 1]), 1, 1);
        morphs[33] = dom.createMorphAt(element3, 23, 23);
        return morphs;
      },
      statements: [["inline", "t", ["forms.map.caption"], [], ["loc", [null, [1, 22], [1, 47]]]], ["inline", "ui-message", [], ["type", "success", "closeable", true, "visible", ["subexpr", "@mut", [["get", "showFormSuccessMessage", ["loc", [null, [6, 12], [6, 34]]]]], [], []], "caption", ["subexpr", "@mut", [["get", "formSuccessMessageCaption", ["loc", [null, [7, 12], [7, 37]]]]], [], []], "message", ["subexpr", "@mut", [["get", "formSuccessMessage", ["loc", [null, [8, 12], [8, 30]]]]], [], []], "onShow", ["subexpr", "action", ["onSuccessMessageShow"], [], ["loc", [null, [9, 11], [9, 42]]]], "onHide", ["subexpr", "action", ["onSuccessMessageHide"], [], ["loc", [null, [10, 11], [10, 42]]]]], ["loc", [null, [3, 2], [11, 4]]]], ["inline", "flexberry-error", [], ["error", ["subexpr", "@mut", [["get", "error", ["loc", [null, [12, 26], [12, 31]]]]], [], []]], ["loc", [null, [12, 2], [12, 33]]]], ["block", "unless", [["get", "readonly", ["loc", [null, [15, 16], [15, 24]]]]], [], 0, null, ["loc", [null, [15, 6], [25, 17]]]], ["element", "action", ["close"], [], ["loc", [null, [26, 59], [26, 77]]]], ["inline", "t", ["forms.edit-form.close-button-text"], [], ["loc", [null, [26, 78], [26, 119]]]], ["inline", "flexberry-search-panel", [], ["querySearch", ["subexpr", "action", ["querySearch"], [], ["loc", [null, [30, 16], [30, 38]]]], "clearSearch", ["subexpr", "action", ["clearSearch"], [], ["loc", [null, [31, 16], [31, 38]]]], "leafletMap", ["subexpr", "@mut", [["get", "leafletMap", ["loc", [null, [32, 15], [32, 25]]]]], [], []], "layers", ["subexpr", "@mut", [["get", "model.hierarchy", ["loc", [null, [33, 11], [33, 26]]]]], [], []], "searchInProcess", ["subexpr", "@mut", [["get", "searchInProcess", ["loc", [null, [34, 20], [34, 35]]]]], [], []], "maxResultsCount", 10, "attrVisible", ["subexpr", "@mut", [["get", "attrVisible", ["loc", [null, [36, 16], [36, 27]]]]], [], []], "isSearch", ["subexpr", "@mut", [["get", "isSearch", ["loc", [null, [37, 13], [37, 21]]]]], [], []], "class", "outer-search", "searchSettings", ["subexpr", "flexberry-search-properties-osm-ru", ["http://openstreetmap.ru/api/autocomplete?q={query}"], [], ["loc", [null, [39, 19], [39, 108]]]], "attrSearch", ["subexpr", "action", ["attrSearch"], [], ["loc", [null, [40, 15], [40, 36]]]], "placeholder", ["subexpr", "@mut", [["get", "placeholderSearch", ["loc", [null, [41, 16], [41, 33]]]]], [], []]], ["loc", [null, [29, 2], [42, 4]]]], ["inline", "flexberry-tab-bar", [], ["class", "main-map-tab-bar", "change", ["subexpr", "action", ["toggleSidebar"], [], ["loc", [null, [46, 13], [46, 37]]]], "items", ["subexpr", "@mut", [["get", "_sidebarFiltered", ["loc", [null, [47, 12], [47, 28]]]]], [], []]], ["loc", [null, [44, 4], [48, 6]]]], ["inline", "t", ["forms.map.tabbar.treeview.caption"], [], ["loc", [null, [51, 12], [51, 53]]]], ["block", "if", [["get", "showTree", ["loc", [null, [52, 14], [52, 22]]]]], [], 1, 2, ["loc", [null, [52, 8], [135, 15]]]], ["inline", "t", ["forms.map.tabbar.search.caption"], [], ["loc", [null, [138, 12], [138, 51]]]], ["block", "if", [["subexpr", "gt", [["get", "searchResults.length", ["loc", [null, [139, 18], [139, 38]]]], 0], [], ["loc", [null, [139, 14], [139, 41]]]]], [], 3, null, ["loc", [null, [139, 8], [141, 15]]]], ["inline", "layer-result-list", [], ["results", ["subexpr", "@mut", [["get", "searchResults", ["loc", [null, [143, 18], [143, 31]]]]], [], []], "serviceLayer", ["subexpr", "@mut", [["get", "serviceLayer", ["loc", [null, [144, 23], [144, 35]]]]], [], []], "leafletMap", ["subexpr", "@mut", [["get", "leafletMap", ["loc", [null, [145, 21], [145, 31]]]]], [], []], "serviceRenderer", ["subexpr", "@mut", [["get", "serviceRenderer", ["loc", [null, [146, 26], [146, 41]]]]], [], []], "showIntersectionPanel", ["subexpr", "action", ["onIntersectionPanel"], [], ["loc", [null, [147, 32], [147, 62]]]], "featureSelected", ["subexpr", "action", ["onLayerFeatureSelected"], [], ["loc", [null, [148, 26], [148, 59]]]], "addToFavorite", ["subexpr", "action", ["addToFavorite"], [], ["loc", [null, [149, 24], [149, 48]]]], "editFeature", ["subexpr", "action", ["onCreateOrEditFeature"], [], ["loc", [null, [150, 22], [150, 54]]]], "availableEdit", true, "accessibleData", ["subexpr", "@mut", [["get", "access.mapLayerData", ["loc", [null, [152, 25], [152, 44]]]]], [], []], "accessibleMap", ["subexpr", "@mut", [["get", "access.map", ["loc", [null, [153, 24], [153, 34]]]]], [], []]], ["loc", [null, [142, 8], [154, 10]]]], ["inline", "t", ["forms.map.tabbar.identify.caption"], [], ["loc", [null, [157, 12], [157, 53]]]], ["inline", "flexberry-identify-panel", [], ["layerMode", ["subexpr", "@mut", [["get", "identifyToolLayerMode", ["loc", [null, [159, 20], [159, 41]]]]], [], []], "toolMode", ["subexpr", "@mut", [["get", "identifyToolToolMode", ["loc", [null, [160, 19], [160, 39]]]]], [], []], "bufferActive", ["subexpr", "@mut", [["get", "identifyToolBufferActive", ["loc", [null, [161, 23], [161, 47]]]]], [], []], "bufferUnits", ["subexpr", "@mut", [["get", "identifyToolBufferUnits", ["loc", [null, [162, 22], [162, 45]]]]], [], []], "bufferRadius", ["subexpr", "@mut", [["get", "identifyToolBufferRadius", ["loc", [null, [163, 23], [163, 47]]]]], [], []], "layers", ["subexpr", "@mut", [["get", "model.hierarchy", ["loc", [null, [164, 17], [164, 32]]]]], [], []], "leafletMap", ["subexpr", "@mut", [["get", "leafletMap", ["loc", [null, [165, 21], [165, 31]]]]], [], []], "identificationFinished", ["subexpr", "action", ["onIdentificationFinished"], [], ["loc", [null, [166, 33], [166, 68]]]], "identificationClear", ["subexpr", "action", ["onIdentificationClear"], [], ["loc", [null, [167, 30], [167, 62]]]]], ["loc", [null, [158, 8], [168, 10]]]], ["inline", "layer-result-list", [], ["results", ["subexpr", "@mut", [["get", "identifyToolResults", ["loc", [null, [170, 18], [170, 37]]]]], [], []], "serviceLayer", ["subexpr", "@mut", [["get", "serviceLayer", ["loc", [null, [171, 23], [171, 35]]]]], [], []], "leafletMap", ["subexpr", "@mut", [["get", "leafletMap", ["loc", [null, [172, 21], [172, 31]]]]], [], []], "serviceRenderer", ["subexpr", "@mut", [["get", "serviceRenderer", ["loc", [null, [173, 26], [173, 41]]]]], [], []], "showIntersectionPanel", ["subexpr", "action", ["onIntersectionPanel"], [], ["loc", [null, [174, 32], [174, 62]]]], "featureSelected", ["subexpr", "action", ["onLayerFeatureSelected"], [], ["loc", [null, [175, 26], [175, 59]]]], "addToFavorite", ["subexpr", "action", ["addToFavorite"], [], ["loc", [null, [176, 24], [176, 48]]]], "availableCRS", ["subexpr", "@mut", [["get", "availableCRS", ["loc", [null, [177, 23], [177, 35]]]]], [], []], "editFeature", ["subexpr", "action", ["onCreateOrEditFeature"], [], ["loc", [null, [178, 22], [178, 54]]]], "availableEdit", true, "accessibleData", ["subexpr", "@mut", [["get", "access.mapLayerData", ["loc", [null, [180, 25], [180, 44]]]]], [], []], "accessibleMap", ["subexpr", "@mut", [["get", "access.map", ["loc", [null, [181, 24], [181, 34]]]]], [], []]], ["loc", [null, [169, 8], [182, 10]]]], ["inline", "t", ["forms.map.tabbar.bookmarks.caption"], [], ["loc", [null, [185, 12], [185, 54]]]], ["inline", "spatial-bookmark", [], ["leafletMap", ["subexpr", "@mut", [["get", "leafletMap", ["loc", [null, [187, 21], [187, 31]]]]], [], []], "storageKey", ["subexpr", "@mut", [["get", "model.id", ["loc", [null, [188, 21], [188, 29]]]]], [], []]], ["loc", [null, [186, 8], [189, 10]]]], ["inline", "t", ["forms.map.tabbar.createObject.caption"], [], ["loc", [null, [192, 10], [192, 55]]]], ["block", "each", [["get", "createItems", ["loc", [null, [193, 14], [193, 25]]]]], [], 4, null, ["loc", [null, [193, 6], [198, 15]]]], ["inline", "t", ["forms.map.tabbar.favorites.caption"], [], ["loc", [null, [201, 12], [201, 54]]]], ["inline", "favorites-list", [], ["features", ["subexpr", "@mut", [["get", "result", ["loc", [null, [203, 19], [203, 25]]]]], [], []], "compareBtnDisabled", ["subexpr", "@mut", [["get", "compareBtnDisabled", ["loc", [null, [204, 29], [204, 47]]]]], [], []], "serviceLayer", ["subexpr", "@mut", [["get", "serviceLayer", ["loc", [null, [205, 23], [205, 35]]]]], [], []], "leafletMap", ["subexpr", "@mut", [["get", "leafletMap", ["loc", [null, [206, 21], [206, 31]]]]], [], []], "_showFavorites", ["subexpr", "@mut", [["get", "_showFavorites", ["loc", [null, [207, 25], [207, 39]]]]], [], []], "showIntersectionPanel", ["subexpr", "action", ["onIntersectionPanel"], [], ["loc", [null, [208, 32], [208, 62]]]], "compareTwoGeometries", ["subexpr", "action", ["OnCompareTwoGeometries"], [], ["loc", [null, [209, 31], [209, 64]]]], "addToFavorite", ["subexpr", "action", ["addToFavorite"], [], ["loc", [null, [210, 24], [210, 48]]]], "addToCompareGeometries", ["subexpr", "action", ["addToCompareGeometries"], [], ["loc", [null, [211, 33], [211, 66]]]]], ["loc", [null, [202, 8], [212, 10]]]], ["inline", "t", ["forms.map.tabbar.createOrEditObject.caption"], [], ["loc", [null, [215, 10], [215, 61]]]], ["inline", "flexberry-edit-layer-feature", [], ["isFavorite", ["subexpr", "@mut", [["get", "createOrEditedFeature.isFavorite", ["loc", [null, [217, 21], [217, 53]]]]], [], []], "dataItems", ["subexpr", "@mut", [["get", "createOrEditedFeature.dataItems", ["loc", [null, [218, 20], [218, 51]]]]], [], []], "layerModel", ["subexpr", "@mut", [["get", "createOrEditedFeature.layerModel", ["loc", [null, [219, 21], [219, 53]]]]], [], []], "leafletMap", ["subexpr", "@mut", [["get", "leafletMap", ["loc", [null, [220, 21], [220, 31]]]]], [], []], "serviceLayer", ["subexpr", "@mut", [["get", "serviceLayer", ["loc", [null, [221, 23], [221, 35]]]]], [], []], "editFeatureEnd", ["subexpr", "action", ["onCreateOrEditFeatureEnd"], [], ["loc", [null, [222, 25], [222, 60]]]], "rhumbMode", true, "drawMode", true, "geoproviderMode", true], ["loc", [null, [216, 8], [226, 10]]]], ["inline", "t", ["forms.map.tabbar.compare.caption"], [], ["loc", [null, [229, 10], [229, 50]]]], ["inline", "flexberry-maplayers", [], ["class", "styled", "leafletMap", ["subexpr", "@mut", [["get", "leafletMap", ["loc", [null, [232, 21], [232, 31]]]]], [], []], "sideBySide", ["subexpr", "@mut", [["get", "sideBySide", ["loc", [null, [233, 21], [233, 31]]]]], [], []], "layers", ["subexpr", "get-with-dynamic-actions", [["get", "this", ["loc", [null, [234, 43], [234, 47]]]], "model.hierarchy"], ["hierarchyPropertyName", "layers", "pathKeyword", "layerPath"], ["loc", [null, [234, 17], [236, 38]]]]], ["loc", [null, [230, 8], [237, 10]]]], ["attribute", "class", ["subexpr", "concat", ["bottompanel-wrapper", ["subexpr", "if", [["subexpr", "or", [["subexpr", "gt", [["get", "editedLayers.length", ["loc", [null, [241, 56], [241, 75]]]], 0], [], ["loc", [null, [241, 52], [241, 78]]]], ["get", "editedLayersPanelLoading", ["loc", [null, [241, 79], [241, 103]]]]], [], ["loc", [null, [241, 48], [241, 104]]]], "", " hidden"], [], ["loc", [null, [241, 44], [241, 118]]]]], [], ["loc", [null, [241, 13], [241, 120]]]]], ["inline", "flexberry-layers-attributes-panel", [], ["items", ["subexpr", "@mut", [["get", "editedLayers", ["loc", [null, [243, 12], [243, 24]]]]], [], []], "serviceLayer", ["subexpr", "@mut", [["get", "serviceLayer", ["loc", [null, [244, 19], [244, 31]]]]], [], []], "selectedTabIndex", ["subexpr", "@mut", [["get", "editedLayersSelectedTabIndex", ["loc", [null, [245, 23], [245, 51]]]]], [], []], "folded", ["subexpr", "@mut", [["get", "editedLayersPanelFolded", ["loc", [null, [246, 13], [246, 36]]]]], [], []], "settings", ["subexpr", "@mut", [["get", "editedLayersPanelSettings", ["loc", [null, [247, 15], [247, 40]]]]], [], []], "loading", ["subexpr", "@mut", [["get", "editedLayersPanelLoading", ["loc", [null, [248, 14], [248, 38]]]]], [], []], "leafletMap", ["subexpr", "@mut", [["get", "leafletMap", ["loc", [null, [249, 17], [249, 27]]]]], [], []], "editFeature", ["subexpr", "action", ["onCreateOrEditFeature"], [], ["loc", [null, [250, 18], [250, 50]]]]], ["loc", [null, [242, 4], [251, 6]]]], ["inline", "flexberry-layers-intersections-panel", [], ["layers", ["subexpr", "@mut", [["get", "model.hierarchy", ["loc", [null, [255, 13], [255, 28]]]]], [], []], "leafletMap", ["subexpr", "@mut", [["get", "leafletMap", ["loc", [null, [256, 17], [256, 27]]]]], [], []], "settings", ["subexpr", "@mut", [["get", "editedLayersPanelSettings", ["loc", [null, [257, 15], [257, 40]]]]], [], []], "loading", ["subexpr", "@mut", [["get", "editedLayersPanelLoading", ["loc", [null, [258, 14], [258, 38]]]]], [], []], "closeIntersectionPanel", ["subexpr", "action", ["closeIntersectionPanel"], [], ["loc", [null, [259, 29], [259, 62]]]], "feature", ["subexpr", "@mut", [["get", "feature", ["loc", [null, [260, 14], [260, 21]]]]], [], []], "disaplayName", ["subexpr", "@mut", [["get", "feature.properties.name", ["loc", [null, [261, 19], [261, 42]]]]], [], []]], ["loc", [null, [254, 4], [262, 6]]]], ["inline", "compare-object-geometries-panel", [], ["layers", ["subexpr", "@mut", [["get", "model.hierarchy", ["loc", [null, [266, 13], [266, 28]]]]], [], []], "leafletMap", ["subexpr", "@mut", [["get", "leafletMap", ["loc", [null, [267, 17], [267, 27]]]]], [], []], "settings", ["subexpr", "@mut", [["get", "editedLayersPanelSettings", ["loc", [null, [268, 15], [268, 40]]]]], [], []], "closeComparePanel", ["subexpr", "action", ["onCompareTwoGeometriesEnd"], [], ["loc", [null, [269, 24], [269, 60]]]], "twoObjects", ["subexpr", "@mut", [["get", "twoObjectToCompare", ["loc", [null, [270, 17], [270, 35]]]]], [], []]], ["loc", [null, [265, 4], [271, 6]]]], ["block", "flexberry-maptoolbar", [], [], 5, null, ["loc", [null, [275, 6], [342, 31]]]], ["block", "flexberry-maptoolbar", [], ["class", "background-layers"], 6, null, ["loc", [null, [345, 2], [347, 27]]]], ["block", "flexberry-map", [], ["zoomSnap", 1, "zoomDelta", 1, "lat", ["subexpr", "@mut", [["get", "model.lat", ["loc", [null, [353, 12], [353, 21]]]]], [], []], "lng", ["subexpr", "@mut", [["get", "model.lng", ["loc", [null, [354, 12], [354, 21]]]]], [], []], "zoom", ["subexpr", "@mut", [["get", "model.zoom", ["loc", [null, [355, 13], [355, 23]]]]], [], []], "zoomControl", true, "queryFilter", ["subexpr", "@mut", [["get", "queryFilter", ["loc", [null, [357, 20], [357, 31]]]]], [], []], "mapObjectSetting", ["subexpr", "@mut", [["get", "setting", ["loc", [null, [358, 25], [358, 32]]]]], [], []], "mainMap", true, "leafletInit", ["subexpr", "action", ["onMapLeafletInit", "leafletMap"], [], ["loc", [null, [360, 20], [360, 60]]]], "serviceLayerInit", ["subexpr", "action", ["onServiceLayerInit", "serviceLayer"], [], ["loc", [null, [361, 25], [361, 69]]]], "leafletDestroy", ["subexpr", "action", ["onMapLeafletDestroy", "leafletMap"], [], ["loc", [null, [362, 23], [362, 66]]]], "moveend", ["subexpr", "action", ["onMapMoveend", "model.lat", "model.lng"], [], ["loc", [null, [363, 16], [363, 63]]]], "zoomend", ["subexpr", "action", ["onMapZoomend", "model.zoom"], [], ["loc", [null, [364, 16], [364, 52]]]], "queryFinished", ["subexpr", "action", ["onQueryFinished"], [], ["loc", [null, [365, 22], [365, 48]]]], "onCreateObject", ["subexpr", "action", ["onCreateObject"], [], ["loc", [null, [366, 23], [366, 48]]]]], 7, null, ["loc", [null, [350, 6], [387, 24]]]], ["inline", "flexberry-mapinfo", [], ["mapId", ["subexpr", "@mut", [["get", "model.id", ["loc", [null, [391, 10], [391, 18]]]]], [], []], "name", ["subexpr", "@mut", [["get", "model.name", ["loc", [null, [392, 9], [392, 19]]]]], [], []], "description", ["subexpr", "@mut", [["get", "model.description", ["loc", [null, [393, 16], [393, 33]]]]], [], []]], ["loc", [null, [390, 2], [394, 4]]]]],
      locals: [],
      templates: [child0, child1, child2, child3, child4, child5, child6, child7]
    };
  })());
});
define("dummy/templates/maps", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type", "multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 27,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/maps.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("h3");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "row");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(3);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [2]), 0, 0);
        morphs[2] = dom.createMorphAt(dom.childAt(fragment, [4]), 1, 1);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "flexberry-error", [], ["error", ["subexpr", "@mut", [["get", "error", ["loc", [null, [1, 24], [1, 29]]]]], [], []]], ["loc", [null, [1, 0], [1, 31]]]], ["inline", "t", ["forms.maps.caption"], [], ["loc", [null, [2, 4], [2, 30]]]], ["inline", "flexberry-objectlistview", [], ["content", ["subexpr", "@mut", [["get", "model", ["loc", [null, [5, 12], [5, 17]]]]], [], []], "modelName", ["subexpr", "@mut", [["get", "modelName", ["loc", [null, [6, 14], [6, 23]]]]], [], []], "modelProjection", ["subexpr", "@mut", [["get", "modelProjection", ["loc", [null, [7, 20], [7, 35]]]]], [], []], "editFormRoute", "map", "createNewButton", true, "refreshButton", true, "sorting", ["subexpr", "@mut", [["get", "computedSorting", ["loc", [null, [11, 12], [11, 27]]]]], [], []], "orderable", true, "pages", ["subexpr", "@mut", [["get", "pages", ["loc", [null, [13, 10], [13, 15]]]]], [], []], "perPageValue", ["subexpr", "@mut", [["get", "perPageValue", ["loc", [null, [14, 17], [14, 29]]]]], [], []], "perPageValues", ["subexpr", "@mut", [["get", "perPageValues", ["loc", [null, [15, 18], [15, 31]]]]], [], []], "recordsTotalCount", ["subexpr", "@mut", [["get", "recordsTotalCount", ["loc", [null, [16, 22], [16, 39]]]]], [], []], "hasPreviousPage", ["subexpr", "@mut", [["get", "hasPreviousPage", ["loc", [null, [17, 20], [17, 35]]]]], [], []], "hasNextPage", ["subexpr", "@mut", [["get", "hasNextPage", ["loc", [null, [18, 16], [18, 27]]]]], [], []], "sortByColumn", ["subexpr", "action", ["sortByColumn"], [], ["loc", [null, [19, 17], [19, 40]]]], "addColumnToSorting", ["subexpr", "action", ["addColumnToSorting"], [], ["loc", [null, [20, 23], [20, 52]]]], "previousPage", ["subexpr", "action", ["previousPage"], [], ["loc", [null, [21, 17], [21, 40]]]], "gotoPage", ["subexpr", "action", ["gotoPage"], [], ["loc", [null, [22, 13], [22, 32]]]], "nextPage", ["subexpr", "action", ["nextPage"], [], ["loc", [null, [23, 13], [23, 32]]]], "componentName", "NewPlatformFlexberryGISMapL"], ["loc", [null, [4, 2], [25, 4]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/mobile/components/colsconfig-dialog-content", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 28,
              "column": 4
            },
            "end": {
              "line": 41,
              "column": 4
            }
          },
          "moduleName": "dummy/templates/mobile/components/colsconfig-dialog-content.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "field");
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "field");
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          morphs[1] = dom.createMorphAt(dom.childAt(fragment, [3]), 1, 1);
          return morphs;
        },
        statements: [["inline", "flexberry-checkbox", [], ["label", ["subexpr", "t", ["components.colsconfig-dialog-content.det-separate-cols"], [], ["loc", [null, [31, 16], [31, 76]]]], "value", ["subexpr", "@mut", [["get", "model.exportParams.detSeparateCols", ["loc", [null, [32, 16], [32, 50]]]]], [], []]], ["loc", [null, [30, 8], [33, 10]]]], ["inline", "flexberry-checkbox", [], ["label", ["subexpr", "t", ["components.colsconfig-dialog-content.det-separate-rows"], [], ["loc", [null, [37, 16], [37, 76]]]], "value", ["subexpr", "@mut", [["get", "model.exportParams.detSeparateRows", ["loc", [null, [38, 16], [38, 50]]]]], [], []]], ["loc", [null, [36, 8], [39, 10]]]]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 41,
              "column": 4
            },
            "end": {
              "line": 59,
              "column": 4
            }
          },
          "moduleName": "dummy/templates/mobile/components/colsconfig-dialog-content.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "two fields unstackable");
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "field");
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "field");
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("label");
          var el4 = dom.createTextNode(" ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element14 = dom.childAt(fragment, [1]);
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(dom.childAt(element14, [1]), 1, 1);
          morphs[1] = dom.createMorphAt(dom.childAt(element14, [3]), 3, 3);
          return morphs;
        },
        statements: [["inline", "flexberry-field", [], ["class", "per-page-input", "value", ["subexpr", "@mut", [["get", "model.perPageValue", ["loc", [null, [46, 18], [46, 36]]]]], [], []], "label", ["subexpr", "t", ["components.colsconfig-dialog-content.per-page"], [], ["loc", [null, [47, 18], [47, 69]]]]], ["loc", [null, [44, 10], [48, 12]]]], ["inline", "flexberry-checkbox", [], ["class", "toggle", "value", ["subexpr", "@mut", [["get", "model.saveColWidthState", ["loc", [null, [54, 18], [54, 41]]]]], [], []], "label", ["subexpr", "t", ["components.colsconfig-dialog-content.col-width-on"], [], ["loc", [null, [55, 18], [55, 73]]]]], ["loc", [null, [52, 10], [56, 12]]]]],
        locals: [],
        templates: []
      };
    })();
    var child2 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 64,
                "column": 10
              },
              "end": {
                "line": 67,
                "column": 10
              }
            },
            "moduleName": "dummy/templates/mobile/components/colsconfig-dialog-content.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("            ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("label");
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n            ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(2);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);
            morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);
            return morphs;
          },
          statements: [["inline", "t", ["components.colsconfig-dialog-content.column-name"], [], ["loc", [null, [65, 19], [65, 75]]]], ["inline", "input", [], ["class", ["subexpr", "if", [["get", "colDesc.hide", ["loc", [null, [66, 30], [66, 42]]]], "disabled"], [], ["loc", [null, [66, 26], [66, 54]]]], "value", ["subexpr", "@mut", [["get", "colDesc.name", ["loc", [null, [66, 61], [66, 73]]]]], [], []]], ["loc", [null, [66, 12], [66, 75]]]]],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 67,
                "column": 10
              },
              "end": {
                "line": 69,
                "column": 10
              }
            },
            "moduleName": "dummy/templates/mobile/components/colsconfig-dialog-content.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("            ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("span");
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);
            return morphs;
          },
          statements: [["content", "colDesc.name", ["loc", [null, [68, 18], [68, 34]]]]],
          locals: [],
          templates: []
        };
      })();
      var child2 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 77,
                  "column": 14
                },
                "end": {
                  "line": 85,
                  "column": 14
                }
              },
              "moduleName": "dummy/templates/mobile/components/colsconfig-dialog-content.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("                ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("i");
              dom.setAttribute(el1, "class", "dropdown icon");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n                ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "default text");
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n                ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "menu");
              var el2 = dom.createTextNode("\n                  ");
              dom.appendChild(el1, el2);
              var el2 = dom.createElement("div");
              dom.setAttribute(el2, "class", "item");
              dom.setAttribute(el2, "data-value", "0");
              var el3 = dom.createComment("");
              dom.appendChild(el2, el3);
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n                  ");
              dom.appendChild(el1, el2);
              var el2 = dom.createElement("div");
              dom.setAttribute(el2, "class", "item");
              dom.setAttribute(el2, "data-value", "1");
              var el3 = dom.createComment("");
              dom.appendChild(el2, el3);
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n                  ");
              dom.appendChild(el1, el2);
              var el2 = dom.createElement("div");
              dom.setAttribute(el2, "class", "item");
              dom.setAttribute(el2, "data-value", "-1");
              var el3 = dom.createComment("");
              dom.appendChild(el2, el3);
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n                ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var element2 = dom.childAt(fragment, [5]);
              var morphs = new Array(4);
              morphs[0] = dom.createMorphAt(dom.childAt(fragment, [3]), 0, 0);
              morphs[1] = dom.createMorphAt(dom.childAt(element2, [1]), 0, 0);
              morphs[2] = dom.createMorphAt(dom.childAt(element2, [3]), 0, 0);
              morphs[3] = dom.createMorphAt(dom.childAt(element2, [5]), 0, 0);
              return morphs;
            },
            statements: [["inline", "t", ["components.colsconfig-dialog-content.sort-direction-none"], [], ["loc", [null, [79, 42], [79, 106]]]], ["inline", "t", ["components.colsconfig-dialog-content.sort-direction-none"], [], ["loc", [null, [81, 51], [81, 115]]]], ["inline", "t", ["components.colsconfig-dialog-content.sort-direction-asc"], [], ["loc", [null, [82, 51], [82, 114]]]], ["inline", "t", ["components.colsconfig-dialog-content.sort-direction-desc"], [], ["loc", [null, [83, 52], [83, 116]]]]],
            locals: [],
            templates: []
          };
        })();
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 74,
                "column": 10
              },
              "end": {
                "line": 87,
                "column": 10
              }
            },
            "moduleName": "dummy/templates/mobile/components/colsconfig-dialog-content.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("            ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1, "class", "sort-direction-cell field");
            var el2 = dom.createTextNode("\n              ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("label");
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("            ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element3 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createMorphAt(dom.childAt(element3, [1]), 0, 0);
            morphs[1] = dom.createMorphAt(element3, 3, 3);
            return morphs;
          },
          statements: [["inline", "t", ["components.colsconfig-dialog-content.sort-direction-caption"], [], ["loc", [null, [76, 21], [76, 88]]]], ["block", "ui-dropdown", [], ["class", ["subexpr", "concat", ["ui compact selection dropdown sort-direction-dropdown", ["subexpr", "if", [["get", "colDesc.hide", ["loc", [null, [77, 103], [77, 115]]]], " disabled"], [], ["loc", [null, [77, 99], [77, 128]]]], ["subexpr", "if", [["get", "colDesc.isHasMany", ["loc", [null, [77, 133], [77, 150]]]], " hidden"], [], ["loc", [null, [77, 129], [77, 161]]]]], [], ["loc", [null, [77, 35], [77, 162]]]], "onChange", ["subexpr", "action", ["setSortOrder", ["get", "colDesc", ["loc", [null, [77, 195], [77, 202]]]]], [], ["loc", [null, [77, 172], [77, 203]]]]], 0, null, ["loc", [null, [77, 14], [85, 30]]]]],
          locals: [],
          templates: [child0]
        };
      })();
      var child3 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 89,
                "column": 10
              },
              "end": {
                "line": 99,
                "column": 10
              }
            },
            "moduleName": "dummy/templates/mobile/components/colsconfig-dialog-content.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("            ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1, "class", "field");
            var el2 = dom.createTextNode("\n              ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("label");
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n              ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("div");
            var el3 = dom.createTextNode("\n                ");
            dom.appendChild(el2, el3);
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("\n              ");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1]);
            var element1 = dom.childAt(element0, [3]);
            var morphs = new Array(3);
            morphs[0] = dom.createMorphAt(dom.childAt(element0, [1]), 0, 0);
            morphs[1] = dom.createAttrMorph(element1, 'class');
            morphs[2] = dom.createMorphAt(element1, 1, 1);
            return morphs;
          },
          statements: [["inline", "t", ["components.colsconfig-dialog-content.sort-priority-caption"], [], ["loc", [null, [91, 21], [91, 87]]]], ["attribute", "class", ["concat", ["ui input ", ["subexpr", "if", [["get", "colDesc.hide", ["loc", [null, [92, 40], [92, 52]]]], "disabled"], [], ["loc", [null, [92, 35], [92, 65]]]]]]], ["inline", "input", [], ["class", "sort-priority-input", "value", ["subexpr", "@mut", [["get", "colDesc.sortPriority", ["loc", [null, [95, 24], [95, 44]]]]], [], []]], ["loc", [null, [93, 16], [96, 18]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 61,
              "column": 4
            },
            "end": {
              "line": 119,
              "column": 4
            }
          },
          "moduleName": "dummy/templates/mobile/components/colsconfig-dialog-content.hbs"
        },
        isEmpty: false,
        arity: 2,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "colsconfig-prop");
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          var el3 = dom.createTextNode("\n");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("        ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "two fields unstackable");
          var el3 = dom.createTextNode("\n");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("        ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "field");
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("label");
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("div");
          var el4 = dom.createTextNode("\n            ");
          dom.appendChild(el3, el4);
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n          ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "colsconfig-actions");
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("button");
          dom.setAttribute(el3, "type", "button");
          dom.setAttribute(el3, "class", "ui icon button");
          var el4 = dom.createElement("i");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("button");
          dom.setAttribute(el3, "type", "button");
          var el4 = dom.createElement("i");
          dom.setAttribute(el4, "class", "chevron up icon");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("button");
          dom.setAttribute(el3, "type", "button");
          var el4 = dom.createElement("i");
          dom.setAttribute(el4, "class", "chevron down icon");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element4 = dom.childAt(fragment, [1]);
          var element5 = dom.childAt(element4, [1]);
          var element6 = dom.childAt(element4, [4]);
          var element7 = dom.childAt(element4, [7]);
          var element8 = dom.childAt(element7, [3]);
          var element9 = dom.childAt(element4, [9]);
          var element10 = dom.childAt(element9, [1]);
          var element11 = dom.childAt(element10, [0]);
          var element12 = dom.childAt(element9, [3]);
          var element13 = dom.childAt(element9, [5]);
          var morphs = new Array(14);
          morphs[0] = dom.createAttrMorph(element4, 'propName');
          morphs[1] = dom.createAttrMorph(element5, 'class');
          morphs[2] = dom.createMorphAt(element5, 1, 1);
          morphs[3] = dom.createMorphAt(element6, 1, 1);
          morphs[4] = dom.createMorphAt(element6, 2, 2);
          morphs[5] = dom.createMorphAt(dom.childAt(element7, [1]), 0, 0);
          morphs[6] = dom.createAttrMorph(element8, 'class');
          morphs[7] = dom.createMorphAt(element8, 1, 1);
          morphs[8] = dom.createElementMorph(element10);
          morphs[9] = dom.createAttrMorph(element11, 'class');
          morphs[10] = dom.createAttrMorph(element12, 'class');
          morphs[11] = dom.createElementMorph(element12);
          morphs[12] = dom.createAttrMorph(element13, 'class');
          morphs[13] = dom.createElementMorph(element13);
          return morphs;
        },
        statements: [["attribute", "propName", ["concat", [["get", "colDesc.propName", ["loc", [null, [62, 23], [62, 39]]]]]]], ["attribute", "class", ["concat", ["field colsconfig-prop-name ", ["subexpr", "if", [["get", "colDesc.hide", ["loc", [null, [63, 52], [63, 64]]]], "disabled"], [], ["loc", [null, [63, 47], [63, 77]]]]]]], ["block", "if", [["get", "model.exportParams.isExportExcel", ["loc", [null, [64, 16], [64, 48]]]]], [], 0, 1, ["loc", [null, [64, 10], [69, 17]]]], ["block", "unless", [["get", "colDesc.isHasMany", ["loc", [null, [74, 20], [74, 37]]]]], [], 2, null, ["loc", [null, [74, 10], [87, 21]]]], ["block", "if", [["get", "colDesc.sortOrder", ["loc", [null, [89, 16], [89, 33]]]]], [], 3, null, ["loc", [null, [89, 10], [99, 17]]]], ["inline", "t", ["components.colsconfig-dialog-content.column-width-caption"], [], ["loc", [null, [104, 17], [104, 82]]]], ["attribute", "class", ["concat", ["ui input ", ["subexpr", "if", [["subexpr", "or", [["get", "colDesc.hide", ["loc", [null, [105, 40], [105, 52]]]], ["subexpr", "or", [["get", "model.exportParams.isExportExcel", ["loc", [null, [105, 57], [105, 89]]]], ["subexpr", "or", [["get", "colDesc.fixed", ["loc", [null, [105, 94], [105, 107]]]], ["subexpr", "not", [["get", "model.saveColWidthState", ["loc", [null, [105, 113], [105, 136]]]]], [], ["loc", [null, [105, 108], [105, 137]]]]], [], ["loc", [null, [105, 90], [105, 138]]]]], [], ["loc", [null, [105, 53], [105, 139]]]]], [], ["loc", [null, [105, 36], [105, 140]]]], "disabled"], [], ["loc", [null, [105, 31], [105, 153]]]]]]], ["inline", "input", [], ["class", "column-width-input", "value", ["subexpr", "@mut", [["get", "colDesc.columnWidth", ["loc", [null, [108, 20], [108, 39]]]]], [], []]], ["loc", [null, [106, 12], [109, 14]]]], ["element", "action", ["invertVisibility", ["get", "n", ["loc", [null, [114, 60], [114, 61]]]]], [], ["loc", [null, [114, 32], [114, 63]]]], ["attribute", "class", ["concat", ["large ", ["subexpr", "if", [["get", "colDesc.hide", ["loc", [null, [114, 108], [114, 120]]]], "hide", "unhide"], [], ["loc", [null, [114, 103], [114, 138]]]], " icon"]]], ["attribute", "class", ["concat", ["ui icon button", ["subexpr", "if", [["subexpr", "eq", [["get", "n", ["loc", [null, [115, 83], [115, 84]]]], 0], [], ["loc", [null, [115, 79], [115, 87]]]], " disabled"], [], ["loc", [null, [115, 74], [115, 101]]]]]]], ["element", "action", ["rowUp", ["get", "n", ["loc", [null, [115, 49], [115, 50]]]]], [], ["loc", [null, [115, 32], [115, 52]]]], ["attribute", "class", ["concat", ["ui icon button row-down-button no-margin", ["subexpr", "if", [["subexpr", "eq", [["get", "colDesc", ["loc", [null, [116, 111], [116, 118]]]], ["get", "model.colDescs.lastObject", ["loc", [null, [116, 119], [116, 144]]]]], [], ["loc", [null, [116, 107], [116, 145]]]], " disabled"], [], ["loc", [null, [116, 102], [116, 159]]]]]]], ["element", "action", ["rowDown", ["get", "n", ["loc", [null, [116, 51], [116, 52]]]]], [], ["loc", [null, [116, 32], [116, 54]]]]],
        locals: ["colDesc", "n"],
        templates: [child0, child1, child2, child3]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "triple-curlies"
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 123,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/mobile/components/colsconfig-dialog-content.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "flexberry-colsconfig content");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "field");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("button");
        dom.setAttribute(el4, "type", "button");
        dom.setAttribute(el4, "class", "ui button cols-config-apply");
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "ui segment");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "field");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "field");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("button");
        dom.setAttribute(el5, "type", "button");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("a");
        dom.setAttribute(el3, "class", "hidden download-anchor");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element15 = dom.childAt(fragment, [0]);
        var element16 = dom.childAt(element15, [1]);
        var element17 = dom.childAt(element16, [1, 1]);
        var element18 = dom.childAt(element16, [3]);
        var element19 = dom.childAt(element18, [3, 1]);
        var morphs = new Array(10);
        morphs[0] = dom.createAttrMorph(element15, 'class');
        morphs[1] = dom.createElementMorph(element17);
        morphs[2] = dom.createMorphAt(element17, 0, 0);
        morphs[3] = dom.createMorphAt(dom.childAt(element18, [1]), 1, 1);
        morphs[4] = dom.createAttrMorph(element19, 'class');
        morphs[5] = dom.createElementMorph(element19);
        morphs[6] = dom.createMorphAt(element19, 1, 1);
        morphs[7] = dom.createMorphAt(element18, 5, 5);
        morphs[8] = dom.createMorphAt(element16, 5, 5);
        morphs[9] = dom.createMorphAt(element16, 7, 7);
        return morphs;
      },
      statements: [["attribute", "class", ["concat", ["ui form ", ["get", "appState.state", ["loc", [null, [1, 22], [1, 36]]]]]]], ["element", "action", ["apply"], [], ["loc", [null, [4, 64], [4, 82]]]], ["inline", "if", [["get", "model.exportParams.isExportExcel", ["loc", [null, [4, 88], [4, 120]]]], ["subexpr", "t", ["components.colsconfig-dialog-content.export"], [], ["loc", [null, [4, 121], [4, 170]]]], ["subexpr", "t", ["components.colsconfig-dialog-content.use"], [], ["loc", [null, [4, 171], [4, 217]]]]], [], ["loc", [null, [4, 83], [4, 219]]]], ["inline", "flexberry-field", [], ["class", "setting-name-input fluid", "value", ["subexpr", "@mut", [["get", "model.settingName", ["loc", [null, [10, 16], [10, 33]]]]], [], []], "label", ["subexpr", "t", ["components.colsconfig-dialog-content.enter-setting-name"], [], ["loc", [null, [11, 16], [11, 77]]]]], ["loc", [null, [8, 8], [12, 10]]]], ["attribute", "class", ["concat", ["ui button positive cols-config-save", ["subexpr", "unless", [["get", "model.settingName", ["loc", [null, [15, 81], [15, 98]]]], " disabled"], [], ["loc", [null, [15, 72], [15, 112]]]]]]], ["element", "action", ["saveColsSetting"], [], ["loc", [null, [15, 114], [15, 142]]]], ["inline", "t", ["components.colsconfig-dialog-content.save"], [], ["loc", [null, [16, 10], [16, 59]]]], ["inline", "ui-message", [], ["type", ["subexpr", "@mut", [["get", "type", ["loc", [null, [20, 13], [20, 17]]]]], [], []], "closeable", ["subexpr", "@mut", [["get", "closeable", ["loc", [null, [21, 18], [21, 27]]]]], [], []], "visible", ["subexpr", "@mut", [["get", "visible", ["loc", [null, [22, 16], [22, 23]]]]], [], []], "caption", ["subexpr", "@mut", [["get", "caption", ["loc", [null, [23, 16], [23, 23]]]]], [], []], "message", ["subexpr", "@mut", [["get", "message", ["loc", [null, [24, 16], [24, 23]]]]], [], []]], ["loc", [null, [19, 6], [25, 8]]]], ["block", "if", [["get", "model.exportParams.isExportExcel", ["loc", [null, [28, 10], [28, 42]]]]], [], 0, 1, ["loc", [null, [28, 4], [59, 11]]]], ["block", "each", [["get", "model.colDescs", ["loc", [null, [61, 12], [61, 26]]]]], [], 2, null, ["loc", [null, [61, 4], [119, 13]]]]],
      locals: [],
      templates: [child0, child1, child2]
    };
  })());
});
define("dummy/templates/mobile/components/flexberry-file", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        var child0 = (function () {
          var child0 = (function () {
            return {
              meta: {
                "fragmentReason": false,
                "revision": "Ember@2.4.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 25,
                    "column": 12
                  },
                  "end": {
                    "line": 30,
                    "column": 12
                  }
                },
                "moduleName": "dummy/templates/mobile/components/flexberry-file.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("              ");
                dom.appendChild(el0, el1);
                var el1 = dom.createElement("img");
                dom.setAttribute(el1, "class", "flexberry-file-image-preview");
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var element0 = dom.childAt(fragment, [1]);
                var morphs = new Array(2);
                morphs[0] = dom.createAttrMorph(element0, 'src');
                morphs[1] = dom.createAttrMorph(element0, 'alt');
                return morphs;
              },
              statements: [["attribute", "src", ["get", "_previewImageAsBase64String", ["loc", [null, [28, 22], [28, 49]]]]], ["attribute", "alt", ["subexpr", "t", ["components.flexberry-file.preview-image-alternative-text"], [], ["loc", [null, [29, 20], [29, 84]]]]]],
              locals: [],
              templates: []
            };
          })();
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 23,
                  "column": 8
                },
                "end": {
                  "line": 33,
                  "column": 8
                }
              },
              "moduleName": "dummy/templates/mobile/components/flexberry-file.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("          ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "flexberry-file-image-preview-wrapper ui small image");
              var el2 = dom.createTextNode("\n");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("            ");
              dom.appendChild(el1, el2);
              var el2 = dom.createElement("div");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var element1 = dom.childAt(fragment, [1]);
              var element2 = dom.childAt(element1, [3]);
              var morphs = new Array(3);
              morphs[0] = dom.createElementMorph(element1);
              morphs[1] = dom.createMorphAt(element1, 1, 1);
              morphs[2] = dom.createAttrMorph(element2, 'class');
              return morphs;
            },
            statements: [["element", "action", ["viewLoadedImage"], [], ["loc", [null, [24, 75], [24, 103]]]], ["block", "unless", [["get", "_previewDownloadIsInProgress", ["loc", [null, [25, 22], [25, 50]]]]], [], 0, null, ["loc", [null, [25, 12], [30, 23]]]], ["attribute", "class", ["concat", ["ui ", ["subexpr", "if", [["get", "_previewDownloadIsInProgress", ["loc", [null, [31, 32], [31, 60]]]], "active", "disabled"], [], ["loc", [null, [31, 27], [31, 82]]]], " loader"]]]],
            locals: [],
            templates: [child0]
          };
        })();
        var child1 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 33,
                  "column": 8
                },
                "end": {
                  "line": 35,
                  "column": 8
                }
              },
              "moduleName": "dummy/templates/mobile/components/flexberry-file.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("          ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("span");
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode(" ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("span");
              dom.setAttribute(el1, "style", "color:red");
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(2);
              morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);
              morphs[1] = dom.createMorphAt(dom.childAt(fragment, [3]), 0, 0);
              return morphs;
            },
            statements: [["content", "_fileName", ["loc", [null, [34, 16], [34, 29]]]], ["content", "_errorPreviewCaption", ["loc", [null, [34, 67], [34, 91]]]]],
            locals: [],
            templates: []
          };
        })();
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 22,
                "column": 6
              },
              "end": {
                "line": 36,
                "column": 6
              }
            },
            "moduleName": "dummy/templates/mobile/components/flexberry-file.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [["block", "if", [["get", "_canLoadPreview", ["loc", [null, [23, 14], [23, 29]]]]], [], 0, 1, ["loc", [null, [23, 8], [35, 15]]]]],
          locals: [],
          templates: [child0, child1]
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 11,
              "column": 4
            },
            "end": {
              "line": 37,
              "column": 4
            }
          },
          "moduleName": "dummy/templates/mobile/components/flexberry-file.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "flexberry-file-menu");
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["inline", "flexberry-menu", [], ["class", ["subexpr", "concat", ["flexberry-file-mobile-menu top right pointing", ["subexpr", "if", [["subexpr", "and", [["get", "readonly", ["loc", [null, [14, 81], [14, 89]]]], ["subexpr", "not", [["get", "showPreview", ["loc", [null, [14, 95], [14, 106]]]]], [], ["loc", [null, [14, 90], [14, 107]]]]], [], ["loc", [null, [14, 76], [14, 108]]]], " disabled", ""], [], ["loc", [null, [14, 72], [14, 124]]]]], [], ["loc", [null, [14, 16], [14, 125]]]], "items", ["subexpr", "@mut", [["get", "_menuItems", ["loc", [null, [15, 16], [15, 26]]]]], [], []], "callItemsOnClickCallbacks", false, "onItemClick", ["subexpr", "action", ["onMenuItemClick"], [], ["loc", [null, [17, 22], [17, 48]]]], "collapseMenuOnItemClick", true, "onlyClickHandler", true], ["loc", [null, [13, 8], [20, 10]]]], ["block", "if", [["get", "showPreview", ["loc", [null, [22, 12], [22, 23]]]]], [], 0, null, ["loc", [null, [22, 6], [36, 13]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 61,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/mobile/components/flexberry-file.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "flexberry-file-grid ui grid");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("input");
        dom.setAttribute(el2, "type", "file");
        dom.setAttribute(el2, "name", "files[]");
        dom.setAttribute(el2, "class", "flexberry-file-file-input");
        dom.setAttribute(el2, "style", "display:none");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "row");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "flexberry-file-download-iframes-container");
        dom.setAttribute(el1, "style", "display: none;");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "flexberry-file-error-modal-dialog ui small basic modal");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "ui icon header");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "content");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "flexberry-file-error-modal-dialog-content center aligned ui grid");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "flexberry-file-error-modal-dialog-button center aligned ui grid");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "actions");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "flexberry-file-error-modal-dialog-ok-button ui approve green inverted button");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("i");
        dom.setAttribute(el5, "class", "checkmark icon");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element3 = dom.childAt(fragment, [0]);
        var element4 = dom.childAt(element3, [1]);
        var element5 = dom.childAt(element3, [3]);
        var element6 = dom.childAt(element5, [1]);
        var element7 = dom.childAt(fragment, [4]);
        var morphs = new Array(10);
        morphs[0] = dom.createAttrMorph(element4, 'id');
        morphs[1] = dom.createAttrMorph(element6, 'class');
        morphs[2] = dom.createAttrMorph(element6, 'title');
        morphs[3] = dom.createAttrMorph(element6, 'for');
        morphs[4] = dom.createElementMorph(element6);
        morphs[5] = dom.createMorphAt(element6, 1, 1);
        morphs[6] = dom.createMorphAt(element5, 3, 3);
        morphs[7] = dom.createMorphAt(dom.childAt(element7, [1]), 1, 1);
        morphs[8] = dom.createMorphAt(dom.childAt(element7, [3, 1]), 1, 1);
        morphs[9] = dom.createMorphAt(dom.childAt(element7, [5, 1, 1]), 3, 3);
        return morphs;
      },
      statements: [["attribute", "id", ["get", "_fileInputId", ["loc", [null, [2, 41], [2, 53]]]]], ["attribute", "class", ["concat", ["flexberry-file-add-button ui ", ["get", "buttonClass", ["loc", [null, [5, 44], [5, 55]]]], " ", ["subexpr", "if", [["get", "readonly", ["loc", [null, [5, 63], [5, 71]]]], "disabled", ["subexpr", "unless", [["get", "_addButtonIsEnabled", ["loc", [null, [5, 91], [5, 110]]]], "disabled"], [], ["loc", [null, [5, 83], [5, 122]]]]], [], ["loc", [null, [5, 58], [5, 124]]]], " ", ["subexpr", "if", [["get", "_hasFile", ["loc", [null, [5, 130], [5, 138]]]], "hidden"], [], ["loc", [null, [5, 125], [5, 149]]]], " button"]]], ["attribute", "title", ["subexpr", "t", ["components.flexberry-file.add-button-title"], [], ["loc", [null, [6, 12], [6, 62]]]]], ["attribute", "for", ["get", "_fileInputId", ["loc", [null, [7, 12], [7, 24]]]]], ["element", "action", ["addButtonClick"], ["on", "click", "preventDefault", false], ["loc", [null, [8, 6], [8, 65]]]], ["inline", "t", ["components.flexberry-file.add-button-caption"], [], ["loc", [null, [9, 4], [9, 56]]]], ["block", "if", [["get", "_hasFile", ["loc", [null, [11, 10], [11, 18]]]]], [], 0, null, ["loc", [null, [11, 4], [37, 11]]]], ["content", "_errorModalDialogCaption", ["loc", [null, [45, 4], [45, 32]]]], ["content", "_errorModalDialogContent", ["loc", [null, [49, 6], [49, 34]]]], ["inline", "t", ["components.flexberry-file.error-dialog-ok-button-caption"], [], ["loc", [null, [56, 8], [56, 72]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define("dummy/templates/mobile/components/flexberry-objectlistview", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        var child0 = (function () {
          var child0 = (function () {
            return {
              meta: {
                "fragmentReason": false,
                "revision": "Ember@2.4.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 53,
                    "column": 12
                  },
                  "end": {
                    "line": 55,
                    "column": 12
                  }
                },
                "moduleName": "dummy/templates/mobile/components/flexberry-objectlistview.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("              ");
                dom.appendChild(el0, el1);
                var el1 = dom.createElement("button");
                dom.setAttribute(el1, "type", "button");
                dom.setAttribute(el1, "class", "ui disabled active button");
                dom.setAttribute(el1, "disabled", "");
                var el2 = dom.createComment("");
                dom.appendChild(el1, el2);
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var morphs = new Array(1);
                morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);
                return morphs;
              },
              statements: [["content", "page.number", ["loc", [null, [54, 79], [54, 94]]]]],
              locals: [],
              templates: []
            };
          })();
          var child1 = (function () {
            return {
              meta: {
                "fragmentReason": false,
                "revision": "Ember@2.4.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 55,
                    "column": 12
                  },
                  "end": {
                    "line": 57,
                    "column": 12
                  }
                },
                "moduleName": "dummy/templates/mobile/components/flexberry-objectlistview.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("              ");
                dom.appendChild(el0, el1);
                var el1 = dom.createElement("button");
                dom.setAttribute(el1, "type", "button");
                dom.setAttribute(el1, "class", "ui button");
                var el2 = dom.createComment("");
                dom.appendChild(el1, el2);
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var element1 = dom.childAt(fragment, [1]);
                var morphs = new Array(2);
                morphs[0] = dom.createElementMorph(element1);
                morphs[1] = dom.createMorphAt(element1, 0, 0);
                return morphs;
              },
              statements: [["element", "action", ["gotoPage", ["get", "this.attrs.gotoPage", ["loc", [null, [56, 74], [56, 93]]]], ["get", "page.number", ["loc", [null, [56, 94], [56, 105]]]]], [], ["loc", [null, [56, 54], [56, 107]]]], ["content", "page.number", ["loc", [null, [56, 108], [56, 123]]]]],
              locals: [],
              templates: []
            };
          })();
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 52,
                  "column": 10
                },
                "end": {
                  "line": 58,
                  "column": 10
                }
              },
              "moduleName": "dummy/templates/mobile/components/flexberry-objectlistview.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
              dom.insertBoundary(fragment, 0);
              dom.insertBoundary(fragment, null);
              return morphs;
            },
            statements: [["block", "if", [["get", "page.isCurrent", ["loc", [null, [53, 18], [53, 32]]]]], [], 0, 1, ["loc", [null, [53, 12], [57, 19]]]]],
            locals: [],
            templates: [child0, child1]
          };
        })();
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 51,
                "column": 8
              },
              "end": {
                "line": 59,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/mobile/components/flexberry-objectlistview.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [["block", "if", [["subexpr", "not", [["get", "page.isEllipsis", ["loc", [null, [52, 21], [52, 36]]]]], [], ["loc", [null, [52, 16], [52, 37]]]]], [], 0, null, ["loc", [null, [52, 10], [58, 17]]]]],
          locals: ["page"],
          templates: [child0]
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 61,
                "column": 6
              },
              "end": {
                "line": 74,
                "column": 6
              }
            },
            "moduleName": "dummy/templates/mobile/components/flexberry-objectlistview.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("          ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n        ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1]);
            var morphs = new Array(3);
            morphs[0] = dom.createAttrMorph(element0, 'class');
            morphs[1] = dom.createMorphAt(element0, 1, 1);
            morphs[2] = dom.createMorphAt(element0, 4, 4);
            return morphs;
          },
          statements: [["attribute", "class", ["concat", ["ui input nav-bar-search-page ", ["subexpr", "if", [["subexpr", "and", [["get", "searchPageValue", ["loc", [null, [62, 59], [62, 74]]]], ["get", "searchPageButtonReadonly", ["loc", [null, [62, 75], [62, 99]]]]], [], ["loc", [null, [62, 54], [62, 100]]]], "error"], [], ["loc", [null, [62, 49], [62, 111]]]]]]], ["inline", "input", [], ["type", "number", "min", ["subexpr", "@mut", [["get", "_pages.firstObject.number", ["loc", [null, [65, 16], [65, 41]]]]], [], []], "max", ["subexpr", "@mut", [["get", "_pages.lastObject.number", ["loc", [null, [66, 16], [66, 40]]]]], [], []], "placeholder", ["subexpr", "@mut", [["get", "_mobilePages.lastObject.number", ["loc", [null, [67, 24], [67, 54]]]]], [], []], "enter", ["subexpr", "action", ["searchPageButtonAction", ["get", "this.attrs.gotoPage", ["loc", [null, [68, 51], [68, 70]]]]], [], ["loc", [null, [68, 18], [68, 71]]]], "value", ["subexpr", "@mut", [["get", "searchPageValue", ["loc", [null, [69, 18], [69, 33]]]]], [], []]], ["loc", [null, [63, 10], [70, 12]]]], ["inline", "input", [], ["classNames", ["subexpr", "array", ["hidden"], [], ["loc", [null, [72, 29], [72, 45]]]]], ["loc", [null, [72, 10], [72, 47]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 38,
              "column": 0
            },
            "end": {
              "line": 77,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/mobile/components/flexberry-objectlistview.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "ui secondary menu no-margin nav-bar");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("button");
          dom.setAttribute(el2, "type", "button");
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("i");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n    ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "right menu");
          var el3 = dom.createTextNode("\n      ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("div");
          dom.setAttribute(el3, "class", "ui basic buttons");
          var el4 = dom.createTextNode("\n");
          dom.appendChild(el3, el4);
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("      ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("    ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element2 = dom.childAt(fragment, [1]);
          var element3 = dom.childAt(element2, [1]);
          var element4 = dom.childAt(element3, [1]);
          var element5 = dom.childAt(element2, [3]);
          var morphs = new Array(8);
          morphs[0] = dom.createAttrMorph(element3, 'class');
          morphs[1] = dom.createAttrMorph(element3, 'title');
          morphs[2] = dom.createAttrMorph(element3, 'disabled');
          morphs[3] = dom.createElementMorph(element3);
          morphs[4] = dom.createAttrMorph(element4, 'class');
          morphs[5] = dom.createMorphAt(element3, 3, 3);
          morphs[6] = dom.createMorphAt(dom.childAt(element5, [1]), 1, 1);
          morphs[7] = dom.createMorphAt(element5, 3, 3);
          return morphs;
        },
        statements: [["attribute", "class", ["concat", ["ui ", ["subexpr", "unless", [["get", "colsConfigButton", ["loc", [null, [42, 25], [42, 41]]]], "disabled"], [], ["loc", [null, [42, 16], [42, 54]]]], " button mobile-sorting-setting-button"]]], ["attribute", "title", ["get", "_mobileSortingSettingsCaption", ["loc", [null, [43, 14], [43, 43]]]]], ["attribute", "disabled", ["subexpr", "not", [["get", "colsConfigButton", ["loc", [null, [44, 21], [44, 37]]]]], [], ["loc", [null, [44, 15], [44, 39]]]]], ["element", "action", ["showConfigDialog"], [], ["loc", [null, [45, 6], [45, 35]]]], ["attribute", "class", ["get", "_mobileSortingSettingsIcon", ["loc", [null, [46, 19], [46, 45]]]]], ["content", "_mobileSortingSettingsCaption", ["loc", [null, [47, 8], [47, 41]]]], ["block", "each", [["get", "_mobilePages", ["loc", [null, [51, 16], [51, 28]]]]], [], 0, null, ["loc", [null, [51, 8], [59, 17]]]], ["block", "if", [["subexpr", "gt", [["get", "_mobilePages.length", ["loc", [null, [61, 16], [61, 35]]]], 4], [], ["loc", [null, [61, 12], [61, 38]]]]], [], 1, null, ["loc", [null, [61, 6], [74, 13]]]]],
        locals: [],
        templates: [child0, child1]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type", "multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 150,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/mobile/components/flexberry-objectlistview.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(3);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        morphs[2] = dom.createMorphAt(fragment, 3, 3, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "olv-toolbar", [], ["class", "ui secondary menu no-margin", "createNewButton", ["subexpr", "@mut", [["get", "createNewButton", ["loc", [null, [3, 18], [3, 33]]]]], [], []], "enableCreateNewButton", ["subexpr", "not", [["get", "readonly", ["loc", [null, [4, 29], [4, 37]]]]], [], ["loc", [null, [4, 24], [4, 38]]]], "refreshButton", ["subexpr", "@mut", [["get", "refreshButton", ["loc", [null, [5, 16], [5, 29]]]]], [], []], "deleteButton", ["subexpr", "@mut", [["get", "deleteButton", ["loc", [null, [6, 15], [6, 27]]]]], [], []], "colsConfigButton", ["subexpr", "@mut", [["get", "colsConfigButton", ["loc", [null, [7, 19], [7, 35]]]]], [], []], "advLimitButton", ["subexpr", "@mut", [["get", "advLimitButton", ["loc", [null, [8, 17], [8, 31]]]]], [], []], "enableFilters", ["subexpr", "@mut", [["get", "enableFilters", ["loc", [null, [9, 16], [9, 29]]]]], [], []], "exportExcelButton", ["subexpr", "@mut", [["get", "exportExcelButton", ["loc", [null, [10, 20], [10, 37]]]]], [], []], "showFilters", ["subexpr", "@mut", [["get", "_showFilters", ["loc", [null, [11, 14], [11, 26]]]]], [], []], "showFiltersInModal", ["subexpr", "@mut", [["get", "showFiltersInModal", ["loc", [null, [12, 21], [12, 39]]]]], [], []], "filters", ["subexpr", "@mut", [["get", "filters", ["loc", [null, [13, 10], [13, 17]]]]], [], []], "toggleStateFilters", ["subexpr", "action", ["toggleStateFilters"], [], ["loc", [null, [14, 21], [14, 50]]]], "resetFilters", ["subexpr", "action", ["resetFilters", ["get", "this.attrs.resetFilters", ["loc", [null, [15, 38], [15, 61]]]]], [], ["loc", [null, [15, 15], [15, 62]]]], "filterButton", ["subexpr", "@mut", [["get", "filterButton", ["loc", [null, [16, 15], [16, 27]]]]], [], []], "filterText", ["subexpr", "@mut", [["get", "filterText", ["loc", [null, [17, 13], [17, 23]]]]], [], []], "buttonClass", ["subexpr", "@mut", [["get", "buttonClass", ["loc", [null, [18, 14], [18, 25]]]]], [], []], "enableDeleteButton", ["subexpr", "not", [["get", "readonly", ["loc", [null, [19, 26], [19, 34]]]]], [], ["loc", [null, [19, 21], [19, 35]]]], "inLookup", ["subexpr", "eq", [["get", "componentMode", ["loc", [null, [20, 15], [20, 28]]]], "lookupform"], [], ["loc", [null, [20, 11], [20, 42]]]], "componentName", ["subexpr", "@mut", [["get", "componentName", ["loc", [null, [21, 16], [21, 29]]]]], [], []], "lookupComponentName", ["subexpr", "@mut", [["get", "lookupComponentName", ["loc", [null, [22, 22], [22, 41]]]]], [], []], "modelController", ["subexpr", "@mut", [["get", "currentController", ["loc", [null, [23, 18], [23, 35]]]]], [], []], "customButtonAction", "customButtonAction", "customButtons", ["subexpr", "@mut", [["get", "customButtons", ["loc", [null, [25, 16], [25, 29]]]]], [], []], "editFormRoute", ["subexpr", "@mut", [["get", "editFormRoute", ["loc", [null, [26, 16], [26, 29]]]]], [], []], "showConfigDialog", "showConfigDialog", "showAdvLimitDialog", "showConfigDialog", "confirmDeleteRows", ["subexpr", "@mut", [["get", "confirmDeleteRows", ["loc", [null, [29, 20], [29, 37]]]]], [], []], "inHierarchicalMode", ["subexpr", "@mut", [["get", "inHierarchicalMode", ["loc", [null, [30, 21], [30, 39]]]]], [], []], "inExpandMode", ["subexpr", "@mut", [["get", "inExpandMode", ["loc", [null, [31, 15], [31, 27]]]]], [], []], "availableHierarchicalMode", ["subexpr", "@mut", [["get", "_availableHierarchicalMode", ["loc", [null, [32, 28], [32, 54]]]]], [], []], "availableCollExpandMode", ["subexpr", "@mut", [["get", "availableCollExpandMode", ["loc", [null, [33, 26], [33, 49]]]]], [], []], "switchHierarchicalMode", ["subexpr", "action", ["switchHierarchicalMode"], [], ["loc", [null, [34, 25], [34, 58]]]], "switchExpandMode", ["subexpr", "action", ["switchExpandMode"], [], ["loc", [null, [35, 19], [35, 46]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [36, 11], [36, 19]]]]], [], []]], ["loc", [null, [1, 0], [37, 2]]]], ["block", "if", [["subexpr", "or", [["subexpr", "not", [["get", "inHierarchicalMode", ["loc", [null, [38, 15], [38, 33]]]]], [], ["loc", [null, [38, 10], [38, 34]]]], ["get", "hierarchyPaging", ["loc", [null, [38, 35], [38, 50]]]]], [], ["loc", [null, [38, 6], [38, 51]]]]], [], 0, null, ["loc", [null, [38, 0], [77, 7]]]], ["inline", "object-list-view", [], ["placeholder", ["subexpr", "@mut", [["get", "placeholder", ["loc", [null, [79, 14], [79, 25]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [80, 11], [80, 19]]]]], [], []], "columnsWidthAutoresize", ["subexpr", "@mut", [["get", "columnsWidthAutoresize", ["loc", [null, [81, 25], [81, 47]]]]], [], []], "minAutoColumnWidth", ["subexpr", "@mut", [["get", "minAutoColumnWidth", ["loc", [null, [82, 21], [82, 39]]]]], [], []], "buttonClass", ["subexpr", "@mut", [["get", "buttonClass", ["loc", [null, [83, 14], [83, 25]]]]], [], []], "tableStriped", ["subexpr", "@mut", [["get", "tableStriped", ["loc", [null, [84, 15], [84, 27]]]]], [], []], "customTableClass", ["subexpr", "@mut", [["get", "customTableClass", ["loc", [null, [85, 19], [85, 35]]]]], [], []], "cellComponent", ["subexpr", "@mut", [["get", "cellComponent", ["loc", [null, [86, 16], [86, 29]]]]], [], []], "singleColumnCellComponent", ["subexpr", "@mut", [["get", "singleColumnCellComponent", ["loc", [null, [87, 28], [87, 53]]]]], [], []], "singleColumnHeaderTitle", ["subexpr", "@mut", [["get", "singleColumnHeaderTitle", ["loc", [null, [88, 26], [88, 49]]]]], [], []], "createNewByPrototype", ["subexpr", "action", ["createNewByPrototype"], [], ["loc", [null, [89, 23], [89, 54]]]], "showValidationMessagesInRow", ["subexpr", "and", [["subexpr", "not", [["get", "readonly", ["loc", [null, [90, 40], [90, 48]]]]], [], ["loc", [null, [90, 35], [90, 49]]]], ["get", "showValidationMessagesInRow", ["loc", [null, [90, 50], [90, 77]]]]], [], ["loc", [null, [90, 30], [90, 78]]]], "showAsteriskInRow", ["subexpr", "@mut", [["get", "showAsteriskInRow", ["loc", [null, [91, 20], [91, 37]]]]], [], []], "showCheckBoxInRow", ["subexpr", "@mut", [["get", "showCheckBoxInRow", ["loc", [null, [92, 20], [92, 37]]]]], [], []], "showEditButtonInRow", ["subexpr", "@mut", [["get", "showEditButtonInRow", ["loc", [null, [93, 22], [93, 41]]]]], [], []], "showPrototypeButtonInRow", ["subexpr", "@mut", [["get", "showPrototypeButtonInRow", ["loc", [null, [94, 27], [94, 51]]]]], [], []], "showDeleteButtonInRow", ["subexpr", "@mut", [["get", "showDeleteButtonInRow", ["loc", [null, [95, 24], [95, 45]]]]], [], []], "showEditMenuItemInRow", ["subexpr", "@mut", [["get", "showEditMenuItemInRow", ["loc", [null, [96, 24], [96, 45]]]]], [], []], "showPrototypeMenuItemInRow", ["subexpr", "@mut", [["get", "showPrototypeMenuItemInRow", ["loc", [null, [97, 29], [97, 55]]]]], [], []], "showDeleteMenuItemInRow", ["subexpr", "@mut", [["get", "showDeleteMenuItemInRow", ["loc", [null, [98, 26], [98, 49]]]]], [], []], "sendMenuItemAction", ["subexpr", "action", ["sendMenuItemAction"], [], ["loc", [null, [99, 21], [99, 50]]]], "menuInRowAdditionalItems", ["subexpr", "@mut", [["get", "menuInRowAdditionalItems", ["loc", [null, [100, 27], [100, 51]]]]], [], []], "rowClickable", ["subexpr", "and", [["subexpr", "not", [["get", "readonly", ["loc", [null, [101, 25], [101, 33]]]]], [], ["loc", [null, [101, 20], [101, 34]]]], ["get", "rowClickable", ["loc", [null, [101, 35], [101, 47]]]]], [], ["loc", [null, [101, 15], [101, 48]]]], "orderable", ["subexpr", "@mut", [["get", "orderable", ["loc", [null, [102, 12], [102, 21]]]]], [], []], "sorting", ["subexpr", "@mut", [["get", "sorting", ["loc", [null, [103, 10], [103, 17]]]]], [], []], "immediateDelete", true, "modelName", ["subexpr", "@mut", [["get", "modelName", ["loc", [null, [105, 12], [105, 21]]]]], [], []], "modelProjection", ["subexpr", "@mut", [["get", "modelProjection", ["loc", [null, [106, 18], [106, 33]]]]], [], []], "content", ["subexpr", "@mut", [["get", "content", ["loc", [null, [107, 10], [107, 17]]]]], [], []], "sortByColumn", ["subexpr", "action", [["subexpr", "if", [["get", "this.attrs.sortByColumn", ["loc", [null, [108, 27], [108, 50]]]], ["get", "this.attrs.sortByColumn", ["loc", [null, [108, 51], [108, 74]]]], "sortByColumn"], [], ["loc", [null, [108, 23], [108, 90]]]]], [], ["loc", [null, [108, 15], [108, 91]]]], "addColumnToSorting", ["subexpr", "action", [["subexpr", "if", [["get", "this.attrs.addColumnToSorting", ["loc", [null, [109, 33], [109, 62]]]], ["get", "this.attrs.addColumnToSorting", ["loc", [null, [109, 63], [109, 92]]]], "addColumnToSorting"], [], ["loc", [null, [109, 29], [109, 114]]]]], [], ["loc", [null, [109, 21], [109, 115]]]], "enableFilters", ["subexpr", "@mut", [["get", "enableFilters", ["loc", [null, [110, 16], [110, 29]]]]], [], []], "showFilters", ["subexpr", "@mut", [["get", "_showFilters", ["loc", [null, [111, 14], [111, 26]]]]], [], []], "showFiltersInModal", ["subexpr", "@mut", [["get", "showFiltersInModal", ["loc", [null, [112, 21], [112, 39]]]]], [], []], "filters", ["subexpr", "@mut", [["get", "filters", ["loc", [null, [113, 10], [113, 17]]]]], [], []], "applyFilters", ["subexpr", "action", [["subexpr", "if", [["get", "applyFilters", ["loc", [null, [114, 27], [114, 39]]]], ["get", "applyFilters", ["loc", [null, [114, 40], [114, 52]]]], "applyFilters"], [], ["loc", [null, [114, 23], [114, 68]]]]], [], ["loc", [null, [114, 15], [114, 69]]]], "componentForFilter", ["subexpr", "@mut", [["get", "componentForFilter", ["loc", [null, [115, 21], [115, 39]]]]], [], []], "componentForFilterByCondition", ["subexpr", "@mut", [["get", "componentForFilterByCondition", ["loc", [null, [116, 32], [116, 61]]]]], [], []], "conditionsByType", ["subexpr", "@mut", [["get", "conditionsByType", ["loc", [null, [117, 19], [117, 35]]]]], [], []], "filterByAnyMatch", ["subexpr", "action", [["subexpr", "if", [["get", "this.attrs.filterByAnyMatch", ["loc", [null, [118, 31], [118, 58]]]], ["get", "this.attrs.filterByAnyMatch", ["loc", [null, [118, 59], [118, 86]]]], "filterByAnyMatch"], [], ["loc", [null, [118, 27], [118, 106]]]]], [], ["loc", [null, [118, 19], [118, 107]]]], "filterByAnyWord", ["subexpr", "@mut", [["get", "filterByAnyWord", ["loc", [null, [119, 18], [119, 33]]]]], [], []], "filterByAllWords", ["subexpr", "@mut", [["get", "filterByAllWords", ["loc", [null, [120, 19], [120, 35]]]]], [], []], "configurateRow", ["subexpr", "@mut", [["get", "this.attrs.configurateRow", ["loc", [null, [121, 17], [121, 42]]]]], [], []], "configurateSelectedRows", ["subexpr", "@mut", [["get", "this.attrs.configurateSelectedRows", ["loc", [null, [122, 26], [122, 60]]]]], [], []], "confirmDeleteRow", ["subexpr", "@mut", [["get", "confirmDeleteRow", ["loc", [null, [123, 19], [123, 35]]]]], [], []], "beforeDeleteRecord", ["subexpr", "@mut", [["get", "beforeDeleteRecord", ["loc", [null, [124, 21], [124, 39]]]]], [], []], "beforeDeleteAllRecords", ["subexpr", "@mut", [["get", "beforeDeleteAllRecords", ["loc", [null, [125, 25], [125, 47]]]]], [], []], "action", "objectListViewRowClick", "componentName", ["subexpr", "@mut", [["get", "componentName", ["loc", [null, [127, 16], [127, 29]]]]], [], []], "allowColumnResize", ["subexpr", "@mut", [["get", "allowColumnResize", ["loc", [null, [128, 20], [128, 37]]]]], [], []], "selectedRecord", ["subexpr", "@mut", [["get", "selectedRecord", ["loc", [null, [129, 17], [129, 31]]]]], [], []], "notUseUserSettings", ["subexpr", "@mut", [["get", "notUseUserSettings", ["loc", [null, [130, 21], [130, 39]]]]], [], []], "hierarchicalIndent", ["subexpr", "@mut", [["get", "hierarchicalIndent", ["loc", [null, [131, 21], [131, 39]]]]], [], []], "inHierarchicalMode", ["subexpr", "@mut", [["get", "inHierarchicalMode", ["loc", [null, [132, 21], [132, 39]]]]], [], []], "inExpandMode", ["subexpr", "@mut", [["get", "inExpandMode", ["loc", [null, [133, 15], [133, 27]]]]], [], []], "disableHierarchicalMode", ["subexpr", "if", [["get", "hierarchyByAttribute", ["loc", [null, [134, 30], [134, 50]]]], true, ["get", "disableHierarchicalMode", ["loc", [null, [134, 56], [134, 79]]]]], [], ["loc", [null, [134, 26], [134, 80]]]], "loadRecords", ["subexpr", "action", ["loadRecords"], [], ["loc", [null, [135, 14], [135, 36]]]], "availableHierarchicalMode", ["subexpr", "action", ["availableHierarchicalMode"], [], ["loc", [null, [136, 28], [136, 64]]]], "hierarchyAttribute", ["subexpr", "@mut", [["get", "hierarchyAttribute", ["loc", [null, [137, 21], [137, 39]]]]], [], []], "useRowByRowLoading", ["subexpr", "@mut", [["get", "useRowByRowLoading", ["loc", [null, [138, 21], [138, 39]]]]], [], []], "useRowByRowLoadingProgress", ["subexpr", "@mut", [["get", "useRowByRowLoadingProgress", ["loc", [null, [139, 29], [139, 55]]]]], [], []], "eventsBus", ["subexpr", "@mut", [["get", "eventsBus", ["loc", [null, [140, 12], [140, 21]]]]], [], []], "onEditForm", ["subexpr", "@mut", [["get", "onEditForm", ["loc", [null, [141, 13], [141, 23]]]]], [], []], "customButtonInRowAction", "customButtonInRowAction", "customButtonsInRow", ["subexpr", "@mut", [["get", "customButtonsInRow", ["loc", [null, [143, 21], [143, 39]]]]], [], []], "defaultSortingButton", ["subexpr", "@mut", [["get", "defaultSortingButton", ["loc", [null, [144, 23], [144, 43]]]]], [], []], "defaultLeftPadding", ["subexpr", "@mut", [["get", "defaultLeftPadding", ["loc", [null, [145, 21], [145, 39]]]]], [], []], "overflowedComponents", ["subexpr", "@mut", [["get", "overflowedComponents", ["loc", [null, [146, 23], [146, 43]]]]], [], []], "fixedHeader", ["subexpr", "@mut", [["get", "fixedHeader", ["loc", [null, [147, 14], [147, 25]]]]], [], []], "recordsTotalCount", ["subexpr", "@mut", [["get", "recordsTotalCount", ["loc", [null, [148, 20], [148, 37]]]]], [], []]], ["loc", [null, [78, 0], [149, 2]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define("dummy/templates/mobile/components/flexberry-simpleolv",["exports"],function(exports){exports["default"] = Ember.HTMLBars.template((function(){var child0=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":2,"column":2},"end":{"line":11,"column":2}},"moduleName":"dummy/templates/mobile/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("    ");dom.appendChild(el0,el1);var el1=dom.createElement("button");dom.setAttribute(el1,"type","button");var el2=dom.createTextNode("\n        ");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n        ");dom.appendChild(el1,el2);var el2=dom.createElement("i");dom.setAttribute(el2,"class","refresh icon");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n    ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element42=dom.childAt(fragment,[1]);var morphs=new Array(4);morphs[0] = dom.createAttrMorph(element42,'class');morphs[1] = dom.createAttrMorph(element42,'title');morphs[2] = dom.createElementMorph(element42);morphs[3] = dom.createMorphAt(element42,1,1);return morphs;},statements:[["attribute","class",["concat",["ui refresh-button ",["get","buttonClass",["loc",[null,[5,33],[5,44]]]]," button"]]],["attribute","title",["subexpr","t",["components.olv-toolbar.refresh-button-text"],[],["loc",[null,[6,12],[6,62]]]]],["element","action",["refresh"],[],["loc",[null,[7,6],[7,26]]]],["inline","t",["components.olv-toolbar.refresh-button-text"],[],["loc",[null,[8,8],[8,58]]]]],locals:[],templates:[]};})();var child1=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":12,"column":2},"end":{"line":20,"column":2}},"moduleName":"dummy/templates/mobile/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("    ");dom.appendChild(el0,el1);var el1=dom.createElement("button");dom.setAttribute(el1,"type","button");var el2=dom.createTextNode("\n        ");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n    ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element41=dom.childAt(fragment,[1]);var morphs=new Array(4);morphs[0] = dom.createAttrMorph(element41,'class');morphs[1] = dom.createAttrMorph(element41,'title');morphs[2] = dom.createElementMorph(element41);morphs[3] = dom.createMorphAt(element41,1,1);return morphs;},statements:[["attribute","class",["concat",["ui create-button ",["get","buttonClass",["loc",[null,[15,32],[15,43]]]]," ",["subexpr","if",[["get","readonly",["loc",[null,[15,51],[15,59]]]],"disabled",["subexpr","if",[["get","enableCreateNewButton",["loc",[null,[15,75],[15,96]]]],"","disabled"],[],["loc",[null,[15,71],[15,111]]]]],[],["loc",[null,[15,46],[15,113]]]]," button"]]],["attribute","title",["subexpr","t",["components.olv-toolbar.add-button-text"],[],["loc",[null,[16,12],[16,58]]]]],["element","action",["createNew"],[],["loc",[null,[17,6],[17,28]]]],["inline","t",["components.olv-toolbar.add-button-text"],[],["loc",[null,[18,8],[18,54]]]]],locals:[],templates:[]};})();var child2=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":21,"column":2},"end":{"line":29,"column":2}},"moduleName":"dummy/templates/mobile/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("    ");dom.appendChild(el0,el1);var el1=dom.createElement("button");dom.setAttribute(el1,"type","button");var el2=dom.createTextNode("\n        ");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n    ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element40=dom.childAt(fragment,[1]);var morphs=new Array(4);morphs[0] = dom.createAttrMorph(element40,'class');morphs[1] = dom.createAttrMorph(element40,'title');morphs[2] = dom.createElementMorph(element40);morphs[3] = dom.createMorphAt(element40,1,1);return morphs;},statements:[["attribute","class",["concat",["ui delete-button ",["get","buttonClass",["loc",[null,[24,32],[24,43]]]]," ",["subexpr","if",[["get","readonly",["loc",[null,[24,51],[24,59]]]],"disabled",["subexpr","if",[["get","isDeleteButtonEnabled",["loc",[null,[24,75],[24,96]]]],"","disabled"],[],["loc",[null,[24,71],[24,111]]]]],[],["loc",[null,[24,46],[24,113]]]]," button"]]],["attribute","title",["subexpr","t",["components.olv-toolbar.delete-button-text"],[],["loc",[null,[25,12],[25,61]]]]],["element","action",["delete"],[],["loc",[null,[26,7],[26,26]]]],["inline","t",["components.olv-toolbar.delete-button-text"],[],["loc",[null,[27,8],[27,57]]]]],locals:[],templates:[]};})();var child3=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":30,"column":2},"end":{"line":38,"column":2}},"moduleName":"dummy/templates/mobile/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("    ");dom.appendChild(el0,el1);var el1=dom.createElement("button");dom.setAttribute(el1,"type","button");var el2=dom.createTextNode("\n        ");dom.appendChild(el1,el2);var el2=dom.createElement("i");dom.setAttribute(el2,"class","sitemap icon");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n    ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element39=dom.childAt(fragment,[1]);var morphs=new Array(3);morphs[0] = dom.createAttrMorph(element39,'class');morphs[1] = dom.createAttrMorph(element39,'title');morphs[2] = dom.createElementMorph(element39);return morphs;},statements:[["attribute","class",["concat",["ui button icon hierarchical-button ",["get","buttonClass",["loc",[null,[33,50],[33,61]]]]," ",["subexpr","if",[["get","inHierarchicalMode",["loc",[null,[33,69],[33,87]]]],"active"],[],["loc",[null,[33,64],[33,98]]]]]]],["attribute","title",["subexpr","t",["components.olv-toolbar.hierarchy-button-text"],[],["loc",[null,[34,12],[34,64]]]]],["element","action",["switchHierarchicalMode"],[],["loc",[null,[35,6],[35,41]]]]],locals:[],templates:[]};})();var child4=(function(){var child0=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":48,"column":6},"end":{"line":57,"column":6}},"moduleName":"dummy/templates/mobile/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("        ");dom.appendChild(el0,el1);var el1=dom.createElement("div");dom.setAttribute(el1,"class","or");dom.setAttribute(el1,"data-text","•");dom.appendChild(el0,el1);var el1=dom.createTextNode("\n        ");dom.appendChild(el0,el1);var el1=dom.createElement("button");dom.setAttribute(el1,"type","button");var el2=dom.createTextNode("\n            ");dom.appendChild(el1,el2);var el2=dom.createElement("i");dom.setAttribute(el2,"class","remove icon");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n        ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element36=dom.childAt(fragment,[3]);var morphs=new Array(3);morphs[0] = dom.createAttrMorph(element36,'class');morphs[1] = dom.createAttrMorph(element36,'title');morphs[2] = dom.createElementMorph(element36);return morphs;},statements:[["attribute","class",["concat",["ui button removeFilter-button ",["get","buttonClass",["loc",[null,[52,49],[52,60]]]]]]],["attribute","title",["subexpr","t",["components.olv-toolbar.remove-filter-button-text"],[],["loc",[null,[53,16],[53,72]]]]],["element","action",["resetFilters",["get","this.attrs.resetFilters",["loc",[null,[54,34],[54,57]]]]],[],["loc",[null,[54,10],[54,59]]]]],locals:[],templates:[]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":39,"column":2},"end":{"line":59,"column":2}},"moduleName":"dummy/templates/mobile/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("    ");dom.appendChild(el0,el1);var el1=dom.createElement("div");dom.setAttribute(el1,"class","ui icon buttons filter-active");var el2=dom.createTextNode("\n      ");dom.appendChild(el1,el2);var el2=dom.createElement("button");dom.setAttribute(el2,"type","button");var el3=dom.createTextNode("\n          ");dom.appendChild(el2,el3);var el3=dom.createElement("i");dom.setAttribute(el3,"class","filter icon");dom.appendChild(el2,el3);var el3=dom.createTextNode("\n      ");dom.appendChild(el2,el3);dom.appendChild(el1,el2);var el2=dom.createTextNode("\n");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("    ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element37=dom.childAt(fragment,[1]);var element38=dom.childAt(element37,[1]);var morphs=new Array(4);morphs[0] = dom.createAttrMorph(element38,'class');morphs[1] = dom.createAttrMorph(element38,'title');morphs[2] = dom.createElementMorph(element38);morphs[3] = dom.createMorphAt(element37,3,3);return morphs;},statements:[["attribute","class",["concat",["ui button ",["get","buttonClass",["loc",[null,[43,27],[43,38]]]]," ",["subexpr","if",[["get","showFilters",["loc",[null,[43,46],[43,57]]]],"active"],[],["loc",[null,[43,41],[43,68]]]]]]],["attribute","title",["subexpr","t",["components.olv-toolbar.filter-button-text"],[],["loc",[null,[44,14],[44,63]]]]],["element","action",["toggleStateFilters"],[],["loc",[null,[45,8],[45,39]]]],["block","if",[["get","filters",["loc",[null,[48,12],[48,19]]]]],[],0,null,["loc",[null,[48,6],[57,13]]]]],locals:[],templates:[child0]};})();var child5=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":60,"column":2},"end":{"line":85,"column":2}},"moduleName":"dummy/templates/mobile/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("    ");dom.appendChild(el0,el1);var el1=dom.createElement("div");dom.setAttribute(el1,"class","ui action input");var el2=dom.createTextNode("\n      ");dom.appendChild(el1,el2);var el2=dom.createElement("div");dom.setAttribute(el2,"class","block-action-input");var el3=dom.createTextNode("\n        ");dom.appendChild(el2,el3);var el3=dom.createElement("input");dom.setAttribute(el3,"type","text");dom.appendChild(el2,el3);var el3=dom.createTextNode("\n      ");dom.appendChild(el2,el3);dom.appendChild(el1,el2);var el2=dom.createTextNode("\n      ");dom.appendChild(el1,el2);var el2=dom.createElement("button");dom.setAttribute(el2,"type","button");var el3=dom.createTextNode("\n          ");dom.appendChild(el2,el3);var el3=dom.createElement("i");dom.setAttribute(el3,"class","search icon");dom.appendChild(el2,el3);var el3=dom.createTextNode("\n      ");dom.appendChild(el2,el3);dom.appendChild(el1,el2);var el2=dom.createTextNode("\n      ");dom.appendChild(el1,el2);var el2=dom.createElement("button");dom.setAttribute(el2,"type","button");var el3=dom.createTextNode("\n          ");dom.appendChild(el2,el3);var el3=dom.createElement("i");dom.setAttribute(el3,"class","remove icon");dom.appendChild(el2,el3);var el3=dom.createTextNode("\n      ");dom.appendChild(el2,el3);dom.appendChild(el1,el2);var el2=dom.createTextNode("\n    ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element32=dom.childAt(fragment,[1]);var element33=dom.childAt(element32,[1,1]);var element34=dom.childAt(element32,[3]);var element35=dom.childAt(element32,[5]);var morphs=new Array(9);morphs[0] = dom.createAttrMorph(element33,'value');morphs[1] = dom.createAttrMorph(element33,'placeholder');morphs[2] = dom.createAttrMorph(element33,'onkeyup');morphs[3] = dom.createAttrMorph(element34,'class');morphs[4] = dom.createAttrMorph(element34,'title');morphs[5] = dom.createElementMorph(element34);morphs[6] = dom.createAttrMorph(element35,'class');morphs[7] = dom.createAttrMorph(element35,'title');morphs[8] = dom.createElementMorph(element35);return morphs;},statements:[["attribute","value",["get","filterByAnyMatchText",["loc",[null,[65,18],[65,38]]]]],["attribute","placeholder",["subexpr","t",["components.olv-toolbar.filter-by-any-match-placeholder"],[],["loc",[null,[66,22],[66,84]]]]],["attribute","onkeyup",["subexpr","action",["filterByAnyMatch"],[],["loc",[null,[67,18],[67,47]]]]],["attribute","class",["concat",["ui ",["get","buttonClass",["loc",[null,[72,20],[72,31]]]]," icon button search-button"]]],["attribute","title",["subexpr","t",["components.olv-toolbar.search-button-text"],[],["loc",[null,[73,14],[73,63]]]]],["element","action",["filterByAnyMatch"],[],["loc",[null,[74,8],[74,37]]]],["attribute","class",["concat",["ui ",["get","buttonClass",["loc",[null,[79,20],[79,31]]]]," icon button clear-search-button"]]],["attribute","title",["subexpr","t",["components.olv-toolbar.clear-search-button-text"],[],["loc",[null,[80,14],[80,69]]]]],["element","action",["removeFilter"],[],["loc",[null,[81,8],[81,33]]]]],locals:[],templates:[]};})();var child6=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":86,"column":2},"end":{"line":100,"column":2}},"moduleName":"dummy/templates/mobile/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("    ");dom.appendChild(el0,el1);var el1=dom.createElement("div");dom.setAttribute(el1,"class","ui buttons export-config");var el2=dom.createTextNode("\n      ");dom.appendChild(el1,el2);var el2=dom.createElement("button");dom.setAttribute(el2,"type","button");var el3=dom.createTextNode("\n          ");dom.appendChild(el2,el3);var el3=dom.createElement("i");dom.setAttribute(el3,"class","large file excel outline icon");dom.appendChild(el2,el3);var el3=dom.createTextNode("\n      ");dom.appendChild(el2,el3);dom.appendChild(el1,el2);var el2=dom.createTextNode("\n      ");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n    ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element30=dom.childAt(fragment,[1]);var element31=dom.childAt(element30,[1]);var morphs=new Array(4);morphs[0] = dom.createAttrMorph(element31,'class');morphs[1] = dom.createAttrMorph(element31,'title');morphs[2] = dom.createElementMorph(element31);morphs[3] = dom.createMorphAt(element30,3,3);return morphs;},statements:[["attribute","class",["concat",["ui button icon export-button ",["get","buttonClass",["loc",[null,[90,46],[90,57]]]]]]],["attribute","title",["subexpr","t",["components.olv-toolbar.export-excel-button-text"],[],["loc",[null,[91,14],[91,69]]]]],["element","action",["showExportDialog"],[],["loc",[null,[92,8],[92,37]]]],["inline","flexberry-menu",[],["items",["subexpr","@mut",[["get","exportExcelItems",["loc",[null,[96,14],[96,30]]]]],[],[]],"onItemClick",["subexpr","action",["onExportMenuItemClick"],[],["loc",[null,[97,20],[97,52]]]]],["loc",[null,[95,6],[98,8]]]]],locals:[],templates:[]};})();var child7=(function(){var child0=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":110,"column":6},"end":{"line":115,"column":6}},"moduleName":"dummy/templates/mobile/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("        ");dom.appendChild(el0,el1);var el1=dom.createComment("");dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);return morphs;},statements:[["inline","flexberry-menu",[],["items",["subexpr","@mut",[["get","colsSettingsItems",["loc",[null,[112,16],[112,33]]]]],[],[]],"onItemClick",["subexpr","action",["onMenuItemClick"],[],["loc",[null,[113,22],[113,48]]]]],["loc",[null,[111,8],[114,10]]]]],locals:[],templates:[]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":101,"column":2},"end":{"line":117,"column":2}},"moduleName":"dummy/templates/mobile/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("    ");dom.appendChild(el0,el1);var el1=dom.createElement("div");dom.setAttribute(el1,"class","ui buttons cols-config");var el2=dom.createTextNode("\n      ");dom.appendChild(el1,el2);var el2=dom.createElement("button");dom.setAttribute(el2,"type","button");dom.setAttribute(el2,"class","ui icon button config-button");var el3=dom.createTextNode("\n          ");dom.appendChild(el2,el3);var el3=dom.createElement("i");dom.setAttribute(el3,"class","large table icon");dom.appendChild(el2,el3);var el3=dom.createTextNode("\n      ");dom.appendChild(el2,el3);dom.appendChild(el1,el2);var el2=dom.createTextNode("\n");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("    ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element28=dom.childAt(fragment,[1]);var element29=dom.childAt(element28,[1]);var morphs=new Array(3);morphs[0] = dom.createAttrMorph(element29,'title');morphs[1] = dom.createElementMorph(element29);morphs[2] = dom.createMorphAt(element28,3,3);return morphs;},statements:[["attribute","title",["subexpr","t",["components.colsconfig-dialog-content.title"],[],["loc",[null,[106,14],[106,64]]]]],["element","action",["showConfigDialog"],[],["loc",[null,[107,8],[107,37]]]],["block","if",[["get","colsSettingsItems",["loc",[null,[110,12],[110,29]]]]],[],0,null,["loc",[null,[110,6],[115,13]]]]],locals:[],templates:[child0]};})();var child8=(function(){var child0=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":125,"column":6},"end":{"line":128,"column":6}},"moduleName":"dummy/templates/mobile/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("        ");dom.appendChild(el0,el1);var el1=dom.createElement("i");dom.appendChild(el0,el1);var el1=dom.createTextNode("\n        ");dom.appendChild(el0,el1);var el1=dom.createComment("");dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element26=dom.childAt(fragment,[1]);var morphs=new Array(2);morphs[0] = dom.createAttrMorph(element26,'class');morphs[1] = dom.createMorphAt(fragment,3,3,contextualElement);return morphs;},statements:[["attribute","class",["get","customButton.iconClasses",["loc",[null,[126,19],[126,43]]]]],["content","customButton.buttonName",["loc",[null,[127,8],[127,35]]]]],locals:[],templates:[]};})();var child1=(function(){var child0=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":128,"column":6},"end":{"line":130,"column":6}},"moduleName":"dummy/templates/mobile/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("        ");dom.appendChild(el0,el1);var el1=dom.createComment("");dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);return morphs;},statements:[["content","customButton.buttonName",["loc",[null,[129,8],[129,35]]]]],locals:[],templates:[]};})();var child1=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":130,"column":6},"end":{"line":132,"column":6}},"moduleName":"dummy/templates/mobile/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("        ");dom.appendChild(el0,el1);var el1=dom.createComment("");dom.appendChild(el0,el1);var el1=dom.createTextNode("\n      ");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);return morphs;},statements:[["inline","t",["components.olv-toolbar.custom-button-text"],[],["loc",[null,[131,8],[131,57]]]]],locals:[],templates:[]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":128,"column":6},"end":{"line":132,"column":6}},"moduleName":"dummy/templates/mobile/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createComment("");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);dom.insertBoundary(fragment,0);dom.insertBoundary(fragment,null);return morphs;},statements:[["block","if",[["get","customButton.buttonName",["loc",[null,[128,16],[128,39]]]]],[],0,1,["loc",[null,[128,6],[132,6]]]]],locals:[],templates:[child0,child1]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":118,"column":2},"end":{"line":134,"column":2}},"moduleName":"dummy/templates/mobile/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:1,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("    ");dom.appendChild(el0,el1);var el1=dom.createElement("button");dom.setAttribute(el1,"type","button");var el2=dom.createTextNode("\n");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("    ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element27=dom.childAt(fragment,[1]);var morphs=new Array(5);morphs[0] = dom.createAttrMorph(element27,'class');morphs[1] = dom.createAttrMorph(element27,'title');morphs[2] = dom.createAttrMorph(element27,'disabled');morphs[3] = dom.createElementMorph(element27);morphs[4] = dom.createMorphAt(element27,1,1);return morphs;},statements:[["attribute","class",["concat",["ui ",["subexpr","if",[["get","customButton.buttonClasses",["loc",[null,[121,21],[121,47]]]],["get","customButton.buttonClasses",["loc",[null,[121,48],[121,74]]]]],[],["loc",[null,[121,16],[121,76]]]]," button"]]],["attribute","title",["subexpr","if",[["get","customButton.buttonTitle",["loc",[null,[122,17],[122,41]]]],["get","customButton.buttonTitle",["loc",[null,[122,42],[122,66]]]]],[],["loc",[null,[122,12],[122,68]]]]],["attribute","disabled",["get","customButton.disabled",["loc",[null,[123,17],[123,38]]]]],["element","action",["customButtonAction",["get","customButton.buttonAction",["loc",[null,[124,36],[124,61]]]]],[],["loc",[null,[124,6],[124,63]]]],["block","if",[["get","customButton.iconClasses",["loc",[null,[125,12],[125,36]]]]],[],0,1,["loc",[null,[125,6],[132,13]]]]],locals:["customButton"],templates:[child0,child1]};})();var child9=(function(){var child0=(function(){var child0=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":186,"column":14},"end":{"line":194,"column":14}},"moduleName":"dummy/templates/mobile/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                ");dom.appendChild(el0,el1);var el1=dom.createElement("button");dom.setAttribute(el1,"type","button");var el2=dom.createTextNode("\n                    ");dom.appendChild(el1,el2);var el2=dom.createElement("i");dom.setAttribute(el2,"class","sort icon");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n                ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element23=dom.childAt(fragment,[1]);var morphs=new Array(3);morphs[0] = dom.createAttrMorph(element23,'class');morphs[1] = dom.createAttrMorph(element23,'title');morphs[2] = dom.createElementMorph(element23);return morphs;},statements:[["attribute","class",["concat",["ui clear-sorting-button-mobile ",["get","buttonClass",["loc",[null,[189,58],[189,69]]]]," button"]]],["attribute","title",["subexpr","t",["components.olv-toolbar.clear-sorting-button-text"],[],["loc",[null,[190,24],[190,80]]]]],["element","action",["clearSorting"],["on","touchEnd"],["loc",[null,[191,18],[191,57]]]]],locals:[],templates:[]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":171,"column":12},"end":{"line":195,"column":12}},"moduleName":"dummy/templates/mobile/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("              ");dom.appendChild(el0,el1);var el1=dom.createElement("button");dom.setAttribute(el1,"type","button");var el2=dom.createTextNode("\n                  ");dom.appendChild(el1,el2);var el2=dom.createElement("i");dom.setAttribute(el2,"class","check-square-o icon");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n              ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n              ");dom.appendChild(el0,el1);var el1=dom.createElement("button");dom.setAttribute(el1,"type","button");var el2=dom.createTextNode("\n                  ");dom.appendChild(el1,el2);var el2=dom.createElement("i");dom.setAttribute(el2,"class","check-all-square-o icon");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n              ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);var el1=dom.createComment("");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element24=dom.childAt(fragment,[1]);var element25=dom.childAt(fragment,[3]);var morphs=new Array(7);morphs[0] = dom.createAttrMorph(element24,'class');morphs[1] = dom.createAttrMorph(element24,'title');morphs[2] = dom.createElementMorph(element24);morphs[3] = dom.createAttrMorph(element25,'class');morphs[4] = dom.createAttrMorph(element25,'title');morphs[5] = dom.createElementMorph(element25);morphs[6] = dom.createMorphAt(fragment,5,5,contextualElement);dom.insertBoundary(fragment,null);return morphs;},statements:[["attribute","class",["concat",["ui check-all-at-page-button-mobile ",["get","buttonClass",["loc",[null,[174,60],[174,71]]]]," ",["subexpr","if",[["subexpr","or",[["get","readonly",["loc",[null,[174,83],[174,91]]]],["get","allSelect",["loc",[null,[174,92],[174,101]]]]],[],["loc",[null,[174,79],[174,102]]]],"disabled"],[],["loc",[null,[174,74],[174,115]]]]," button"]]],["attribute","title",["subexpr","t",["components.olv-toolbar.check-all-at-page-button-text"],[],["loc",[null,[175,22],[175,82]]]]],["element","action",["checkAllAtPage"],["on","touchEnd"],["loc",[null,[176,16],[176,57]]]],["attribute","class",["concat",["ui check-all-button-mobile ",["get","buttonClass",["loc",[null,[181,52],[181,63]]]]," ",["subexpr","if",[["get","allSelect",["loc",[null,[181,71],[181,80]]]],"activated"],[],["loc",[null,[181,66],[181,94]]]]," ",["subexpr","if",[["get","readonly",["loc",[null,[181,100],[181,108]]]],"disabled"],[],["loc",[null,[181,95],[181,121]]]]," button"]]],["attribute","title",["subexpr","t",["components.olv-toolbar.check-all-button-text"],[],["loc",[null,[182,22],[182,74]]]]],["element","action",["checkAll"],["on","touchEnd"],["loc",[null,[183,16],[183,51]]]],["block","if",[["get","defaultSortingButton",["loc",[null,[186,20],[186,40]]]]],[],0,null,["loc",[null,[186,14],[194,21]]]]],locals:[],templates:[child0]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":169,"column":8},"end":{"line":197,"column":8}},"moduleName":"dummy/templates/mobile/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("          ");dom.appendChild(el0,el1);var el1=dom.createElement("th");dom.setAttribute(el1,"class","object-list-view-operations collapsing");dom.setAttribute(el1,"data-olv-header-property-name","OlvRowToolbar");var el2=dom.createTextNode("\n");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("          ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(dom.childAt(fragment,[1]),1,1);return morphs;},statements:[["block","if",[["get","showCheckBoxInRow",["loc",[null,[171,18],[171,35]]]]],[],0,null,["loc",[null,[171,12],[195,19]]]]],locals:[],templates:[child0]};})();var child10=(function(){var child0=(function(){var child0=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":203,"column":16},"end":{"line":205,"column":16}},"moduleName":"dummy/templates/mobile/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                  ");dom.appendChild(el0,el1);var el1=dom.createComment("");dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);return morphs;},statements:[["inline","t",[["get","column.keyLocale",["loc",[null,[204,22],[204,38]]]]],[],["loc",[null,[204,18],[204,40]]]]],locals:[],templates:[]};})();var child1=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":205,"column":16},"end":{"line":207,"column":16}},"moduleName":"dummy/templates/mobile/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                  ");dom.appendChild(el0,el1);var el1=dom.createComment("");dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);return morphs;},statements:[["content","column.header",["loc",[null,[206,18],[206,35]]]]],locals:[],templates:[]};})();var child2=(function(){var child0=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":211,"column":20},"end":{"line":215,"column":20}},"moduleName":"dummy/templates/mobile/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                      ");dom.appendChild(el0,el1);var el1=dom.createElement("div");var el2=dom.createTextNode("\n                      ▲");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n                      ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element20=dom.childAt(fragment,[1]);var morphs=new Array(2);morphs[0] = dom.createAttrMorph(element20,'title');morphs[1] = dom.createMorphAt(element20,1,1);return morphs;},statements:[["attribute","title",["concat",[["subexpr","t",["components.object-list-view.sort-ascending"],[],["loc",[null,[212,34],[212,84]]]]]]],["content","column.sortNumber",["loc",[null,[213,23],[213,44]]]]],locals:[],templates:[]};})();var child1=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":215,"column":20},"end":{"line":219,"column":20}},"moduleName":"dummy/templates/mobile/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                      ");dom.appendChild(el0,el1);var el1=dom.createElement("div");var el2=dom.createTextNode("\n                      ▼");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n                      ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element19=dom.childAt(fragment,[1]);var morphs=new Array(2);morphs[0] = dom.createAttrMorph(element19,'title');morphs[1] = dom.createMorphAt(element19,1,1);return morphs;},statements:[["attribute","title",["concat",[["subexpr","t",["components.object-list-view.sort-descending"],[],["loc",[null,[216,34],[216,85]]]]]]],["content","column.sortNumber",["loc",[null,[217,23],[217,44]]]]],locals:[],templates:[]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":209,"column":16},"end":{"line":221,"column":16}},"moduleName":"dummy/templates/mobile/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                  ");dom.appendChild(el0,el1);var el1=dom.createElement("div");dom.setAttribute(el1,"style","float:right;");var el2=dom.createTextNode("\n");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("                  ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(dom.childAt(fragment,[1]),1,1);return morphs;},statements:[["block","if",[["get","column.sortAscending",["loc",[null,[211,26],[211,46]]]]],[],0,1,["loc",[null,[211,20],[219,27]]]]],locals:[],templates:[child0,child1]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":199,"column":10},"end":{"line":224,"column":10}},"moduleName":"dummy/templates/mobile/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("            ");dom.appendChild(el0,el1);var el1=dom.createElement("th");dom.setAttribute(el1,"class","dt-head-left me class");var el2=dom.createTextNode("\n              ");dom.appendChild(el1,el2);var el2=dom.createElement("div");var el3=dom.createTextNode("\n                ");dom.appendChild(el2,el3);var el3=dom.createElement("span");var el4=dom.createTextNode("\n");dom.appendChild(el3,el4);var el4=dom.createComment("");dom.appendChild(el3,el4);var el4=dom.createTextNode("                ");dom.appendChild(el3,el4);dom.appendChild(el2,el3);var el3=dom.createTextNode("\n");dom.appendChild(el2,el3);var el3=dom.createComment("");dom.appendChild(el2,el3);var el3=dom.createTextNode("              ");dom.appendChild(el2,el3);dom.appendChild(el1,el2);var el2=dom.createTextNode("\n            ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element21=dom.childAt(fragment,[1]);var element22=dom.childAt(element21,[1]);var morphs=new Array(5);morphs[0] = dom.createAttrMorph(element21,'onclick');morphs[1] = dom.createAttrMorph(element22,'data-olv-header-property-name');morphs[2] = dom.createAttrMorph(element22,'title');morphs[3] = dom.createMorphAt(dom.childAt(element22,[1]),1,1);morphs[4] = dom.createMorphAt(element22,3,3);return morphs;},statements:[["attribute","onclick",["subexpr","action",["headerCellClick",["get","column",["loc",[null,[200,82],[200,88]]]]],[],["loc",[null,[200,54],[200,91]]]]],["attribute","data-olv-header-property-name",["get","column.propName",["loc",[null,[201,51],[201,66]]]]],["attribute","title",["get","sortTitleCompute",["loc",[null,[201,77],[201,93]]]]],["block","if",[["get","column.keyLocale",["loc",[null,[203,22],[203,38]]]]],[],0,1,["loc",[null,[203,16],[207,23]]]],["block","if",[["get","column.sorted",["loc",[null,[209,22],[209,35]]]]],[],2,null,["loc",[null,[209,16],[221,23]]]]],locals:[],templates:[child0,child1,child2]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":198,"column":8},"end":{"line":225,"column":8}},"moduleName":"dummy/templates/mobile/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:1,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createComment("");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);dom.insertBoundary(fragment,0);dom.insertBoundary(fragment,null);return morphs;},statements:[["block","unless",[["get","column.hide",["loc",[null,[199,20],[199,31]]]]],[],0,null,["loc",[null,[199,10],[224,21]]]]],locals:["column"],templates:[child0]};})();var child11=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":226,"column":8},"end":{"line":228,"column":8}},"moduleName":"dummy/templates/mobile/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("          ");dom.appendChild(el0,el1);var el1=dom.createElement("th");dom.setAttribute(el1,"class","object-list-view-menu collapsing");dom.setAttribute(el1,"data-olv-header-property-name","OlvRowMenu");dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(){return [];},statements:[],locals:[],templates:[]};})();var child12=(function(){var child0=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":234,"column":10},"end":{"line":236,"column":10}},"moduleName":"dummy/templates/mobile/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("            ");dom.appendChild(el0,el1);var el1=dom.createElement("td");dom.setAttribute(el1,"rowspan","1");dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(){return [];},statements:[],locals:[],templates:[]};})();var child1=(function(){var child0=(function(){var child0=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":240,"column":16},"end":{"line":248,"column":16}},"moduleName":"dummy/templates/mobile/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                  ");dom.appendChild(el0,el1);var el1=dom.createComment("");dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);return morphs;},statements:[["inline","component",["flexberry-dropdown"],["value",["subexpr","@mut",[["get","column.filter.condition",["loc",[null,[242,26],[242,49]]]]],[],[]],"items",["subexpr","@mut",[["get","column.filter.conditions",["loc",[null,[243,26],[243,50]]]]],[],[]],"class","compact fluid","placeholder","","needChecksOnValue",false],["loc",[null,[241,18],[247,20]]]]],locals:[],templates:[]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":238,"column":12},"end":{"line":250,"column":12}},"moduleName":"dummy/templates/mobile/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("              ");dom.appendChild(el0,el1);var el1=dom.createElement("td");dom.setAttribute(el1,"class","overflowed-cell");var el2=dom.createTextNode("\n");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("              ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element16=dom.childAt(fragment,[1]);var morphs=new Array(2);morphs[0] = dom.createAttrMorph(element16,'style');morphs[1] = dom.createMorphAt(element16,1,1);return morphs;},statements:[["attribute","style",["get","defaultPaddingStyle",["loc",[null,[239,26],[239,45]]]]],["block","if",[["get","column.filter.conditions",["loc",[null,[240,22],[240,46]]]]],[],0,null,["loc",[null,[240,16],[248,23]]]]],locals:[],templates:[child0]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":237,"column":10},"end":{"line":251,"column":10}},"moduleName":"dummy/templates/mobile/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:1,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createComment("");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);dom.insertBoundary(fragment,0);dom.insertBoundary(fragment,null);return morphs;},statements:[["block","unless",[["get","column.hide",["loc",[null,[238,22],[238,33]]]]],[],0,null,["loc",[null,[238,12],[250,23]]]]],locals:["column"],templates:[child0]};})();var child2=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":252,"column":10},"end":{"line":254,"column":10}},"moduleName":"dummy/templates/mobile/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("            ");dom.appendChild(el0,el1);var el1=dom.createElement("td");dom.setAttribute(el1,"rowspan","1");dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(){return [];},statements:[],locals:[],templates:[]};})();var child3=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":257,"column":10},"end":{"line":259,"column":10}},"moduleName":"dummy/templates/mobile/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("            ");dom.appendChild(el0,el1);var el1=dom.createElement("td");dom.setAttribute(el1,"rowspan","1");dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(){return [];},statements:[],locals:[],templates:[]};})();var child4=(function(){var child0=(function(){var child0=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":263,"column":16},"end":{"line":282,"column":16}},"moduleName":"dummy/templates/mobile/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                  ");dom.appendChild(el0,el1);var el1=dom.createElement("div");dom.setAttribute(el1,"class","fluid action input ui");var el2=dom.createTextNode("\n                    ");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n                    ");dom.appendChild(el1,el2);var el2=dom.createElement("button");dom.setAttribute(el2,"type","button");dom.setAttribute(el2,"class","ui button");var el3=dom.createTextNode("\n                      ");dom.appendChild(el2,el3);var el3=dom.createElement("i");dom.setAttribute(el3,"class","remove icon");dom.appendChild(el2,el3);var el3=dom.createTextNode("\n                    ");dom.appendChild(el2,el3);dom.appendChild(el1,el2);var el2=dom.createTextNode("\n                  ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element13=dom.childAt(fragment,[1]);var element14=dom.childAt(element13,[3]);var morphs=new Array(3);morphs[0] = dom.createMorphAt(element13,1,1);morphs[1] = dom.createAttrMorph(element14,'title');morphs[2] = dom.createElementMorph(element14);return morphs;},statements:[["inline","component",[["get","column.filter.component.name",["loc",[null,[265,32],[265,60]]]]],["value",["subexpr","@mut",[["get","column.filter.pattern",["loc",[null,[266,28],[266,49]]]]],[],[]],"readonly",["subexpr","or",[["subexpr","eq",[["get","column.filter.condition",["loc",[null,[268,28],[268,51]]]],"empty"],[],["loc",[null,[268,24],[268,60]]]],["subexpr","eq",[["get","column.filter.condition",["loc",[null,[269,28],[269,51]]]],"nempty"],[],["loc",[null,[269,24],[269,61]]]]],[],["loc",[null,[267,31],[270,23]]]],"dynamicProperties",["subexpr","@mut",[["get","column.filter.component.properties",["loc",[null,[271,40],[271,74]]]]],[],[]]],["loc",[null,[265,20],[272,22]]]],["attribute","title",["subexpr","t",["components.object-list-view.clear-filter-in-column"],[],["loc",[null,[276,28],[276,86]]]]],["element","action",["clearFilterForColumn",["get","column.filter",["loc",[null,[277,54],[277,67]]]]],[],["loc",[null,[277,22],[277,69]]]]],locals:[],templates:[]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":261,"column":12},"end":{"line":284,"column":12}},"moduleName":"dummy/templates/mobile/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("              ");dom.appendChild(el0,el1);var el1=dom.createElement("td");var el2=dom.createTextNode("\n");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("              ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element15=dom.childAt(fragment,[1]);var morphs=new Array(3);morphs[0] = dom.createAttrMorph(element15,'style');morphs[1] = dom.createAttrMorph(element15,'class');morphs[2] = dom.createMorphAt(element15,1,1);return morphs;},statements:[["attribute","style",["get","defaultPaddingStyle",["loc",[null,[262,26],[262,45]]]]],["attribute","class",["concat",[["subexpr","if",[["subexpr","array-contains",[["get","overflowedComponents",["loc",[null,[262,76],[262,96]]]],["get","column.filter.component.name",["loc",[null,[262,97],[262,125]]]]],[],["loc",[null,[262,60],[262,126]]]],"overflowed-cell"],[],["loc",[null,[262,55],[262,146]]]]]]],["block","if",[["get","column.filter.component.name",["loc",[null,[263,22],[263,50]]]]],[],0,null,["loc",[null,[263,16],[282,23]]]]],locals:[],templates:[child0]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":260,"column":10},"end":{"line":285,"column":10}},"moduleName":"dummy/templates/mobile/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:1,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createComment("");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);dom.insertBoundary(fragment,0);dom.insertBoundary(fragment,null);return morphs;},statements:[["block","unless",[["get","column.hide",["loc",[null,[261,22],[261,33]]]]],[],0,null,["loc",[null,[261,12],[284,23]]]]],locals:["column"],templates:[child0]};})();var child5=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":286,"column":10},"end":{"line":288,"column":10}},"moduleName":"dummy/templates/mobile/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("            ");dom.appendChild(el0,el1);var el1=dom.createElement("td");dom.setAttribute(el1,"rowspan","1");dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(){return [];},statements:[],locals:[],templates:[]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":232,"column":6},"end":{"line":290,"column":6}},"moduleName":"dummy/templates/mobile/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("        ");dom.appendChild(el0,el1);var el1=dom.createElement("tr");var el2=dom.createTextNode("\n");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("        ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n        ");dom.appendChild(el0,el1);var el1=dom.createElement("tr");dom.setAttribute(el1,"class","object-list-view-filters");var el2=dom.createTextNode("\n");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("        ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element17=dom.childAt(fragment,[1]);var element18=dom.childAt(fragment,[3]);var morphs=new Array(6);morphs[0] = dom.createMorphAt(element17,1,1);morphs[1] = dom.createMorphAt(element17,2,2);morphs[2] = dom.createMorphAt(element17,3,3);morphs[3] = dom.createMorphAt(element18,1,1);morphs[4] = dom.createMorphAt(element18,2,2);morphs[5] = dom.createMorphAt(element18,3,3);return morphs;},statements:[["block","if",[["get","showHelperColumn",["loc",[null,[234,16],[234,32]]]]],[],0,null,["loc",[null,[234,10],[236,17]]]],["block","each",[["get","columns",["loc",[null,[237,18],[237,25]]]]],[],1,null,["loc",[null,[237,10],[251,19]]]],["block","if",[["get","showMenuColumn",["loc",[null,[252,16],[252,30]]]]],[],2,null,["loc",[null,[252,10],[254,17]]]],["block","if",[["get","showHelperColumn",["loc",[null,[257,16],[257,32]]]]],[],3,null,["loc",[null,[257,10],[259,17]]]],["block","each",[["get","columns",["loc",[null,[260,18],[260,25]]]]],[],4,null,["loc",[null,[260,10],[285,19]]]],["block","if",[["get","showMenuColumn",["loc",[null,[286,16],[286,30]]]]],[],5,null,["loc",[null,[286,10],[288,17]]]]],locals:[],templates:[child0,child1,child2,child3,child4,child5]};})();var child13=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":291,"column":6},"end":{"line":297,"column":6}},"moduleName":"dummy/templates/mobile/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("        ");dom.appendChild(el0,el1);var el1=dom.createElement("tr");var el2=dom.createTextNode("\n          ");dom.appendChild(el1,el2);var el2=dom.createElement("td");dom.setAttribute(el2,"style","text-align:center;");var el3=dom.createTextNode("\n              ");dom.appendChild(el2,el3);var el3=dom.createComment("");dom.appendChild(el2,el3);var el3=dom.createTextNode("\n          ");dom.appendChild(el2,el3);dom.appendChild(el1,el2);var el2=dom.createTextNode("\n        ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element12=dom.childAt(fragment,[1,1]);var morphs=new Array(2);morphs[0] = dom.createAttrMorph(element12,'colspan');morphs[1] = dom.createMorphAt(element12,1,1);return morphs;},statements:[["attribute","colspan",["concat",[["get","colspan",["loc",[null,[293,25],[293,32]]]]]]],["content","placeholder",["loc",[null,[294,14],[294,29]]]]],locals:[],templates:[]};})();var child14=(function(){var child0=(function(){var child0=(function(){var child0=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":304,"column":20},"end":{"line":308,"column":20}},"moduleName":"dummy/templates/mobile/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                      ");dom.appendChild(el0,el1);var el1=dom.createElement("div");dom.setAttribute(el1,"class","cell");var el2=dom.createTextNode("\n                        ");dom.appendChild(el1,el2);var el2=dom.createElement("i");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n                      ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element8=dom.childAt(fragment,[1,1]);var morphs=new Array(1);morphs[0] = dom.createAttrMorph(element8,'class');return morphs;},statements:[["attribute","class",["concat",["asterisk small red icon ",["subexpr","unless",[["get","record.data.hasDirtyAttributes",["loc",[null,[306,67],[306,97]]]],"transparent"],[],["loc",[null,[306,58],[306,113]]]]]]]],locals:[],templates:[]};})();var child1=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":309,"column":20},"end":{"line":317,"column":20}},"moduleName":"dummy/templates/mobile/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                      ");dom.appendChild(el0,el1);var el1=dom.createElement("div");dom.setAttribute(el1,"class","cell");var el2=dom.createTextNode("\n                        ");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n                      ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(dom.childAt(fragment,[1]),1,1);return morphs;},statements:[["inline","flexberry-checkbox",[],["readonly",["subexpr","or",[["get","readonly",["loc",[null,[312,39],[312,47]]]],["subexpr","not",[["get","record.rowConfig.canBeSelected",["loc",[null,[312,53],[312,83]]]]],[],["loc",[null,[312,48],[312,84]]]],["get","allSelect",["loc",[null,[312,85],[312,94]]]]],[],["loc",[null,[312,35],[312,95]]]],"onChange",["subexpr","action",["selectRow",["get","record",["loc",[null,[313,55],[313,61]]]]],[],["loc",[null,[313,35],[313,62]]]],"value",["subexpr","@mut",[["get","record.selected",["loc",[null,[314,32],[314,47]]]]],[],[]]],["loc",[null,[311,24],[315,26]]]]],locals:[],templates:[]};})();var child2=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":318,"column":20},"end":{"line":324,"column":20}},"moduleName":"dummy/templates/mobile/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                      ");dom.appendChild(el0,el1);var el1=dom.createElement("div");dom.setAttribute(el1,"class","cell");var el2=dom.createTextNode("\n                        ");dom.appendChild(el1,el2);var el2=dom.createElement("button");dom.setAttribute(el2,"type","button");var el3=dom.createTextNode("\n                          ");dom.appendChild(el2,el3);var el3=dom.createElement("i");dom.setAttribute(el3,"class","minus icon");dom.appendChild(el2,el3);var el3=dom.createTextNode("\n                        ");dom.appendChild(el2,el3);dom.appendChild(el1,el2);var el2=dom.createTextNode("\n                      ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element7=dom.childAt(fragment,[1,1]);var morphs=new Array(2);morphs[0] = dom.createAttrMorph(element7,'class');morphs[1] = dom.createElementMorph(element7);return morphs;},statements:[["attribute","class",["concat",["ui ui-delete ",["get","buttonClass",["loc",[null,[320,68],[320,79]]]]," ",["subexpr","if",[["subexpr","or",[["get","readonly",["loc",[null,[320,91],[320,99]]]],["subexpr","not",[["get","record.rowConfig.canBeDeleted",["loc",[null,[320,105],[320,134]]]]],[],["loc",[null,[320,100],[320,135]]]]],[],["loc",[null,[320,87],[320,136]]]],"disabled"],[],["loc",[null,[320,82],[320,149]]]]," button"]]],["element","action",["deleteRow",["get","record",["loc",[null,[320,179],[320,185]]]]],[],["loc",[null,[320,158],[320,187]]]]],locals:[],templates:[]};})();var child3=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":325,"column":20},"end":{"line":331,"column":20}},"moduleName":"dummy/templates/mobile/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                      ");dom.appendChild(el0,el1);var el1=dom.createElement("div");dom.setAttribute(el1,"class","cell");var el2=dom.createTextNode("\n                        ");dom.appendChild(el1,el2);var el2=dom.createElement("button");dom.setAttribute(el2,"type","button");var el3=dom.createTextNode("\n                          ");dom.appendChild(el2,el3);var el3=dom.createElement("i");dom.setAttribute(el3,"class","edit icon");dom.appendChild(el2,el3);var el3=dom.createTextNode("\n                        ");dom.appendChild(el2,el3);dom.appendChild(el1,el2);var el2=dom.createTextNode("\n                      ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element6=dom.childAt(fragment,[1,1]);var morphs=new Array(2);morphs[0] = dom.createAttrMorph(element6,'class');morphs[1] = dom.createElementMorph(element6);return morphs;},statements:[["attribute","class",["concat",["ui ui-edit ",["get","buttonClass",["loc",[null,[327,66],[327,77]]]]," ",["subexpr","if",[["get","readonly",["loc",[null,[327,85],[327,93]]]],"disabled"],[],["loc",[null,[327,80],[327,106]]]]," button"]]],["element","action",["objectListViewRowClick",["get","record",["loc",[null,[327,150],[327,156]]]],["subexpr","hash",[],["rowEdit",true],["loc",[null,[327,157],[327,176]]]]],[],["loc",[null,[327,115],[327,179]]]]],locals:[],templates:[]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":302,"column":16},"end":{"line":333,"column":16}},"moduleName":"dummy/templates/mobile/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                  ");dom.appendChild(el0,el1);var el1=dom.createElement("div");dom.setAttribute(el1,"class","object-list-view-helper-column-cell");var el2=dom.createTextNode("\n");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("                  ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element9=dom.childAt(fragment,[1]);var morphs=new Array(4);morphs[0] = dom.createMorphAt(element9,1,1);morphs[1] = dom.createMorphAt(element9,2,2);morphs[2] = dom.createMorphAt(element9,3,3);morphs[3] = dom.createMorphAt(element9,4,4);return morphs;},statements:[["block","if",[["get","showAsteriskInRow",["loc",[null,[304,26],[304,43]]]]],[],0,null,["loc",[null,[304,20],[308,27]]]],["block","if",[["get","showCheckBoxInRow",["loc",[null,[309,26],[309,43]]]]],[],1,null,["loc",[null,[309,20],[317,27]]]],["block","if",[["get","showDeleteButtonInRow",["loc",[null,[318,26],[318,47]]]]],[],2,null,["loc",[null,[318,20],[324,27]]]],["block","if",[["get","showEditButtonInRow",["loc",[null,[325,26],[325,45]]]]],[],3,null,["loc",[null,[325,20],[331,27]]]]],locals:[],templates:[child0,child1,child2,child3]};})();var child1=(function(){var child0=(function(){var child0=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":339,"column":20},"end":{"line":347,"column":20}},"moduleName":"dummy/templates/mobile/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                      ");dom.appendChild(el0,el1);var el1=dom.createComment("");dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);return morphs;},statements:[["inline","component",[["get","column.cellComponent.componentName",["loc",[null,[340,34],[340,68]]]]],["dynamicProperties",["subexpr","@mut",[["get","column.cellComponent.componentProperties",["loc",[null,[341,42],[341,82]]]]],[],[]],"relatedModel",["subexpr","@mut",[["get","record.data",["loc",[null,[342,37],[342,48]]]]],[],[]],"value",["subexpr","mut",[["subexpr","get",[["get","record.data",["loc",[null,[343,40],[343,51]]]],["get","column.propName",["loc",[null,[343,52],[343,67]]]]],[],["loc",[null,[343,35],[343,68]]]]],[],["loc",[null,[343,30],[343,69]]]],"readonly",["subexpr","readonly-cell",[["get","record.rowConfig.readonlyColumns",["loc",[null,[344,48],[344,80]]]],["get","column.propName",["loc",[null,[344,81],[344,96]]]],["get","readonly",["loc",[null,[344,97],[344,105]]]],["get","column.cellComponent.componentProperties.readonly",["loc",[null,[344,106],[344,155]]]]],[],["loc",[null,[344,33],[344,156]]]],"required",["subexpr","@mut",[["get","required",["loc",[null,[345,33],[345,41]]]]],[],[]]],["loc",[null,[340,22],[346,24]]]]],locals:[],templates:[]};})();var child1=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":347,"column":20},"end":{"line":354,"column":20}},"moduleName":"dummy/templates/mobile/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                      ");dom.appendChild(el0,el1);var el1=dom.createElement("div");dom.setAttribute(el1,"class","oveflow-text");var el2=dom.createTextNode("\n                        ");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n                      ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(dom.childAt(fragment,[1]),1,1);return morphs;},statements:[["inline","get-formatted",[["get","record.data",["loc",[null,[349,40],[349,51]]]],["get","column.propName",["loc",[null,[349,52],[349,67]]]]],["dateFormat",["subexpr","@mut",[["get","dateFormat",["loc",[null,[350,37],[350,47]]]]],[],[]],"moment",["subexpr","@mut",[["get","moment",["loc",[null,[351,33],[351,39]]]]],[],[]]],["loc",[null,[349,24],[352,26]]]]],locals:[],templates:[]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":336,"column":16},"end":{"line":356,"column":16}},"moduleName":"dummy/templates/mobile/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                  ");dom.appendChild(el0,el1);var el1=dom.createElement("td");var el2=dom.createTextNode("\n");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("                  ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element5=dom.childAt(fragment,[1]);var morphs=new Array(4);morphs[0] = dom.createAttrMorph(element5,'class');morphs[1] = dom.createAttrMorph(element5,'style');morphs[2] = dom.createElementMorph(element5);morphs[3] = dom.createMorphAt(element5,1,1);return morphs;},statements:[["attribute","class",["concat",[["subexpr","if",[["subexpr","array-contains",[["get","overflowedComponents",["loc",[null,[337,50],[337,70]]]],["get","column.cellComponent.componentName",["loc",[null,[337,71],[337,105]]]]],[],["loc",[null,[337,34],[337,106]]]]," overflowed-cell"],[],["loc",[null,[337,29],[337,127]]]]]]],["attribute","style",["get","defaultPaddingStyle",["loc",[null,[338,92],[338,111]]]]],["element","action",["objectListViewRowClick",["get","record",["loc",[null,[338,54],[338,60]]]]],["preventDefault",false],["loc",[null,[338,20],[338,83]]]],["block","if",[["get","column.cellComponent.componentName",["loc",[null,[339,26],[339,60]]]]],[],0,1,["loc",[null,[339,20],[354,27]]]]],locals:[],templates:[child0,child1]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":335,"column":14},"end":{"line":357,"column":14}},"moduleName":"dummy/templates/mobile/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:1,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createComment("");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);dom.insertBoundary(fragment,0);dom.insertBoundary(fragment,null);return morphs;},statements:[["block","unless",[["get","column.hide",["loc",[null,[336,26],[336,37]]]]],[],0,null,["loc",[null,[336,16],[356,27]]]]],locals:["column"],templates:[child0]};})();var child2=(function(){var child0=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":363,"column":22},"end":{"line":368,"column":22}},"moduleName":"dummy/templates/mobile/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                        ");dom.appendChild(el0,el1);var el1=dom.createElement("div");var el2=dom.createTextNode("\n                          ");dom.appendChild(el1,el2);var el2=dom.createElement("i");dom.setAttribute(el2,"class","edit icon");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n                          ");dom.appendChild(el1,el2);var el2=dom.createElement("span");var el3=dom.createComment("");dom.appendChild(el2,el3);dom.appendChild(el1,el2);var el2=dom.createTextNode("\n                        ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element2=dom.childAt(fragment,[1]);var morphs=new Array(3);morphs[0] = dom.createAttrMorph(element2,'class');morphs[1] = dom.createElementMorph(element2);morphs[2] = dom.createMorphAt(dom.childAt(element2,[3]),0,0);return morphs;},statements:[["attribute","class",["concat",["item ",["subexpr","if",[["get","readonly",["loc",[null,[364,46],[364,54]]]],"disabled"],[],["loc",[null,[364,41],[364,67]]]]]]],["element","action",["objectListViewRowClick",["get","record",["loc",[null,[364,104],[364,110]]]],["subexpr","hash",[],["rowEdit",true],["loc",[null,[364,111],[364,130]]]]],[],["loc",[null,[364,69],[364,133]]]],["inline","t",["components.object-list-view.menu-in-row.edit-menu-item-title"],[],["loc",[null,[366,32],[366,100]]]]],locals:[],templates:[]};})();var child1=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":369,"column":22},"end":{"line":374,"column":22}},"moduleName":"dummy/templates/mobile/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                        ");dom.appendChild(el0,el1);var el1=dom.createElement("div");var el2=dom.createTextNode("\n                          ");dom.appendChild(el1,el2);var el2=dom.createElement("i");dom.setAttribute(el2,"class","trash icon");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n                          ");dom.appendChild(el1,el2);var el2=dom.createElement("span");var el3=dom.createComment("");dom.appendChild(el2,el3);dom.appendChild(el1,el2);var el2=dom.createTextNode("\n                        ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element1=dom.childAt(fragment,[1]);var morphs=new Array(3);morphs[0] = dom.createAttrMorph(element1,'class');morphs[1] = dom.createElementMorph(element1);morphs[2] = dom.createMorphAt(dom.childAt(element1,[3]),0,0);return morphs;},statements:[["attribute","class",["concat",["item ",["subexpr","if",[["get","readonly",["loc",[null,[370,46],[370,54]]]],"disabled"],[],["loc",[null,[370,41],[370,67]]]]]]],["element","action",["deleteRow",["get","record",["loc",[null,[370,91],[370,97]]]]],[],["loc",[null,[370,69],[370,100]]]],["inline","t",["components.object-list-view.menu-in-row.delete-menu-item-title"],[],["loc",[null,[372,32],[372,102]]]]],locals:[],templates:[]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":358,"column":14},"end":{"line":378,"column":14}},"moduleName":"dummy/templates/mobile/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                ");dom.appendChild(el0,el1);var el1=dom.createElement("td");dom.setAttribute(el1,"class","object-list-view-menu");var el2=dom.createTextNode("\n                  ");dom.appendChild(el1,el2);var el2=dom.createElement("div");dom.setAttribute(el2,"class","right pointing ui icon dropdown button");var el3=dom.createTextNode("\n                    ");dom.appendChild(el2,el3);var el3=dom.createElement("i");dom.setAttribute(el3,"class","list layout icon");dom.appendChild(el2,el3);var el3=dom.createTextNode("\n                    ");dom.appendChild(el2,el3);var el3=dom.createElement("div");dom.setAttribute(el3,"class","left menu");var el4=dom.createTextNode("\n");dom.appendChild(el3,el4);var el4=dom.createComment("");dom.appendChild(el3,el4);var el4=dom.createComment("");dom.appendChild(el3,el4);var el4=dom.createTextNode("                    ");dom.appendChild(el3,el4);dom.appendChild(el2,el3);var el3=dom.createTextNode("\n                  ");dom.appendChild(el2,el3);dom.appendChild(el1,el2);var el2=dom.createTextNode("\n                ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element3=dom.childAt(fragment,[1]);var element4=dom.childAt(element3,[1,3]);var morphs=new Array(3);morphs[0] = dom.createAttrMorph(element3,'style');morphs[1] = dom.createMorphAt(element4,1,1);morphs[2] = dom.createMorphAt(element4,2,2);return morphs;},statements:[["attribute","style",["get","defaultPaddingStyle",["loc",[null,[359,58],[359,77]]]]],["block","if",[["subexpr","and",[["get","showEditMenuItemInRow",["loc",[null,[363,33],[363,54]]]],["get","record.rowConfig.canBeSelected",["loc",[null,[363,55],[363,85]]]]],[],["loc",[null,[363,28],[363,86]]]]],[],0,null,["loc",[null,[363,22],[368,29]]]],["block","if",[["subexpr","and",[["get","showDeleteMenuItemInRow",["loc",[null,[369,33],[369,56]]]],["get","record.rowConfig.canBeDeleted",["loc",[null,[369,57],[369,86]]]]],[],["loc",[null,[369,28],[369,87]]]]],[],1,null,["loc",[null,[369,22],[374,29]]]]],locals:[],templates:[child0,child1]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":298,"column":8},"end":{"line":380,"column":8}},"moduleName":"dummy/templates/mobile/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:1,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("            ");dom.appendChild(el0,el1);var el1=dom.createElement("tr");var el2=dom.createTextNode("\n              ");dom.appendChild(el1,el2);var el2=dom.createElement("td");var el3=dom.createTextNode("\n                ");dom.appendChild(el2,el3);var el3=dom.createElement("div");dom.setAttribute(el3,"class","hidden");var el4=dom.createComment("");dom.appendChild(el3,el4);dom.appendChild(el2,el3);var el3=dom.createTextNode("\n");dom.appendChild(el2,el3);var el3=dom.createComment("");dom.appendChild(el2,el3);var el3=dom.createTextNode("              ");dom.appendChild(el2,el3);dom.appendChild(el1,el2);var el2=dom.createTextNode("\n");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("            ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element10=dom.childAt(fragment,[1]);var element11=dom.childAt(element10,[1]);var morphs=new Array(7);morphs[0] = dom.createAttrMorph(element10,'class');morphs[1] = dom.createAttrMorph(element11,'class');morphs[2] = dom.createAttrMorph(element11,'style');morphs[3] = dom.createMorphAt(dom.childAt(element11,[1]),0,0);morphs[4] = dom.createMorphAt(element11,3,3);morphs[5] = dom.createMorphAt(element10,3,3);morphs[6] = dom.createMorphAt(element10,4,4);return morphs;},statements:[["attribute","class",["concat",[["get","record.rowConfig.customClass",["loc",[null,[299,25],[299,53]]]]]]],["attribute","class",["concat",["object-list-view-helper-column ",["subexpr","unless",[["get","showHelperColumn",["loc",[null,[300,65],[300,81]]]],"hidden"],[],["loc",[null,[300,56],[300,92]]]]]]],["attribute","style",["get","defaultPaddingStyle",["loc",[null,[300,102],[300,121]]]]],["content","record.key",["loc",[null,[301,36],[301,50]]]],["block","if",[["get","showHelperColumn",["loc",[null,[302,22],[302,38]]]]],[],0,null,["loc",[null,[302,16],[333,23]]]],["block","each",[["get","columns",["loc",[null,[335,22],[335,29]]]]],[],1,null,["loc",[null,[335,14],[357,23]]]],["block","if",[["get","showMenuColumn",["loc",[null,[358,20],[358,34]]]]],[],2,null,["loc",[null,[358,14],[378,21]]]]],locals:["record"],templates:[child0,child1,child2]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":297,"column":6},"end":{"line":381,"column":6}},"moduleName":"dummy/templates/mobile/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createComment("");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);dom.insertBoundary(fragment,0);dom.insertBoundary(fragment,null);return morphs;},statements:[["block","each",[["get","contentWithKeys",["loc",[null,[298,16],[298,31]]]]],["key","key"],0,null,["loc",[null,[298,8],[380,17]]]]],locals:[],templates:[child0]};})();var child15=(function(){var child0=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":389,"column":6},"end":{"line":391,"column":6}},"moduleName":"dummy/templates/mobile/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("        ");dom.appendChild(el0,el1);var el1=dom.createElement("div");dom.setAttribute(el1,"class","ui button");var el2=dom.createTextNode("...");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(){return [];},statements:[],locals:[],templates:[]};})();var child1=(function(){var child0=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":392,"column":8},"end":{"line":394,"column":8}},"moduleName":"dummy/templates/mobile/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("          ");dom.appendChild(el0,el1);var el1=dom.createElement("div");dom.setAttribute(el1,"class","ui active button");var el2=dom.createComment("");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(dom.childAt(fragment,[1]),0,0);return morphs;},statements:[["content","page.number",["loc",[null,[393,40],[393,55]]]]],locals:[],templates:[]};})();var child1=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":394,"column":8},"end":{"line":396,"column":8}},"moduleName":"dummy/templates/mobile/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("          ");dom.appendChild(el0,el1);var el1=dom.createElement("button");dom.setAttribute(el1,"type","button");dom.setAttribute(el1,"class","ui button");var el2=dom.createComment("");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element0=dom.childAt(fragment,[1]);var morphs=new Array(2);morphs[0] = dom.createElementMorph(element0);morphs[1] = dom.createMorphAt(element0,0,0);return morphs;},statements:[["element","action",["gotoPage",["get","this.attrs.gotoPage",["loc",[null,[395,70],[395,89]]]],["get","page.number",["loc",[null,[395,90],[395,101]]]]],[],["loc",[null,[395,50],[395,103]]]],["content","page.number",["loc",[null,[395,104],[395,119]]]]],locals:[],templates:[]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":391,"column":6},"end":{"line":397,"column":6}},"moduleName":"dummy/templates/mobile/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createComment("");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);dom.insertBoundary(fragment,0);dom.insertBoundary(fragment,null);return morphs;},statements:[["block","if",[["get","page.isCurrent",["loc",[null,[392,14],[392,28]]]]],[],0,1,["loc",[null,[392,8],[396,15]]]]],locals:[],templates:[child0,child1]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":388,"column":4},"end":{"line":398,"column":4}},"moduleName":"dummy/templates/mobile/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:1,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createComment("");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);dom.insertBoundary(fragment,0);dom.insertBoundary(fragment,null);return morphs;},statements:[["block","if",[["get","page.isEllipsis",["loc",[null,[389,12],[389,27]]]]],[],0,1,["loc",[null,[389,6],[397,13]]]]],locals:["page"],templates:[child0,child1]};})();var child16=(function(){var child0=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":404,"column":8},"end":{"line":408,"column":8}},"moduleName":"dummy/templates/mobile/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("          ");dom.appendChild(el0,el1);var el1=dom.createComment("");dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);return morphs;},statements:[["inline","concat",[["subexpr","t",["components.flexberry-objectlistview.showing-entries.showing"],[],["loc",[null,[406,12],[406,77]]]],["get","currentIntervalRecords",["loc",[null,[406,78],[406,100]]]],["subexpr","t",["components.flexberry-objectlistview.showing-entries.of"],[],["loc",[null,[406,101],[406,161]]]],["get","recordsTotalCount",["loc",[null,[406,162],[406,179]]]],["subexpr","t",["components.flexberry-objectlistview.showing-entries.entries"],[],["loc",[null,[406,180],[406,245]]]]],[],["loc",[null,[405,10],[407,12]]]]],locals:[],templates:[]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":402,"column":4},"end":{"line":410,"column":4}},"moduleName":"dummy/templates/mobile/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("      ");dom.appendChild(el0,el1);var el1=dom.createElement("div");dom.setAttribute(el1,"class","showing-entries");var el2=dom.createTextNode("\n");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("      ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(dom.childAt(fragment,[1]),1,1);return morphs;},statements:[["block","if",[["subexpr","and",[["get","currentIntervalRecords",["loc",[null,[404,19],[404,41]]]],["get","recordsTotalCount",["loc",[null,[404,42],[404,59]]]]],[],["loc",[null,[404,14],[404,60]]]]],[],0,null,["loc",[null,[404,8],[408,15]]]]],locals:[],templates:[child0]};})();return {meta:{"fragmentReason":{"name":"missing-wrapper","problems":["multiple-nodes"]},"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":1,"column":0},"end":{"line":414,"column":0}},"moduleName":"dummy/templates/mobile/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createElement("div");dom.setAttribute(el1,"class","ui secondary menu no-margin ");var el2=dom.createTextNode("\n");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("  ");dom.appendChild(el1,el2);var el2=dom.createElement("div");dom.setAttribute(el2,"class","olv-toolbar-info-modal-dialog ui small basic modal");var el3=dom.createTextNode("\n    ");dom.appendChild(el2,el3);var el3=dom.createElement("div");dom.setAttribute(el3,"class","ui icon header");var el4=dom.createTextNode("\n      ");dom.appendChild(el3,el4);var el4=dom.createElement("i");dom.setAttribute(el4,"class","olvt icon");dom.appendChild(el3,el4);var el4=dom.createTextNode("\n      ");dom.appendChild(el3,el4);var el4=dom.createComment("");dom.appendChild(el3,el4);var el4=dom.createTextNode("\n    ");dom.appendChild(el3,el4);dom.appendChild(el2,el3);var el3=dom.createTextNode("\n    ");dom.appendChild(el2,el3);var el3=dom.createElement("div");dom.setAttribute(el3,"class","center aligned ui grid");var el4=dom.createTextNode("\n    ");dom.appendChild(el3,el4);var el4=dom.createElement("button");dom.setAttribute(el4,"type","button");dom.setAttribute(el4,"class","ui icon button");dom.setAttribute(el4,"id","OLVToolbarInfoCopyButton");var el5=dom.createTextNode("\n        ");dom.appendChild(el4,el5);var el5=dom.createElement("i");dom.setAttribute(el5,"class","copy icon");dom.appendChild(el4,el5);var el5=dom.createTextNode("\n        ");dom.appendChild(el4,el5);var el5=dom.createComment("");dom.appendChild(el4,el5);var el5=dom.createTextNode("\n    ");dom.appendChild(el4,el5);dom.appendChild(el3,el4);var el4=dom.createTextNode("\n    ");dom.appendChild(el3,el4);var el4=dom.createElement("div");dom.setAttribute(el4,"class","actions");var el5=dom.createTextNode("\n      ");dom.appendChild(el4,el5);var el5=dom.createElement("div");dom.setAttribute(el5,"class","olv-toolbar-info-modal-dialog-ok-button ui approve green inverted button");var el6=dom.createTextNode("\n        ");dom.appendChild(el5,el6);var el6=dom.createElement("i");dom.setAttribute(el6,"class","remove icon");dom.appendChild(el5,el6);var el6=dom.createTextNode("\n        ");dom.appendChild(el5,el6);var el6=dom.createComment("");dom.appendChild(el5,el6);var el6=dom.createTextNode("\n      ");dom.appendChild(el5,el6);dom.appendChild(el4,el5);var el5=dom.createTextNode("\n    ");dom.appendChild(el4,el5);dom.appendChild(el3,el4);var el4=dom.createTextNode("\n    ");dom.appendChild(el3,el4);dom.appendChild(el2,el3);var el3=dom.createTextNode("\n    ");dom.appendChild(el2,el3);var el3=dom.createElement("div");dom.setAttribute(el3,"class","ui form");var el4=dom.createTextNode("\n      ");dom.appendChild(el3,el4);var el4=dom.createElement("div");dom.setAttribute(el4,"class","olv-toolbar-info-modal-dialog-content center aligned ui field");var el5=dom.createTextNode("\n        ");dom.appendChild(el4,el5);var el5=dom.createElement("textarea");dom.setAttribute(el5,"id","OLVToolbarInfoContent");dom.setAttribute(el5,"cols","80");dom.setAttribute(el5,"rows","20");var el6=dom.createComment("");dom.appendChild(el5,el6);dom.appendChild(el4,el5);var el5=dom.createTextNode("\n      ");dom.appendChild(el4,el5);dom.appendChild(el3,el4);var el4=dom.createTextNode("\n    ");dom.appendChild(el3,el4);dom.appendChild(el2,el3);var el3=dom.createTextNode("\n  ");dom.appendChild(el2,el3);dom.appendChild(el1,el2);var el2=dom.createTextNode("\n");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n\n");dom.appendChild(el0,el1);var el1=dom.createElement("div");dom.setAttribute(el1,"class","object-list-view-container");var el2=dom.createTextNode("\n  ");dom.appendChild(el1,el2);var el2=dom.createElement("table");var el3=dom.createTextNode("\n    ");dom.appendChild(el2,el3);var el3=dom.createElement("thead");var el4=dom.createTextNode("\n      ");dom.appendChild(el3,el4);var el4=dom.createElement("tr");var el5=dom.createTextNode("\n");dom.appendChild(el4,el5);var el5=dom.createComment("");dom.appendChild(el4,el5);var el5=dom.createComment("");dom.appendChild(el4,el5);var el5=dom.createComment("");dom.appendChild(el4,el5);var el5=dom.createTextNode("      ");dom.appendChild(el4,el5);dom.appendChild(el3,el4);var el4=dom.createTextNode("\n    ");dom.appendChild(el3,el4);dom.appendChild(el2,el3);var el3=dom.createTextNode("\n    ");dom.appendChild(el2,el3);var el3=dom.createElement("tbody");var el4=dom.createTextNode("\n");dom.appendChild(el3,el4);var el4=dom.createComment("");dom.appendChild(el3,el4);var el4=dom.createComment("");dom.appendChild(el3,el4);var el4=dom.createTextNode("    ");dom.appendChild(el3,el4);dom.appendChild(el2,el3);var el3=dom.createTextNode("\n  ");dom.appendChild(el2,el3);dom.appendChild(el1,el2);var el2=dom.createTextNode("\n");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);var el1=dom.createElement("div");dom.setAttribute(el1,"class","ui secondary menu no-margin nav-bar");var el2=dom.createTextNode("\n  ");dom.appendChild(el1,el2);var el2=dom.createElement("div");dom.setAttribute(el2,"class","ui basic buttons");var el3=dom.createTextNode("\n    ");dom.appendChild(el2,el3);var el3=dom.createElement("button");dom.setAttribute(el3,"type","button");dom.appendChild(el2,el3);var el3=dom.createTextNode("\n");dom.appendChild(el2,el3);var el3=dom.createComment("");dom.appendChild(el2,el3);var el3=dom.createTextNode("    ");dom.appendChild(el2,el3);var el3=dom.createElement("button");dom.setAttribute(el3,"type","button");dom.appendChild(el2,el3);var el3=dom.createTextNode("\n  ");dom.appendChild(el2,el3);dom.appendChild(el1,el2);var el2=dom.createTextNode("\n  ");dom.appendChild(el1,el2);var el2=dom.createElement("div");dom.setAttribute(el2,"class","right menu");var el3=dom.createTextNode("\n");dom.appendChild(el2,el3);var el3=dom.createComment("");dom.appendChild(el2,el3);var el3=dom.createTextNode("    ");dom.appendChild(el2,el3);var el3=dom.createComment("");dom.appendChild(el2,el3);var el3=dom.createTextNode("\n  ");dom.appendChild(el2,el3);dom.appendChild(el1,el2);var el2=dom.createTextNode("\n");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element43=dom.childAt(fragment,[0]);var element44=dom.childAt(element43,[11]);var element45=dom.childAt(element44,[3]);var element46=dom.childAt(element45,[1]);var element47=dom.childAt(fragment,[2,1]);var element48=dom.childAt(element47,[1,1]);var element49=dom.childAt(element47,[3]);var element50=dom.childAt(fragment,[4]);var element51=dom.childAt(element50,[1]);var element52=dom.childAt(element51,[1]);var element53=dom.childAt(element51,[5]);var element54=dom.childAt(element50,[3]);var morphs=new Array(28);morphs[0] = dom.createMorphAt(element43,1,1);morphs[1] = dom.createMorphAt(element43,2,2);morphs[2] = dom.createMorphAt(element43,3,3);morphs[3] = dom.createMorphAt(element43,4,4);morphs[4] = dom.createMorphAt(element43,5,5);morphs[5] = dom.createMorphAt(element43,6,6);morphs[6] = dom.createMorphAt(element43,7,7);morphs[7] = dom.createMorphAt(element43,8,8);morphs[8] = dom.createMorphAt(element43,9,9);morphs[9] = dom.createMorphAt(dom.childAt(element44,[1]),3,3);morphs[10] = dom.createAttrMorph(element46,'title');morphs[11] = dom.createElementMorph(element46);morphs[12] = dom.createMorphAt(element46,3,3);morphs[13] = dom.createMorphAt(dom.childAt(element45,[3,1]),3,3);morphs[14] = dom.createMorphAt(dom.childAt(element44,[5,1,1]),0,0);morphs[15] = dom.createAttrMorph(element47,'class');morphs[16] = dom.createMorphAt(element48,1,1);morphs[17] = dom.createMorphAt(element48,2,2);morphs[18] = dom.createMorphAt(element48,3,3);morphs[19] = dom.createMorphAt(element49,1,1);morphs[20] = dom.createMorphAt(element49,2,2);morphs[21] = dom.createAttrMorph(element52,'class');morphs[22] = dom.createElementMorph(element52);morphs[23] = dom.createMorphAt(element51,3,3);morphs[24] = dom.createAttrMorph(element53,'class');morphs[25] = dom.createElementMorph(element53);morphs[26] = dom.createMorphAt(element54,1,1);morphs[27] = dom.createMorphAt(element54,3,3);return morphs;},statements:[["block","if",[["get","refreshButton",["loc",[null,[2,8],[2,21]]]]],[],0,null,["loc",[null,[2,2],[11,9]]]],["block","if",[["get","createNewButton",["loc",[null,[12,8],[12,23]]]]],[],1,null,["loc",[null,[12,2],[20,9]]]],["block","if",[["get","deleteButton",["loc",[null,[21,8],[21,20]]]]],[],2,null,["loc",[null,[21,2],[29,9]]]],["block","if",[["get","availableHierarchicalMode",["loc",[null,[30,8],[30,33]]]]],[],3,null,["loc",[null,[30,2],[38,9]]]],["block","if",[["get","enableFilters",["loc",[null,[39,8],[39,21]]]]],[],4,null,["loc",[null,[39,2],[59,9]]]],["block","if",[["get","filterButton",["loc",[null,[60,8],[60,20]]]]],[],5,null,["loc",[null,[60,2],[85,9]]]],["block","if",[["get","exportExcelButton",["loc",[null,[86,8],[86,25]]]]],[],6,null,["loc",[null,[86,2],[100,9]]]],["block","if",[["get","colsConfigButton",["loc",[null,[101,8],[101,24]]]]],[],7,null,["loc",[null,[101,2],[117,9]]]],["block","each",[["get","customButtons",["loc",[null,[118,10],[118,23]]]]],[],8,null,["loc",[null,[118,2],[134,11]]]],["content","_infoModalDialogCaption",["loc",[null,[138,6],[138,33]]]],["attribute","title",["subexpr","t",["components.olv-toolbar.copy"],[],["loc",[null,[144,12],[144,47]]]]],["element","action",["copyJSONContent"],[],["loc",[null,[145,6],[145,34]]]],["inline","t",["components.olv-toolbar.copy"],[],["loc",[null,[148,8],[148,43]]]],["inline","t",["components.olv-toolbar.close"],[],["loc",[null,[153,8],[153,44]]]],["content","_infoModalDialogContent",["loc",[null,[159,65],[159,92]]]],["attribute","class",["concat",["object-list-view ui unstackable celled ",["subexpr","if",[["get","readonly",["loc",[null,[166,60],[166,68]]]],"readonly"],[],["loc",[null,[166,55],[166,81]]]]," ",["get","tableClass",["loc",[null,[166,84],[166,94]]]]," table"]]],["block","if",[["get","showHelperColumn",["loc",[null,[169,14],[169,30]]]]],[],9,null,["loc",[null,[169,8],[197,15]]]],["block","each",[["get","columns",["loc",[null,[198,16],[198,23]]]]],[],10,null,["loc",[null,[198,8],[225,17]]]],["block","if",[["get","showMenuColumn",["loc",[null,[226,14],[226,28]]]]],[],11,null,["loc",[null,[226,8],[228,15]]]],["block","if",[["get","showFilters",["loc",[null,[232,12],[232,23]]]]],[],12,null,["loc",[null,[232,6],[290,13]]]],["block","unless",[["get","content",["loc",[null,[291,16],[291,23]]]]],[],13,14,["loc",[null,[291,6],[381,17]]]],["attribute","class",["concat",["ui ",["subexpr","unless",[["get","hasPreviousPage",["loc",[null,[387,45],[387,60]]]],"disabled"],[],["loc",[null,[387,36],[387,73]]]]," button prev-page-button"]]],["element","action",["previousPage",["get","this.attrs.previousPage",["loc",[null,[387,123],[387,146]]]]],[],["loc",[null,[387,99],[387,148]]]],["block","each",[["get","pages",["loc",[null,[388,12],[388,17]]]]],[],15,null,["loc",[null,[388,4],[398,13]]]],["attribute","class",["concat",["ui ",["subexpr","unless",[["get","hasNextPage",["loc",[null,[399,45],[399,56]]]],"disabled"],[],["loc",[null,[399,36],[399,69]]]]," button next-page-button"]]],["element","action",["nextPage",["get","this.attrs.nextPage",["loc",[null,[399,115],[399,134]]]]],[],["loc",[null,[399,95],[399,136]]]],["block","if",[["get","showShowingEntries",["loc",[null,[402,10],[402,28]]]]],[],16,null,["loc",[null,[402,4],[410,11]]]],["inline","flexberry-dropdown",[],["items",["subexpr","@mut",[["get","perPageValues",["loc",[null,[411,31],[411,44]]]]],[],[]],"value",["subexpr","@mut",[["get","perPageValue",["loc",[null,[411,51],[411,63]]]]],[],[]],"class","compact selection","onChange",["subexpr","action",["perPageClick"],[],["loc",[null,[411,99],[411,122]]]],"needChecksOnValue",false,"direction","upward"],["loc",[null,[411,4],[411,167]]]]],locals:[],templates:[child0,child1,child2,child3,child4,child5,child6,child7,child8,child9,child10,child11,child12,child13,child14,child15,child16]};})());});
define("dummy/templates/mobile/components/object-list-view-row", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 6,
                "column": 8
              },
              "end": {
                "line": 10,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/mobile/components/object-list-view-row.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1, "class", "cell");
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("i");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element8 = dom.childAt(fragment, [1, 1]);
            var morphs = new Array(1);
            morphs[0] = dom.createAttrMorph(element8, 'class');
            return morphs;
          },
          statements: [["attribute", "class", ["concat", ["asterisk small red icon ", ["subexpr", "unless", [["get", "record.data.hasDirtyAttributes", ["loc", [null, [8, 55], [8, 85]]]], "transparent"], [], ["loc", [null, [8, 46], [8, 101]]]]]]]],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 11,
                "column": 8
              },
              "end": {
                "line": 19,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/mobile/components/object-list-view-row.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1, "class", "cell");
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
            return morphs;
          },
          statements: [["inline", "flexberry-checkbox", [], ["readonly", ["subexpr", "or", [["get", "readonly", ["loc", [null, [14, 27], [14, 35]]]], ["subexpr", "not", [["get", "record.rowConfig.canBeSelected", ["loc", [null, [14, 41], [14, 71]]]]], [], ["loc", [null, [14, 36], [14, 72]]]], ["get", "allSelect", ["loc", [null, [14, 73], [14, 82]]]]], [], ["loc", [null, [14, 23], [14, 83]]]], "onChange", ["subexpr", "action", [["get", "selectRow", ["loc", [null, [15, 31], [15, 40]]]], ["get", "record", ["loc", [null, [15, 41], [15, 47]]]]], [], ["loc", [null, [15, 23], [15, 48]]]], "value", ["subexpr", "@mut", [["get", "record.selected", ["loc", [null, [16, 20], [16, 35]]]]], [], []]], ["loc", [null, [13, 12], [17, 14]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 4,
              "column": 4
            },
            "end": {
              "line": 21,
              "column": 4
            }
          },
          "moduleName": "dummy/templates/mobile/components/object-list-view-row.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "object-list-view-helper-column-cell");
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element9 = dom.childAt(fragment, [1]);
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(element9, 1, 1);
          morphs[1] = dom.createMorphAt(element9, 2, 2);
          return morphs;
        },
        statements: [["block", "if", [["get", "showAsteriskInRow", ["loc", [null, [6, 14], [6, 31]]]]], [], 0, null, ["loc", [null, [6, 8], [10, 15]]]], ["block", "if", [["get", "showCheckBoxInRow", ["loc", [null, [11, 14], [11, 31]]]]], [], 1, null, ["loc", [null, [11, 8], [19, 15]]]]],
        locals: [],
        templates: [child0, child1]
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 34,
              "column": 4
            },
            "end": {
              "line": 38,
              "column": 4
            }
          },
          "moduleName": "dummy/templates/mobile/components/object-list-view-row.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("button");
          dom.setAttribute(el1, "type", "button");
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("i");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element6 = dom.childAt(fragment, [1]);
          var element7 = dom.childAt(element6, [1]);
          var morphs = new Array(3);
          morphs[0] = dom.createAttrMorph(element6, 'class');
          morphs[1] = dom.createElementMorph(element6);
          morphs[2] = dom.createAttrMorph(element7, 'class');
          return morphs;
        },
        statements: [["attribute", "class", ["concat", ["ui button icon mini ", ["get", "buttonClass", ["loc", [null, [35, 57], [35, 68]]]]]]], ["element", "action", ["expand"], ["bubbles", false], ["loc", [null, [35, 72], [35, 105]]]], ["attribute", "class", ["concat", [["subexpr", "if", [["get", "_expanded", ["loc", [null, [36, 23], [36, 32]]]], "minus", "plus"], [], ["loc", [null, [36, 18], [36, 49]]]], " hierarchy-expand icon"]]]],
        locals: [],
        templates: []
      };
    })();
    var child2 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 39,
              "column": 4
            },
            "end": {
              "line": 47,
              "column": 4
            }
          },
          "moduleName": "dummy/templates/mobile/components/object-list-view-row.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("button");
          dom.setAttribute(el1, "type", "button");
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("i");
          dom.setAttribute(el2, "class", "edit icon");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element5 = dom.childAt(fragment, [1]);
          var morphs = new Array(3);
          morphs[0] = dom.createAttrMorph(element5, 'class');
          morphs[1] = dom.createAttrMorph(element5, 'disabled');
          morphs[2] = dom.createElementMorph(element5);
          return morphs;
        },
        statements: [["attribute", "class", ["concat", ["ui ui-edit object-list-view-row-edit-button mobile ", ["get", "buttonClass", ["loc", [null, [42, 68], [42, 79]]]], " ", ["subexpr", "if", [["get", "readonly", ["loc", [null, [42, 87], [42, 95]]]], "disabled"], [], ["loc", [null, [42, 82], [42, 108]]]], " button"]]], ["attribute", "disabled", ["get", "readonly", ["loc", [null, [43, 19], [43, 27]]]]], ["element", "action", ["onRowClick", ["get", "record", ["loc", [null, [44, 30], [44, 36]]]], ["subexpr", "hash", [], ["column", null, "columnIndex", null, "rowEdit", true], ["loc", [null, [44, 37], [44, 85]]]]], ["bubbles", false], ["loc", [null, [44, 8], [44, 101]]]]],
        locals: [],
        templates: []
      };
    })();
    var child3 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 48,
              "column": 4
            },
            "end": {
              "line": 56,
              "column": 4
            }
          },
          "moduleName": "dummy/templates/mobile/components/object-list-view-row.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("button");
          dom.setAttribute(el1, "type", "button");
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("i");
          dom.setAttribute(el2, "class", "copy icon");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element4 = dom.childAt(fragment, [1]);
          var morphs = new Array(3);
          morphs[0] = dom.createAttrMorph(element4, 'class');
          morphs[1] = dom.createAttrMorph(element4, 'disabled');
          morphs[2] = dom.createElementMorph(element4);
          return morphs;
        },
        statements: [["attribute", "class", ["concat", ["ui ui-edit object-list-view-row-prototype-button mobile ", ["get", "buttonClass", ["loc", [null, [51, 73], [51, 84]]]], " ", ["subexpr", "if", [["get", "readonly", ["loc", [null, [51, 92], [51, 100]]]], "disabled"], [], ["loc", [null, [51, 87], [51, 113]]]], " button"]]], ["attribute", "disabled", ["get", "readonly", ["loc", [null, [52, 19], [52, 27]]]]], ["element", "action", [["get", "createNewByPrototype", ["loc", [null, [53, 17], [53, 37]]]], ["subexpr", "get", [["get", "record", ["loc", [null, [53, 43], [53, 49]]]], "data.id"], [], ["loc", [null, [53, 38], [53, 60]]]]], ["bubbles", false], ["loc", [null, [53, 8], [53, 76]]]]],
        locals: [],
        templates: []
      };
    })();
    var child4 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 57,
              "column": 4
            },
            "end": {
              "line": 65,
              "column": 4
            }
          },
          "moduleName": "dummy/templates/mobile/components/object-list-view-row.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("button");
          dom.setAttribute(el1, "type", "button");
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("i");
          dom.setAttribute(el2, "class", "minus icon");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element3 = dom.childAt(fragment, [1]);
          var morphs = new Array(3);
          morphs[0] = dom.createAttrMorph(element3, 'class');
          morphs[1] = dom.createAttrMorph(element3, 'disabled');
          morphs[2] = dom.createElementMorph(element3);
          return morphs;
        },
        statements: [["attribute", "class", ["concat", ["ui ui-edit object-list-view-row-delete-button mobile ", ["get", "buttonClass", ["loc", [null, [60, 70], [60, 81]]]], " ", ["subexpr", "if", [["subexpr", "or", [["get", "readonly", ["loc", [null, [60, 93], [60, 101]]]], ["subexpr", "not", [["get", "record.rowConfig.canBeDeleted", ["loc", [null, [60, 107], [60, 136]]]]], [], ["loc", [null, [60, 102], [60, 137]]]]], [], ["loc", [null, [60, 89], [60, 138]]]], "disabled"], [], ["loc", [null, [60, 84], [60, 151]]]], " button"]]], ["attribute", "disabled", ["subexpr", "or", [["get", "readonly", ["loc", [null, [61, 22], [61, 30]]]], ["subexpr", "not", [["get", "record.rowConfig.canBeDeleted", ["loc", [null, [61, 36], [61, 65]]]]], [], ["loc", [null, [61, 31], [61, 66]]]]], [], ["loc", [null, [61, 17], [61, 68]]]]], ["element", "action", [["get", "deleteRow", ["loc", [null, [62, 17], [62, 26]]]], ["get", "record", ["loc", [null, [62, 27], [62, 33]]]]], ["bubbles", false], ["loc", [null, [62, 8], [62, 49]]]]],
        locals: [],
        templates: []
      };
    })();
    var child5 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 72,
                "column": 10
              },
              "end": {
                "line": 77,
                "column": 10
              }
            },
            "moduleName": "dummy/templates/mobile/components/object-list-view-row.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("            ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1, "class", "item");
            var el2 = dom.createTextNode("\n              ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("i");
            dom.setAttribute(el2, "class", "edit icon");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n              ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("span");
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element1 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createElementMorph(element1);
            morphs[1] = dom.createMorphAt(dom.childAt(element1, [3]), 0, 0);
            return morphs;
          },
          statements: [["element", "action", [["get", "rowClick", ["loc", [null, [73, 40], [73, 48]]]], ["get", "record", ["loc", [null, [73, 49], [73, 55]]]]], [], ["loc", [null, [73, 30], [73, 58]]]], ["inline", "t", ["components.object-list-view.menu-in-row.edit-menu-item-title"], [], ["loc", [null, [75, 20], [75, 88]]]]],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 78,
                "column": 10
              },
              "end": {
                "line": 83,
                "column": 10
              }
            },
            "moduleName": "dummy/templates/mobile/components/object-list-view-row.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("            ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1, "class", "item");
            var el2 = dom.createTextNode("\n              ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("i");
            dom.setAttribute(el2, "class", "trash icon");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n              ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("span");
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createElementMorph(element0);
            morphs[1] = dom.createMorphAt(dom.childAt(element0, [3]), 0, 0);
            return morphs;
          },
          statements: [["element", "action", [["get", "deleteRow", ["loc", [null, [79, 40], [79, 49]]]], ["get", "record", ["loc", [null, [79, 50], [79, 56]]]]], [], ["loc", [null, [79, 30], [79, 59]]]], ["inline", "t", ["components.object-list-view.menu-in-row.delete-menu-item-title"], [], ["loc", [null, [81, 20], [81, 90]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 67,
              "column": 2
            },
            "end": {
              "line": 87,
              "column": 2
            }
          },
          "moduleName": "dummy/templates/mobile/components/object-list-view-row.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("td");
          dom.setAttribute(el1, "class", "object-list-view-menu");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "right pointing ui icon dropdown button");
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("i");
          dom.setAttribute(el3, "class", "list layout icon");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("div");
          dom.setAttribute(el3, "class", "left menu");
          var el4 = dom.createTextNode("\n");
          dom.appendChild(el3, el4);
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("        ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n      ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element2 = dom.childAt(fragment, [1, 1, 3]);
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(element2, 1, 1);
          morphs[1] = dom.createMorphAt(element2, 2, 2);
          return morphs;
        },
        statements: [["block", "if", [["get", "showEditMenuItemInRow", ["loc", [null, [72, 16], [72, 37]]]]], [], 0, null, ["loc", [null, [72, 10], [77, 17]]]], ["block", "if", [["get", "showDeleteMenuItemInRow", ["loc", [null, [78, 16], [78, 39]]]]], [], 1, null, ["loc", [null, [78, 10], [83, 17]]]]],
        locals: [],
        templates: [child0, child1]
      };
    })();
    var child6 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 90,
                "column": 2
              },
              "end": {
                "line": 118,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/mobile/components/object-list-view-row.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "object-list-view-row", [], ["record", ["subexpr", "@mut", [["get", "record", ["loc", [null, [92, 13], [92, 19]]]]], [], []], "columns", ["subexpr", "@mut", [["get", "columns", ["loc", [null, [93, 14], [93, 21]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [94, 15], [94, 23]]]]], [], []], "required", ["subexpr", "@mut", [["get", "required", ["loc", [null, [95, 15], [95, 23]]]]], [], []], "showMenuColumn", ["subexpr", "@mut", [["get", "showMenuColumn", ["loc", [null, [96, 21], [96, 35]]]]], [], []], "showHelperColumn", ["subexpr", "@mut", [["get", "showHelperColumn", ["loc", [null, [97, 23], [97, 39]]]]], [], []], "defaultRowConfig", ["subexpr", "@mut", [["get", "defaultRowConfig", ["loc", [null, [98, 23], [98, 39]]]]], [], []], "showValidationMessages", ["subexpr", "@mut", [["get", "showValidationMessages", ["loc", [null, [99, 29], [99, 51]]]]], [], []], "showAsteriskInRow", ["subexpr", "@mut", [["get", "showAsteriskInRow", ["loc", [null, [100, 24], [100, 41]]]]], [], []], "showCheckBoxInRow", ["subexpr", "@mut", [["get", "showCheckBoxInRow", ["loc", [null, [101, 24], [101, 41]]]]], [], []], "showDeleteButtonInRow", ["subexpr", "@mut", [["get", "showDeleteButtonInRow", ["loc", [null, [102, 28], [102, 49]]]]], [], []], "showEditButtonInRow", ["subexpr", "@mut", [["get", "showEditButtonInRow", ["loc", [null, [103, 26], [103, 45]]]]], [], []], "showPrototypeButtonInRow", ["subexpr", "@mut", [["get", "showPrototypeButtonInRow", ["loc", [null, [104, 31], [104, 55]]]]], [], []], "isParentRecordPropertyName", ["subexpr", "@mut", [["get", "isParentRecordPropertyName", ["loc", [null, [105, 33], [105, 59]]]]], [], []], "inHierarchicalMode", ["subexpr", "@mut", [["get", "inHierarchicalMode", ["loc", [null, [106, 25], [106, 43]]]]], [], []], "inExpandMode", ["subexpr", "unbound", [["get", "inExpandMode", ["loc", [null, [107, 28], [107, 40]]]]], [], ["loc", [null, [107, 19], [107, 41]]]], "singleColumnCellComponent", ["subexpr", "@mut", [["get", "singleColumnCellComponent", ["loc", [null, [108, 32], [108, 57]]]]], [], []], "loadRecords", ["subexpr", "@mut", [["get", "loadRecords", ["loc", [null, [109, 18], [109, 29]]]]], [], []], "rowClick", ["subexpr", "@mut", [["get", "rowClick", ["loc", [null, [110, 15], [110, 23]]]]], [], []], "selectRow", ["subexpr", "@mut", [["get", "selectRow", ["loc", [null, [111, 16], [111, 25]]]]], [], []], "deleteRow", ["subexpr", "@mut", [["get", "deleteRow", ["loc", [null, [112, 16], [112, 25]]]]], [], []], "createNewByPrototype", ["subexpr", "@mut", [["get", "createNewByPrototype", ["loc", [null, [113, 27], [113, 47]]]]], [], []], "_currentLevel", ["subexpr", "@mut", [["get", "_currentLevel", ["loc", [null, [114, 20], [114, 33]]]]], [], []], "hierarchicalIndent", ["subexpr", "@mut", [["get", "_hierarchicalIndent", ["loc", [null, [115, 25], [115, 44]]]]], [], []], "configurateRow", ["subexpr", "@mut", [["get", "configurateRow", ["loc", [null, [116, 21], [116, 35]]]]], [], []]], ["loc", [null, [91, 4], [117, 6]]]]],
          locals: ["record"],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 89,
              "column": 0
            },
            "end": {
              "line": 119,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/mobile/components/object-list-view-row.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "each", [["get", "records", ["loc", [null, [90, 10], [90, 17]]]]], ["key", "key"], 0, null, ["loc", [null, [90, 2], [118, 11]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes", "wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 120,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/mobile/components/object-list-view-row.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("tr");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("td");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "hidden");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("td");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element10 = dom.childAt(fragment, [0]);
        var element11 = dom.childAt(element10, [1]);
        var element12 = dom.childAt(element10, [3]);
        var morphs = new Array(13);
        morphs[0] = dom.createAttrMorph(element10, 'class');
        morphs[1] = dom.createAttrMorph(element11, 'class');
        morphs[2] = dom.createMorphAt(dom.childAt(element11, [1]), 0, 0);
        morphs[3] = dom.createMorphAt(element11, 3, 3);
        morphs[4] = dom.createAttrMorph(element12, 'style');
        morphs[5] = dom.createElementMorph(element12);
        morphs[6] = dom.createMorphAt(element12, 1, 1);
        morphs[7] = dom.createMorphAt(element12, 3, 3);
        morphs[8] = dom.createMorphAt(element12, 4, 4);
        morphs[9] = dom.createMorphAt(element12, 5, 5);
        morphs[10] = dom.createMorphAt(element12, 6, 6);
        morphs[11] = dom.createMorphAt(element10, 5, 5);
        morphs[12] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["attribute", "class", ["concat", [["get", "record.rowConfig.customClass", ["loc", [null, [1, 13], [1, 41]]]]]]], ["attribute", "class", ["concat", ["object-list-view-helper-column ", ["subexpr", "unless", [["get", "showHelperColumn", ["loc", [null, [2, 53], [2, 69]]]], "hidden"], [], ["loc", [null, [2, 44], [2, 80]]]]]]], ["content", "record.key", ["loc", [null, [3, 24], [3, 38]]]], ["block", "if", [["get", "showHelperColumn", ["loc", [null, [4, 10], [4, 26]]]]], [], 0, null, ["loc", [null, [4, 4], [21, 11]]]], ["attribute", "style", ["concat", ["padding-left:", ["get", "hierarchicalIndent", ["loc", [null, [25, 26], [25, 44]]]], "px;"]]], ["element", "action", ["onRowClick", ["get", "record", ["loc", [null, [24, 26], [24, 32]]]], ["subexpr", "hash", [], ["column", ["get", "columns", ["loc", [null, [24, 46], [24, 53]]]]], ["loc", [null, [24, 33], [24, 54]]]]], ["preventDefault", false], ["loc", [null, [24, 4], [24, 77]]]], ["inline", "component", [["get", "singleColumnCellComponent.componentName", ["loc", [null, [26, 16], [26, 55]]]]], ["model", ["subexpr", "@mut", [["get", "record.data", ["loc", [null, [27, 12], [27, 23]]]]], [], []], "columns", ["subexpr", "@mut", [["get", "columns", ["loc", [null, [28, 14], [28, 21]]]]], [], []], "showValidationMessages", ["subexpr", "@mut", [["get", "showValidationMessages", ["loc", [null, [29, 29], [29, 51]]]]], [], []], "hasEditableValues", ["subexpr", "@mut", [["get", "hasEditableValues", ["loc", [null, [30, 24], [30, 41]]]]], [], []], "dynamicProperties", ["subexpr", "@mut", [["get", "singleColumnCellComponent.componentProperties", ["loc", [null, [31, 24], [31, 69]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [32, 15], [32, 23]]]]], [], []]], ["loc", [null, [26, 4], [33, 6]]]], ["block", "if", [["subexpr", "and", [["get", "inHierarchicalMode", ["loc", [null, [34, 15], [34, 33]]]], ["get", "hasRecords", ["loc", [null, [34, 34], [34, 44]]]]], [], ["loc", [null, [34, 10], [34, 45]]]]], [], 1, null, ["loc", [null, [34, 4], [38, 11]]]], ["block", "if", [["get", "showEditButtonInRow", ["loc", [null, [39, 10], [39, 29]]]]], [], 2, null, ["loc", [null, [39, 4], [47, 11]]]], ["block", "if", [["get", "showPrototypeButtonInRow", ["loc", [null, [48, 10], [48, 34]]]]], [], 3, null, ["loc", [null, [48, 4], [56, 11]]]], ["block", "if", [["get", "showDeleteButtonInRow", ["loc", [null, [57, 10], [57, 31]]]]], [], 4, null, ["loc", [null, [57, 4], [65, 11]]]], ["block", "if", [["get", "showMenuColumn", ["loc", [null, [67, 8], [67, 22]]]]], [], 5, null, ["loc", [null, [67, 2], [87, 9]]]], ["block", "if", [["subexpr", "and", [["get", "_expanded", ["loc", [null, [89, 11], [89, 20]]]], ["get", "inHierarchicalMode", ["loc", [null, [89, 21], [89, 39]]]]], [], ["loc", [null, [89, 6], [89, 40]]]]], [], 6, null, ["loc", [null, [89, 0], [119, 7]]]]],
      locals: [],
      templates: [child0, child1, child2, child3, child4, child5, child6]
    };
  })());
});
define("dummy/templates/mobile/components/object-list-view", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 5,
                "column": 8
              },
              "end": {
                "line": 7,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/mobile/components/object-list-view.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("th");
            dom.setAttribute(el1, "class", "object-list-view-operations collapsing");
            dom.setAttribute(el1, "data-olv-header-property-name", "OlvRowToolbar");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes() {
            return [];
          },
          statements: [],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 9,
                "column": 8
              },
              "end": {
                "line": 11,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/mobile/components/object-list-view.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("th");
            dom.setAttribute(el1, "class", "object-list-view-menu collapsing");
            dom.setAttribute(el1, "data-olv-header-property-name", "OlvRowMenu");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes() {
            return [];
          },
          statements: [],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 2,
              "column": 2
            },
            "end": {
              "line": 14,
              "column": 2
            }
          },
          "moduleName": "dummy/templates/mobile/components/object-list-view.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("thead");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("tr");
          var el3 = dom.createTextNode("\n");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("        ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("th");
          dom.setAttribute(el3, "class", "dt-head-left me class");
          dom.setAttribute(el3, "data-olv-header-property-name", "OlvHeader");
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("      ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element11 = dom.childAt(fragment, [1, 1]);
          var morphs = new Array(3);
          morphs[0] = dom.createMorphAt(element11, 1, 1);
          morphs[1] = dom.createMorphAt(dom.childAt(element11, [3]), 0, 0);
          morphs[2] = dom.createMorphAt(element11, 5, 5);
          return morphs;
        },
        statements: [["block", "if", [["get", "showHelperColumn", ["loc", [null, [5, 14], [5, 30]]]]], [], 0, null, ["loc", [null, [5, 8], [7, 15]]]], ["content", "singleColumnHeaderTitle", ["loc", [null, [8, 84], [8, 111]]]], ["block", "if", [["get", "showMenuColumn", ["loc", [null, [9, 14], [9, 28]]]]], [], 1, null, ["loc", [null, [9, 8], [11, 15]]]]],
        locals: [],
        templates: [child0, child1]
      };
    })();
    var child1 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 18,
                "column": 8
              },
              "end": {
                "line": 22,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/mobile/components/object-list-view.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("td");
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("div");
            dom.setAttribute(el2, "class", "object-list-view-helper-column-cell");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element9 = dom.childAt(fragment, [1]);
            var morphs = new Array(1);
            morphs[0] = dom.createAttrMorph(element9, 'class');
            return morphs;
          },
          statements: [["attribute", "class", ["concat", ["object-list-view-helper-column ", ["subexpr", "unless", [["get", "showHelperColumn", ["loc", [null, [19, 61], [19, 77]]]], "hidden"], [], ["loc", [null, [19, 52], [19, 88]]]]]]]],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 27,
                  "column": 14
                },
                "end": {
                  "line": 39,
                  "column": 14
                }
              },
              "moduleName": "dummy/templates/mobile/components/object-list-view.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("                ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "filter-operation");
              var el2 = dom.createTextNode("\n                  ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n                ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
              return morphs;
            },
            statements: [["inline", "flexberry-dropdown", [], ["value", ["subexpr", "@mut", [["get", "column.filter.condition", ["loc", [null, [30, 26], [30, 49]]]]], [], []], "items", ["subexpr", "@mut", [["get", "column.filter.conditions", ["loc", [null, [31, 26], [31, 50]]]]], [], []], "displayCaptions", ["subexpr", "not", [["subexpr", "is-array", [["get", "column.filter.conditions", ["loc", [null, [32, 51], [32, 75]]]]], [], ["loc", [null, [32, 41], [32, 76]]]]], [], ["loc", [null, [32, 36], [32, 77]]]], "class", "compact fluid", "placeholder", ["subexpr", "t", ["components.object-list-view.filter-condition"], [], ["loc", [null, [34, 32], [34, 82]]]], "needChecksOnValue", false, "onChange", ["subexpr", "action", ["filterConditionChanged", ["get", "column.filter", ["loc", [null, [36, 62], [36, 75]]]]], [], ["loc", [null, [36, 29], [36, 76]]]]], ["loc", [null, [29, 18], [37, 20]]]]],
            locals: [],
            templates: []
          };
        })();
        var child1 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 40,
                  "column": 14
                },
                "end": {
                  "line": 59,
                  "column": 14
                }
              },
              "moduleName": "dummy/templates/mobile/components/object-list-view.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("                ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "fluid action input ui filter-value");
              var el2 = dom.createTextNode("\n                  ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n                  ");
              dom.appendChild(el1, el2);
              var el2 = dom.createElement("button");
              dom.setAttribute(el2, "type", "button");
              dom.setAttribute(el2, "class", "ui clear-filter button");
              var el3 = dom.createTextNode("\n                    ");
              dom.appendChild(el2, el3);
              var el3 = dom.createElement("i");
              dom.setAttribute(el3, "class", "remove icon");
              dom.appendChild(el2, el3);
              var el3 = dom.createTextNode("\n                  ");
              dom.appendChild(el2, el3);
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n                ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var element6 = dom.childAt(fragment, [1]);
              var element7 = dom.childAt(element6, [3]);
              var morphs = new Array(3);
              morphs[0] = dom.createMorphAt(element6, 1, 1);
              morphs[1] = dom.createAttrMorph(element7, 'title');
              morphs[2] = dom.createElementMorph(element7);
              return morphs;
            },
            statements: [["inline", "component", [["get", "column.filter.component.name", ["loc", [null, [42, 30], [42, 58]]]]], ["value", ["subexpr", "@mut", [["get", "column.filter.pattern", ["loc", [null, [43, 26], [43, 47]]]]], [], []], "readonly", ["subexpr", "or", [["subexpr", "eq", [["get", "column.filter.condition", ["loc", [null, [45, 26], [45, 49]]]], "empty"], [], ["loc", [null, [45, 22], [45, 58]]]], ["subexpr", "eq", [["get", "column.filter.condition", ["loc", [null, [46, 26], [46, 49]]]], "nempty"], [], ["loc", [null, [46, 22], [46, 59]]]]], [], ["loc", [null, [44, 29], [47, 21]]]], "dynamicProperties", ["subexpr", "@mut", [["get", "column.filter.component.properties", ["loc", [null, [48, 38], [48, 72]]]]], [], []]], ["loc", [null, [42, 18], [49, 20]]]], ["attribute", "title", ["subexpr", "t", ["components.object-list-view.clear-filter-in-column"], [], ["loc", [null, [53, 26], [53, 84]]]]], ["element", "action", ["clearFilterForColumn", ["get", "column.filter", ["loc", [null, [54, 52], [54, 65]]]]], [], ["loc", [null, [54, 20], [54, 67]]]]],
            locals: [],
            templates: []
          };
        })();
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 24,
                "column": 10
              },
              "end": {
                "line": 61,
                "column": 10
              }
            },
            "moduleName": "dummy/templates/mobile/components/object-list-view.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("            ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1, "class", "inline fields filter");
            var el2 = dom.createTextNode("\n              ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("label");
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode(":");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("            ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element8 = dom.childAt(fragment, [1]);
            var morphs = new Array(3);
            morphs[0] = dom.createMorphAt(dom.childAt(element8, [1]), 0, 0);
            morphs[1] = dom.createMorphAt(element8, 3, 3);
            morphs[2] = dom.createMorphAt(element8, 4, 4);
            return morphs;
          },
          statements: [["inline", "if", [["get", "column.keyLocale", ["loc", [null, [26, 26], [26, 42]]]], ["subexpr", "t", [["get", "column.keyLocale", ["loc", [null, [26, 46], [26, 62]]]]], [], ["loc", [null, [26, 43], [26, 63]]]], ["get", "column.header", ["loc", [null, [26, 64], [26, 77]]]]], [], ["loc", [null, [26, 21], [26, 79]]]], ["block", "if", [["get", "column.filter.conditions", ["loc", [null, [27, 20], [27, 44]]]]], [], 0, null, ["loc", [null, [27, 14], [39, 21]]]], ["block", "if", [["get", "column.filter.component.name", ["loc", [null, [40, 20], [40, 48]]]]], [], 1, null, ["loc", [null, [40, 14], [59, 21]]]]],
          locals: ["column"],
          templates: [child0, child1]
        };
      })();
      var child2 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 63,
                "column": 8
              },
              "end": {
                "line": 65,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/mobile/components/object-list-view.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("td");
            dom.setAttribute(el1, "class", "object-list-view-menu");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes() {
            return [];
          },
          statements: [],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 16,
              "column": 4
            },
            "end": {
              "line": 67,
              "column": 4
            }
          },
          "moduleName": "dummy/templates/mobile/components/object-list-view.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("tr");
          dom.setAttribute(el1, "class", "object-list-view-filters");
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("td");
          dom.setAttribute(el2, "class", "overflowed-cell");
          var el3 = dom.createTextNode("\n");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("        ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element10 = dom.childAt(fragment, [1]);
          var morphs = new Array(4);
          morphs[0] = dom.createAttrMorph(element10, 'onkeydown');
          morphs[1] = dom.createMorphAt(element10, 1, 1);
          morphs[2] = dom.createMorphAt(dom.childAt(element10, [3]), 1, 1);
          morphs[3] = dom.createMorphAt(element10, 5, 5);
          return morphs;
        },
        statements: [["attribute", "onkeydown", ["subexpr", "action", ["applyFiltersByEnter"], [], ["loc", [null, [17, 53], [17, 85]]]]], ["block", "if", [["get", "showHelperColumn", ["loc", [null, [18, 14], [18, 30]]]]], [], 0, null, ["loc", [null, [18, 8], [22, 15]]]], ["block", "each", [["get", "columns", ["loc", [null, [24, 18], [24, 25]]]]], [], 1, null, ["loc", [null, [24, 10], [61, 19]]]], ["block", "if", [["get", "showMenuColumn", ["loc", [null, [63, 14], [63, 28]]]]], [], 2, null, ["loc", [null, [63, 8], [65, 15]]]]],
        locals: [],
        templates: [child0, child1, child2]
      };
    })();
    var child2 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 68,
              "column": 4
            },
            "end": {
              "line": 74,
              "column": 4
            }
          },
          "moduleName": "dummy/templates/mobile/components/object-list-view.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("tr");
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("td");
          dom.setAttribute(el2, "style", "text-align:center;");
          var el3 = dom.createTextNode("\n            ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element5 = dom.childAt(fragment, [1, 1]);
          var morphs = new Array(2);
          morphs[0] = dom.createAttrMorph(element5, 'colspan');
          morphs[1] = dom.createMorphAt(element5, 1, 1);
          return morphs;
        },
        statements: [["attribute", "colspan", ["concat", [["get", "colspan", ["loc", [null, [70, 23], [70, 30]]]]]]], ["content", "placeholder", ["loc", [null, [71, 12], [71, 27]]]]],
        locals: [],
        templates: []
      };
    })();
    var child3 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 75,
                "column": 6
              },
              "end": {
                "line": 108,
                "column": 6
              }
            },
            "moduleName": "dummy/templates/mobile/components/object-list-view.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "object-list-view-row", [], ["record", ["subexpr", "@mut", [["get", "record", ["loc", [null, [77, 17], [77, 23]]]]], [], []], "columns", ["subexpr", "@mut", [["get", "columns", ["loc", [null, [78, 18], [78, 25]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [79, 19], [79, 27]]]]], [], []], "required", ["subexpr", "@mut", [["get", "required", ["loc", [null, [80, 19], [80, 27]]]]], [], []], "showMenuColumn", ["subexpr", "@mut", [["get", "showMenuColumn", ["loc", [null, [81, 25], [81, 39]]]]], [], []], "showHelperColumn", ["subexpr", "@mut", [["get", "showHelperColumn", ["loc", [null, [82, 27], [82, 43]]]]], [], []], "defaultRowConfig", ["subexpr", "@mut", [["get", "defaultRowConfig", ["loc", [null, [83, 27], [83, 43]]]]], [], []], "showValidationMessages", ["subexpr", "@mut", [["get", "showValidationMessagesInRow", ["loc", [null, [84, 33], [84, 60]]]]], [], []], "showDeleteMenuItemInRow", ["subexpr", "@mut", [["get", "showDeleteMenuItemInRow", ["loc", [null, [85, 34], [85, 57]]]]], [], []], "showEditMenuItemInRow", ["subexpr", "@mut", [["get", "showEditMenuItemInRow", ["loc", [null, [86, 32], [86, 53]]]]], [], []], "showAsteriskInRow", ["subexpr", "@mut", [["get", "showAsteriskInRow", ["loc", [null, [87, 28], [87, 45]]]]], [], []], "showCheckBoxInRow", ["subexpr", "@mut", [["get", "showCheckBoxInRow", ["loc", [null, [88, 28], [88, 45]]]]], [], []], "showDeleteButtonInRow", ["subexpr", "@mut", [["get", "showDeleteButtonInRow", ["loc", [null, [89, 32], [89, 53]]]]], [], []], "showEditButtonInRow", ["subexpr", "@mut", [["get", "showEditButtonInRow", ["loc", [null, [90, 30], [90, 49]]]]], [], []], "showPrototypeButtonInRow", ["subexpr", "@mut", [["get", "showPrototypeButtonInRow", ["loc", [null, [91, 35], [91, 59]]]]], [], []], "isParentRecordPropertyName", ["subexpr", "@mut", [["get", "isParentRecordPropertyName", ["loc", [null, [92, 37], [92, 63]]]]], [], []], "inExpandMode", ["subexpr", "unbound", [["get", "inExpandMode", ["loc", [null, [93, 32], [93, 44]]]]], [], ["loc", [null, [93, 23], [93, 45]]]], "hierarchicalIndent", ["subexpr", "@mut", [["get", "hierarchicalIndent", ["loc", [null, [94, 29], [94, 47]]]]], [], []], "inHierarchicalMode", ["subexpr", "@mut", [["get", "inHierarchicalMode", ["loc", [null, [95, 29], [95, 47]]]]], [], []], "singleColumnCellComponent", ["subexpr", "@mut", [["get", "singleColumnCellComponent", ["loc", [null, [96, 36], [96, 61]]]]], [], []], "loadRecords", ["subexpr", "@mut", [["get", "loadRecords", ["loc", [null, [97, 22], [97, 33]]]]], [], []], "doRenderData", ["subexpr", "@mut", [["get", "record.doRenderData", ["loc", [null, [98, 23], [98, 42]]]]], [], []], "rowClick", ["subexpr", "action", ["rowClick"], [], ["loc", [null, [99, 19], [99, 38]]]], "selectRow", ["subexpr", "action", ["selectRow"], [], ["loc", [null, [100, 20], [100, 40]]]], "deleteRow", ["subexpr", "action", ["deleteRow"], [], ["loc", [null, [101, 20], [101, 40]]]], "createNewByPrototype", ["subexpr", "@mut", [["get", "createNewByPrototype", ["loc", [null, [102, 31], [102, 51]]]]], [], []], "hierarchyPaging", ["subexpr", "@mut", [["get", "hierarchyPaging", ["loc", [null, [103, 26], [103, 41]]]]], [], []], "fixedHeader", ["subexpr", "@mut", [["get", "fixedHeader", ["loc", [null, [104, 22], [104, 33]]]]], [], []], "configurateRow", ["subexpr", "@mut", [["get", "configurateRow", ["loc", [null, [105, 25], [105, 39]]]]], [], []], "allSelect", ["subexpr", "@mut", [["get", "allSelect", ["loc", [null, [106, 20], [106, 29]]]]], [], []]], ["loc", [null, [76, 8], [107, 10]]]]],
          locals: ["record"],
          templates: []
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 109,
                "column": 6
              },
              "end": {
                "line": 116,
                "column": 6
              }
            },
            "moduleName": "dummy/templates/mobile/components/object-list-view.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("tr");
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("td");
            dom.setAttribute(el2, "style", "text-align:center;");
            var el3 = dom.createTextNode("\n            ");
            dom.appendChild(el2, el3);
            var el3 = dom.createElement("div");
            dom.setAttribute(el3, "class", "ui active centered inline loader");
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("\n            ");
            dom.appendChild(el2, el3);
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("\n          ");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n        ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element4 = dom.childAt(fragment, [1, 1]);
            var morphs = new Array(2);
            morphs[0] = dom.createAttrMorph(element4, 'colspan');
            morphs[1] = dom.createMorphAt(element4, 3, 3);
            return morphs;
          },
          statements: [["attribute", "colspan", ["concat", [["get", "colspan", ["loc", [null, [111, 25], [111, 32]]]]]]], ["inline", "t", ["components.object-list-view.loading-text"], [], ["loc", [null, [113, 12], [113, 60]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 74,
              "column": 4
            },
            "end": {
              "line": 117,
              "column": 4
            }
          },
          "moduleName": "dummy/templates/mobile/components/object-list-view.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          morphs[1] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "each", [["get", "contentWithKeys", ["loc", [null, [75, 14], [75, 29]]]]], ["key", "key"], 0, null, ["loc", [null, [75, 6], [108, 15]]]], ["block", "if", [["get", "rowByRowLoadingProgress", ["loc", [null, [109, 12], [109, 35]]]]], [], 1, null, ["loc", [null, [109, 6], [116, 13]]]]],
        locals: [],
        templates: [child0, child1]
      };
    })();
    var child4 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 123,
                "column": 4
              },
              "end": {
                "line": 131,
                "column": 4
              }
            },
            "moduleName": "dummy/templates/mobile/components/object-list-view.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "flexberry-menu", [], ["_skipDropdownInit", true, "onlyClickHandler", true, "items", ["subexpr", "@mut", [["get", "_checkRowsSettingsItems", ["loc", [null, [127, 14], [127, 37]]]]], [], []], "settings", ["subexpr", "hash", [], ["direction", "upward"], ["loc", [null, [128, 17], [128, 42]]]], "onItemClick", ["subexpr", "action", ["onCheckRowMenuItemClick"], [], ["loc", [null, [129, 20], [129, 54]]]]], ["loc", [null, [124, 6], [130, 8]]]]],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 131,
                "column": 4
              },
              "end": {
                "line": 139,
                "column": 4
              }
            },
            "moduleName": "dummy/templates/mobile/components/object-list-view.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("button");
            dom.setAttribute(el1, "type", "button");
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("i");
            dom.setAttribute(el2, "class", "check-square-o icon");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n      ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1]);
            var morphs = new Array(3);
            morphs[0] = dom.createAttrMorph(element0, 'class');
            morphs[1] = dom.createAttrMorph(element0, 'title');
            morphs[2] = dom.createElementMorph(element0);
            return morphs;
          },
          statements: [["attribute", "class", ["concat", ["ui check-all-at-page-button icon ", ["get", "buttonClass", ["loc", [null, [134, 50], [134, 61]]]], " ", ["subexpr", "if", [["get", "readonly", ["loc", [null, [134, 69], [134, 77]]]], "disabled"], [], ["loc", [null, [134, 64], [134, 90]]]], " button"]]], ["attribute", "title", ["subexpr", "t", ["components.olv-toolbar.check-all-at-page-button-text"], [], ["loc", [null, [135, 14], [135, 74]]]]], ["element", "action", ["checkAllAtPage"], [], ["loc", [null, [136, 8], [136, 35]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 121,
              "column": 0
            },
            "end": {
              "line": 161,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/mobile/components/object-list-view.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "check-rows-container");
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("label");
          dom.setAttribute(el2, "class", "count-selected-rows");
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("button");
          dom.setAttribute(el2, "type", "button");
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("i");
          dom.setAttribute(el3, "class", "delete icon");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n    ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("button");
          dom.setAttribute(el2, "type", "button");
          var el3 = dom.createTextNode("\n      ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("i");
          dom.setAttribute(el3, "class", "remove icon");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n    ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element1 = dom.childAt(fragment, [1]);
          var element2 = dom.childAt(element1, [5]);
          var element3 = dom.childAt(element1, [7]);
          var morphs = new Array(10);
          morphs[0] = dom.createMorphAt(element1, 1, 1);
          morphs[1] = dom.createMorphAt(dom.childAt(element1, [3]), 0, 0);
          morphs[2] = dom.createAttrMorph(element2, 'class');
          morphs[3] = dom.createAttrMorph(element2, 'title');
          morphs[4] = dom.createAttrMorph(element2, 'disabled');
          morphs[5] = dom.createElementMorph(element2);
          morphs[6] = dom.createMorphAt(element2, 1, 1);
          morphs[7] = dom.createAttrMorph(element3, 'class');
          morphs[8] = dom.createAttrMorph(element3, 'title');
          morphs[9] = dom.createElementMorph(element3);
          return morphs;
        },
        statements: [["block", "if", [["subexpr", "not-eq", [["get", "class", ["loc", [null, [123, 18], [123, 23]]]], "groupedit-container"], [], ["loc", [null, [123, 10], [123, 46]]]]], [], 0, 1, ["loc", [null, [123, 4], [139, 11]]]], ["content", "_selectedCountMobileMenu", ["loc", [null, [141, 39], [141, 67]]]], ["attribute", "class", ["concat", ["ui delete-button ", ["get", "buttonClass", ["loc", [null, [145, 32], [145, 43]]]], " ", ["subexpr", "if", [["get", "readonly", ["loc", [null, [145, 51], [145, 59]]]], "disabled"], [], ["loc", [null, [145, 46], [145, 72]]]], " button"]]], ["attribute", "title", ["subexpr", "t", ["components.olv-toolbar.delete-button-text"], [], ["loc", [null, [146, 12], [146, 61]]]]], ["attribute", "disabled", ["get", "readonly", ["loc", [null, [147, 17], [147, 25]]]]], ["element", "action", ["deleteSelectedRow"], [], ["loc", [null, [148, 6], [148, 36]]]], ["inline", "t", ["components.olv-toolbar.delete-button-text"], [], ["loc", [null, [149, 8], [149, 57]]]], ["attribute", "class", ["concat", ["ui clear-select-button ", ["get", "buttonClass", ["loc", [null, [155, 38], [155, 49]]]], " circular icon button"]]], ["attribute", "title", ["subexpr", "t", ["components.olv-toolbar.clear-select-button-text"], [], ["loc", [null, [156, 12], [156, 67]]]]], ["element", "action", ["clearSelectedRecords"], [], ["loc", [null, [157, 6], [157, 39]]]]],
        locals: [],
        templates: [child0, child1]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes", "wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 162,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/mobile/components/object-list-view.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("table");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("tbody");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element12 = dom.childAt(fragment, [0]);
        var element13 = dom.childAt(element12, [3]);
        var morphs = new Array(5);
        morphs[0] = dom.createAttrMorph(element12, 'class');
        morphs[1] = dom.createMorphAt(element12, 1, 1);
        morphs[2] = dom.createMorphAt(element13, 1, 1);
        morphs[3] = dom.createMorphAt(element13, 2, 2);
        morphs[4] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["attribute", "class", ["concat", ["object-list-view ui unstackable celled ", ["subexpr", "if", [["get", "readonly", ["loc", [null, [1, 58], [1, 66]]]], "readonly"], [], ["loc", [null, [1, 53], [1, 79]]]], " ", ["get", "tableClass", ["loc", [null, [1, 82], [1, 92]]]], " table"]]], ["block", "if", [["get", "singleColumnHeaderTitle", ["loc", [null, [2, 8], [2, 31]]]]], [], 0, null, ["loc", [null, [2, 2], [14, 9]]]], ["block", "if", [["get", "showFilters", ["loc", [null, [16, 10], [16, 21]]]]], [], 1, null, ["loc", [null, [16, 4], [67, 11]]]], ["block", "unless", [["get", "content", ["loc", [null, [68, 14], [68, 21]]]]], [], 2, 3, ["loc", [null, [68, 4], [117, 15]]]], ["block", "if", [["subexpr", "and", [["get", "_selectedMobileMenu", ["loc", [null, [121, 11], [121, 30]]]], ["get", "showCheckBoxInRow", ["loc", [null, [121, 31], [121, 48]]]]], [], ["loc", [null, [121, 6], [121, 49]]]]], [], 4, null, ["loc", [null, [121, 0], [161, 7]]]]],
      locals: [],
      templates: [child0, child1, child2, child3, child4]
    };
  })());
});
define("dummy/templates/mobile/sitemap-node", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 2,
                "column": 0
              },
              "end": {
                "line": 4,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/mobile/sitemap-node.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "partial", ["sitemap-node-content"], [], ["loc", [null, [3, 4], [3, 38]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": {
            "name": "missing-wrapper",
            "problems": ["wrong-type"]
          },
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 5,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/mobile/sitemap-node.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "link-to", [["get", "model.link", ["loc", [null, [2, 11], [2, 21]]]]], ["class", "item", "title", ["subexpr", "@mut", [["get", "model.title", ["loc", [null, [2, 41], [2, 52]]]]], [], []], "invokeAction", ["subexpr", "action", ["hideSidebar"], [], ["loc", [null, [2, 66], [2, 88]]]]], 0, null, ["loc", [null, [2, 0], [4, 14]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 5,
              "column": 0
            },
            "end": {
              "line": 11,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/mobile/sitemap-node.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "item item-menu");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "item-plus");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "item-minus hidden");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var element1 = dom.childAt(element0, [1]);
          var element2 = dom.childAt(element0, [3]);
          var morphs = new Array(3);
          morphs[0] = dom.createAttrMorph(element1, 'onclick');
          morphs[1] = dom.createAttrMorph(element2, 'onclick');
          morphs[2] = dom.createMorphAt(element0, 5, 5);
          return morphs;
        },
        statements: [["attribute", "onclick", ["subexpr", "action", ["subMenuEl"], ["bubbles", false], ["loc", [null, [7, 35], [7, 71]]]]], ["attribute", "onclick", ["subexpr", "action", ["subMenuEl"], ["bubbles", false], ["loc", [null, [8, 43], [8, 79]]]]], ["inline", "partial", ["sitemap-node-content"], [], ["loc", [null, [9, 4], [9, 38]]]]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 12,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/mobile/sitemap-node.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "if", [["get", "model.link", ["loc", [null, [1, 6], [1, 16]]]]], [], 0, 1, ["loc", [null, [1, 0], [11, 7]]]]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define("dummy/templates/new-platform-flexberry-g-i-s-layer-metadata-e", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 16,
                "column": 8
              },
              "end": {
                "line": 18,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/new-platform-flexberry-g-i-s-layer-metadata-e.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("button");
            dom.setAttribute(el1, "type", "submit");
            dom.setAttribute(el1, "class", "ui button save-button");
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element2 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createElementMorph(element2);
            morphs[1] = dom.createMorphAt(element2, 0, 0);
            return morphs;
          },
          statements: [["element", "action", ["save"], [], ["loc", [null, [17, 62], [17, 79]]]], ["inline", "t", ["forms.edit-form.save-button-text"], [], ["loc", [null, [17, 80], [17, 120]]]]],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 19,
                "column": 8
              },
              "end": {
                "line": 21,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/new-platform-flexberry-g-i-s-layer-metadata-e.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("button");
            dom.setAttribute(el1, "type", "submit");
            dom.setAttribute(el1, "class", "ui button save-close-button");
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element1 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createElementMorph(element1);
            morphs[1] = dom.createMorphAt(element1, 0, 0);
            return morphs;
          },
          statements: [["element", "action", ["saveAndClose"], [], ["loc", [null, [20, 68], [20, 93]]]], ["inline", "t", ["forms.edit-form.saveAndClose-button-text"], [], ["loc", [null, [20, 94], [20, 142]]]]],
          locals: [],
          templates: []
        };
      })();
      var child2 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 22,
                "column": 8
              },
              "end": {
                "line": 24,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/new-platform-flexberry-g-i-s-layer-metadata-e.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("button");
            dom.setAttribute(el1, "type", "submit");
            dom.setAttribute(el1, "class", "ui button save-del-button");
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createElementMorph(element0);
            morphs[1] = dom.createMorphAt(element0, 0, 0);
            return morphs;
          },
          statements: [["element", "action", ["delete"], [], ["loc", [null, [23, 66], [23, 85]]]], ["inline", "t", ["forms.edit-form.delete-button-text"], [], ["loc", [null, [23, 86], [23, 128]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 15,
              "column": 6
            },
            "end": {
              "line": 25,
              "column": 6
            }
          },
          "moduleName": "dummy/templates/new-platform-flexberry-g-i-s-layer-metadata-e.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(3);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          morphs[1] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          morphs[2] = dom.createMorphAt(fragment, 2, 2, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "unless", [["subexpr", "and", [["get", "hasParentRoute", ["loc", [null, [16, 23], [16, 37]]]], ["subexpr", "not", [["get", "saveBeforeRouteLeave", ["loc", [null, [16, 43], [16, 63]]]]], [], ["loc", [null, [16, 38], [16, 64]]]]], [], ["loc", [null, [16, 18], [16, 65]]]]], [], 0, null, ["loc", [null, [16, 8], [18, 19]]]], ["block", "unless", [["subexpr", "and", [["get", "hasParentRoute", ["loc", [null, [19, 23], [19, 37]]]], ["subexpr", "not", [["get", "saveBeforeRouteLeave", ["loc", [null, [19, 43], [19, 63]]]]], [], ["loc", [null, [19, 38], [19, 64]]]]], [], ["loc", [null, [19, 18], [19, 65]]]]], [], 1, null, ["loc", [null, [19, 8], [21, 19]]]], ["block", "unless", [["subexpr", "and", [["get", "model.isNew", ["loc", [null, [22, 23], [22, 34]]]], ["subexpr", "or", [["subexpr", "not", [["get", "hasParentRoute", ["loc", [null, [22, 44], [22, 58]]]]], [], ["loc", [null, [22, 39], [22, 59]]]], ["subexpr", "and", [["get", "hasParentRoute", ["loc", [null, [22, 65], [22, 79]]]], ["get", "saveBeforeRouteLeave", ["loc", [null, [22, 80], [22, 100]]]]], [], ["loc", [null, [22, 60], [22, 101]]]]], [], ["loc", [null, [22, 35], [22, 102]]]]], [], ["loc", [null, [22, 18], [22, 103]]]]], [], 2, null, ["loc", [null, [22, 8], [24, 19]]]]],
        locals: [],
        templates: [child0, child1, child2]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 52,
            "column": 7
          }
        },
        "moduleName": "dummy/templates/new-platform-flexberry-g-i-s-layer-metadata-e.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("h3");
        dom.setAttribute(el1, "class", "ui header");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("form");
        dom.setAttribute(el1, "class", "ui form flexberry-vertical-form");
        dom.setAttribute(el1, "role", "form");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "flexberry-edit-panel");
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("button");
        dom.setAttribute(el4, "type", "submit");
        dom.setAttribute(el4, "class", "ui button close-button");
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("-->");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element3 = dom.childAt(fragment, [2]);
        var element4 = dom.childAt(element3, [5, 1]);
        var element5 = dom.childAt(element4, [3]);
        var morphs = new Array(7);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]), 0, 0);
        morphs[1] = dom.createMorphAt(element3, 1, 1);
        morphs[2] = dom.createMorphAt(element3, 3, 3);
        morphs[3] = dom.createMorphAt(element4, 1, 1);
        morphs[4] = dom.createElementMorph(element5);
        morphs[5] = dom.createMorphAt(element5, 0, 0);
        morphs[6] = dom.createMorphAt(element3, 7, 7);
        return morphs;
      },
      statements: [["inline", "t", ["forms.new-platform-flexberry-g-i-s-layer-metadata-e.caption"], [], ["loc", [null, [1, 22], [1, 89]]]], ["inline", "ui-message", [], ["type", "success", "closeable", true, "visible", ["subexpr", "@mut", [["get", "showFormSuccessMessage", ["loc", [null, [6, 12], [6, 34]]]]], [], []], "caption", ["subexpr", "@mut", [["get", "formSuccessMessageCaption", ["loc", [null, [7, 12], [7, 37]]]]], [], []], "message", ["subexpr", "@mut", [["get", "formSuccessMessage", ["loc", [null, [8, 12], [8, 30]]]]], [], []], "onShow", ["subexpr", "action", ["onSuccessMessageShow"], [], ["loc", [null, [9, 11], [9, 42]]]], "onHide", ["subexpr", "action", ["onSuccessMessageHide"], [], ["loc", [null, [10, 11], [10, 42]]]]], ["loc", [null, [3, 2], [11, 4]]]], ["inline", "flexberry-error", [], ["error", ["subexpr", "@mut", [["get", "error", ["loc", [null, [12, 26], [12, 31]]]]], [], []]], ["loc", [null, [12, 2], [12, 33]]]], ["block", "unless", [["get", "readonly", ["loc", [null, [15, 16], [15, 24]]]]], [], 0, null, ["loc", [null, [15, 6], [25, 17]]]], ["element", "action", ["close"], [], ["loc", [null, [26, 59], [26, 77]]]], ["inline", "t", ["forms.edit-form.close-button-text"], [], ["loc", [null, [26, 78], [26, 119]]]], ["inline", "flexberry-edit-layermap", [], ["layer", ["subexpr", "hash", [], ["type", ["get", "model.type", ["loc", [null, [31, 11], [31, 21]]]], "name", ["get", "model.name", ["loc", [null, [32, 11], [32, 21]]]], "scale", ["get", "model.scale", ["loc", [null, [33, 12], [33, 23]]]], "description", ["get", "model.description", ["loc", [null, [34, 18], [34, 35]]]], "keyWords", ["get", "model.keyWords", ["loc", [null, [35, 15], [35, 29]]]], "coordinateReferenceSystem", ["get", "model.coordinateReferenceSystem", ["loc", [null, [36, 32], [36, 63]]]], "settings", ["get", "model.settings", ["loc", [null, [37, 15], [37, 29]]]], "boundingBox", ["get", "model.boundingBox", ["loc", [null, [38, 18], [38, 35]]]]], ["loc", [null, [30, 10], [39, 5]]]], "leafletMap", ["subexpr", "@mut", [["get", "leafletMap", ["loc", [null, [40, 15], [40, 25]]]]], [], []], "_typeIsReadonly", ["subexpr", "not", [["get", "model.isNew", ["loc", [null, [41, 25], [41, 36]]]]], [], ["loc", [null, [41, 20], [41, 37]]]], "links", ["subexpr", "get", [["get", "this", ["loc", [null, [42, 15], [42, 19]]]], ["get", "linksPropertyPath", ["loc", [null, [42, 20], [42, 37]]]]], [], ["loc", [null, [42, 10], [42, 38]]]], "linksPropertyPath", ["subexpr", "@mut", [["get", "linksPropertyPath", ["loc", [null, [43, 22], [43, 39]]]]], [], []], "linksModelName", ["subexpr", "@mut", [["get", "linksModelName", ["loc", [null, [44, 19], [44, 33]]]]], [], []], "parametersModelName", ["subexpr", "@mut", [["get", "linksParametersModelName", ["loc", [null, [45, 24], [45, 48]]]]], [], []], "parametersModelProjection", ["subexpr", "@mut", [["get", "linksParametersModelProjection", ["loc", [null, [46, 30], [46, 60]]]]], [], []], "onInit", ["subexpr", "action", ["initLayerProperties"], [], ["loc", [null, [47, 11], [47, 41]]]], "addLayerLink", ["subexpr", "action", ["addLayerLink"], [], ["loc", [null, [48, 17], [48, 40]]]], "removeLayerLink", ["subexpr", "action", ["removeLayerLink"], [], ["loc", [null, [49, 20], [49, 46]]]], "allowShowLayerLinkCheckboxChange", ["subexpr", "action", ["onLayerLinkChangeVisibility"], [], ["loc", [null, [50, 37], [50, 75]]]]], ["loc", [null, [29, 2], [51, 4]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define("dummy/templates/new-platform-flexberry-g-i-s-layer-metadata-l", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type", "multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 27,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/new-platform-flexberry-g-i-s-layer-metadata-l.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("h3");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "row");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(3);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [2]), 0, 0);
        morphs[2] = dom.createMorphAt(dom.childAt(fragment, [4]), 1, 1);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "flexberry-error", [], ["error", ["subexpr", "@mut", [["get", "error", ["loc", [null, [1, 24], [1, 29]]]]], [], []]], ["loc", [null, [1, 0], [1, 31]]]], ["inline", "t", ["forms.new-platform-flexberry-g-i-s-layer-metadata-l.caption"], [], ["loc", [null, [2, 4], [2, 71]]]], ["inline", "flexberry-objectlistview", [], ["modelName", "new-platform-flexberry-g-i-s-layer-metadata", "modelProjection", ["subexpr", "@mut", [["get", "modelProjection", ["loc", [null, [6, 20], [6, 35]]]]], [], []], "editFormRoute", ["subexpr", "@mut", [["get", "editFormRoute", ["loc", [null, [7, 18], [7, 31]]]]], [], []], "content", ["subexpr", "@mut", [["get", "model", ["loc", [null, [8, 12], [8, 17]]]]], [], []], "createNewButton", true, "refreshButton", true, "sorting", ["subexpr", "@mut", [["get", "computedSorting", ["loc", [null, [11, 12], [11, 27]]]]], [], []], "orderable", true, "sortByColumn", ["subexpr", "action", ["sortByColumn"], [], ["loc", [null, [13, 17], [13, 40]]]], "addColumnToSorting", ["subexpr", "action", ["addColumnToSorting"], [], ["loc", [null, [14, 23], [14, 52]]]], "pages", ["subexpr", "@mut", [["get", "pages", ["loc", [null, [15, 10], [15, 15]]]]], [], []], "perPageValue", ["subexpr", "@mut", [["get", "perPageValue", ["loc", [null, [16, 17], [16, 29]]]]], [], []], "perPageValues", ["subexpr", "@mut", [["get", "perPageValues", ["loc", [null, [17, 18], [17, 31]]]]], [], []], "recordsTotalCount", ["subexpr", "@mut", [["get", "recordsTotalCount", ["loc", [null, [18, 22], [18, 39]]]]], [], []], "hasPreviousPage", ["subexpr", "@mut", [["get", "hasPreviousPage", ["loc", [null, [19, 20], [19, 35]]]]], [], []], "hasNextPage", ["subexpr", "@mut", [["get", "hasNextPage", ["loc", [null, [20, 16], [20, 27]]]]], [], []], "previousPage", ["subexpr", "action", ["previousPage"], [], ["loc", [null, [21, 17], [21, 40]]]], "gotoPage", ["subexpr", "action", ["gotoPage"], [], ["loc", [null, [22, 13], [22, 32]]]], "nextPage", ["subexpr", "action", ["nextPage"], [], ["loc", [null, [23, 13], [23, 32]]]], "componentName", "NewPlatformFlexberryGISLayerMetadataL"], ["loc", [null, [4, 2], [25, 4]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/new-platform-flexberry-g-i-s-layer-metadata-l/loading", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "triple-curlies"
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/new-platform-flexberry-g-i-s-layer-metadata-l/loading.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "loading-pane");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "loading-message");
        var el3 = dom.createTextNode("\n    Loading ...\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "spinner");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes() {
        return [];
      },
      statements: [],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/new-platform-flexberry-g-i-s-map-l/loading", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "triple-curlies"
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/new-platform-flexberry-g-i-s-map-l/loading.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "loading-pane");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "loading-message");
        var el3 = dom.createTextNode("\n    Loading ...\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "spinner");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes() {
        return [];
      },
      statements: [],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/new-platform-flexberry-g-i-s-map-object-setting-e", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 16,
                "column": 8
              },
              "end": {
                "line": 20,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/new-platform-flexberry-g-i-s-map-object-setting-e.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("button");
            dom.setAttribute(el1, "type", "submit");
            dom.setAttribute(el1, "class", "ui button save-del-button");
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createElementMorph(element0);
            morphs[1] = dom.createMorphAt(element0, 1, 1);
            return morphs;
          },
          statements: [["element", "action", ["delete"], [], ["loc", [null, [17, 66], [17, 85]]]], ["inline", "t", ["forms.edit-form.delete-button-text"], [], ["loc", [null, [18, 12], [18, 54]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 12,
              "column": 6
            },
            "end": {
              "line": 21,
              "column": 6
            }
          },
          "moduleName": "dummy/templates/new-platform-flexberry-g-i-s-map-object-setting-e.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("button");
          dom.setAttribute(el1, "type", "submit");
          dom.setAttribute(el1, "class", "ui button save-button");
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element1 = dom.childAt(fragment, [1]);
          var morphs = new Array(3);
          morphs[0] = dom.createElementMorph(element1);
          morphs[1] = dom.createMorphAt(element1, 1, 1);
          morphs[2] = dom.createMorphAt(fragment, 3, 3, contextualElement);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["element", "action", ["save"], [], ["loc", [null, [13, 60], [13, 77]]]], ["inline", "t", ["forms.edit-form.save-button-text"], [], ["loc", [null, [14, 10], [14, 50]]]], ["block", "unless", [["get", "model.isNew", ["loc", [null, [16, 18], [16, 29]]]]], [], 0, null, ["loc", [null, [16, 8], [20, 19]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 111,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/new-platform-flexberry-g-i-s-map-object-setting-e.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("h3");
        dom.setAttribute(el1, "class", "ui header");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("form");
        dom.setAttribute(el1, "class", "ui form flexberry-vertical-form");
        dom.setAttribute(el1, "role", "form");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "sixteen wide");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "flexberry-edit-panel");
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("button");
        dom.setAttribute(el4, "type", "submit");
        dom.setAttribute(el4, "class", "ui button close-button");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element2 = dom.childAt(fragment, [2]);
        var element3 = dom.childAt(element2, [5, 1]);
        var element4 = dom.childAt(element3, [3]);
        var element5 = dom.childAt(element2, [7]);
        var element6 = dom.childAt(element2, [9]);
        var element7 = dom.childAt(element2, [11]);
        var element8 = dom.childAt(element2, [13]);
        var element9 = dom.childAt(element2, [15]);
        var element10 = dom.childAt(element2, [17]);
        var morphs = new Array(19);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]), 0, 0);
        morphs[1] = dom.createMorphAt(element2, 1, 1);
        morphs[2] = dom.createMorphAt(dom.childAt(element2, [3, 1]), 1, 1);
        morphs[3] = dom.createMorphAt(element3, 1, 1);
        morphs[4] = dom.createElementMorph(element4);
        morphs[5] = dom.createMorphAt(element4, 1, 1);
        morphs[6] = dom.createMorphAt(element5, 1, 1);
        morphs[7] = dom.createMorphAt(element5, 3, 3);
        morphs[8] = dom.createMorphAt(element6, 1, 1);
        morphs[9] = dom.createMorphAt(element6, 3, 3);
        morphs[10] = dom.createMorphAt(element7, 1, 1);
        morphs[11] = dom.createMorphAt(element7, 3, 3);
        morphs[12] = dom.createMorphAt(element8, 1, 1);
        morphs[13] = dom.createMorphAt(element8, 3, 3);
        morphs[14] = dom.createMorphAt(element9, 1, 1);
        morphs[15] = dom.createMorphAt(element9, 3, 3);
        morphs[16] = dom.createMorphAt(dom.childAt(element10, [1]), 0, 0);
        morphs[17] = dom.createMorphAt(element10, 3, 3);
        morphs[18] = dom.createMorphAt(element10, 5, 5);
        return morphs;
      },
      statements: [["inline", "t", ["forms.new-platform-flexberry-g-i-s-map-object-setting-e.caption"], [], ["loc", [null, [1, 22], [1, 93]]]], ["inline", "flexberry-error", [], ["error", ["subexpr", "@mut", [["get", "error", ["loc", [null, [4, 26], [4, 31]]]]], [], []]], ["loc", [null, [4, 2], [4, 33]]]], ["inline", "flexberry-validationsummary", [], ["errors", ["subexpr", "@mut", [["get", "model.errors", ["loc", [null, [7, 43], [7, 55]]]]], [], []]], ["loc", [null, [7, 6], [7, 57]]]], ["block", "unless", [["get", "readonly", ["loc", [null, [12, 16], [12, 24]]]]], [], 0, null, ["loc", [null, [12, 6], [21, 17]]]], ["element", "action", ["close"], [], ["loc", [null, [22, 59], [22, 77]]]], ["inline", "t", ["forms.edit-form.close-button-text"], [], ["loc", [null, [23, 8], [23, 49]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [30, 16], [30, 60]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [31, 13], [31, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.typeName", ["loc", [null, [33, 10], [33, 24]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.typeName", ["loc", [null, [34, 14], [34, 35]]]], "error", ""], [], ["loc", [null, [34, 10], [34, 47]]]], "label", ["subexpr", "t", ["forms.new-platform-flexberry-g-i-s-map-object-setting-e.typeName-caption"], [], ["loc", [null, [35, 10], [35, 88]]]]], ["loc", [null, [28, 2], [36, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.typeName", ["loc", [null, [37, 38], [37, 59]]]]], [], []], "pointing", "pointing"], ["loc", [null, [37, 2], [37, 81]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [43, 16], [43, 60]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [44, 13], [44, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.title", ["loc", [null, [46, 10], [46, 21]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.title", ["loc", [null, [47, 14], [47, 32]]]], "error", ""], [], ["loc", [null, [47, 10], [47, 44]]]], "label", ["subexpr", "t", ["forms.new-platform-flexberry-g-i-s-map-object-setting-e.title-caption"], [], ["loc", [null, [48, 10], [48, 85]]]]], ["loc", [null, [41, 2], [49, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.title", ["loc", [null, [50, 38], [50, 56]]]]], [], []], "pointing", "pointing"], ["loc", [null, [50, 2], [50, 78]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [56, 16], [56, 60]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [57, 13], [57, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.listForm", ["loc", [null, [59, 10], [59, 24]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.listForm", ["loc", [null, [60, 14], [60, 35]]]], "error", ""], [], ["loc", [null, [60, 10], [60, 47]]]], "label", ["subexpr", "t", ["forms.new-platform-flexberry-g-i-s-map-object-setting-e.listForm-caption"], [], ["loc", [null, [61, 10], [61, 88]]]]], ["loc", [null, [54, 2], [62, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.listForm", ["loc", [null, [63, 38], [63, 59]]]]], [], []], "pointing", "pointing"], ["loc", [null, [63, 2], [63, 81]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [69, 16], [69, 60]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [70, 13], [70, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.editForm", ["loc", [null, [72, 10], [72, 24]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.editForm", ["loc", [null, [73, 14], [73, 35]]]], "error", ""], [], ["loc", [null, [73, 10], [73, 47]]]], "label", ["subexpr", "t", ["forms.new-platform-flexberry-g-i-s-map-object-setting-e.editForm-caption"], [], ["loc", [null, [74, 10], [74, 88]]]]], ["loc", [null, [67, 2], [75, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.editForm", ["loc", [null, [76, 38], [76, 59]]]]], [], []], "pointing", "pointing"], ["loc", [null, [76, 2], [76, 81]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [82, 16], [82, 60]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [83, 13], [83, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.multEditForm", ["loc", [null, [85, 10], [85, 28]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.multEditForm", ["loc", [null, [86, 14], [86, 39]]]], "error", ""], [], ["loc", [null, [86, 10], [86, 51]]]], "label", ["subexpr", "t", ["forms.new-platform-flexberry-g-i-s-map-object-setting-e.multEditForm-caption"], [], ["loc", [null, [87, 10], [87, 92]]]]], ["loc", [null, [80, 2], [88, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.multEditForm", ["loc", [null, [89, 38], [89, 63]]]]], [], []], "pointing", "pointing"], ["loc", [null, [89, 2], [89, 85]]]], ["inline", "t", ["forms.new-platform-flexberry-g-i-s-map-object-setting-e.defaultMap-caption"], [], ["loc", [null, [93, 9], [93, 91]]]], ["inline", "flexberry-lookup", [], ["choose", "showLookupDialog", "remove", "removeLookupValue", "value", ["subexpr", "@mut", [["get", "model.defaultMap", ["loc", [null, [98, 10], [98, 26]]]]], [], []], "displayAttributeName", "name", "autocomplete", true, "relationName", "defaultMap", "projection", "MapL", "title", ["subexpr", "t", ["forms.new-platform-flexberry-g-i-s-map-object-setting-e.defaultMap-caption"], [], ["loc", [null, [103, 10], [103, 90]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [104, 13], [104, 21]]]]], [], []], "componentName", "defaultMapLookup"], ["loc", [null, [94, 2], [106, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.defaultMap", ["loc", [null, [107, 38], [107, 61]]]]], [], []], "pointing", "pointing"], ["loc", [null, [107, 2], [107, 83]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define("dummy/templates/new-platform-flexberry-g-i-s-map-object-setting-l", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type", "multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 28,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/new-platform-flexberry-g-i-s-map-object-setting-l.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("h3");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "row");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(3);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [2]), 0, 0);
        morphs[2] = dom.createMorphAt(dom.childAt(fragment, [4]), 1, 1);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "flexberry-error", [], ["error", ["subexpr", "@mut", [["get", "error", ["loc", [null, [1, 24], [1, 29]]]]], [], []]], ["loc", [null, [1, 0], [1, 31]]]], ["inline", "t", ["forms.new-platform-flexberry-g-i-s-map-object-setting-l.caption"], [], ["loc", [null, [2, 4], [2, 75]]]], ["inline", "flexberry-objectlistview", [], ["modelName", "new-platform-flexberry-g-i-s-map-object-setting", "modelProjection", ["subexpr", "@mut", [["get", "modelProjection", ["loc", [null, [6, 20], [6, 35]]]]], [], []], "editFormRoute", ["subexpr", "@mut", [["get", "editFormRoute", ["loc", [null, [7, 18], [7, 31]]]]], [], []], "content", ["subexpr", "@mut", [["get", "model", ["loc", [null, [8, 12], [8, 17]]]]], [], []], "createNewButton", true, "refreshButton", true, "sorting", ["subexpr", "@mut", [["get", "computedSorting", ["loc", [null, [11, 12], [11, 27]]]]], [], []], "orderable", true, "sortByColumn", ["subexpr", "action", ["sortByColumn"], [], ["loc", [null, [13, 17], [13, 40]]]], "addColumnToSorting", ["subexpr", "action", ["addColumnToSorting"], [], ["loc", [null, [14, 23], [14, 52]]]], "beforeDeleteAllRecords", ["subexpr", "action", ["beforeDeleteAllRecords"], [], ["loc", [null, [15, 27], [15, 60]]]], "pages", ["subexpr", "@mut", [["get", "pages", ["loc", [null, [16, 10], [16, 15]]]]], [], []], "perPageValue", ["subexpr", "@mut", [["get", "perPageValue", ["loc", [null, [17, 17], [17, 29]]]]], [], []], "perPageValues", ["subexpr", "@mut", [["get", "perPageValues", ["loc", [null, [18, 18], [18, 31]]]]], [], []], "recordsTotalCount", ["subexpr", "@mut", [["get", "recordsTotalCount", ["loc", [null, [19, 22], [19, 39]]]]], [], []], "hasPreviousPage", ["subexpr", "@mut", [["get", "hasPreviousPage", ["loc", [null, [20, 20], [20, 35]]]]], [], []], "hasNextPage", ["subexpr", "@mut", [["get", "hasNextPage", ["loc", [null, [21, 16], [21, 27]]]]], [], []], "previousPage", ["subexpr", "action", ["previousPage"], [], ["loc", [null, [22, 17], [22, 40]]]], "gotoPage", ["subexpr", "action", ["gotoPage"], [], ["loc", [null, [23, 13], [23, 32]]]], "nextPage", ["subexpr", "action", ["nextPage"], [], ["loc", [null, [24, 13], [24, 32]]]], "componentName", "NewPlatformFlexberryGISMapObjectSettingL"], ["loc", [null, [4, 2], [26, 4]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/new-platform-flexberry-g-i-s-map-object-setting-l/loading", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "triple-curlies"
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/new-platform-flexberry-g-i-s-map-object-setting-l/loading.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "loading-pane");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "loading-message");
        var el3 = dom.createTextNode("\n    Loading ...\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "spinner");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes() {
        return [];
      },
      statements: [],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/new-platform-flexberry-services-lock-list", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type", "multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 31,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/new-platform-flexberry-services-lock-list.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("h3");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "row");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(3);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [2]), 0, 0);
        morphs[2] = dom.createMorphAt(dom.childAt(fragment, [4]), 1, 1);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "flexberry-error", [], ["error", ["subexpr", "@mut", [["get", "error", ["loc", [null, [1, 24], [1, 29]]]]], [], []]], ["loc", [null, [1, 0], [1, 31]]]], ["inline", "t", ["forms.new-platform-flexberry-services-lock-list.caption"], [], ["loc", [null, [2, 4], [2, 67]]]], ["inline", "flexberry-objectlistview", [], ["content", ["subexpr", "@mut", [["get", "model", ["loc", [null, [5, 12], [5, 17]]]]], [], []], "modelName", ["subexpr", "@mut", [["get", "modelName", ["loc", [null, [6, 14], [6, 23]]]]], [], []], "modelProjection", ["subexpr", "@mut", [["get", "modelProjection", ["loc", [null, [7, 20], [7, 35]]]]], [], []], "editFormRoute", ["subexpr", "@mut", [["get", "editFormRoute", ["loc", [null, [8, 18], [8, 31]]]]], [], []], "refreshButton", true, "createNewButton", false, "deleteButton", true, "showCheckBoxInRow", true, "showDeleteButtonInRow", true, "pages", ["subexpr", "@mut", [["get", "pages", ["loc", [null, [14, 10], [14, 15]]]]], [], []], "perPageValue", ["subexpr", "@mut", [["get", "perPageValue", ["loc", [null, [15, 17], [15, 29]]]]], [], []], "perPageValues", ["subexpr", "@mut", [["get", "perPageValues", ["loc", [null, [16, 18], [16, 31]]]]], [], []], "recordsTotalCount", ["subexpr", "@mut", [["get", "recordsTotalCount", ["loc", [null, [17, 22], [17, 39]]]]], [], []], "hasPreviousPage", ["subexpr", "@mut", [["get", "hasPreviousPage", ["loc", [null, [18, 20], [18, 35]]]]], [], []], "hasNextPage", ["subexpr", "@mut", [["get", "hasNextPage", ["loc", [null, [19, 16], [19, 27]]]]], [], []], "gotoPage", ["subexpr", "action", ["gotoPage"], [], ["loc", [null, [20, 13], [20, 32]]]], "nextPage", ["subexpr", "action", ["nextPage"], [], ["loc", [null, [21, 13], [21, 32]]]], "previousPage", ["subexpr", "action", ["previousPage"], [], ["loc", [null, [22, 17], [22, 40]]]], "orderable", true, "sorting", ["subexpr", "@mut", [["get", "computedSorting", ["loc", [null, [24, 12], [24, 27]]]]], [], []], "sortByColumn", ["subexpr", "action", ["sortByColumn"], [], ["loc", [null, [25, 17], [25, 40]]]], "addColumnToSorting", ["subexpr", "action", ["addColumnToSorting"], [], ["loc", [null, [26, 23], [26, 52]]]], "componentName", "LockObjectListView", "beforeDeleteAllRecords", ["subexpr", "action", ["beforeDeleteAllRecords"], [], ["loc", [null, [28, 27], [28, 60]]]]], ["loc", [null, [4, 2], [29, 4]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/sitemap-node-content", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 4,
                "column": 4
              },
              "end": {
                "line": 6,
                "column": 4
              }
            },
            "moduleName": "dummy/templates/sitemap-node-content.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "render", ["sitemap-node", ["get", "child", ["loc", [null, [5, 30], [5, 35]]]]], [], ["loc", [null, [5, 6], [5, 37]]]]],
          locals: ["child"],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 2,
              "column": 0
            },
            "end": {
              "line": 8,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/sitemap-node-content.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "menu subMenu hidden");
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["block", "each", [["get", "model.children", ["loc", [null, [4, 12], [4, 26]]]]], [], 0, null, ["loc", [null, [4, 4], [6, 13]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes", "wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 8,
            "column": 7
          }
        },
        "moduleName": "dummy/templates/sitemap-node-content.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "title-item-menu");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var morphs = new Array(3);
        morphs[0] = dom.createAttrMorph(element0, 'onclick');
        morphs[1] = dom.createMorphAt(element0, 0, 0);
        morphs[2] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["attribute", "onclick", ["subexpr", "action", ["subMenuEl"], ["bubbles", false], ["loc", [null, [1, 36], [1, 72]]]]], ["content", "model.caption", ["loc", [null, [1, 73], [1, 90]]]], ["block", "if", [["get", "model.children.length", ["loc", [null, [2, 6], [2, 27]]]]], [], 0, null, ["loc", [null, [2, 0], [8, 7]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define("dummy/templates/sitemap-node", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 2,
                "column": 0
              },
              "end": {
                "line": 4,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/sitemap-node.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "partial", ["sitemap-node-content"], [], ["loc", [null, [3, 4], [3, 38]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": {
            "name": "missing-wrapper",
            "problems": ["wrong-type"]
          },
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 5,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/sitemap-node.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "link-to", [["get", "model.link", ["loc", [null, [2, 11], [2, 21]]]]], ["class", "item", "title", ["subexpr", "@mut", [["get", "model.title", ["loc", [null, [2, 41], [2, 52]]]]], [], []]], 0, null, ["loc", [null, [2, 0], [4, 14]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 5,
              "column": 0
            },
            "end": {
              "line": 11,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/sitemap-node.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "item item-menu");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "item-plus");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "item-minus hidden");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var element1 = dom.childAt(element0, [1]);
          var element2 = dom.childAt(element0, [3]);
          var morphs = new Array(3);
          morphs[0] = dom.createAttrMorph(element1, 'onclick');
          morphs[1] = dom.createAttrMorph(element2, 'onclick');
          morphs[2] = dom.createMorphAt(element0, 5, 5);
          return morphs;
        },
        statements: [["attribute", "onclick", ["subexpr", "action", ["subMenuEl"], ["bubbles", false], ["loc", [null, [7, 35], [7, 71]]]]], ["attribute", "onclick", ["subexpr", "action", ["subMenuEl"], ["bubbles", false], ["loc", [null, [8, 43], [8, 79]]]]], ["inline", "partial", ["sitemap-node-content"], [], ["loc", [null, [9, 4], [9, 38]]]]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 12,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/sitemap-node.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "if", [["get", "model.link", ["loc", [null, [1, 6], [1, 16]]]]], [], 0, 1, ["loc", [null, [1, 0], [11, 7]]]]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define("dummy/templates/sitemap", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "fragmentReason": {
            "name": "missing-wrapper",
            "problems": ["wrong-type"]
          },
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 3,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/sitemap.hbs"
        },
        isEmpty: false,
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("	");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "render", ["sitemap-node", ["get", "node", ["loc", [null, [2, 25], [2, 29]]]]], [], ["loc", [null, [2, 1], [2, 31]]]]],
        locals: ["node"],
        templates: []
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/sitemap.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "each", [["get", "model.nodes", ["loc", [null, [1, 8], [1, 19]]]]], [], 0, null, ["loc", [null, [1, 0], [3, 9]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define('dummy/transforms/decimal', ['exports', 'ember-flexberry-data/transforms/decimal'], function (exports, _emberFlexberryDataTransformsDecimal) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataTransformsDecimal['default'];
    }
  });
});
define('dummy/transforms/file', ['exports', 'ember-flexberry-data/transforms/file'], function (exports, _emberFlexberryDataTransformsFile) {
  exports['default'] = _emberFlexberryDataTransformsFile['default'];
});
define('dummy/transforms/flexberry-enum', ['exports', 'ember-flexberry-data/transforms/flexberry-enum'], function (exports, _emberFlexberryDataTransformsFlexberryEnum) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataTransformsFlexberryEnum['default'];
    }
  });
});
define('dummy/transforms/guid', ['exports', 'ember-flexberry-data/transforms/guid'], function (exports, _emberFlexberryDataTransformsGuid) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataTransformsGuid['default'];
    }
  });
});
define('dummy/transforms/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-t-execution-variant', ['exports', 'ember-flexberry-data/transforms/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-t-execution-variant'], function (exports, _emberFlexberryDataTransformsICSSoftSTORMNETBusinessAuditObjectsTExecutionVariant) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataTransformsICSSoftSTORMNETBusinessAuditObjectsTExecutionVariant['default'];
    }
  });
});
define('dummy/transforms/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-t-type-of-audit-operation', ['exports', 'ember-flexberry-data/transforms/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-t-type-of-audit-operation'], function (exports, _emberFlexberryDataTransformsICSSoftSTORMNETBusinessAuditObjectsTTypeOfAuditOperation) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataTransformsICSSoftSTORMNETBusinessAuditObjectsTTypeOfAuditOperation['default'];
    }
  });
});
define('dummy/transforms/json', ['exports', 'ember-flexberry-gis/transforms/json'], function (exports, _emberFlexberryGisTransformsJson) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisTransformsJson['default'];
    }
  });
});
define('dummy/utils/available-coordinate-reference-systems-codes', ['exports', 'ember-flexberry-gis/utils/available-coordinate-reference-systems-codes'], function (exports, _emberFlexberryGisUtilsAvailableCoordinateReferenceSystemsCodes) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisUtilsAvailableCoordinateReferenceSystemsCodes['default'];
    }
  });
});
define('dummy/utils/batch-queries', ['exports', 'ember-flexberry-data/utils/batch-queries'], function (exports, _emberFlexberryDataUtilsBatchQueries) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataUtilsBatchQueries['default'];
    }
  });
});
define('dummy/utils/check-zoom', ['exports', 'ember-flexberry-gis/utils/check-zoom'], function (exports, _emberFlexberryGisUtilsCheckZoom) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisUtilsCheckZoom['default'];
    }
  });
});
define('dummy/utils/coordinates-to-string', ['exports', 'ember-flexberry-gis/utils/coordinates-to-string'], function (exports, _emberFlexberryGisUtilsCoordinatesToString) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisUtilsCoordinatesToString['default'];
    }
  });
});
define('dummy/utils/cut-string-by-length', ['exports', 'ember-flexberry/utils/cut-string-by-length'], function (exports, _emberFlexberryUtilsCutStringByLength) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryUtilsCutStringByLength['default'];
    }
  });
});
define('dummy/utils/deserialize-sorting-param', ['exports', 'ember-flexberry/utils/deserialize-sorting-param'], function (exports, _emberFlexberryUtilsDeserializeSortingParam) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryUtilsDeserializeSortingParam['default'];
    }
  });
});
define('dummy/utils/download-file', ['exports', 'ember-flexberry-gis/utils/download-file'], function (exports, _emberFlexberryGisUtilsDownloadFile) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisUtilsDownloadFile['default'];
    }
  });
});
define('dummy/utils/feature-with-area-intersect', ['exports', 'ember-flexberry-gis/utils/feature-with-area-intersect'], function (exports, _emberFlexberryGisUtilsFeatureWithAreaIntersect) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisUtilsFeatureWithAreaIntersect['default'];
    }
  });
});
define('dummy/utils/get-attr-locale-key', ['exports', 'ember-flexberry/utils/get-attr-locale-key'], function (exports, _emberFlexberryUtilsGetAttrLocaleKey) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryUtilsGetAttrLocaleKey['default'];
    }
  });
});
define('dummy/utils/get-boolean-from-string', ['exports', 'ember-flexberry-gis/utils/get-boolean-from-string'], function (exports, _emberFlexberryGisUtilsGetBooleanFromString) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisUtilsGetBooleanFromString['default'];
    }
  });
});
define('dummy/utils/get-crs-by-name', ['exports', 'ember-flexberry-gis/utils/get-crs-by-name'], function (exports, _emberFlexberryGisUtilsGetCrsByName) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisUtilsGetCrsByName['default'];
    }
  });
});
define('dummy/utils/get-current-agregator', ['exports', 'ember-flexberry/utils/get-current-agregator'], function (exports, _emberFlexberryUtilsGetCurrentAgregator) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryUtilsGetCurrentAgregator['default'];
    }
  });
});
define('dummy/utils/get-date-from-string', ['exports', 'ember-flexberry-gis/utils/get-date-from-string'], function (exports, _emberFlexberryGisUtilsGetDateFromString) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisUtilsGetDateFromString['default'];
    }
  });
});
define('dummy/utils/get-projection-by-name', ['exports', 'ember-flexberry/utils/get-projection-by-name'], function (exports, _emberFlexberryUtilsGetProjectionByName) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryUtilsGetProjectionByName['default'];
    }
  });
});
define('dummy/utils/html2canvas-clone', ['exports', 'ember-flexberry-gis/utils/html2canvas-clone'], function (exports, _emberFlexberryGisUtilsHtml2canvasClone) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisUtilsHtml2canvasClone['default'];
    }
  });
});
define('dummy/utils/i18n/compile-template', ['exports', 'ember-i18n/utils/i18n/compile-template'], function (exports, _emberI18nUtilsI18nCompileTemplate) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberI18nUtilsI18nCompileTemplate['default'];
    }
  });
});
define('dummy/utils/i18n/missing-message', ['exports', 'ember-i18n/utils/i18n/missing-message'], function (exports, _emberI18nUtilsI18nMissingMessage) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberI18nUtilsI18nMissingMessage['default'];
    }
  });
});
define('dummy/utils/lat-lng-to-coord', ['exports', 'ember-flexberry-gis/utils/lat-lng-to-coord'], function (exports, _emberFlexberryGisUtilsLatLngToCoord) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisUtilsLatLngToCoord['default'];
    }
  });
});
define('dummy/utils/layer-to-ewkt', ['exports', 'ember-flexberry-gis/utils/layer-to-ewkt'], function (exports, _emberFlexberryGisUtilsLayerToEwkt) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisUtilsLayerToEwkt['default'];
    }
  });
});
define('dummy/utils/layer-to-jsts', ['exports', 'ember-flexberry-gis/utils/layer-to-jsts'], function (exports, _emberFlexberryGisUtilsLayerToJsts) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisUtilsLayerToJsts['default'];
    }
  });
});
define('dummy/utils/leaflet-opacity', ['exports', 'ember-flexberry-gis/utils/leaflet-opacity'], function (exports, _emberFlexberryGisUtilsLeafletOpacity) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisUtilsLeafletOpacity['default'];
    }
  });
  Object.defineProperty(exports, 'setLeafletLayerOpacity', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisUtilsLeafletOpacity.setLeafletLayerOpacity;
    }
  });
  Object.defineProperty(exports, 'maxGeometryOpacity', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisUtilsLeafletOpacity.maxGeometryOpacity;
    }
  });
});
define('dummy/utils/need-save-current-agregator', ['exports', 'ember-flexberry/utils/need-save-current-agregator'], function (exports, _emberFlexberryUtilsNeedSaveCurrentAgregator) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryUtilsNeedSaveCurrentAgregator['default'];
    }
  });
});
define('dummy/utils/polygon-intersect-check', ['exports', 'ember-flexberry-gis/utils/polygon-intersect-check'], function (exports, _emberFlexberryGisUtilsPolygonIntersectCheck) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisUtilsPolygonIntersectCheck['default'];
    }
  });
});
define('dummy/utils/serialize-sorting-param', ['exports', 'ember-flexberry/utils/serialize-sorting-param'], function (exports, _emberFlexberryUtilsSerializeSortingParam) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryUtilsSerializeSortingParam['default'];
    }
  });
});
define('dummy/utils/state', ['exports', 'ember-flexberry-gis/utils/state'], function (exports, _emberFlexberryGisUtilsState) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisUtilsState['default'];
    }
  });
});
define('dummy/utils/zoom-to-bounds', ['exports', 'ember-flexberry-gis/utils/zoom-to-bounds'], function (exports, _emberFlexberryGisUtilsZoomToBounds) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisUtilsZoomToBounds['default'];
    }
  });
});
define('dummy/validators/local/datetime', ['exports', 'ember-flexberry/validators/local/datetime'], function (exports, _emberFlexberryValidatorsLocalDatetime) {
  exports['default'] = _emberFlexberryValidatorsLocalDatetime['default'];
});
define('dummy/views/components-examples/flexberry-maplayers/settings-example', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Component.extend({
    /**
      Initializes page's DOM-related properties.
    */
    didInsertElement: function didInsertElement() {
      this._super.apply(this, arguments);

      // Initialize Semantic UI tabs.
      this.$('.tabular.menu .item').tab();
    }
  });
});
define('dummy/views/components-examples/flexberry-tree/settings-example', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Component.extend({
    /**
      Initializes page's DOM-related properties.
    */
    didInsertElement: function didInsertElement() {
      this._super.apply(this, arguments);

      // Initialize Semantic UI tabs.
      this.$('.tabular.menu .item').tab();
    }
  });
});
define('dummy/views/gis-search-form', ['exports', 'ember-flexberry-gis/views/gis-search-form'], function (exports, _emberFlexberryGisViewsGisSearchForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryGisViewsGisSearchForm['default'];
    }
  });
});
/* jshint ignore:start */



/* jshint ignore:end */

/* jshint ignore:start */

define('dummy/config/environment', ['ember'], function(Ember) {
  var prefix = 'dummy';
/* jshint ignore:start */

try {
  var metaName = prefix + '/config/environment';
  var rawConfig = Ember['default'].$('meta[name="' + metaName + '"]').attr('content');
  var config = JSON.parse(unescape(rawConfig));

  return { 'default': config };
}
catch(err) {
  throw new Error('Could not read config from meta tag with name "' + metaName + '".');
}

/* jshint ignore:end */

});

/* jshint ignore:end */

/* jshint ignore:start */

if (!runningTests) {
  require("dummy/app")["default"].create({"backendUrl":"http://134.209.30.115:1818","intersectionArea":"intersectionArea","keywordForCosmos":"cosmos","backendUrls":{"root":"http://134.209.30.115:1818","api":"http://134.209.30.115:1818/odata","featureExportApi":"http://134.209.30.115:1818/api/featureexport","getNearDistance":"http://134.209.30.115:1818/odata/GetNearDistance"},"log":{"enabled":false},"useUserSettingsService":false,"mapApiService":true,"offline":{"dbName":"ember-flexberry-gis-dummy","offlineEnabled":false,"modeSwitchOnErrorsEnabled":false,"syncDownWhenOnlineEnabled":false},"name":"ember-flexberry-gis","version":"0.8.0+0ddb0ad9"});
}

/* jshint ignore:end */
//# sourceMappingURL=dummy.map
