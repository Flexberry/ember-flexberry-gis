name: Build APK

on:
  push:
    branches: [ feature-test-stand-update, feature-232474-build-apk ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x]
        node-version-cordova: [14.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version-cordova }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version-cordova }}

    - name: Install ember and bower
      run: |
       set -x
       node -v
       npm install -g bower
       npm install -g ember-cli@2.4.3
       yarn install
       bower install

    - name: Tune ssh-keys
      env:
          ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}
      run: |
        set -x
        export ENCRYPTION_KEY
        #  Recover private key
        openssl aes-256-cbc -in .github/workflows/secrets/id_rsa.enc -out .github/workflows/secrets/id_rsa -pass pass:$ENCRYPTION_KEY -d -md sha1
        # Setup SSH agent
        export SSH_AUTH_SOCK=/tmp/ssh_agent.sock
        mkdir -p ~/.ssh
        ssh-keyscan github.com >> ~/.ssh/known_hosts
        # Start ssh agent
        ssh-agent -a $SSH_AUTH_SOCK #> /dev/null
        chmod 0600 .github/workflows/secrets/id_rsa
        ssh-add .github/workflows/secrets/id_rsa

    - name: Create Cordova
      run: |
        npm install -g cordova
        cd FlexberryGisTestStand.Cordova
        cordova create GisTestStand flexberry.gis.teststand GISTestStand
        cd GisTestStand
        cordova platform add android
        cp "../templates/ConfigXmlParser.java" "platforms/android/CordovaLib/src/org/apache/cordova/ConfigXmlParser.java"
        cp "../templates/AndroidManifest.xml" "platforms/android/app/src/main/AndroidManifest.xml"
        cordova build android --packageType=apk
  
    - name: Update Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
        
    - uses: actions/checkout@v2
    - name: Build frontend
      run: |
        export TRAVIS_BRANCH=$1
        export GH_TOKEN=${{ secrets.GITHUB_TOKEN }}
        export SSH_AUTH_SOCK=/tmp/ssh_agent.sock
        ember build --output-path=FlexberryGisTestStand.Cordova/GisTestStand/www

    - name: Update Node.js ${{ matrix.node-version-cordova }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version-cordova }}

    - name: Build Cordova
      run: |
        cd "FlexberryGisTestStand.Cordova/GisTestStand"
        cordova build android --packageType=apk

    - name: Git commit
      run: |
          set -x
          git config user.name "Flexberry-man"
          git config user.email "mail@flexberry.net"
          git add "/platforms/android/app/build/outputs/apk/debug/app-debug.apk"
          git commit -m "Update APK"

    - name: Git push
      run: |
          set -x
          SSH_AUTH_SOCK=/tmp/ssh_agent.sock
          export SSH_AUTH_SOCK;
          # Redirect any output to /dev/null to hide any sensitive credential data that might otherwise be exposed.
          #git push --force --quiet "git@github.com:Flexberry/ember-flexberry-gis.git" > /dev/null 2>&1
          echo "Done."
